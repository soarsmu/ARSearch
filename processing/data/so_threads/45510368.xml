https://stackoverflow.com/questions/45510368
This example code:

<pre><code>
public final class FooBarTest {
    @Test
    public void <API label="">test</API>() {
        final Foo foo = <API label="org.mockito.Mockito.mock">mock</API>(Foo.class);
        <API label="org.mockito.Mockito.when">when</API>(foo.getBar()).<API label="org.mockito.stubbing.OngoingStubbing.thenReturn">thenReturn</API>(1);
        new HashSet().<API label="None">add</API>(foo);
    }

   private class Foo {
        @Override
        public final boolean <API label="">equals</API>(final Object other) {
            return getBar() == 0;
        }

       public int getBar() {
            return 0;
        }

       @Override
        public final int <API label="">hashCode</API>() {
            return getBar();
        }
    }
}

</code></pre>

produces an endless loop and throws an exception:

<pre><code>
java.lang.StackOverflowError
    at org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:57)
    at org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:43)
    at org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptSuperCallable(MockMethodInterceptor.java:119)
    at de.weltraumschaf.maconha.FooBarTest$Foo$MockitoMock$217383798.getBar(Unknown Source)
    at <API label="">de.weltraumschaf.maconha.FooBarTest$Foo.equals</API>(FooBarTest.java:24)
    at <API label="">org.mockito.internal.invocation.InvocationMatcher.matches</API>(InvocationMatcher.java:81)
    at <API label="">org.mockito.internal.stubbing.InvocationContainerImpl.findAnswerFor</API>(InvocationContainerImpl.java:82)
    at <API label="">org.mockito.internal.handler.MockHandlerImpl.handle</API>(MockHandlerImpl.java:90)
    at <API label="">org.mockito.internal.handler.NullResultGuardian.handle</API>(NullResultGuardian.java:32)
    at <API label="">org.mockito.internal.handler.InvocationNotifierHandler.handle</API>(InvocationNotifierHandler.java:36)
    at org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:57)
    at org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:43)
    at org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptSuperCallable(MockMethodInterceptor.java:119)
    at de.weltraumschaf.maconha.FooBarTest$Foo$MockitoMock$217383798.getBar(Unknown Source)
    at <API label="">de.weltraumschaf.maconha.FooBarTest$Foo.equals</API>(FooBarTest.java:24)
    at <API label="">org.mockito.internal.invocation.InvocationMatcher.matches</API>(InvocationMatcher.java:81)
    at <API label="">org.mockito.internal.stubbing.InvocationContainerImpl.findAnswerFor</API>(InvocationContainerImpl.java:82)
    at <API label="">org.mockito.internal.handler.MockHandlerImpl.handle</API>(MockHandlerImpl.java:90)
    at <API label="">org.mockito.internal.handler.NullResultGuardian.handle</API>(NullResultGuardian.java:32)
    at <API label="">org.mockito.internal.handler.InvocationNotifierHandler.handle</API>(InvocationNotifierHandler.java:36)
    at org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:57)
    at org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:43)
    at org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptSuperCallable(MockMethodInterceptor.java:119)
    at de.weltraumschaf.maconha.FooBarTest$Foo$MockitoMock$217383798.getBar(Unknown Source)
    at <API label="">de.weltraumschaf.maconha.FooBarTest$Foo.equals</API>(FooBarTest.java:24)
    ...

</code></pre>

I debugged into the code and got lost in the depth of Mockito. The <API label="">only</API> thing I can see is that the <API label="None">equals</API> method is called right. I know that Mockito does not <API label="">stub</API> <code><API label="None">equals</API></code>/<code><API label="None">hashCode</API></code>/<code><API label="None">toString</API></code>. It is also <API label="">clear</API> to me that the <code><API label="None">equals</API></code> method is called by the HashSet to see if there is already an equal element in it. But what I can't figure out: Why does this loop endless?

The used Mockito version is 2.8.9 and JUnit 4.12.

==========
Because in the callstack there is <code>org.mockito.internal.invocation.InvocationMatcher#<API label="">matches</API></code> which basically is
<code><API label="org.mockito.invocation.Invocation.getMock">invocation.getMock</API>().<API label="None">equals</API>(<API label="org.mockito.invocation.Invocation.getMock">candidate.getMock</API>())</code> (with <code><API label="org.mockito.invocation.Invocation.getMock">invocation.getMock</API>()</code> being your mocked <code>Foo</code> instance) which causes a call to <code>getBar</code> which is mocked which causes a call to <code><API label="None">equals</API></code> -> <code>getBar</code> -> <API label="None">mock</API> -> <code><API label="None">equals</API></code> -> <code>getBar</code> -> etc...

