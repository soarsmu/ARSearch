{
    "org.mockito.Mockito.spy": [
      {
        "link": "https://github.com/yanricheng/xspring/blob/b835b502a835f3281e5bf22a49e10485ef9454bc/module/act-server/src/test/java/net/yanrc/xpring/activity/biz/manger/ActivityManagerTest.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @Test(expected = IndexOutOfBoundsException.class)\n",
          "    public void spy_on_real_objects1() {\n",
          "        List list = new LinkedList();\n",
          "        List spy = spy(list);\n",
          "        // \u00e4\u00b8\u008b\u00e9\u009d\u00a2\u00e9\u00a2\u0084\u00e8\u00ae\u00be\u00e7\u009a\u0084spy.get(0)\u00e4\u00bc\u009a\u00e6\u008a\u00a5\u00e9\u0094\u0099\u00ef\u00bc\u008c\u00e5\u009b\u00a0\u00e4\u00b8\u00ba\u00e4\u00bc\u009a\u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00e7\u009c\u009f\u00e5\u00ae\u009e\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e7\u009a\u0084get(0)\u00ef\u00bc\u008c\u00e6\u0089\u0080\u00e4\u00bb\u00a5\u00e4\u00bc\u009a\u00e6\u008a\u009b\u00e5\u0087\u00ba\u00e8\u00b6\u008a\u00e7\u0095\u008c\u00e5\u00bc\u0082\u00e5\u00b8\u00b8\n",
          "        // when(spy.get(0)).thenReturn(3);\n",
          "\n",
          "        // \u00e4\u00bd\u00bf\u00e7\u0094\u00a8doReturn-when\u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e9\u0081\u00bf\u00e5\u0085",
          "\u008dwhen-thenReturn\u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00e7\u009c\u009f\u00e5\u00ae\u009e\u00e5\u00af\u00b9\u00e8\u00b1\u00a1api\n"
        ],
        "line_number": 270,
        "start_line": 266,
        "end_line": 276
      },
      {
        "link": "https://github.com/hareesh996/spring-boot-docker/blob/e7fbcf7f5a053141caee5acba1e5e35f13b33fe0/spring-boot-test/src/test/java/com/in28minutes/unittesting/unittesting/business/ListMockTest.java\n",
        "code": [
          "\t\tSystem.out.println(arrayListMock.size());//5\n",
          "\t}\n",
          "\n",
          "\t@Test\n",
          "\tpublic void spying() {\n",
          "\t\tArrayList arrayListSpy = spy(ArrayList.class);\n",
          "\t\tarrayListSpy.add(\"Test0\");\n",
          "\t\tSystem.out.println(arrayListSpy.get(0));//Test0\n",
          "\t\tSystem.out.println(arrayListSpy.size());//1\n",
          "\t\tarrayListSpy.add(\"Test\");\n",
          "\t\tarrayListSpy.add(\"Test2\");\n"
        ],
        "line_number": 108,
        "start_line": 104,
        "end_line": 114
      },
      {
        "link": "https://github.com/Dragonwrath/AndroidDemo/blob/bb7ffb4229097e01d6b50b0427f9b2d0dfa2721a/android-mock/src/test/java/com/joke/mock/offical_mock/OfficalTest_Part_2.java\n",
        "code": [
          "     */\n",
          "    @Test\n",
          "    public void step_13() {\n",
          "\n",
          "        List list = new LinkedList();\n",
          "        List<String>  spy = spy(list);\n",
          "\n",
          "        //Impossible: real method is called so spy.get(0) throws IndexOutOfBoundsException (the list is yet empty)\n",
          "        when(spy.get(0)).thenReturn(\"ArrayList\");\n",
          "\n",
          "        //You have to use doReturn() for stubbing\n"
        ],
        "line_number": 115,
        "start_line": 111,
        "end_line": 121
      },
      {
        "link": "}https://github.com/srikanth-josyula/junit-mockito/blob/5fbb468d5de005757468029608e68d8245955481/src/main/java/com/sample/mockito/stubbing/ListTest.java\n",
        "code": [
          "\t\tSystem.out.println(arrayListMock.size());// 5\n",
          "\t}\n",
          "\n",
          "\t@Test\n",
          "\tpublic void spying() {\n",
          "\t\tArrayList arrayListSpy = spy(ArrayList.class);\n",
          "\t\tarrayListSpy.add(\"Test0\");\n",
          "\t\tSystem.out.println(arrayListSpy.get(0));// Test0\n",
          "\t\tSystem.out.println(arrayListSpy.size());// 1\n",
          "\t\tarrayListSpy.add(\"Test\");\n",
          "\t\tarrayListSpy.add(\"Test2\");\n"
        ],
        "line_number": 148,
        "start_line": 144,
        "end_line": 154
      },
      {
        "link": "https://github.com/PacktPublishing/Master-Java-Unit-Testing-with-Spring-Boot-and-Mockito/blob/98cbefd9f2597feaf0fd43db4ddbaf6f4d43a66c/src/test/java/com/in28minutes/unittesting/unittesting/business/ListMockTest.java\n",
        "code": [
          "\t\tSystem.out.println(arrayListMock.size());//5\n",
          "\t}\n",
          "\n",
          "\t@Test\n",
          "\tpublic void spying() {\n",
          "\t\tArrayList arrayListSpy = spy(ArrayList.class);\n",
          "\t\tarrayListSpy.add(\"Test0\");\n",
          "\t\tSystem.out.println(arrayListSpy.get(0));//Test0\n",
          "\t\tSystem.out.println(arrayListSpy.size());//1\n",
          "\t\tarrayListSpy.add(\"Test\");\n",
          "\t\tarrayListSpy.add(\"Test2\");\n"
        ],
        "line_number": 116,
        "start_line": 112,
        "end_line": 122
      },
      {
        "link": "https://github.com/Arun1991/appleBench/blob/5565bf0d7bd7e608694fad8754da0ee8e788fbdb/unit-testing/src/test/java/com/example/demo/business/ListMockTest.java\n",
        "code": [
          "\t\tSystem.out.println(arraylistMock.size());//5\n",
          "\t}\n",
          "\n",
          "\t@Test\n",
          "\tpublic void spying(){\n",
          "\t\tArrayList< String> arraylistSpy = spy(ArrayList.class);\n",
          "\t\tarraylistSpy.add(\"Test0\");\n",
          "\t\tSystem.out.println(arraylistSpy.get(0));//Test0\n",
          "\t\tSystem.out.println(arraylistSpy.size());//1\n",
          "\t\tarraylistSpy.add(\"Test\");\n",
          "\t\tarraylistSpy.add(\"Test2\");\n"
        ],
        "line_number": 97,
        "start_line": 93,
        "end_line": 103
      },
      {
        "link": "https://github.com/dnilay/jfsd-2/blob/6e1f64db665591361acb4343ce3294ac62396699/spring-unit-testing-with-junit-and-mockito-master/src/test/java/com/example/unittesting/unittesting/business/ListMockTest.java\n",
        "code": [
          "\t\tSystem.out.println(arrayListMock.size());//5\n",
          "\t}\n",
          "\n",
          "\t@Test\n",
          "\tpublic void spying() {\n",
          "\t\tArrayList arrayListSpy = spy(ArrayList.class);\n",
          "\t\tarrayListSpy.add(\"Test0\");\n",
          "\t\tSystem.out.println(arrayListSpy.get(0));//Test0\n",
          "\t\tSystem.out.println(arrayListSpy.size());//1\n",
          "\t\tarrayListSpy.add(\"Test\");\n",
          "\t\tarrayListSpy.add(\"Test2\");\n"
        ],
        "line_number": 116,
        "start_line": 112,
        "end_line": 122
      },
      {
        "link": "https://github.com/632691987/MockitoStudy/blob/e30c73357543294cdcdc14450e2c8aaf46f79d48/src/main/java/personal/study/StudySpy.java\n",
        "code": [
          "public class StudySpy {\n",
          "\n",
          "\t@Test\n",
          "\tpublic void testMethod1() {\n",
          "\t\tList<String> lists = new ArrayList<>();\n",
          "\t\tList<String> spyList2 = spy(lists);\n",
          "\n",
          "\t\twhen(spyList2.size()).thenReturn(100);\n",
          "\n",
          "\t\tspyList2.add(\"a1\");\n",
          "\t\tspyList2.add(\"a2\");\n"
        ],
        "line_number": 54,
        "start_line": 50,
        "end_line": 60
      },
      {
        "link": "https://github.com/linhou/AndroidTest/blob/c3126a3f0e081b9bc59f23c69b725171525b4249/app/src/test/java/com/example/linhou/testdome/unitcase/CalculatorMockTest.java\n",
        "code": [
          "    }\n",
          "\n",
          "    // @Ignore//\u00e6\u00b5\u008b\u00e8\u00af\u0095jacoco\u00e7\u009a\u0084\u00e5\u0091\u00bd\u00e4\u00bb\u00a4\u00e6\u0097\u00b6\u00e4\u00b8\u0093\u00e9\u0097\u00a8\u00e6\u00b3\u00a8\u00e9\u0087\u008a\u00e7\u009a\u0084\n",
          "    @Test\n",
          "    public void mocktest5() throws Exception{\n",
          "        List li=spy(List.class);\n",
          "        doReturn(\"sss\").when(li).clear();\n",
          "        li.clear();\n",
          "    }\n",
          "\n",
          "\n"
        ],
        "line_number": 187,
        "start_line": 183,
        "end_line": 193
      },
      {
        "link": "https://github.com/hewking/AndroidDeveloper/blob/f471927bd41dd5f1a5db3d079ecef1773e58ea44/app/src/test/java/com/hewking/develop/unittest/mock/MockitoSample.java\n",
        "code": [
          "\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void testMock10(){\n",
          "        // \u00e4\u00bd\u00bf\u00e7\u0094\u00a8spy \u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e7\u009b\u0091\u00e6\u008e\u00a7\u00e7\u009c\u009f\u00e5\u00ae\u009e\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e6\u009c\u0089\u00e4\u00ba\u009b\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00e7\u009c\u009f\u00e5\u00ae\u009e\u00e4\u00b8\u009a\u00e5\u008a\u00a1\u00ef\u00bc\u008c\u00e6\u009c\u0089\u00e4\u00ba\u009b\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e9\u009c\u0080\u00e8\u00a6\u0081Mock\u00ef\u00bc\u008c\u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e4\u00bd\u00bf\u00e7\u0094\u00a8spy() \u00e5\u0081\u009a\u00e5\u0088\u00b0\u00e3\u0080\u0082\n",
          "        List list = new ArrayList();\n",
          "        List spy = Mockito.spy(list);\n",
          "\n",
          "        // subbing \u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00ef\u00bc\u008c\u00e5\u00bd\u0093\u00e8\u00b0\u0083\u00e7\u0094\u00a8size() \u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e8\u00af\u00a5\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e7\u009a\u0084\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e5\u0080\u00bc\n",
          "        when(spy.size()).thenReturn(10);\n"
        ],
        "line_number": 195,
        "start_line": 191,
        "end_line": 201
      }
    ],
    "com.google.common.base.Functions.toStringFunction": [
      {
        "link": "https://github.com/csaba-toth-work/REST-With-Spring/blob/8294be84418abd00228c3d6fb3fc2f843da108b6/m1-lesson5/um-webapp/src/main/java/com/baeldung/um/util/UmConvertionUtil.java\n",
        "code": [
          "        }\n",
          "        return privileges;\n",
          "    }\n",
          "\n",
          "    public static Collection<String> convertPrivilegesToPrivilegeNames(final Collection<Privilege> privileges) {\n",
          "        final Function<Object, String> toStringFunction = Functions.toStringFunction();\n",
          "        return Collections2.transform(privileges, toStringFunction);\n",
          "    }\n",
          "\n",
          "    public static Collection<String> convertRolesToPrivilegeNames(final Iterable<Role> roles) {\n",
          "        final Set<Privilege> privileges = convertRolesToPrivileges(roles);\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/FunctionUtil.java\n",
        "code": [
          "*/ \n",
          "public static <T> com.google.common.base.Function<com.google.common.base.Supplier<T>, T> supplierFunction(){\n",
          "\treturn com.google.common.base.Suppliers.supplierFunction();\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.base.Functions#toStringFunction()}\n",
          "*@see com.google.common.base.Functions#toStringFunction()\n",
          "*<code>public static com.google.common.base.Function<java.lang.Object, java.lang.String> com.google.common.base.Functions.toStringFunction()\n",
          "*toStringFunction()</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 144,
        "start_line": 140,
        "end_line": 150
      },
      {
        "link": "https://github.com/Y-lenny/restful/blob/3805fcfb82435b227ea75969f085db23d885bbaa/REST-With-Spring-master/um-client/src/main/java/org/baeldung/um/util/UmConvertionUtil.java\n",
        "code": [
          "        }\n",
          "        return privileges;\n",
          "    }\n",
          "\n",
          "    public static Collection<String> convertPrivilegesToPrivilegeNames(final Collection<Privilege> privileges) {\n",
          "        final Function<Object, String> toStringFunction = Functions.toStringFunction();\n",
          "        return Collections2.transform(privileges, toStringFunction);\n",
          "    }\n",
          "\n",
          "    public static Collection<String> convertRolesToPrivilegeNames(final Iterable<Role> roles) {\n",
          "        final Set<Privilege> privileges = convertRolesToPrivileges(roles);\n"
        ],
        "line_number": 30,
        "start_line": 26,
        "end_line": 36
      },
      {
        "link": "https://github.com/fahimdurrani/restapi/blob/7711b06578c90b3ae23d7ce393ca87a01dc5a1d0/um-client/src/main/java/com/baeldung/um/util/UmConvertionUtil.java\n",
        "code": [
          "        }\n",
          "        return privileges;\n",
          "    }\n",
          "\n",
          "    public static Collection<String> convertPrivilegesToPrivilegeNames(final Collection<Privilege> privileges) {\n",
          "        final Function<Object, String> toStringFunction = Functions.toStringFunction();\n",
          "        return Collections2.transform(privileges, toStringFunction);\n",
          "    }\n",
          "\n",
          "    public static Collection<String> convertRolesToPrivilegeNames(final Iterable<Role> roles) {\n",
          "        final Set<Privilege> privileges = convertRolesToPrivileges(roles);\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "https://github.com/csaba-toth-work/REST-With-Spring/blob/8294be84418abd00228c3d6fb3fc2f843da108b6/m1-lesson4-start/um-webapp/src/main/java/com/baeldung/um/util/UmConvertionUtil.java\n",
        "code": [
          "        }\n",
          "        return privileges;\n",
          "    }\n",
          "\n",
          "    public static Collection<String> convertPrivilegesToPrivilegeNames(final Collection<Privilege> privileges) {\n",
          "        final Function<Object, String> toStringFunction = Functions.toStringFunction();\n",
          "        return Collections2.transform(privileges, toStringFunction);\n",
          "    }\n",
          "\n",
          "    public static Collection<String> convertRolesToPrivilegeNames(final Iterable<Role> roles) {\n",
          "        final Set<Privilege> privileges = convertRolesToPrivileges(roles);\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "https://github.com/LinhVu1027/User-Management-Simple-Spring-OAuth2-InMemory-TokenStore/blob/a2322f95b820f91381fc0151a3fc54b11222f73b/um-webapp/src/main/java/com/cloud/um/util/UmConvertionUtil.java\n",
        "code": [
          "        }\n",
          "        return privileges;\n",
          "    }\n",
          "\n",
          "    public static Collection<String> convertPrivilegesToPrivilegeNames(final Collection<Privilege> privileges) {\n",
          "        final Function<Object, String> toStringFunction = Functions.toStringFunction();\n",
          "        return Collections2.transform(privileges, toStringFunction);\n",
          "    }\n",
          "\n",
          "    public static Collection<String> convertRolesToPrivilegeNames(final Iterable<Role> roles) {\n",
          "        final Set<Privilege> privileges = convertRolesToPrivileges(roles);\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "https://github.com/lmarinve/fussy/blob/2b774448dc788811c6f23fc0fb045401ea97de78/um-client/src/main/java/com/jd/um/util/UmConvertionUtil.java\n",
        "code": [
          "        }\n",
          "        return privileges;\n",
          "    }\n",
          "\n",
          "    public static Collection<String> convertPrivilegesToPrivilegeNames(final Collection<Privilege> privilege) {\n",
          "        final Function<Object, String> toStringFunction = Functions.toStringFunction();\n",
          "        return Collections2.transform(privilege, toStringFunction);\n",
          "    }\n",
          "\n",
          "    public static Collection<String> convertRolesToPrivilegeNames(final Iterable<Role> roles) {\n",
          "        final Set<Privilege> privileges = convertRolesToPrivileges(roles);\n"
        ],
        "line_number": 30,
        "start_line": 26,
        "end_line": 36
      },
      {
        "link": "https://github.com/sesepehr/JAVA-EE-sepehr/blob/b1ce764f242c84296100b42badc93e96bd4362b9/um-client/src/main/java/org/baeldung/um/util/UmConvertionUtil.java\n",
        "code": [
          "        }\n",
          "        return privileges;\n",
          "    }\n",
          "\n",
          "    public static Collection<String> convertPrivilegesToPrivilegeNames(final Collection<Privilege> privileges) {\n",
          "        final Function<Object, String> toStringFunction = Functions.toStringFunction();\n",
          "        return Collections2.transform(privileges, toStringFunction);\n",
          "    }\n",
          "\n",
          "    public static Collection<String> convertRolesToPrivilegeNames(final Iterable<Role> roles) {\n",
          "        final Set<Privilege> privileges = convertRolesToPrivileges(roles);\n"
        ],
        "line_number": 30,
        "start_line": 26,
        "end_line": 36
      },
      {
        "link": "https://github.com/nirmal070125/jclouds-nirmal/blob/4ae3a6fc8f98f43b9c49b426ade5a2fa4a1646de/providers/gogrid/src/main/java/org/jclouds/gogrid/binders/BindIdsToQueryParams.java\n",
        "code": [
          "   public <R extends HttpRequest> R bindToRequest(R request, Object input) {\n",
          "\n",
          "      if (checkNotNull(input, \"input is null\") instanceof Long[]) {\n",
          "         Long[] names = (Long[]) input;\n",
          "         return (R) request.toBuilder()\n",
          "                  .replaceQueryParam(ID_KEY, transform(ImmutableList.copyOf(names), toStringFunction())).build();\n",
          "      } else if (input instanceof long[]) {\n",
          "         long[] names = (long[]) input;\n",
          "         return (R) request.toBuilder().replaceQueryParam(ID_KEY, transform(Longs.asList(names), toStringFunction()))\n",
          "                  .build();\n",
          "      } else {\n"
        ],
        "line_number": 56,
        "start_line": 52,
        "end_line": 62
      },
      {
        "link": "https://github.com/Maple-mxf/opensource/blob/7f43171728959429fd3cba3df162dbc582f78c8e/jopen-core/src/test/java/io/jopen/core/function/util/FunctionsTest.java\n",
        "code": [
          "public class FunctionsTest {\n",
          "\n",
          "    @Test\n",
          "    public void simpleTestAPI() {\n",
          "        // \u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e8\u00b0\u0083\u00e7\u0094\u00a8toString\n",
          "        Function<Object, String> stringFunction = Functions.toStringFunction();\n",
          "\n",
          "        //\n",
          "        Map<String, Integer> map = new HashMap<>();\n",
          "        Function<String, Integer> mapFunction = Functions.forMap(map);\n",
          "\n"
        ],
        "line_number": 24,
        "start_line": 20,
        "end_line": 30
      }
    ],
    "org.mockito.listeners.MethodInvocationReport.getInvocation": [
      {
        "link": "https://github.com/s20121035/rk3288_android5.1_repo/blob/e8e83e89bd06e168c5dbc977dafccd93e8a03f94/external/mockito/src/org/mockito/internal/debugging/VerboseMockInvocationLogger.java\n",
        "code": [
          "    }\n",
          "\n",
          "    public void reportInvocation(MethodInvocationReport methodInvocationReport) {\n",
          "        printHeader();\n",
          "        printStubInfo(methodInvocationReport);\n",
          "        printInvocation(methodInvocationReport.getInvocation());\n",
          "        printReturnedValueOrThrowable(methodInvocationReport);\n",
          "        printFooter();\n",
          "    }\n",
          "\n",
          "    private void printReturnedValueOrThrowable(MethodInvocationReport methodInvocationReport) {\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/bitlogo/androidsource/blob/47f9bbfb032b3118907e709b1099d3f1983ae346/external/mockito/src/org/mockito/internal/debugging/VerboseMockInvocationLogger.java\n",
        "code": [
          "    }\n",
          "\n",
          "    public void reportInvocation(MethodInvocationReport methodInvocationReport) {\n",
          "        printHeader();\n",
          "        printStubInfo(methodInvocationReport);\n",
          "        printInvocation(methodInvocationReport.getInvocation());\n",
          "        printReturnedValueOrThrowable(methodInvocationReport);\n",
          "        printFooter();\n",
          "    }\n",
          "\n",
          "    private void printReturnedValueOrThrowable(MethodInvocationReport methodInvocationReport) {\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/huangningren/ldlDbutils/blob/21ead409b85668e9c5cf343b6fd3b1be66929ad9/dbutilsweb/mockito-all-1.9.5-sources/org/mockito/internal/debugging/VerboseMockInvocationLogger.java\n",
        "code": [
          "    }\n",
          "\n",
          "    public void reportInvocation(MethodInvocationReport methodInvocationReport) {\n",
          "        printHeader();\n",
          "        printStubInfo(methodInvocationReport);\n",
          "        printInvocation(methodInvocationReport.getInvocation());\n",
          "        printReturnedValueOrThrowable(methodInvocationReport);\n",
          "        printFooter();\n",
          "    }\n",
          "\n",
          "    private void printReturnedValueOrThrowable(MethodInvocationReport methodInvocationReport) {\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/brianwoo/cm11_grouper/blob/b23d9dd09915bf2c1a744113e507d3d7fc32f4bd/external/mockito/src/org/mockito/internal/debugging/VerboseMockInvocationLogger.java\n",
        "code": [
          "    }\n",
          "\n",
          "    public void reportInvocation(MethodInvocationReport methodInvocationReport) {\n",
          "        printHeader();\n",
          "        printStubInfo(methodInvocationReport);\n",
          "        printInvocation(methodInvocationReport.getInvocation());\n",
          "        printReturnedValueOrThrowable(methodInvocationReport);\n",
          "        printFooter();\n",
          "    }\n",
          "\n",
          "    private void printReturnedValueOrThrowable(MethodInvocationReport methodInvocationReport) {\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/suraj0955/aosp4/blob/ee665fe81729c14838185e02328fe4a7d517d759/external/mockito/src/org/mockito/internal/debugging/VerboseMockInvocationLogger.java\n",
        "code": [
          "    }\n",
          "\n",
          "    public void reportInvocation(MethodInvocationReport methodInvocationReport) {\n",
          "        printHeader();\n",
          "        printStubInfo(methodInvocationReport);\n",
          "        printInvocation(methodInvocationReport.getInvocation());\n",
          "        printReturnedValueOrThrowable(methodInvocationReport);\n",
          "        printFooter();\n",
          "    }\n",
          "\n",
          "    private void printReturnedValueOrThrowable(MethodInvocationReport methodInvocationReport) {\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/mbboyraz/jiraPostFunctions/blob/c90eb41ab0e3680bf8b0221b41c596b17560052b/target/classes/org/mockito/internal/debugging/VerboseMockInvocationLogger.java\n",
        "code": [
          "    }\n",
          "\n",
          "    public void reportInvocation(MethodInvocationReport methodInvocationReport) {\n",
          "        printHeader();\n",
          "        printStubInfo(methodInvocationReport);\n",
          "        printInvocation(methodInvocationReport.getInvocation());\n",
          "        printReturnedValueOrThrowable(methodInvocationReport);\n",
          "        printFooter();\n",
          "    }\n",
          "\n",
          "    private void printReturnedValueOrThrowable(MethodInvocationReport methodInvocationReport) {\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/IllusionRom-deprecated/android_platform_external_mockito/blob/34f80a94e45f7110ec3444c1d0ecfacc194d009a/src/org/mockito/internal/debugging/VerboseMockInvocationLogger.java\n",
        "code": [
          "    }\n",
          "\n",
          "    public void reportInvocation(MethodInvocationReport methodInvocationReport) {\n",
          "        printHeader();\n",
          "        printStubInfo(methodInvocationReport);\n",
          "        printInvocation(methodInvocationReport.getInvocation());\n",
          "        printReturnedValueOrThrowable(methodInvocationReport);\n",
          "        printFooter();\n",
          "    }\n",
          "\n",
          "    private void printReturnedValueOrThrowable(MethodInvocationReport methodInvocationReport) {\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/wanxiasijin/jianfei/blob/f33258a86419da47a808a7e5816a7bbed364007a/androidxjianfei/androidOne/build/intermediates/exploded-aar/e6a393973c4121d86d3d2956055a2de70eb7c8af/class/org/mockito/internal/debugging/VerboseMockInvocationLogger.java\n",
        "code": [
          "    }\n",
          "\n",
          "    public void reportInvocation(MethodInvocationReport methodInvocationReport) {\n",
          "        printHeader();\n",
          "        printStubInfo(methodInvocationReport);\n",
          "        printInvocation(methodInvocationReport.getInvocation());\n",
          "        printReturnedValueOrThrowable(methodInvocationReport);\n",
          "        printFooter();\n",
          "    }\n",
          "\n",
          "    private void printReturnedValueOrThrowable(MethodInvocationReport methodInvocationReport) {\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/yinquan529/platform-external-mockito/blob/34f80a94e45f7110ec3444c1d0ecfacc194d009a/src/org/mockito/internal/debugging/VerboseMockInvocationLogger.java\n",
        "code": [
          "    }\n",
          "\n",
          "    public void reportInvocation(MethodInvocationReport methodInvocationReport) {\n",
          "        printHeader();\n",
          "        printStubInfo(methodInvocationReport);\n",
          "        printInvocation(methodInvocationReport.getInvocation());\n",
          "        printReturnedValueOrThrowable(methodInvocationReport);\n",
          "        printFooter();\n",
          "    }\n",
          "\n",
          "    private void printReturnedValueOrThrowable(MethodInvocationReport methodInvocationReport) {\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/pchudzik/springmock/blob/f08a0a13c1dea1ceb35f462ccaaf51e738f64ef8/samples/mockito-samples/src/test/java/com/pchudzik/springmock/samples/mockito/MockitoSamplesApplicationTests.java\n",
        "code": [
          "\tprivate static class LoggingInvocationListener implements InvocationListener {\n",
          "\n",
          "\t\t@Override\n",
          "\t\tpublic void reportInvocation(MethodInvocationReport methodInvocationReport) {\n",
          "\t\t\tSystem.out.println(\"\" +\n",
          "\t\t\t\t\t\"Calling method \" + methodInvocationReport.getInvocation().toString() +\n",
          "\t\t\t\t\t\" and result is \" + methodInvocationReport.getReturnedValue());\n",
          "\t\t}\n",
          "\t}\n",
          "}\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 63
      }
    ],
    "com.google.common.cache.CacheStats.loadSuccessCount": [
      {
        "link": "https://github.com/ApolloFoundation/Apollo/blob/db3f5b66b3ed7c5e618173900591cbe79e8b0c06/apl-core/src/main/java/com/apollocurrency/aplwallet/apl/core/rest/converter/CacheStatsToDtoConverter.java\n",
        "code": [
          "    @Override\n",
          "    public CacheStatsDTO apply(CacheStats cacheStats) {\n",
          "        CacheStatsDTO dto = new CacheStatsDTO(\n",
          "            cacheStats.hitCount(), cacheStats.hitRate(),\n",
          "            cacheStats.missCount(), cacheStats.missRate(),\n",
          "            cacheStats.loadSuccessCount(),\n",
          "            cacheStats.loadSuccessCount(),\n",
          "            cacheStats.totalLoadTime(),\n",
          "            cacheStats.evictionCount()\n",
          "        );\n",
          "\n"
        ],
        "line_number": 15,
        "start_line": 11,
        "end_line": 21
      },
      {
        "link": "https://github.com/platformlayer/platformlayer/blob/e7a8cdff2aefa658cb41cffdd8c33d19e3b5bc3c/shared/utils/src/main/java/org/platformlayer/metrics/CacheMetricsReporter.java\n",
        "code": [
          "\t\tsubtree.addInt(\"size\", size);\n",
          "\t\tsubtree.addInt(\"evictionCount\", stats.evictionCount());\n",
          "\t\tsubtree.addInt(\"hitCount\", stats.hitCount());\n",
          "\t\tsubtree.addInt(\"loadCount\", stats.loadCount());\n",
          "\t\tsubtree.addInt(\"loadExceptionCount\", stats.loadExceptionCount());\n",
          "\t\tsubtree.addInt(\"loadSuccessCount\", stats.loadSuccessCount());\n",
          "\t\tsubtree.addInt(\"missCount\", stats.missCount());\n",
          "\t\tsubtree.addInt(\"requestCount\", stats.requestCount());\n",
          "\t\tsubtree.addInt(\"totalLoadTime\", stats.totalLoadTime());\n",
          "\n",
          "\t\tsubtree.addFloat(\"averageLoadPenalty\", stats.averageLoadPenalty());\n"
        ],
        "line_number": 33,
        "start_line": 29,
        "end_line": 39
      },
      {
        "link": "https://github.com/votingsystem/votingsystem/blob/316c6440e462bc3394b682bb0d8644140e7b6588/votingsystem-serviceprovider/src/main/java/org/votingsystem/serviceprovider/util/CacheStats.java\n",
        "code": [
          "    private final long evictionCount;\n",
          "\n",
          "    public CacheStats(com.google.common.cache.CacheStats cacheStats) {\n",
          "        this.hitCount = cacheStats.hitCount();\n",
          "        this.missCount = cacheStats.missCount();\n",
          "        this.loadSuccessCount = cacheStats.loadSuccessCount();\n",
          "        this.loadExceptionCount = cacheStats.loadExceptionCount();\n",
          "        this.totalLoadTime = cacheStats.totalLoadTime();\n",
          "        this.evictionCount = cacheStats.evictionCount();\n",
          "    }\n",
          "\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/eric-erki/Everything-as-a-service/blob/e7a8cdff2aefa658cb41cffdd8c33d19e3b5bc3c/shared/utils/src/main/java/org/platformlayer/metrics/CacheMetricsReporter.java\n",
        "code": [
          "\t\tsubtree.addInt(\"size\", size);\n",
          "\t\tsubtree.addInt(\"evictionCount\", stats.evictionCount());\n",
          "\t\tsubtree.addInt(\"hitCount\", stats.hitCount());\n",
          "\t\tsubtree.addInt(\"loadCount\", stats.loadCount());\n",
          "\t\tsubtree.addInt(\"loadExceptionCount\", stats.loadExceptionCount());\n",
          "\t\tsubtree.addInt(\"loadSuccessCount\", stats.loadSuccessCount());\n",
          "\t\tsubtree.addInt(\"missCount\", stats.missCount());\n",
          "\t\tsubtree.addInt(\"requestCount\", stats.requestCount());\n",
          "\t\tsubtree.addInt(\"totalLoadTime\", stats.totalLoadTime());\n",
          "\n",
          "\t\tsubtree.addFloat(\"averageLoadPenalty\", stats.averageLoadPenalty());\n"
        ],
        "line_number": 33,
        "start_line": 29,
        "end_line": 39
      },
      {
        "link": "https://github.com/qianmoyushang/poetry/blob/c7f3f525f97b9af81349b131154fc04ac3f0b661/ivan-4-poetry/src/main/java/cn/dendarii/ivan/common/bean/http/HBCacheStats.java\n",
        "code": [
          "        if (src != null) {\n",
          "            tar.setHitCount(src.hitCount());\n",
          "            tar.setMissCount(src.missCount());\n",
          "            tar.setHitRate(src.hitRate());\n",
          "            tar.setMissRate(src.missRate());\n",
          "            tar.setLoadSuccessCount(src.loadSuccessCount());\n",
          "            tar.setLoadExceptionCount(src.loadExceptionCount());\n",
          "            tar.setTotalLoadTime(src.totalLoadTime());\n",
          "            tar.setEvictionCount(src.evictionCount());\n",
          "            tar.setAverageLoadPenalty(src.averageLoadPenalty());\n",
          "        }\n"
        ],
        "line_number": 33,
        "start_line": 29,
        "end_line": 39
      },
      {
        "link": "https://github.com/joansmith2/jackrabbit-oak/blob/e0450b7a1e710b0ce391393ab773d10efa1c9f55/oak-core/src/main/java/org/apache/jackrabbit/oak/cache/CacheStats.java\n",
        "code": [
          "        return stats().loadCount();\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public long getLoadSuccessCount() {\n",
          "        return stats().loadSuccessCount();\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public long getLoadExceptionCount() {\n",
          "        return stats().loadExceptionCount();\n"
        ],
        "line_number": 83,
        "start_line": 79,
        "end_line": 89
      },
      {
        "link": "https://github.com/tclan126/glassdoorapk/blob/858772b5f2caa20a9370c52d8dbda83da4ee1d69/sources/com/google/common/cache/AbstractCache.java\n",
        "code": [
          "\n",
          "        public void incrementBy(com.google.common.cache.AbstractCache.StatsCounter statsCounter) {\n",
          "            com.google.common.cache.CacheStats snapshot = statsCounter.snapshot();\n",
          "            this.hitCount.add(snapshot.hitCount());\n",
          "            this.missCount.add(snapshot.missCount());\n",
          "            this.loadSuccessCount.add(snapshot.loadSuccessCount());\n",
          "            this.loadExceptionCount.add(snapshot.loadExceptionCount());\n",
          "            this.totalLoadTime.add(snapshot.totalLoadTime());\n",
          "            this.evictionCount.add(snapshot.evictionCount());\n",
          "        }\n",
          "\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 22
      },
      {
        "link": "https://github.com/hashsdn/hashsdn-infrautils/blob/b9ca3b3eec69993bb9bd213635aa6ad8acbbb398/caches/impl/guava/src/main/java/org/opendaylight/infrautils/caches/guava/internal/GuavaCacheStatsAdapter.java\n",
        "code": [
          "                .put(\"evictionCount\", guavaStats.evictionCount())\n",
          "                .put(\"hitRate\", guavaStats.hitRate())\n",
          "                .put(\"loadCount\", guavaStats.loadCount())\n",
          "                .put(\"loadExceptionCount\", guavaStats.loadExceptionCount())\n",
          "                .put(\"loadExceptionRate\", guavaStats.loadExceptionRate())\n",
          "                .put(\"loadSuccessCount\", guavaStats.loadSuccessCount())\n",
          "                .put(\"missRate\", guavaStats.missRate())\n",
          "                .put(\"requestCount\", guavaStats.requestCount())\n",
          "                .put(\"totalLoadTime\", guavaStats.totalLoadTime())\n",
          "                .build();\n",
          "    }\n"
        ],
        "line_number": 52,
        "start_line": 48,
        "end_line": 58
      },
      {
        "link": "https://github.com/alanda-io/alanda/blob/e1456e6c5c3c0f18b7d36825bfa487b45f213a45/backend/alanda-base/src/main/java/io/alanda/base/util/cache/CacheStatsDto.java\n",
        "code": [
          "   */\n",
          "  public CacheStatsDto(CacheStats cs) {\n",
          "    this.hitCount = cs.hitCount();\n",
          "    this.missCount = cs.missCount();\n",
          "\n",
          "    this.loadSuccessCount = cs.loadSuccessCount();\n",
          "    this.loadExceptionCount = cs.loadExceptionCount();\n",
          "    this.totalLoadTime = cs.totalLoadTime();\n",
          "    this.evictionCount = cs.evictionCount();\n",
          "    \n",
          "    this.hitRate = cs.hitRate();\n"
        ],
        "line_number": 46,
        "start_line": 42,
        "end_line": 52
      },
      {
        "link": "https://github.com/GMYL/kg/blob/1900a19091bb160c42a1cf6e749b603a994e44b5/src/main/java/hb/kg/common/bean/http/HBCacheStats.java\n",
        "code": [
          "        if (src != null) {\n",
          "            tar.setHitCount(src.hitCount());\n",
          "            tar.setMissCount(src.missCount());\n",
          "            tar.setHitRate(src.hitRate());\n",
          "            tar.setMissRate(src.missRate());\n",
          "            tar.setLoadSuccessCount(src.loadSuccessCount());\n",
          "            tar.setLoadExceptionCount(src.loadExceptionCount());\n",
          "            tar.setTotalLoadTime(src.totalLoadTime());\n",
          "            tar.setEvictionCount(src.evictionCount());\n",
          "            tar.setAverageLoadPenalty(src.averageLoadPenalty());\n",
          "        }\n"
        ],
        "line_number": 33,
        "start_line": 29,
        "end_line": 39
      }
    ],
    "com.google.common.eventbus.SubscriberExceptionContext.getEvent": [
      {
        "link": "https://github.com/jasonandersen/knotlog/blob/3176f7144efc18d2eba45dc5aa7e75be91c647c6/src/main/java/com/svhelloworld/knotlog/events/LoggingEventBusExceptionHandler.java\n",
        "code": [
          "     */\n",
          "    private void buildContextMessage(SubscriberExceptionContext context, StringBuffer message) {\n",
          "        if (context == null) {\n",
          "            return;\n",
          "        }\n",
          "        message.append(\"\\n\").append(\"Event: [\").append(context.getEvent().getClass().getName()).append(\"] \");\n",
          "        message.append(context.getEvent().toString());\n",
          "        message.append(\"\\n\").append(\"Subscriber: [\").append(context.getSubscriber().getClass().getName()).append(\"] \");\n",
          "        message.append(context.getSubscriber().toString());\n",
          "        message.append(\"\\n\").append(\"Method: [\").append(context.getSubscriberMethod().toString()).append(\"]\\n\");\n",
          "    }\n"
        ],
        "line_number": 53,
        "start_line": 49,
        "end_line": 59
      },
      {
        "link": "}https://github.com/nanthony21/PWSMicroManager/blob/9a3938a02f8202cc2404b1ca8d669321bc439046/mmstudio/src/main/java/org/micromanager/internal/utils/EventBusExceptionLogger.java\n",
        "code": [
          "   }\n",
          "\n",
          "   @Override\n",
          "   public void handleException(Throwable thrwbl, SubscriberExceptionContext sec) {\n",
          "      String message = \"Exception thrown by EventBus subscriber:\\n\" +\n",
          "            \"Event: \" + sec.getEvent() + \"\\n\" +\n",
          "            \"EventBus: \" + sec.getEventBus() + \"\\n\" +\n",
          "            \"Subscriber: \" + sec.getSubscriber() + \"\\n\" +\n",
          "            \"Subscriber Method: \" + sec.getSubscriberMethod();\n",
          "      ReportingUtils.logError(thrwbl, message);\n",
          "   }\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "https://github.com/ProofDrivenQuerying/pdq/blob/0ea14935b07e9ac7c8c54ca4a697da5fa4ba9a8c/datasources/main/src/uk/ac/ox/cs/pdq/datasources/legacy/services/policies/UsageViolationExceptionHandler.java\n",
        "code": [
          "\t * @see com.google.common.eventbus.SubscriberExceptionHandler#handleException(java.lang.Throwable, com.google.common.eventbus.SubscriberExceptionContext)\n",
          "\t */\n",
          "\t@Override\n",
          "\tpublic void handleException(Throwable arg0, SubscriberExceptionContext arg1) {\n",
          "\t\tif (arg0 instanceof AccessException) {\n",
          "\t\t\t((AccessEvent) arg1.getEvent()).setUsageViolationMessage(arg0.getMessage());\n",
          "\t\t}\n",
          "\t\targ0.printStackTrace();\n",
          "\t}\n",
          "\n",
          "}\n"
        ],
        "line_number": 27,
        "start_line": 23,
        "end_line": 33
      },
      {
        "link": "https://github.com/ucomignani/MapRepair/blob/45544c04396be6d0ee5a3f56b4a813c87af67327/implementation/datasources/main/src/uk/ac/ox/cs/pdq/datasources/services/policies/UsageViolationExceptionHandler.java\n",
        "code": [
          "\t * @see com.google.common.eventbus.SubscriberExceptionHandler#handleException(java.lang.Throwable, com.google.common.eventbus.SubscriberExceptionContext)\n",
          "\t */\n",
          "\t@Override\n",
          "\tpublic void handleException(Throwable arg0, SubscriberExceptionContext arg1) {\n",
          "\t\tif (arg0 instanceof AccessException) {\n",
          "\t\t\t((AccessEvent) arg1.getEvent()).setUsageViolationMessage(arg0.getMessage());\n",
          "\t\t}\n",
          "\t\targ0.printStackTrace();\n",
          "\t}\n",
          "\n",
          "}\n"
        ],
        "line_number": 24,
        "start_line": 20,
        "end_line": 30
      },
      {
        "link": "https://github.com/andycom/SpringBootMessageDemo/blob/80f81329a973413a71d131ee8c724a5b679a4422/src/main/java/com/fancv/message/WjSubscriberExceptionHandler.java\n",
        "code": [
          "@Slf4j\n",
          "public class WjSubscriberExceptionHandler implements SubscriberExceptionHandler {\n",
          "    @Override\n",
          "    public void handleException(Throwable exception, SubscriberExceptionContext context) {\n",
          "        log.info(\"\u00e5\u00bc\u0082\u00e6\u00ad\u00a5\u00e6\u00b6\u0088\u00e6\u0081\u00af\u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e5\u00bc\u0082\u00e5\u00b8\u00b8\", exception);\n",
          "        log.info(context.getEvent().toString());\n",
          "\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 22
      },
      {
        "link": "https://github.com/psh5487/hunMusic-Ver2/blob/621e11d15f825626370ea52a609707d841fc62cf/hun-server-api/src/main/java/com/music/event/EventExceptionHandler.java\n",
        "code": [
          "    private Logger log = LoggerFactory.getLogger(getClass());\n",
          "\n",
          "    @Override\n",
          "    public void handleException(Throwable exception, SubscriberExceptionContext context) {\n",
          "        log.error(\"Unexpected exception occurred [{} > {} with {}]: {}\",\n",
          "                context.getSubscriber(), context.getSubscriberMethod(), context.getEvent(), exception.getMessage(), exception);\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 17
      },
      {
        "link": "https://github.com/metrixware-echoes-tech/ksf-foundation/blob/8f9ed8d20feb8f7c3906964b20527c2fb52031ca/ksf-commons/ksf-backend-cqrs/src/main/java/com/tocea/corolla/cqrs/gate/spring/SubscriberExceptionHandlerBean.java\n",
        "code": [
          "\t */\n",
          "\t@Override\n",
          "\tpublic void handleException(final Throwable _arg0, final SubscriberExceptionContext _arg1) {\n",
          "\t\tLOGGER.warn(\"Event has triggered an exception inside an handler {}\", _arg0);\n",
          "\t\tLOGGER.warn(\"Exception : {}\" , _arg0);\n",
          "\t\tLOGGER.warn(\"Event : {}\" , _arg1.getEvent());\n",
          "\t\tLOGGER.warn(\"Suscriber : {}\" , _arg1.getSubscriber());\n",
          "\t\tLOGGER.warn(\"EventBus : {}\" , _arg1.getEventBus());\n",
          "\t\tLOGGER.warn(\"SuscriberMethod : {}\" , _arg1.getSubscriberMethod());\n",
          "\t\t\n",
          "\t}\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "https://github.com/rhorv/events-poc/blob/9d9fba4d7b5f11b726fcd7627268c9118fda31cf/src/main/java/events/dispatcher/guava/ExceptionHandler.java\n",
        "code": [
          "public class ExceptionHandler implements SubscriberExceptionHandler {\n",
          "\n",
          "  @Override\n",
          "  public void handleException(Throwable throwable,\n",
          "      SubscriberExceptionContext subscriberExceptionContext) {\n",
          "    GuavaMessage event = (GuavaMessage) subscriberExceptionContext.getEvent();\n",
          "    event.setException(throwable);\n",
          "  }\n",
          "}\n"
        ],
        "line_number": 10,
        "start_line": 6,
        "end_line": 14
      },
      {
        "link": "https://github.com/rhorv/wp-poc/blob/89260e912d3be7c8bd8284dae933271ebec3b329/src/main/java/events/dispatcher/guava/ExceptionHandler.java\n",
        "code": [
          "public class ExceptionHandler implements SubscriberExceptionHandler {\n",
          "\n",
          "  @Override\n",
          "  public void handleException(Throwable throwable,\n",
          "      SubscriberExceptionContext subscriberExceptionContext) {\n",
          "    GuavaMessage event = (GuavaMessage) subscriberExceptionContext.getEvent();\n",
          "    event.setException(throwable);\n",
          "  }\n",
          "}\n"
        ],
        "line_number": 10,
        "start_line": 6,
        "end_line": 14
      },
      {
        "link": "https://github.com/YangKCoder/learn/blob/c3305809b8df0eb0db88b7e0d93a427e49a368e7/learn-guava/src/main/java/cn/deveye/learn/guava/eventbus/ExceptionHandler.java\n",
        "code": [
          " */\n",
          "@Slf4j\n",
          "public class ExceptionHandler implements SubscriberExceptionHandler {\n",
          "\n",
          "    public void handleException(Throwable t, SubscriberExceptionContext context) {\n",
          "        log.error(\"context.event:{}\", context.getEvent());\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 16
      }
    ],
    "com.google.common.collect.Multimaps.newSortedSetMultimap": [
      {
        "link": "https://github.com/IbaiL/Maincra/blob/3627af40f5a1956506b2b83de3808f035da69c49/engine-tests/src/test/java/org/terasology/documentation/ApiScraper.java\n",
        "code": [
          "    public static void main(String[] args) throws Exception {\n",
          "        ModuleManager moduleManager = ModuleManagerFactory.create();\n",
          "        ModuleEnvironment environment = moduleManager.getEnvironment();\n",
          "        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n",
          "\n",
          "        SortedSetMultimap<String, String> sortedApi = Multimaps.newSortedSetMultimap(new HashMap<>(), TreeSet::new);\n",
          "\n",
          "        for (Class<?> apiClass : environment.getTypesAnnotatedWith(API.class)) {\n",
          "            //System.out.println(\"Processing: \" + apiClass);\n",
          "            boolean isPackage = apiClass.isSynthetic();\n",
          "            URL location;\n"
        ],
        "line_number": 47,
        "start_line": 43,
        "end_line": 53
      },
      {
        "link": "https://github.com/seanizer/json-organizer/blob/2168d38e999e6d0987d8a8da8f3e945519d5569b/src/main/java/seanizer/json/organizer/dedup/PropertyBasedDeduplicationStrategy.java\n",
        "code": [
          "  @Override\n",
          "  public void prepare(Collection<Candidate> records) {\n",
          "    this.map = records.stream()\n",
          "                      .collect(Multimaps.toMultimap(\n",
          "                          this::key, Candidate::lead,\n",
          "                          () -> Multimaps.newSortedSetMultimap(Maps.newHashMap(), Sets::newTreeSet)\n",
          "                      ));\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public Candidate process(Candidate candidate) {\n"
        ],
        "line_number": 52,
        "start_line": 48,
        "end_line": 58
      },
      {
        "link": "https://github.com/Team-Fruit/FruitLib/blob/f2ce9e183bcd1a3c432873f35787cfe962d5e71b/src/main/java/net/teamfruit/fruitlib/loader/FruitLoaderDiscoverer.java\n",
        "code": [
          "import com.google.common.collect.Multimaps;\n",
          "import com.google.common.collect.Sets;\n",
          "import com.google.common.collect.SortedSetMultimap;\n",
          "\n",
          "public class FruitLoaderDiscoverer {\n",
          "\tpublic final SortedSetMultimap<String, FruitLoaderModData> fruitMods = Multimaps.newSortedSetMultimap(\n",
          "\t\t\tMaps.<String, Collection<FruitLoaderModData>> newTreeMap(),\n",
          "\t\t\tnew Supplier<TreeSet<FruitLoaderModData>>() {\n",
          "\t\t\t\t@Override\n",
          "\t\t\t\tpublic TreeSet<FruitLoaderModData> get() {\n",
          "\t\t\t\t\treturn Sets.newTreeSet();\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      },
      {
        "link": "https://github.com/WOWZON3/TERAsology/blob/1b2734a28113f2e95c6b211deac9717958adad26/engine-tests/src/test/java/org/terasology/documentation/ApiScraper.java\n",
        "code": [
          "    public static void main(String[] args) throws Exception {\n",
          "        ModuleManager moduleManager = ModuleManagerFactory.create();\n",
          "        ModuleEnvironment environment = moduleManager.getEnvironment();\n",
          "        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n",
          "\n",
          "        SortedSetMultimap<String, String> sortedApi = Multimaps.newSortedSetMultimap(new HashMap<>(), TreeSet::new);\n",
          "\n",
          "        for (Class<?> apiClass : environment.getTypesAnnotatedWith(API.class)) {\n",
          "            //System.out.println(\"Processing: \" + apiClass);\n",
          "            boolean isPackage = apiClass.isSynthetic();\n",
          "            URL location;\n"
        ],
        "line_number": 47,
        "start_line": 43,
        "end_line": 53
      },
      {
        "link": "}https://github.com/ranass/ReqCycle/blob/e57766ccd1f10ba925868a8f3ed0a152c75a72fb/plugins/org.eclipse.ziggurat.inject/src/org/eclipse/ziggurat/inject/BindingManager.java\n",
        "code": [
          "\t\t\t\t\t\t\t}\n",
          "\t\t\t\t\t\t});\n",
          "\t\t\t\treturn sorted;\n",
          "\t\t\t}\n",
          "\t\t};\n",
          "\t\tSortedSetMultimap<Class, PriorityClass> multi = Multimaps.newSortedSetMultimap(map, factory);\n",
          "\t\tIConfigurationElement[] elements = Platform.getExtensionRegistry().getConfigurationElementsFor(ZigguratInject.PLUGIN_ID, EXT_POINT);\n",
          "\t\tfor(IConfigurationElement e : elements) {\n",
          "\t\t\tString theInterface = e.getAttribute(\"interface\");\n",
          "\t\t\tString theImpl = e.getAttribute(\"impl\");\n",
          "\t\t\tString name = e.getAttribute(\"name\");\n"
        ],
        "line_number": 53,
        "start_line": 49,
        "end_line": 59
      },
      {
        "link": "https://github.com/Avetisyan0988/Terasology/blob/a05742f087c3b9a680284ccc1b91c8b1e38c3dc6/engine-tests/src/test/java/org/terasology/documentation/ApiScraper.java\n",
        "code": [
          "    public static void main(String[] args) throws Exception {\n",
          "        ModuleManager moduleManager = ModuleManagerFactory.create();\n",
          "        ModuleEnvironment environment = moduleManager.getEnvironment();\n",
          "        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n",
          "\n",
          "        SortedSetMultimap<String, String> sortedApi = Multimaps.newSortedSetMultimap(new HashMap<>(), TreeSet::new);\n",
          "\n",
          "        for (Class<?> apiClass : environment.getTypesAnnotatedWith(API.class)) {\n",
          "            //System.out.println(\"Processing: \" + apiClass);\n",
          "            boolean isPackage = apiClass.isSynthetic();\n",
          "            URL location;\n"
        ],
        "line_number": 47,
        "start_line": 43,
        "end_line": 53
      },
      {
        "link": "https://github.com/duyleekun/zycami-ded/blob/27686ca846de6d164692c81bac2ae7f85710361f/src/main/java/com/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys$5.java\n",
        "code": [
          "\n",
          "    public SortedSetMultimap build() {\n",
          "        Map map = this.this$0.createMap();\n",
          "        Comparator comparator = this.val$comparator;\n",
          "        MultimapBuilder$TreeSetSupplier multimapBuilder$TreeSetSupplier = new MultimapBuilder$TreeSetSupplier(comparator);\n",
          "        return Multimaps.newSortedSetMultimap(map, multimapBuilder$TreeSetSupplier);\n",
          "    }\n",
          "}\n",
          "\n"
        ],
        "line_number": 27,
        "start_line": 23,
        "end_line": 31
      },
      {
        "link": "https://github.com/openwide-java/owsi-core-parent/blob/a65f5a6f378ff7049cbe333224fb548a16ff90b7/owsi-core/owsi-core-components/owsi-core-component-jpa-migration/src/main/java/fr/openwide/core/jpa/migration/rowmapper/AbstractSortedSetMapResultRowMapper.java\n",
        "code": [
          "\tprivate final SortedSetMultimap<K, V> multimap;\n",
          "\t\n",
          "\tprotected static <K, V> SortedSetMultimap<K, V> newTreeSetHashMultimap(int expectedKeys, int expectedValuesPerKey, Comparator<? super V> comparator) {\n",
          "\t\tMap<K, Collection<V>> map = Maps.newHashMapWithExpectedSize(expectedKeys);\n",
          "\t\tSupplier<? extends SortedSet<V>> factory = Suppliers2.treeSet(comparator);\n",
          "\t\treturn Multimaps.newSortedSetMultimap(map, factory);\n",
          "\t}\n",
          "\t\n",
          "\tprotected AbstractSortedSetMapResultRowMapper(SortedSetMultimap<K, V> results) {\n",
          "\t\tthis(results, Multimaps.asMap(results));\n",
          "\t}\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "https://github.com/apidae-tourisme/owsi-core-parent-apidae/blob/2b4ec1047e01751b94f08d2eb8c76e944c072525/owsi-core/owsi-core-components/owsi-core-component-jpa-migration/src/main/java/fr/openwide/core/jpa/migration/rowmapper/AbstractSortedSetMapResultRowMapper.java\n",
        "code": [
          "\tprivate final SortedSetMultimap<K, V> multimap;\n",
          "\t\n",
          "\tprotected static <K, V> SortedSetMultimap<K, V> newTreeSetHashMultimap(int expectedKeys, int expectedValuesPerKey, Comparator<? super V> comparator) {\n",
          "\t\tMap<K, Collection<V>> map = Maps.newHashMapWithExpectedSize(expectedKeys);\n",
          "\t\tSupplier<? extends SortedSet<V>> factory = Suppliers2.treeSet(comparator);\n",
          "\t\treturn Multimaps.newSortedSetMultimap(map, factory);\n",
          "\t}\n",
          "\t\n",
          "\tprotected AbstractSortedSetMapResultRowMapper(SortedSetMultimap<K, V> results) {\n",
          "\t\tthis(results, Multimaps.asMap(results));\n",
          "\t}\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "https://github.com/igloo-project/igloo-parent/blob/d8266f99f4d30e057a527a964301a6a7bbebd067/igloo/igloo-components/igloo-component-jpa-migration/src/main/java/org/iglooproject/jpa/migration/rowmapper/AbstractSortedSetMapResultRowMapper.java\n",
        "code": [
          "\t\n",
          "\tprivate final SortedSetMultimap<K, V> multimap;\n",
          "\t\n",
          "\tprotected static <K, V> SortedSetMultimap<K, V> newTreeSetHashMultimap(int expectedKeys, int expectedValuesPerKey, Comparator<? super V> comparator) {\n",
          "\t\tMap<K, Collection<V>> map = Maps.newHashMapWithExpectedSize(expectedKeys);\n",
          "\t\treturn Multimaps.newSortedSetMultimap(map, Suppliers2.treeSet(comparator));\n",
          "\t}\n",
          "\t\n",
          "\tprotected AbstractSortedSetMapResultRowMapper(SortedSetMultimap<K, V> results) {\n",
          "\t\tthis(results, Multimaps.asMap(results));\n",
          "\t}\n"
        ],
        "line_number": 19,
        "start_line": 15,
        "end_line": 25
      }
    ],
    "org.mockito.BDDMockito.given": [
      {
        "link": "https://github.com/coodoo-io/coodoo-audit/blob/3f3fb3be06846cf8422978ec94d7d4785fad50a0/src/test/java/io/coodoo/framework/audit/entity/AuditChangeTest.java\n",
        "code": [
          "     */\n",
          "    @org.junit.Test\n",
          "    public void testGetByEvent() {\n",
          "        Query query = org.mockito.Mockito.mock(Query.class);\n",
          "        EntityManager entityManager = org.mockito.Mockito.mock(EntityManager.class);\n",
          "        org.mockito.BDDMockito.given(entityManager.createNamedQuery(\"AuditChange.getByEvent\")).willReturn(query);\n",
          "        Long eventId = java.lang.Long.valueOf(0);\n",
          "        org.mockito.BDDMockito.given(query.setParameter(\"eventId\", eventId)).willReturn(query);\n",
          "        // Call\n",
          "        io.coodoo.framework.audit.entity.AuditChange.getByEvent(entityManager, eventId);\n",
          "        // Verification\n"
        ],
        "line_number": 62,
        "start_line": 58,
        "end_line": 68
      },
      {
        "link": "https://github.com/coodoo-io/workhorse/blob/56c17fc4787d05658abf765e5071db79c16a6309/src/test/java/io/coodoo/workhorse/jobengine/entity/JobExecutionTest.java\n",
        "code": [
          "     */\n",
          "    @org.junit.Test\n",
          "    public void testUpdateStatusRunning() {\n",
          "        Query query = org.mockito.Mockito.mock(Query.class);\n",
          "        EntityManager entityManager = org.mockito.Mockito.mock(EntityManager.class);\n",
          "        org.mockito.BDDMockito.given(entityManager.createNamedQuery(\"JobExecution.updateStatusRunning\")).willReturn(query);\n",
          "        LocalDateTime startedAt = null;\n",
          "        org.mockito.BDDMockito.given(query.setParameter(\"startedAt\", startedAt)).willReturn(query);\n",
          "        Long jobExecutionId = java.lang.Long.valueOf(1);\n",
          "        org.mockito.BDDMockito.given(query.setParameter(\"jobExecutionId\", jobExecutionId)).willReturn(query);\n",
          "        // Call\n"
        ],
        "line_number": 57,
        "start_line": 53,
        "end_line": 63
      },
      {
        "link": "}https://github.com/coodoo-io/workhorse/blob/56c17fc4787d05658abf765e5071db79c16a6309/src/test/java/io/coodoo/workhorse/statistic/entity/JobStatisticMinuteTest.java\n",
        "code": [
          "@org.junit.Test \n",
          "public void testDeleteAllByJobId()\n",
          "{\n",
          "\tQuery query = org.mockito.Mockito.mock(Query.class);\n",
          "\tEntityManager entityManager = org.mockito.Mockito.mock(EntityManager.class);\n",
          "\torg.mockito.BDDMockito.given(entityManager.createNamedQuery(\"JobStatisticMinute.deleteAllByJobId\")).willReturn(query);\n",
          "\tLong jobId = java.lang.Long.valueOf(0);\n",
          "\torg.mockito.BDDMockito.given(query.setParameter(\"jobId\", jobId)).willReturn(query);\n",
          "\t// Call\n",
          "\tio.coodoo.workhorse.statistic.entity.JobStatisticMinute.deleteAllByJobId(entityManager,jobId);\n",
          "\t// Verification\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      },
      {
        "link": "https://github.com/coodoo-io/coodoo-audit/blob/3f3fb3be06846cf8422978ec94d7d4785fad50a0/src/test/java/io/coodoo/framework/audit/entity/AuditEventTest.java\n",
        "code": [
          "     */\n",
          "    @org.junit.Test\n",
          "    public void testGetAllEvents() {\n",
          "        Query query = org.mockito.Mockito.mock(Query.class);\n",
          "        EntityManager entityManager = org.mockito.Mockito.mock(EntityManager.class);\n",
          "        org.mockito.BDDMockito.given(entityManager.createNamedQuery(\"AuditEvent.getAllEvents\")).willReturn(query);\n",
          "        String entity = \"0\";\n",
          "        org.mockito.BDDMockito.given(query.setParameter(\"entity\", entity)).willReturn(query);\n",
          "        // Call\n",
          "        io.coodoo.framework.audit.entity.AuditEvent.getAllEvents(entityManager, entity);\n",
          "        // Verification\n"
        ],
        "line_number": 63,
        "start_line": 59,
        "end_line": 69
      },
      {
        "link": "https://github.com/coodoo-io/workhorse/blob/56c17fc4787d05658abf765e5071db79c16a6309/src/test/java/io/coodoo/workhorse/config/entity/ConfigTest.java\n",
        "code": [
          "     */\n",
          "    @org.junit.Test\n",
          "    public void testGetConfigEmptyResult() {\n",
          "        Query query = org.mockito.Mockito.mock(Query.class);\n",
          "        EntityManager entityManager = org.mockito.Mockito.mock(EntityManager.class);\n",
          "        org.mockito.BDDMockito.given(entityManager.createNamedQuery(\"Config.getConfig\")).willReturn(query);\n",
          "        @SuppressWarnings(\"rawtypes\")\n",
          "        List results = new ArrayList();\n",
          "        org.mockito.BDDMockito.given(query.getResultList()).willReturn(results);\n",
          "        org.mockito.BDDMockito.given(query.setMaxResults(1)).willReturn(query);\n",
          "        // Call\n"
        ],
        "line_number": 61,
        "start_line": 57,
        "end_line": 67
      },
      {
        "link": "https://github.com/spring-cloud/spring-cloud-stream-binder-kafka/blob/2efd29fb273926b44258276978dd6c2097d6bb47/spring-cloud-stream-binder-kafka/src/test/java/org/springframework/cloud/stream/binder/kafka/KafkaBinderHealthIndicatorTest.java\n",
        "code": [
          "\tprivate final Map<String, KafkaMessageChannelBinder.TopicInformation> topicsInUse = new HashMap<>();\n",
          "\n",
          "\t@Before\n",
          "\tpublic void setup() {\n",
          "\t\tMockitoAnnotations.initMocks(this);\n",
          "\t\torg.mockito.BDDMockito.given(consumerFactory.createConsumer())\n",
          "\t\t\t\t.willReturn(consumer);\n",
          "\t\torg.mockito.BDDMockito.given(binder.getTopicsInUse()).willReturn(topicsInUse);\n",
          "\t\tthis.indicator = new KafkaBinderHealthIndicator(binder, consumerFactory);\n",
          "\t\tthis.indicator.setTimeout(10);\n",
          "\t}\n"
        ],
        "line_number": 79,
        "start_line": 75,
        "end_line": 85
      },
      {
        "link": "https://github.com/seminario-dos/image-handler/blob/43a61d316a08d8dbe4412685091cd6b14a110569/src/test/java/tec/mf/handler/s3/S3DaoTest.java\n",
        "code": [
          "                }\n",
          "        );\n",
          "\n",
          "        AmazonS3 amazonS3 = mock(AmazonS3.class);\n",
          "        S3Object s3Object = mock(S3Object.class);\n",
          "        given(amazonS3.getObject(anyString(), anyString())).willReturn(s3Object);\n",
          "        given(s3Object.getObjectContent()).willReturn(inputStream);\n",
          "\n",
          "        S3Dao s3Dao = new S3Dao(amazonS3, \"originals\");\n",
          "        Object actual = s3Dao.getImage(\"image.jpg\");\n",
          "\n"
        ],
        "line_number": 41,
        "start_line": 37,
        "end_line": 47
      },
      {
        "link": "}https://github.com/coodoo-io/workhorse/blob/56c17fc4787d05658abf765e5071db79c16a6309/src/test/java/io/coodoo/workhorse/jobengine/entity/JobTest.java\n",
        "code": [
          "@org.junit.Test \n",
          "public void testCountAllByStatusEmptyResult()\n",
          "{\n",
          "\tQuery query = org.mockito.Mockito.mock(Query.class);\n",
          "\tEntityManager entityManager = org.mockito.Mockito.mock(EntityManager.class);\n",
          "\torg.mockito.BDDMockito.given(entityManager.createNamedQuery(\"Job.countAllByStatus\")).willReturn(query);\n",
          "\t@SuppressWarnings(\"rawtypes\")\n",
          "\tList results = new ArrayList();\n",
          "\torg.mockito.BDDMockito.given(query.getResultList()).willReturn(results);\n",
          "\tJobStatus status = JobStatus.values().length <= 0 ? null : JobStatus.values()[0];\n",
          "\torg.mockito.BDDMockito.given(query.setParameter(\"status\", status)).willReturn(query);\n"
        ],
        "line_number": 49,
        "start_line": 45,
        "end_line": 55
      },
      {
        "link": "}https://github.com/coodoo-io/workhorse/blob/56c17fc4787d05658abf765e5071db79c16a6309/src/test/java/io/coodoo/workhorse/statistic/entity/JobStatisticHourTest.java\n",
        "code": [
          "@org.junit.Test \n",
          "public void testDeleteAllByJobId()\n",
          "{\n",
          "\tQuery query = org.mockito.Mockito.mock(Query.class);\n",
          "\tEntityManager entityManager = org.mockito.Mockito.mock(EntityManager.class);\n",
          "\torg.mockito.BDDMockito.given(entityManager.createNamedQuery(\"JobStatisticHour.deleteAllByJobId\")).willReturn(query);\n",
          "\tLong jobId = java.lang.Long.valueOf(0);\n",
          "\torg.mockito.BDDMockito.given(query.setParameter(\"jobId\", jobId)).willReturn(query);\n",
          "\t// Call\n",
          "\tio.coodoo.workhorse.statistic.entity.JobStatisticHour.deleteAllByJobId(entityManager,jobId);\n",
          "\t// Verification\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      },
      {
        "link": "}https://github.com/coodoo-io/workhorse/blob/56c17fc4787d05658abf765e5071db79c16a6309/src/test/java/io/coodoo/workhorse/statistic/entity/JobStatisticDayTest.java\n",
        "code": [
          "@org.junit.Test \n",
          "public void testDeleteAllByJobId()\n",
          "{\n",
          "\tQuery query = org.mockito.Mockito.mock(Query.class);\n",
          "\tEntityManager entityManager = org.mockito.Mockito.mock(EntityManager.class);\n",
          "\torg.mockito.BDDMockito.given(entityManager.createNamedQuery(\"JobStatisticDay.deleteAllByJobId\")).willReturn(query);\n",
          "\tLong jobId = java.lang.Long.valueOf(0);\n",
          "\torg.mockito.BDDMockito.given(query.setParameter(\"jobId\", jobId)).willReturn(query);\n",
          "\t// Call\n",
          "\tio.coodoo.workhorse.statistic.entity.JobStatisticDay.deleteAllByJobId(entityManager,jobId);\n",
          "\t// Verification\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      }
    ],
    "org.mockito.Mockito.doReturn": [
      {
        "link": "https://github.com/Wassim-St-Gr/sap123/blob/ded5ab05f005033f1f75f3ee4b122f6da08284ae/bin/platform/ext/oauth2/testsrc/de/hybris/platform/oauth2/filter/SessionInvalidateFilterTest.java\n",
        "code": [
          "\tpublic void testInvalidate() throws Exception\n",
          "\t{\n",
          "\t\tSessionInvalidateFilter filter = new SessionInvalidateFilter(ImmutableSet.of(\".*/oauth/token\"));\n",
          "\t\tfilter.init();\n",
          "\t\tfinal HttpServletRequest request = Mockito.mock(HttpServletRequest.class);\n",
          "\t\tdoReturn(\"/oauth2/oauth/token\").when(request).getRequestURI();\n",
          "\t\tfinal HttpSession session = mock(HttpSession.class);\n",
          "\t\tdoReturn(session).when(request).getSession(eq(false));\n",
          "\t\tfinal FilterChain chain = mock(FilterChain.class);\n",
          "\t\tdoNothing().when(chain).doFilter(any(), any());\n",
          "\n"
        ],
        "line_number": 40,
        "start_line": 36,
        "end_line": 46
      },
      {
        "link": "https://github.com/davinash/monarch/blob/21ac4f538fe695fd7481003084fd2f0a8982cd32/ADS/geode-core/src/test/java/org/apache/geode/internal/cache/partitioned/rebalance/BucketOperatorImplTest.java\n",
        "code": [
          "    completion = mock(Completion.class);\n",
          "\n",
          "    resourceObserver = spy(new InternalResourceManager.ResourceObserverAdapter());\n",
          "    InternalResourceManager.setResourceObserver(resourceObserver);\n",
          "\n",
          "    doReturn(region).when(rebalanceOp).getLeaderRegion();\n",
          "\n",
          "    operator = new BucketOperatorImpl(rebalanceOp);\n",
          "\n",
          "    sourceMember = new InternalDistributedMember(InetAddress.getByName(\"127.0.0.1\"), 1);\n",
          "    targetMember = new InternalDistributedMember(InetAddress.getByName(\"127.0.0.2\"), 1);\n"
        ],
        "line_number": 64,
        "start_line": 60,
        "end_line": 70
      },
      {
        "link": "https://github.com/munawarkhan10p/hybris/blob/497cdbc37925235b7da26d619f4eec9a08c88590/bin/platform/ext/oauth2/testsrc/de/hybris/platform/oauth2/filter/SessionInvalidateFilterTest.java\n",
        "code": [
          "\tpublic void testInvalidate() throws Exception\n",
          "\t{\n",
          "\t\tSessionInvalidateFilter filter = new SessionInvalidateFilter(ImmutableSet.of(\".*/oauth/token\"));\n",
          "\t\tfilter.init();\n",
          "\t\tfinal HttpServletRequest request = Mockito.mock(HttpServletRequest.class);\n",
          "\t\tdoReturn(\"/oauth2/oauth/token\").when(request).getRequestURI();\n",
          "\t\tfinal HttpSession session = mock(HttpSession.class);\n",
          "\t\tdoReturn(session).when(request).getSession(eq(false));\n",
          "\t\tfinal FilterChain chain = mock(FilterChain.class);\n",
          "\t\tdoNothing().when(chain).doFilter(any(), any());\n",
          "\n"
        ],
        "line_number": 40,
        "start_line": 36,
        "end_line": 46
      },
      {
        "link": "https://github.com/Dragonwrath/AndroidDemo/blob/bb7ffb4229097e01d6b50b0427f9b2d0dfa2721a/android-mock/src/test/java/com/joke/mock/offical_mock/OfficalTest_Part_2.java\n",
        "code": [
          "        System.out.println(mockedLinkList.remove(999));\n",
          "\n",
          "    }\n",
          "\n",
          "    /*\n",
          "     * doReturn()|doThrow()| doAnswer()|doNothing()|doCallRealMethod() family of methods\n",
          "     *\n",
          "     */\n",
          "    /**\n",
          "     * {@see Mockito\n",
          "     * https://static.javadoc.io/org.mockito/mockito-core/2.7.22/org/mockito/Mockito.html#12\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 64
      },
      {
        "link": "https://github.com/Kang-OS-R/android_packages_apps_Settings/blob/4e67b1c5a0fb8c874f976095f58a680ee1298f86/tests/robotests/src/com/android/settings/fuelgauge/batterysaver/BatterySaverSettingsTest.java\n",
        "code": [
          "    @Before\n",
          "    public void setUp() {\n",
          "        MockitoAnnotations.initMocks(this);\n",
          "\n",
          "        mFragment = spy(new BatterySaverSettings());\n",
          "        doReturn(mScreen).when(mFragment).getPreferenceScreen();\n",
          "    }\n",
          "\n",
          "\n",
          "    @Test\n",
          "    public void setupFooter_linkAddedWhenAppropriate() {\n"
        ],
        "line_number": 45,
        "start_line": 41,
        "end_line": 51
      },
      {
        "link": "}https://github.com/Unknown-OS/frameworks_opt_telephony/blob/78501f57434877584cab842d6242f05537a1fb51/tests/telephonytests/src/com/android/internal/telephony/WapPushOverSmsTest.java\n",
        "code": [
          "        super.setUp(\"WapPushOverSmsTest\");\n",
          "\n",
          "        // Note that this replaces only cached services in ServiceManager. If a service is not found\n",
          "        // in the cache, a real instance is used.\n",
          "        mServiceManagerMockedServices.put(\"imms\", mIMmsStub);\n",
          "        doReturn(mIMmsStub).when(mIMmsStub).queryLocalInterface(anyString());\n",
          "\n",
          "        mWapPushOverSmsUT = new WapPushOverSms(mContext);\n",
          "    }\n",
          "\n",
          "    @After\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 64
      },
      {
        "link": "https://github.com/Unknown-OS/frameworks_opt_telephony/blob/78501f57434877584cab842d6242f05537a1fb51/tests/telephonytests/src/com/android/internal/telephony/CarrierServiceStateTrackerTest.java\n",
        "code": [
          "    @SmallTest\n",
          "    public void testCancelBothNotifications() {\n",
          "        logd(LOG_TAG + \":testCancelBothNotifications()\");\n",
          "        Message notificationMsg = mCarrierSST.obtainMessage(\n",
          "                CarrierServiceStateTracker.CARRIER_EVENT_DATA_REGISTRATION, null);\n",
          "        doReturn(false).when(mCarrierSST).evaluateSendingMessage(any());\n",
          "        doReturn(mNotificationManager).when(mCarrierSST).getNotificationManager(any());\n",
          "        mCarrierSST.handleMessage(notificationMsg);\n",
          "        waitForHandlerAction(mCarrierSST, TEST_TIMEOUT);\n",
          "        verify(mNotificationManager).cancel(\n",
          "                CarrierServiceStateTracker.NOTIFICATION_EMERGENCY_NETWORK);\n"
        ],
        "line_number": 98,
        "start_line": 94,
        "end_line": 104
      },
      {
        "link": "https://github.com/trilogy-group/arch-as-code/blob/56577e4b2004f84fef3b5dfd8254a4601f52b15d/src/test/java/net/trilogy/arch/commands/architectureUpdate/AuFinalizeAndPublishCommandTest.java\n",
        "code": [
          "        AuAnnotateCommand annotateCommand = mock(AuAnnotateCommand.class);\n",
          "        when(annotateCommand.call()).thenReturn(0);\n",
          "        AuValidateCommand validateCommand = mock(AuValidateCommand.class);\n",
          "        when(validateCommand.call()).thenReturn(0);\n",
          "\n",
          "        doReturn(annotateCommand).when(finalizeSpy).createAuAnnotateCommand();\n",
          "        doReturn(validateCommand).when(finalizeSpy).createAuValidateCommand();\n",
          "        doReturn(0).when(finalizeSpy).publishToJira();\n",
          "\n",
          "        assertThat(finalizeSpy.call(), equalTo(0));\n",
          "\n"
        ],
        "line_number": 27,
        "start_line": 23,
        "end_line": 33
      },
      {
        "link": "https://github.com/dashbuilder/dashbuilder/blob/50ef88210726b4f2f33f1a82eaf0f542e38dedd9/dashbuilder-client/dashbuilder-common-client/src/test/java/org/dashbuilder/common/client/editor/AbstractEditorTest.java\n",
        "code": [
          "public abstract class AbstractEditorTest {\n",
          "\n",
          "    \n",
          "    protected EditorError mockEditorError(final Editor<?> editor, final String message) {\n",
          "        EditorError error = mock(EditorError.class);\n",
          "        doReturn(editor).when(error).getEditor();\n",
          "        doReturn(message).when(error).getMessage();\n",
          "        return error;\n",
          "    }\n",
          "    \n",
          "    protected void setup() {\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      },
      {
        "link": "https://github.com/Nitrogen-Tmod/android_packages_apps_Settings/blob/0c50d3fb191d4cac844a482ef1eb62b0b0234d55/tests/robotests/src/com/android/settings/fuelgauge/batterysaver/BatterySaverSettingsTest.java\n",
        "code": [
          "    @Before\n",
          "    public void setUp() {\n",
          "        MockitoAnnotations.initMocks(this);\n",
          "\n",
          "        mFragment = spy(new BatterySaverSettings());\n",
          "        doReturn(mScreen).when(mFragment).getPreferenceScreen();\n",
          "    }\n",
          "\n",
          "\n",
          "    @Test\n",
          "    public void setupFooter_linkAddedWhenAppropriate() {\n"
        ],
        "line_number": 45,
        "start_line": 41,
        "end_line": 51
      }
    ],
    "com.google.common.cache.CacheBuilder.concurrencyLevel": [
      {
        "link": "https://github.com/lhong375/aura/blob/5ce3c6e53f3120f45fca05707883d21e2e29f3e5/aura-impl/src/main/java/org/auraframework/impl/cache/CacheImpl.java\n",
        "code": [
          "\t\t// non-quava secondary-storage cache with streaming ability\n",
          "\n",
          "\t\tcom.google.common.cache.CacheBuilder<Object, Object> cb = com.google.common.cache.CacheBuilder\n",
          "\t\t\t\t.newBuilder().initialCapacity(builder.initialCapacity)\n",
          "\t\t\t\t.maximumSize(builder.maximumSize)\n",
          "\t\t\t\t.concurrencyLevel(builder.concurrencyLevel);\n",
          "\n",
          "\t\tif (builder.recordStats) {\n",
          "\t\t\tcb = cb.recordStats();\n",
          "\t\t}\n",
          "\n"
        ],
        "line_number": 37,
        "start_line": 33,
        "end_line": 43
      },
      {
        "link": "https://github.com/shansun123/sparrow/blob/5eae1d009717f8eb64f90a22ac9b54a440ff0771/src/main/java/com/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> initialCapacity(int initialCapacity) {\n",
          "\t\treturn builder.initialCapacity(initialCapacity);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> concurrencyLevel(int concurrencyLevel) {\n",
          "\t\treturn builder.concurrencyLevel(concurrencyLevel);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> maximumSize(long size) {\n",
          "\t\treturn builder.maximumSize(size);\n"
        ],
        "line_number": 39,
        "start_line": 35,
        "end_line": 45
      },
      {
        "link": "}https://github.com/anatlyzer/a2l/blob/74f2c3ca81e45233a44461e95a4898ba1f237983/tests/a2l.tests.imdb/src-gen/a2l/tests/findcouples/optimised/FindCouplesIMDbGlobalContext.java\n",
        "code": [
          "import imdb.movies.Actress;\n",
          "\n",
          "public class FindCouplesIMDbGlobalContext extends a2l.runtime.DefaultGlobalContext {\n",
          "private Cache<Person, javaslang.collection.Set<Movie>> cache1_p2;\n",
          "\tprivate Cache<Person, javaslang.collection.Set<Movie>> cache0_p1;public FindCouplesIMDbGlobalContext() {\n",
          "cache1_p2 = com.google.common.cache.CacheBuilder.newBuilder().concurrencyLevel(Runtime.getRuntime().availableProcessors()).<Person, javaslang.collection.Set<Movie>>build();\n",
          "cache0_p1 = com.google.common.cache.CacheBuilder.newBuilder().concurrencyLevel(Runtime.getRuntime().availableProcessors()).<Person, javaslang.collection.Set<Movie>>build();\n",
          "allInstancesCache = com.google.common.cache.CacheBuilder.newBuilder().concurrencyLevel(12).build();; }public javaslang.collection.Set<Movie> getcache1_p2(Person key, java.util.concurrent.Callable<javaslang.collection.Set<Movie>> closure) { try { return cache1_p2.get(key, closure); } catch (java.util.concurrent.ExecutionException e) { throw new IllegalStateException(); } }\n",
          "public javaslang.collection.Set<Movie> getcache0_p1(Person key, java.util.concurrent.Callable<javaslang.collection.Set<Movie>> closure) { try { return cache0_p1.get(key, closure); } catch (java.util.concurrent.ExecutionException e) { throw new IllegalStateException(); } }\n",
          "private Cache<java.lang.Class<?>, javaslang.collection.List<?>> allInstancesCache; \n",
          "\t@SuppressWarnings(\"unchecked\")\tpublic <T> javaslang.collection.List<T> getFromAllInstancesCache(java.lang.Class<T> key, java.util.concurrent.Callable<javaslang.collection.List<T>> closure) {  try {   return (javaslang.collection.List<T>) allInstancesCache.get(key, closure);  } catch (java.util.concurrent.ExecutionException e) {    throw new IllegalStateException();  } }public void addAllInstancesObject(Object obj) {}\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": "https://github.com/wx930910/autorefactor_druid/blob/f2c02baacfea9bc0f57938de2b2bacfc462b45f2/extensions-core/lookups-cached-single/src/main/java/org/apache/druid/server/lookup/cache/loading/OnHeapLoadingCache.java\n",
        "code": [
          "    this.initialCapacity = initialCapacity <= 0 ? DEFAULT_INITIAL_CAPACITY : initialCapacity;\n",
          "    this.maximumSize = maximumSize;\n",
          "    this.expireAfterAccess = expireAfterAccess;\n",
          "    this.expireAfterWrite = expireAfterWrite;\n",
          "    CacheBuilder builder = CacheBuilder.newBuilder()\n",
          "                                       .concurrencyLevel(this.concurrencyLevel)\n",
          "                                       .initialCapacity(this.initialCapacity)\n",
          "                                       .recordStats();\n",
          "    if (this.expireAfterAccess != null) {\n",
          "      builder.expireAfterAccess(expireAfterAccess, TimeUnit.MILLISECONDS);\n",
          "    }\n"
        ],
        "line_number": 85,
        "start_line": 81,
        "end_line": 91
      },
      {
        "link": "https://github.com/Gilded-Games/OrbisLib/blob/147af30f2d7ff854c7bdbb4cc47d4e55db24d728/src/main/java/com/gildedgames/orbis/lib/util/cache/FileSystemCacheBuilder.java\n",
        "code": [
          "\t\t\treturn (RemovalListener<K, V>) removalListener;\n",
          "\t\t}\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * {@link com.google.common.cache.CacheBuilder#concurrencyLevel(int)}\n",
          "\t */\n",
          "\tpublic FileSystemCacheBuilder<K, V> concurrencyLevel(int concurrencyLevel)\n",
          "\t{\n",
          "\t\tthis.underlyingCacheBuilder.concurrencyLevel(concurrencyLevel);\n",
          "\t\treturn this;\n"
        ],
        "line_number": 71,
        "start_line": 67,
        "end_line": 77
      },
      {
        "link": "https://github.com/Braj65/Sandbox/blob/ab7d5de63d65a120b264e3dc3219fbead1930a03/ScaleConcepts/src/main/java/designCache/guavaToDIsk/FileSystemCacheBuilder.java\n",
        "code": [
          "    private FileSystemCacheBuilder(CacheBuilder<Object, Object> cacheBuilder) {\n",
          "        this.underlyingCacheBuilder = cacheBuilder;\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.cache.CacheBuilder#concurrencyLevel(int)}\n",
          "     */\n",
          "    public FileSystemCacheBuilder<K, V> concurrencyLevel(int concurrencyLevel) {\n",
          "        underlyingCacheBuilder.concurrencyLevel(concurrencyLevel);\n",
          "        return this;\n",
          "    }\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      },
      {
        "link": "https://github.com/catorv/gallop/blob/b4812f3e78905d2f9fddf0539e002e7f2f57d214/data/src/main/java/com/catorv/gallop/cache/adapter/GuavaCacheAdapterBuilder.java\n",
        "code": [
          "\t@SuppressWarnings({\"rawtypes\", \"unchecked\"})\n",
          "\t@Override\n",
          "\tpublic Cache<K, V> buildCache(CacheConfiguration configuration) {\n",
          "\t\tcom.google.common.cache.CacheBuilder cacheBuilder;\n",
          "\t\tcacheBuilder = com.google.common.cache.CacheBuilder.newBuilder()\n",
          "\t\t\t\t.concurrencyLevel(10)\n",
          "\t\t\t\t.initialCapacity(16);\n",
          "\n",
          "\t\tint maximumSize = configuration.getMaximumSize();\n",
          "\t\tif (maximumSize <= 0) {\n",
          "\t\t\tcacheBuilder.maximumSize(2048);\n"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      },
      {
        "link": "https://github.com/zqhxuyuan/zava/blob/707691039b7aff8f4129e2b25d08b374610990e5/src/main/java/com/github/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> initialCapacity(int initialCapacity) {\n",
          "\t\treturn builder.initialCapacity(initialCapacity);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> concurrencyLevel(int concurrencyLevel) {\n",
          "\t\treturn builder.concurrencyLevel(concurrencyLevel);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> maximumSize(long size) {\n",
          "\t\treturn builder.maximumSize(size);\n"
        ],
        "line_number": 39,
        "start_line": 35,
        "end_line": 45
      },
      {
        "link": "https://github.com/raphw/guava-cache-overflow-extension/blob/befa47bb955ffa9f344b44e8621290d65e6592d2/src/main/java/com/blogspot/mydailyjava/guava/cache/overflow/FileSystemCacheBuilder.java\n",
        "code": [
          "    private FileSystemCacheBuilder(CacheBuilder<Object, Object> cacheBuilder) {\n",
          "        this.underlyingCacheBuilder = cacheBuilder;\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.cache.CacheBuilder#concurrencyLevel(int)}\n",
          "     */\n",
          "    public FileSystemCacheBuilder<K, V> concurrencyLevel(int concurrencyLevel) {\n",
          "        underlyingCacheBuilder.concurrencyLevel(concurrencyLevel);\n",
          "        return this;\n",
          "    }\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      },
      {
        "link": "https://github.com/zqhxuyuan/tutorials/blob/72740ec130a15331b0b2428b9750099c47073052/zava/src/main/java/com/github/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> initialCapacity(int initialCapacity) {\n",
          "\t\treturn builder.initialCapacity(initialCapacity);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> concurrencyLevel(int concurrencyLevel) {\n",
          "\t\treturn builder.concurrencyLevel(concurrencyLevel);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> maximumSize(long size) {\n",
          "\t\treturn builder.maximumSize(size);\n"
        ],
        "line_number": 39,
        "start_line": 35,
        "end_line": 45
      }
    ],
    "com.google.common.base.Predicate.apply": [
      {
        "link": "https://github.com/kirikprotocol/IPS/blob/a2bc55c63250a9cae1fb2ba73dfce43a2fbb8b4a/src/main/java/mobi/eyeline/ips/util/ListUtils.java\n",
        "code": [
          "  public static <T> void moveUp(List<T> list, T elem, Predicate<T> skip) {\n",
          "    int idx = safeIndexOf(list, elem);\n",
          "    list.remove(idx);\n",
          "\n",
          "    idx++;\n",
          "    while ((idx < list.size()) && skip.apply(list.get(idx - 1))) {\n",
          "      idx++;\n",
          "    }\n",
          "\n",
          "    list.add(min(idx, list.size()), elem);\n",
          "  }\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      },
      {
        "link": "https://github.com/josepvalls/parserservices/blob/903363685e5cea4bd50d9161d60500800e42b167/src/com/carrotsearch/hppc/predicates/GuavaPredicateAdapter.java\n",
        "code": [
          "    public GuavaPredicateAdapter(com.google.common.base.Predicate<? super KType> predicate)\n",
          "    {\n",
          "        this.predicate = predicate;\n",
          "    }\n",
          "\n",
          "    public boolean apply(KType value)\n",
          "    {\n",
          "        return predicate.apply(value);\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 21
      },
      {
        "link": "https://github.com/shiveshwar/impala-3.1.0/blob/f4e0c72ee1fe5e530518f2096702a00d356619cd/fe/src/main/java/org/apache/impala/analysis/Expr.java\n",
        "code": [
          "\n",
          "  // returns true if an Expr is a non-analytic aggregate.\n",
          "  public static final com.google.common.base.Predicate<Expr> IS_AGGREGATE =\n",
          "      new com.google.common.base.Predicate<Expr>() {\n",
          "        @Override\n",
          "        public boolean apply(Expr arg) {\n",
          "          return arg instanceof FunctionCallExpr &&\n",
          "              ((FunctionCallExpr)arg).isAggregateFunction();\n",
          "        }\n",
          "      };\n",
          "\n"
        ],
        "line_number": 105,
        "start_line": 101,
        "end_line": 111
      },
      {
        "link": "https://github.com/junglereal/palo-fe/blob/e5f3f9294d7ca2df3c8bce00a12804898d3ac775/src/main/java/com/baidu/palo/analysis/Expr.java\n",
        "code": [
          "    public final static float FUNCTION_CALL_COST = 10;\n",
          "\n",
          "    // returns true if an Expr is a non-analytic aggregate.\n",
          "    private final static com.google.common.base.Predicate<Expr> IS_AGGREGATE_PREDICATE =\n",
          "            new com.google.common.base.Predicate<Expr>() {\n",
          "                public boolean apply(Expr arg) {\n",
          "                    return arg instanceof FunctionCallExpr &&\n",
          "                            ((FunctionCallExpr)arg).isAggregateFunction();\n",
          "                }\n",
          "            };\n",
          "\n"
        ],
        "line_number": 71,
        "start_line": 67,
        "end_line": 77
      },
      {
        "link": "https://github.com/timarmstrong/impala/blob/90944d7340337a75929466b590bea23fdb302337/fe/src/main/java/org/apache/impala/analysis/Expr.java\n",
        "code": [
          "\n",
          "  // returns true if an Expr is a non-analytic aggregate.\n",
          "  public static final com.google.common.base.Predicate<Expr> IS_AGGREGATE =\n",
          "      new com.google.common.base.Predicate<Expr>() {\n",
          "        @Override\n",
          "        public boolean apply(Expr arg) {\n",
          "          return arg instanceof FunctionCallExpr &&\n",
          "              ((FunctionCallExpr)arg).isAggregateFunction();\n",
          "        }\n",
          "      };\n",
          "\n"
        ],
        "line_number": 106,
        "start_line": 102,
        "end_line": 112
      },
      {
        "link": "https://github.com/hitakaken/ndp/blob/659ce2dd6dd8233a8a745fbe54ee0799c75879cc/ndp-core/src/main/java/com/novbank/ndp/core/util/function/GuavaToJavaPredicateWrapper.java\n",
        "code": [
          "        this.predicate = predicate;\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public boolean test(T input) {\n",
          "        return predicate.apply(input);\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public com.google.common.base.Predicate<T> unwrap(){\n",
          "        return predicate;\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 22
      },
      {
        "link": "https://github.com/josepvalls/parserservices/blob/903363685e5cea4bd50d9161d60500800e42b167/src/com/carrotsearch/hppc/procedures/GuavaProcedureAdapter.java\n",
        "code": [
          "    public GuavaProcedureAdapter(com.google.common.base.Predicate<? super KType> predicate)\n",
          "    {\n",
          "        this.predicate = predicate;\n",
          "    }\n",
          "\n",
          "    public void apply(KType value)\n",
          "    {\n",
          "        predicate.apply(value);\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 21
      },
      {
        "link": "https://github.com/hitakaken/ndp/blob/659ce2dd6dd8233a8a745fbe54ee0799c75879cc/ndp-kernel/src/main/java/com/novbank/ndp/kernel/util/function/GuavaToJavaPredicateWrapper.java\n",
        "code": [
          "        this.predicate = predicate;\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public boolean test(T input) {\n",
          "        return predicate.apply(input);\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public com.google.common.base.Predicate<T> unwrap(){\n",
          "        return predicate;\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 22
      },
      {
        "link": "https://github.com/Eliminater74/com.google.android.tvlauncher/blob/e8284f9970d77a05042a57e9c2173856af7c4246/saved/sources/com/google/common/collect/Maps.java\n",
        "code": [
          "public final class Maps {\n",
          "\n",
          "    private enum EntryFunction implements Function<Map.Entry<?, ?>, Object> {\n",
          "        KEY {\n",
          "            @NullableDecl\n",
          "            public /* bridge */ /* synthetic */ Object apply(Object obj) {\n",
          "                return apply((Map.Entry<?, ?>) ((Map.Entry) obj));\n",
          "            }\n",
          "\n",
          "            @NullableDecl\n",
          "            public Object apply(Map.Entry<?, ?> entry) {\n"
        ],
        "line_number": 49,
        "start_line": 45,
        "end_line": 55
      },
      {
        "link": "https://github.com/Eliminater74/com.google.android.tvlauncher/blob/e8284f9970d77a05042a57e9c2173856af7c4246/src/main/java/com/google/common/collect/Maps.java\n",
        "code": [
          "public final class Maps {\n",
          "\n",
          "    private enum EntryFunction implements Function<Map.Entry<?, ?>, Object> {\n",
          "        KEY {\n",
          "            @NullableDecl\n",
          "            public /* bridge */ /* synthetic */ Object apply(Object obj) {\n",
          "                return apply((Map.Entry<?, ?>) ((Map.Entry) obj));\n",
          "            }\n",
          "\n",
          "            @NullableDecl\n",
          "            public Object apply(Map.Entry<?, ?> entry) {\n"
        ],
        "line_number": 49,
        "start_line": 45,
        "end_line": 55
      }
    ],
    "com.google.common.collect.ImmutableListMultimap.copyOf": [
      {
        "link": "https://github.com/anygunx/rdserver/blob/db2d8e961f606fdb4fb125930b647ac1570733bf/src/main/java/com/rd/model/data/MonsterSiegeModelData.java\n",
        "code": [
          "        this.day = day;\n",
          "        this.fighterId = fighter;\n",
          "        this.escapeTime = escapeTime;\n",
          "        this.deadTime = deadTime;\n",
          "        this.attackTimes = attackTimes;\n",
          "        this.scores = ImmutableMap.copyOf(scores);\n",
          "        this.title = title;\n",
          "        this.content = content;\n",
          "        this.rewards = ImmutableListMultimap.copyOf(rewards);\n",
          "    }\n",
          "\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      },
      {
        "link": "https://github.com/oxymore-tech/baku/blob/64dbd5bb2eec24c6184dd93ccd054b725662ae3d/back/src/main/java/com/bakuanimation/model/Movie.java\n",
        "code": [
          "\n",
          "    public Movie(String projectId, String name, String synopsis, int fps, boolean locked,\n",
          "                 Set<String> lockedShots, List<String> shots, ListMultimap<String, Path> images,\n",
          "                 List<Audio> audios, List<SoundTimeLine> soundsTimeline) {\n",
          "        this.locked = locked;\n",
          "        this.lockedShots = ImmutableSet.copyOf(lockedShots);\n",
          "        this.shots = ImmutableList.copyOf(shots);\n",
          "        this.images = ImmutableListMultimap.copyOf(images);\n",
          "        this.projectId = projectId;\n",
          "        this.name = name;\n",
          "        this.synopsis = synopsis;\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "https://github.com/Eliminater74/com.google.android.tvlauncher/blob/e8284f9970d77a05042a57e9c2173856af7c4246/saved/sources/com/google/common/collect/ImmutableMultimap.java\n",
        "code": [
          "            }\n",
          "            return ImmutableListMultimap.fromMapEntries(entrySet, this.valueComparator);\n",
          "        }\n",
          "    }\n",
          "\n",
          "    public static <K, V> ImmutableMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap) {\n",
          "        if (multimap instanceof ImmutableMultimap) {\n",
          "            ImmutableMultimap<K, V> kvMultimap = (ImmutableMultimap) multimap;\n",
          "            if (!kvMultimap.isPartialView()) {\n",
          "                return kvMultimap;\n",
          "            }\n"
        ],
        "line_number": 228,
        "start_line": 224,
        "end_line": 234
      },
      {
        "link": "https://github.com/ncampion/projet_long_baku/blob/3bb0e2710b1e45e1fd2a59420473970db508cb13/back/src/main/java/com/bakuanimation/model/Movie.java\n",
        "code": [
          "    private final ImmutableListMultimap<String, Path> images;\n",
          "\n",
          "    public Movie(String projectId, String name, String synopsis, int fps, boolean locked,\n",
          "                 Set<String> lockedShots, List<String> shots, ListMultimap<String, Path> images) {\n",
          "        this.locked = locked;\n",
          "        this.lockedShots = ImmutableSet.copyOf(lockedShots);\n",
          "        this.shots = ImmutableList.copyOf(shots);\n",
          "        this.images = ImmutableListMultimap.copyOf(images);\n",
          "        this.projectId = projectId;\n",
          "        this.name = name;\n",
          "        this.synopsis = synopsis;\n"
        ],
        "line_number": 24,
        "start_line": 20,
        "end_line": 30
      },
      {
        "link": "https://github.com/Eliminater74/com.google.android.tvlauncher/blob/e8284f9970d77a05042a57e9c2173856af7c4246/src/main/java/com/google/common/collect/ImmutableMultimap.java\n",
        "code": [
          "            }\n",
          "            return ImmutableListMultimap.fromMapEntries(entrySet, this.valueComparator);\n",
          "        }\n",
          "    }\n",
          "\n",
          "    public static <K, V> ImmutableMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap) {\n",
          "        if (multimap instanceof ImmutableMultimap) {\n",
          "            ImmutableMultimap<K, V> kvMultimap = (ImmutableMultimap) multimap;\n",
          "            if (!kvMultimap.isPartialView()) {\n",
          "                return kvMultimap;\n",
          "            }\n"
        ],
        "line_number": 228,
        "start_line": 224,
        "end_line": 234
      },
      {
        "link": "https://github.com/indocomsoft/jlitec/blob/51b4c56c1d76129f7c0ad9da51ac4865c7a64043/src/main/java/jlitec/checker/Environment.java\n",
        "code": [
          "  public Environment() {\n",
          "    this.map = ImmutableListMultimap.of();\n",
          "  }\n",
          "\n",
          "  private Environment(Multimap<String, Type> map) {\n",
          "    this.map = ImmutableListMultimap.copyOf(map);\n",
          "  }\n",
          "\n",
          "  public Environment(KlassDescriptor klassDescriptor) {\n",
          "    final ArrayListMultimap<String, Type> map =\n",
          "        klassDescriptor.fields().entrySet().stream()\n"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      },
      {
        "link": "https://github.com/mrizkymunggaran/moten-util/blob/a0329e112ae911878cea0f91817f4e2816ac47a5/squabble/trunk/squabble-core/src/main/java/moten/david/squabble/Data.java\n",
        "code": [
          "     * Constructor.\n",
          "     * \n",
          "     * @param map\n",
          "     */\n",
          "    public Data(ListMultimap<User, Word> map) {\n",
          "        this.map = ImmutableListMultimap.copyOf(map);\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * Returns the map of users to word lists.\n",
          "     * \n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/airlift/airlift/blob/3546f4b12884828372d30a8ae821327ad87441e8/http-client/src/main/java/io/airlift/http/client/UnexpectedResponseException.java\n",
        "code": [
          "    public UnexpectedResponseException(Request request, Response response)\n",
          "    {\n",
          "        this(\"HTTP \" + response.getStatusCode(),\n",
          "                request,\n",
          "                response.getStatusCode(),\n",
          "                ImmutableListMultimap.copyOf(response.getHeaders()));\n",
          "    }\n",
          "\n",
          "    public UnexpectedResponseException(String message, Request request, Response response)\n",
          "    {\n",
          "        this(message,\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "https://github.com/knoppiks/hap-java-client/blob/b07bcd1443eb35a4be188f8671a3a223f64ac120/src/main/java/de/knoppiks/hap/client/HapEntity.java\n",
        "code": [
          "    private final Optional<String> eTag;\n",
          "\n",
          "    public HapEntity(Map<Keyword, Query> queries, Map<Keyword, Form> forms, Multimap<Keyword, Link> links,\n",
          "                     Multimap<Keyword, HapEntity> embedded, Set<Operation> operations,\n",
          "                     Object data, Optional<String> eTag) {\n",
          "        this.queries = copyOf(queries);\n",
          "        this.forms = copyOf(forms);\n",
          "        this.links = ImmutableListMultimap.copyOf(links);\n",
          "        this.embedded = ImmutableListMultimap.copyOf(embedded);\n",
          "        this.operations = ImmutableSet.copyOf(operations);\n",
          "        this.data = data;\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/ImmutableListMultimapUtil.java\n",
        "code": [
          "* @author  http://blog.csdn.net/zfrong/\n",
          "* @author zengfr3000@qq.com\n",
          "*/\n",
          "public final class ImmutableListMultimapUtil{ \n",
          "/**\n",
          "*{@link com.google.common.collect.ImmutableListMultimap#copyOf(com.google.common.collect.Multimap<? extends K, ? extends V>)}\n",
          "*@see com.google.common.collect.ImmutableListMultimap#copyOf(com.google.common.collect.Multimap<? extends K, ? extends V>)\n",
          "*<code>public static <K,V> com.google.common.collect.ImmutableListMultimap<K, V> com.google.common.collect.ImmutableListMultimap.copyOf(com.google.common.collect.Multimap<? extends K, ? extends V>)\n",
          "*copyOf(com.google.common.collect.Multimap<? extends K, ? extends V> p0)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      }
    ],
    "com.google.common.collect.ImmutableMap.copyOf": [
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/collect/ImmutableMap.java\n",
        "code": [
          "\n",
          "        private void ensureCapacity(int i) {\n",
          "            int i2 = i * 2;\n",
          "            Object[] objArr = this.alternatingKeysAndValues;\n",
          "            if (i2 > objArr.length) {\n",
          "                this.alternatingKeysAndValues = Arrays.copyOf(objArr, ImmutableCollection.Builder.expandedCapacity(objArr.length, i2));\n",
          "                this.entriesUsed = false;\n",
          "            }\n",
          "        }\n",
          "\n",
          "        public Builder<K, V> put(K k, V v) {\n"
        ],
        "line_number": 131,
        "start_line": 127,
        "end_line": 137
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/ImmutableMapUtil.java\n",
        "code": [
          "* @author  http://blog.csdn.net/zfrong/\n",
          "* @author zengfr3000@qq.com\n",
          "*/\n",
          "public final class ImmutableMapUtil{ \n",
          "/**\n",
          "*{@link com.google.common.collect.ImmutableMap#copyOf(java.lang.Iterable<? extends java.util.Map$Entry<? extends K, ? extends V>>)}\n",
          "*@see com.google.common.collect.ImmutableMap#copyOf(java.lang.Iterable<? extends java.util.Map$Entry<? extends K, ? extends V>>)\n",
          "*<code>public static <K,V> com.google.common.collect.ImmutableMap<K, V> com.google.common.collect.ImmutableMap.copyOf(java.lang.Iterable<? extends java.util.Map$Entry<? extends K, ? extends V>>)\n",
          "*copyOf(java.lang.Iterable<? extends java.util.Map$Entry<? extends K, ? extends V>> p0)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/collect/ImmutableMap.java\n",
        "code": [
          "            this.entriesUsed = false;\n",
          "        }\n",
          "\n",
          "        private void ensureCapacity(int minCapacity) {\n",
          "            if (minCapacity * 2 > this.alternatingKeysAndValues.length) {\n",
          "                this.alternatingKeysAndValues = Arrays.copyOf(this.alternatingKeysAndValues, ImmutableCollection.Builder.expandedCapacity(this.alternatingKeysAndValues.length, minCapacity * 2));\n",
          "                this.entriesUsed = false;\n",
          "            }\n",
          "        }\n",
          "\n",
          "        @CanIgnoreReturnValue\n"
        ],
        "line_number": 131,
        "start_line": 127,
        "end_line": 137
      },
      {
        "link": "https://github.com/mulesoft/mule-extensions-api/blob/42236d1413866f2e10f9cad7027877f7efcd2c57/mule-extensions-soap-api/src/main/java/org/mule/runtime/extension/api/soap/SoapAttributes.java\n",
        "code": [
          "  private static final long serialVersionUID = 4591210489306615571L;\n",
          "\n",
          "  private final Map<String, String> protocolHeaders;\n",
          "\n",
          "  public SoapAttributes(Map<String, String> protocolHeaders) {\n",
          "    this.protocolHeaders = protocolHeaders != null ? copyOf(protocolHeaders) : of();\n",
          "  }\n",
          "\n",
          "  /**\n",
          "   * @return a set of protocol headers bounded to the service response. i.e. HTTP Headers.\n",
          "   */\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      },
      {
        "link": "https://github.com/ChinthakaFG/analytics_java_main/blob/f113265adb3e9a537357eddb8723a03b983d9fbd/analytics-java-master/analytics-core/src/main/java/com/segment/analytics/messages/ImmutableMap.java\n",
        "code": [
          "    } catch (ClassNotFoundException ignored) {\n",
          "    }\n",
          "    return false;\n",
          "  }\n",
          "\n",
          "  static <K, V> Map<K, V> copyOf(Map<K, V> map) {\n",
          "    if (HAS_GUAVA) {\n",
          "      return com.google.common.collect.ImmutableMap.copyOf(map);\n",
          "    }\n",
          "\n",
          "    return Collections.unmodifiableMap(new LinkedHashMap<>(map));\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      },
      {
        "link": "https://github.com/analytics-java/analytics-java/blob/1e1277c9d9e16d0f42612a8bb92c0423763599d5/src/main/java/com/jiuzhilan/analytics/messages/ImmutableMap.java\n",
        "code": [
          "\t\t} catch (ClassNotFoundException ignored) {\n",
          "\t\t}\n",
          "\t\treturn false;\n",
          "\t}\n",
          "\n",
          "\tstatic <K, V> Map<K, V> copyOf(Map<K, V> map) {\n",
          "\t\tif (HAS_GUAVA) {\n",
          "\t\t\treturn com.google.common.collect.ImmutableMap.copyOf(map);\n",
          "\t\t}\n",
          "\n",
          "\t\treturn Collections.unmodifiableMap(new LinkedHashMap<>(map));\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      },
      {
        "link": "https://github.com/art-community/art-java/blob/eed223ce0f6b56c1751c9f6f42f9c20c581b7733/core/src/main/java/io/art/core/collection/ImmutableMapImplementation.java\n",
        "code": [
          "\n",
          "public class ImmutableMapImplementation<K, V> implements ImmutableMap<K, V> {\n",
          "    private final Map<K, V> map;\n",
          "\n",
          "    public ImmutableMapImplementation(Map<K, V> map) {\n",
          "        this.map = com.google.common.collect.ImmutableMap.copyOf(map);\n",
          "    }\n",
          "\n",
          "    public ImmutableMapImplementation(ImmutableMap<K, V> map) {\n",
          "        this.map = com.google.common.collect.ImmutableMap.copyOf(map.entrySet());\n",
          "    }\n"
        ],
        "line_number": 27,
        "start_line": 23,
        "end_line": 33
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/collect/ImmutableMap.java\n",
        "code": [
          "\n",
          "        private void ensureCapacity(int i) {\n",
          "            int i2 = i * 2;\n",
          "            Object[] objArr = this.alternatingKeysAndValues;\n",
          "            if (i2 > objArr.length) {\n",
          "                this.alternatingKeysAndValues = Arrays.copyOf(objArr, ImmutableCollection.Builder.expandedCapacity(objArr.length, i2));\n",
          "                this.entriesUsed = false;\n",
          "            }\n",
          "        }\n",
          "\n",
          "        @CanIgnoreReturnValue\n"
        ],
        "line_number": 136,
        "start_line": 132,
        "end_line": 142
      },
      {
        "link": "https://github.com/marcust/collections/blob/ac53047dbe5a3d570db835a1e9008434b3a3c2de/src/org/thiesen/collections/map/impl/ImmutableMap.java\n",
        "code": [
          "    private ImmutableMap( final com.google.common.collect.ImmutableMap<K, V> delegate ) {\n",
          "        _delegate = delegate;\n",
          "    }\n",
          "\n",
          "    @SuppressWarnings( \"unchecked\" )\n",
          "    public static <K,V> ImmutableMap<K,V> copyOf( final IMap<? extends K, ? extends V> map ) {\n",
          "        if ( map instanceof ImmutableMap<?,?> ) {\n",
          "            return (ImmutableMap<K, V>) map;\n",
          "        }\n",
          "        \n",
          "        return new ImmutableMap<K,V>( com.google.common.collect.ImmutableMap.<K, V>copyOf( map.asMapView() ) );\n"
        ],
        "line_number": 47,
        "start_line": 43,
        "end_line": 53
      },
      {
        "link": "https://github.com/segmentio/analytics-java/blob/5cc1606a4e883c27dee0a04ef11fddaeb8599682/analytics-core/src/main/java/com/segment/analytics/messages/ImmutableMap.java\n",
        "code": [
          "    } catch (ClassNotFoundException ignored) {\n",
          "    }\n",
          "    return false;\n",
          "  }\n",
          "\n",
          "  static <K, V> Map<K, V> copyOf(Map<K, V> map) {\n",
          "    if (HAS_GUAVA) {\n",
          "      return com.google.common.collect.ImmutableMap.copyOf(map);\n",
          "    }\n",
          "\n",
          "    return Collections.unmodifiableMap(new LinkedHashMap<>(map));\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      }
    ],
    "com.google.common.base.MoreObjects.toStringHelper": [
      {
        "link": "https://github.com/hashsdn/hashsdn-bgpcep/blob/3e0515187720677ae2b4e1208172fc29aa24c0cb/pcep/api/src/main/java/org/opendaylight/protocol/pcep/PCEPTerminationReason.java\n",
        "code": [
          "\n",
          "public abstract class PCEPTerminationReason {\n",
          "\n",
          "    @Override\n",
          "    public final String toString() {\n",
          "        return addToStringAttributes(MoreObjects.toStringHelper(this)).toString();\n",
          "    }\n",
          "\n",
          "    protected abstract ToStringHelper addToStringAttributes(ToStringHelper toStringHelper);\n",
          "\n",
          "    public abstract String getErrorMessage();\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 22
      },
      {
        "link": "https://github.com/perconik/perconik/blob/d80dc0c29df4e3faf318ee18adcaa8f03bb50aab/sk.stuba.fiit.perconik.activity/src/sk/stuba/fiit/perconik/activity/probes/AbstractProber.java\n",
        "code": [
          "    throw new ProbingException(message, failure);\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public String toString() {\n",
          "    return this.toStringHelper().toString();\n",
          "  }\n",
          "\n",
          "  protected ToStringHelper toStringHelper() {\n",
          "    ToStringHelper helper = MoreObjects.toStringHelper(this);\n",
          "\n"
        ],
        "line_number": 39,
        "start_line": 35,
        "end_line": 45
      },
      {
        "link": "https://github.com/facelesscory/controller/blob/50ade56ca46089b31b85dcd39fc9cb25c3964ccd/opendaylight/md-sal/sal-dom-spi/src/main/java/org/opendaylight/controller/sal/core/spi/data/AbstractDOMStoreTransaction.java\n",
        "code": [
          "        return debugContext;\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public final String toString() {\n",
          "        return addToStringAttributes(MoreObjects.toStringHelper(this)).toString();\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * Add class-specific toString attributes.\n",
          "     *\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 64
      },
      {
        "link": "https://github.com/hashsdn/hashsdn-controller/blob/0f7afdeb0b33a9f1fa3a5085c536e6c3b6aba862/opendaylight/md-sal/sal-dom-spi/src/main/java/org/opendaylight/controller/sal/core/spi/data/AbstractDOMStoreTransaction.java\n",
        "code": [
          "        return debugContext;\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public final String toString() {\n",
          "        return addToStringAttributes(MoreObjects.toStringHelper(this)).toString();\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * Add class-specific toString attributes.\n",
          "     *\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 64
      },
      {
        "link": "https://github.com/aiyamayaa/openflowplugin/blob/8e21cdd9dad2fae10d24849624d9e020e5582ca3/openflowplugin/src/main/java/org/opendaylight/openflowplugin/openflow/md/core/sal/convertor/common/ConvertorKey.java\n",
        "code": [
          "        return version == other.version && targetClazz.equals(other.targetClazz);\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public final String toString() {\n",
          "        return addToStringAttributes(MoreObjects.toStringHelper(this)).toString();\n",
          "    }\n",
          "\n",
          "    protected ToStringHelper addToStringAttributes(final ToStringHelper toStringHelper) {\n",
          "        return toStringHelper.add(\"version\", version).add(\"targetClazz\", targetClazz);\n",
          "    }\n"
        ],
        "line_number": 54,
        "start_line": 50,
        "end_line": 60
      },
      {
        "link": "https://github.com/aryantaheri/monitoring-controller/blob/2d62916cb1f4b4045f4fc38fbd313f8339f9ac67/opendaylight/md-sal/sal-dom-spi/src/main/java/org/opendaylight/controller/sal/core/spi/data/AbstractDOMStoreTransaction.java\n",
        "code": [
          "        return debugContext;\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public final String toString() {\n",
          "        return addToStringAttributes(MoreObjects.toStringHelper(this)).toString();\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * Add class-specific toString attributes.\n",
          "     *\n"
        ],
        "line_number": 57,
        "start_line": 53,
        "end_line": 63
      },
      {
        "link": "https://github.com/Evolveum/prism/blob/63cd25a2a623eeddeb28b25d71eb91a4a82ceee6/infra/axiom/src/main/java/com/evolveum/axiom/api/AbstractAxiomItem.java\n",
        "code": [
          "        return definition.name();\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public String toString() {\n",
          "        return MoreObjects.toStringHelper(AxiomItem.class)\n",
          "                .add(\"name\", name())\n",
          "                .add(\"values\", values())\n",
          "                .toString();\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 35,
        "start_line": 31,
        "end_line": 41
      },
      {
        "link": "https://github.com/sguclu/bluebank-atm-server/blob/208f2a578e8efcf82554b5a6ecf9ee97f4a2c734/src/main/java/org/bluebank/api/domain/AggregateRoot.java\n",
        "code": [
          "    @Override\n",
          "    public int hashCode() {\n",
          "        return Objects.hashCode(getId());\n",
          "    }\n",
          "\n",
          "    protected ToStringHelper toStringHelper() {\n",
          "        return MoreObjects.toStringHelper(this)\n",
          "                .add(\"id\", getId())\n",
          "                .add(\"uncommittedEvents\", uncommittedEvents)\n",
          "                .add(\"closed\", closed)\n",
          "                .add(\"version\", version);\n"
        ],
        "line_number": 65,
        "start_line": 61,
        "end_line": 71
      },
      {
        "link": "https://github.com/daisy/pipeline-mod-braille/blob/4aa40ac0c1106e6b8ff03e4dbe79967c90affa2a/common-utils/src/main/java/org/daisy/pipeline/braille/common/AbstractTransform.java\n",
        "code": [
          "\t\n",
          "\tpublic XProc asXProc() throws UnsupportedOperationException {\n",
          "\t\tthrow new UnsupportedOperationException();\n",
          "\t}\n",
          "\t\n",
          "\tpublic ToStringHelper toStringHelper() {\n",
          "\t\treturn MoreObjects.toStringHelper(this);\n",
          "\t}\n",
          "\t\n",
          "\t@Override\n",
          "\tpublic String toString() {\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "https://github.com/panjin-sz/work-study/blob/bcf25543bd5a3cc7b2fed963607035a600861bde/java-demo/src/main/java/com/panjin/guava/ObjectsTest.java\n",
        "code": [
          "public class ObjectsTest {\n",
          "\n",
          "\tpublic static void main(String[] args) {\n",
          "\t\tCustomerBase customer = new CustomerBase();\n",
          "\t\tcustomer.setCustomerName(\"alan\");\n",
          "\t\tToStringHelper helper = MoreObjects.toStringHelper(customer).add(\"name\", customer.getCustomerName());\n",
          "\t\tSystem.out.println(helper.toString());\n",
          "\t}\n",
          "\n",
          "}\n"
        ],
        "line_number": 11,
        "start_line": 7,
        "end_line": 16
      }
    ],
    "com.google.common.hash.Hashing.sha512": [
      {
        "link": "https://github.com/zhoujiagen/giant-data-analysis/blob/ffeede8654edda00b1539af81d5aae470fb84c98/data-management-infrastructure/infrastructure-commons/src/main/java/com/spike/giantdataanalysis/commons/support/IDs.java\n",
        "code": [
          "\n",
          "  public static String sha384(String input) {\n",
          "    return Hashing.sha384().hashString(input, DEFAULT_CHARSET).toString();\n",
          "  }\n",
          "\n",
          "  public static String sha512(String input) {\n",
          "    return Hashing.sha512().hashString(input, DEFAULT_CHARSET).toString();\n",
          "  }\n",
          "\n",
          "  public static String md5(String input) {\n",
          "    return Hashing.md5().hashString(input, DEFAULT_CHARSET).toString();\n"
        ],
        "line_number": 39,
        "start_line": 35,
        "end_line": 45
      },
      {
        "link": "https://github.com/Hotrook/Algorithm_analisys/blob/1211edeb3225e6b09d568564057bfeb2eb49fa24/2list_cardinality_estimation/src/main/java/com/hotrook/hashing/kMinHashing.java\n",
        "code": [
          "\n",
          "\t\tdouble result = convertToDouble(bits, 50);\n",
          "\t\treturn result;\n",
          "\t}\n",
          "\n",
          "\tpublic static double sha512(int k) {\n",
          "\t\tlong bits = com.google.common.hash.Hashing.sha512().hashLong(k).asLong();\n",
          "\n",
          "\t\tdouble result = convertToDouble(bits, 50);\n",
          "\t\treturn result;\n",
          "\t}\n"
        ],
        "line_number": 55,
        "start_line": 51,
        "end_line": 61
      },
      {
        "link": "https://github.com/kevsanders/PhotoTool/blob/a5a6b6dfed177448d5f70eadaa0d4b579855aabb/src/main/java/com/sandkev/PhotoTool/HashType.java\n",
        "code": [
          "    MURMUR3_32(murmur3_32()),\n",
          "    SIPHASH24(sipHash24()),\n",
          "    MD5(md5()),\n",
          "    SHA1(sha1()),\n",
          "    SHA256(sha256()),\n",
          "    SHA512(sha512()),\n",
          "    ADLER32(adler32()),\n",
          "    CRC32(crc32()),\n",
          "    CRC32C(crc32c());\n",
          "\n",
          "    private final HashFunction hashFunction;\n"
        ],
        "line_number": 30,
        "start_line": 26,
        "end_line": 36
      },
      {
        "link": "https://github.com/Hotrook/Algorithm_analisys/blob/1211edeb3225e6b09d568564057bfeb2eb49fa24/2list_cardinality_estimation/src/main/java/com/hotrook/hashing/hllHashing.java\n",
        "code": [
          "\t\tint bits = com.google.common.hash.Hashing.sha256().hashLong(k).asInt();\n",
          "\n",
          "\t\treturn bits;\n",
          "\t}\n",
          "\n",
          "\tpublic static int sha512(int k) {\n",
          "\t\tint bits = com.google.common.hash.Hashing.sha512().hashLong(k).asInt();\n",
          "\n",
          "\t\treturn bits;\n",
          "\t}\n",
          "\n"
        ],
        "line_number": 46,
        "start_line": 42,
        "end_line": 52
      },
      {
        "link": "https://github.com/DanySK/Protelis/blob/b1312d714464e07cc607d0f77a4f4094a7fff7a3/protelis/protelis-interpreter/src/test/java/org/protelis/test/TestHashingCodePathFactory.java\n",
        "code": [
          "    /**\n",
          "     * Ensures serializability of {@link HashingCodePathFactory}.\n",
          "     */\n",
          "    @Test\n",
          "    public void testSerialization() {\n",
          "        for (final HashFunction fun : ImmutableList.of(murmur3_128(), sha256(), sha384(), sha512(), crc32(), sipHash24())) {\n",
          "            assertNotNull(deserialize(serialize(new HashingCodePathFactory(fun))));\n",
          "        }\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 33
      },
      {
        "link": "https://github.com/payfort/payfort-java-sdk/blob/8dc9e5ab9a21b2e367a6be6fb3eb71accf0b49de/src/main/java/com/payfort/sdk/hash/HashingFunctions.java\n",
        "code": [
          " * *** In case you don't like to have guava in your classpath then set any implementation for hashing using {@link com.payfort.sdk.FortRequestConfiguration}\n",
          " */\n",
          "public enum HashingFunctions {\n",
          "\n",
          "    SHA_256((string, charset) -> sha256().hashString(string, charset).toString()),\n",
          "    SHA_512((string, charset) -> sha512().hashString(string, charset).toString());\n",
          "\n",
          "    private final HashingFunction hashingFunction;\n",
          "\n",
          "    HashingFunctions(HashingFunction hashingFunction) {\n",
          "        this.hashingFunction = hashingFunction;\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      },
      {
        "link": "https://github.com/Protelis/Protelis/blob/f5291d4479c760dd462d3f1786c693844a026f58/protelis/protelis-interpreter/src/test/java/org/protelis/test/TestHashingCodePathFactory.java\n",
        "code": [
          "    /**\n",
          "     * Ensures serializability of {@link HashingCodePathFactory}.\n",
          "     */\n",
          "    @Test\n",
          "    public void testSerialization() {\n",
          "        for (final HashFunction fun : ImmutableList.of(murmur3_128(), sha256(), sha384(), sha512(), crc32(), sipHash24())) {\n",
          "            assertNotNull(deserialize(serialize(new HashingCodePathFactory(fun))));\n",
          "        }\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 33
      },
      {
        "link": "https://github.com/CharLemAznable/complex-kits/blob/1876ca7e45b80f3c22b8993c0332e6c6f7c0103a/src/main/java/com/github/charlemaznable/core/codec/Digest.java\n",
        "code": [
          "        }\n",
          "    },\n",
          "    SHA512 {\n",
          "        @Override\n",
          "        protected final Hasher digestHasher() {\n",
          "            return sha512().newHasher();\n",
          "        }\n",
          "    },;\n",
          "\n",
          "    protected abstract Hasher digestHasher();\n",
          "\n"
        ],
        "line_number": 45,
        "start_line": 41,
        "end_line": 51
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/HashFunctionUtil.java\n",
        "code": [
          "*/ \n",
          "public static com.google.common.hash.HashFunction sha384(){\n",
          "\treturn com.google.common.hash.Hashing.sha384();\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.hash.Hashing#sha512()}\n",
          "*@see com.google.common.hash.Hashing#sha512()\n",
          "*<code>public static com.google.common.hash.HashFunction com.google.common.hash.Hashing.sha512()\n",
          "*sha512()</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 313,
        "start_line": 309,
        "end_line": 319
      },
      {
        "link": "https://github.com/landawn/abacus-common/blob/c2af5b84d666466311169c64d516506ca68b62b3/src/main/java/com/landawn/abacus/guava/hash/Hashing.java\n",
        "code": [
          "     * Returns a hash function implementing the SHA-512 algorithm (512 hash bits) by delegating to the\r\n",
          "     * SHA-512 {@link MessageDigest}.\r\n",
          "     *\r\n",
          "     * @return\r\n",
          "     */\r\n",
          "    public static HashFunction sha512() {\r\n",
          "        return Hash_Holder.SHA_512;\r\n",
          "    }\r\n",
          "\r\n",
          "    /**\r\n",
          "     * Returns a hash function implementing the Message Authentication Code (MAC) algorithm, using the\r\n"
        ],
        "line_number": 207,
        "start_line": 203,
        "end_line": 213
      }
    ],
    "com.google.common.io.Files.asCharSink": [
      {
        "link": "https://github.com/www6v/jDemo/blob/134a413bf7c77f30b36024f03c623af894852b52/src/main/java/javacore/file/AppendFile.java\n",
        "code": [
          "\n",
          "    public static void main(String args[]){\n",
          "        String path = \"D:\\\\temp\\\\appendFile.txt\";\n",
          "        File file = new File(path);\n",
          "        try {\n",
          "//            Files.asCharSink(file, Charsets.UTF_8).write(\"hhhh\");\n",
          "//\n",
          "//            String read = Files.asCharSource(file, Charsets.UTF_8).read();\n",
          "//            System.out.println(\"\u00e8\u00af\u00bb\u00e5\u008f\u0096: \" + read);\n",
          "\n",
          "            //\u00e8\u00bf\u00bd\u00e5\u008a\u00a0\u00e5\u0086\u0085"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      },
      {
        "link": "https://github.com/SmartDataAnalytics/DL-Learner/blob/6359c3e4ff7595d4758e6ba3c5e18698a8ad5324/components-core/src/main/java/org/dllearner/kb/repository/RepositoryDownloader.java\n",
        "code": [
          "                        sizeInMb = f.length() / (1024 * 1024);\n",
          "\n",
          "                        System.out.println(entry.getOntologyShortName() + \": \" + FileUtils.byteCountToDisplaySize(f.length()));\n",
          "                        map.put(entry.getOntologyShortName(), FileUtils.byteCountToDisplaySize(f.length()));\n",
          "                    } catch (Exception e) {\n",
          "                        com.google.common.io.Files.asCharSink(new File(downloadFailedDir, entry.getOntologyShortName() + \".txt\"),\n",
          "                                Charsets.UTF_8).write(ExceptionUtils.getMessage(e));\n",
          "                        return;\n",
          "                    }\n",
          "                }\n",
          "\n"
        ],
        "line_number": 91,
        "start_line": 87,
        "end_line": 97
      },
      {
        "link": "https://github.com/isi-vista/tac-kbp-eal/blob/be04ec06eb6a4e8dde4aef55a531b57ffea5c323/tac-kbp-eal/src/test/java/com/bbn/kbp/events2014/io/QueryStore2016IOTest.java\n",
        "code": [
          "\n",
          "  @Test\n",
          "  public void writeTest() throws IOException {\n",
          "    final File out = Files.createTempFile(\"tmp\", \"f\").toFile();\n",
          "    out.deleteOnExit();\n",
          "    writer.saveTo(fooStore, com.google.common.io.Files.asCharSink(out, Charsets.UTF_8));\n",
          "  }\n",
          "\n",
          "  @Test\n",
          "  public void writeReadTest() throws IOException {\n",
          "    final File out = Files.createTempFile(\"tmp\", \"f\").toFile();\n"
        ],
        "line_number": 50,
        "start_line": 46,
        "end_line": 56
      },
      {
        "link": "https://github.com/landawn/abacus-common/blob/c2af5b84d666466311169c64d516506ca68b62b3/src/main/java/com/landawn/abacus/guava/Files.java\n",
        "code": [
          "     * @param charset\r\n",
          "     * @param modes\r\n",
          "     * @return\r\n",
          "     */\r\n",
          "    @SafeVarargs\r\n",
          "    public static CharSink asCharSink(File file, Charset charset, FileWriteMode... modes) {\r\n",
          "        return com.google.common.io.Files.asCharSink(file, charset, modes);\r\n",
          "    }\r\n",
          "\r\n",
          "    /**\r\n",
          "     * As char sink.\r\n"
        ],
        "line_number": 150,
        "start_line": 146,
        "end_line": 156
      },
      {
        "link": "https://github.com/prestodb/presto-release-tools/blob/8c27a6746e946ebb1298c15228e4bd6d8964ed07/presto-release-tools/src/test/java/com/facebook/presto/release/git/TestingGitUtil.java\n",
        "code": [
          "            }\n",
          "            try {\n",
          "                String newPom = asCharSource(pomFile, UTF_8).read().replaceAll(\n",
          "                        Pattern.quote(format(\"<version>%s</version>\", releaseVersion.getNextMajorVersion().getSnapshotVersion())),\n",
          "                        format(\"<version>%s</version>\", releaseVersion.getSnapshotVersion()));\n",
          "                asCharSink(pomFile, UTF_8).write(newPom);\n",
          "            }\n",
          "            catch (IOException e) {\n",
          "                throw new UncheckedIOException(e);\n",
          "            }\n",
          "        };\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/CharsetUtil.java\n",
        "code": [
          "*/ \n",
          "public static void append(java.lang.CharSequence p0,java.io.File p1,java.nio.charset.Charset p2) throws java.io.IOException{\n",
          "\t com.google.common.io.Files.append(p0,p1,p2);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.io.Files#asCharSink(java.io.File,java.nio.charset.Charset,com.google.common.io.FileWriteMode...)}\n",
          "*@see com.google.common.io.Files#asCharSink(java.io.File,java.nio.charset.Charset,com.google.common.io.FileWriteMode...)\n",
          "*<code>public static com.google.common.io.CharSink com.google.common.io.Files.asCharSink(java.io.File,java.nio.charset.Charset,com.google.common.io.FileWriteMode...)\n",
          "*asCharSink(java.io.File p0,java.nio.charset.Charset p1,com.google.common.io.FileWriteMode... p2)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 27,
        "start_line": 23,
        "end_line": 33
      },
      {
        "link": "https://github.com/AdithyaBalasubramanian/KibanaFormatter/blob/1ce220e2130bfc0360571fb8c861b6f3aaec0b71/src/main/java/MainClass.java\n",
        "code": [
          "\r\n",
          "                if (next.contains(END_BRACES)) {\r\n",
          "                    next = next.replace(END_BRACES, \"\\n\");\r\n",
          "                }\r\n",
          "\r\n",
          "                Files.asCharSink(outputFile, defCharset, FileWriteMode.APPEND).write(next);\r\n",
          "                Files.asCharSink(outputFile, defCharset, FileWriteMode.APPEND).write(lineFeed);\r\n",
          "            }\r\n",
          "\r\n",
          "            System.out.println(new Date(System.currentTimeMillis()) + \"\\tFormatting complete\");\r\n",
          "\r\n"
        ],
        "line_number": 54,
        "start_line": 50,
        "end_line": 60
      },
      {
        "link": "https://github.com/BBN-E/tac-kbp-eal/blob/b620665402d7330963c442ad9e1c92589f9b63d4/tac-kbp-eal/src/test/java/com/bbn/kbp/events2014/io/QueryStore2016IOTest.java\n",
        "code": [
          "\n",
          "  @Test\n",
          "  public void writeTest() throws IOException {\n",
          "    final File out = Files.createTempFile(\"tmp\", \"f\").toFile();\n",
          "    out.deleteOnExit();\n",
          "    writer.saveTo(fooStore, com.google.common.io.Files.asCharSink(out, Charsets.UTF_8));\n",
          "  }\n",
          "\n",
          "  @Test\n",
          "  public void writeReadTest() throws IOException {\n",
          "    final File out = Files.createTempFile(\"tmp\", \"f\").toFile();\n"
        ],
        "line_number": 50,
        "start_line": 46,
        "end_line": 56
      },
      {
        "link": "https://github.com/telzhou618/java-demos/blob/21cbd326a9c4a75addf9916250e364e10922e91d/src/main/java/com/example/guava/FilesTest.java\n",
        "code": [
          "    public void test() throws Exception {\n",
          "        File file = new File(\"/tmp/test.txt\");\n",
          "        Files.touch(file);\n",
          "        log.info(file.getAbsolutePath());\n",
          "        // \u00e5\u0086\u0099\u00e6\u0096\u0087\u00e4\u00bb\u00b6\n",
          "        Files.asCharSink(file, Charsets.UTF_8).write(\"hello\");\n",
          "        // \u00e8\u00af\u00bb\u00e6\u0096\u0087\u00e4\u00bb\u00b6\n",
          "        log.info(Files.readLines(file, Charsets.UTF_8).toString());\n",
          "        // \u00e8\u00bf\u00bd\u00e5\u008a\u00a0\u00e6\u0096\u0087\u00e4\u00bb\u00b6\n",
          "        Files.asCharSink(file, Charsets.UTF_8, FileWriteMode.APPEND).write(\"world\");\n",
          "        // \u00e8\u00af\u00bb\u00e6\u0096\u0087\u00e4\u00bb\u00b6\n"
        ],
        "line_number": 30,
        "start_line": 26,
        "end_line": 36
      },
      {
        "link": "https://github.com/chengyu3075/courier/blob/afec78dcbbd9f0d434a5a2d51ca894643d892882/src/main/java/com/sandy/courier/common/util/FileUtil.java\n",
        "code": [
          "    public static void writeToFile(File file, String line, boolean append) throws IOException {\n",
          "        Preconditions.checkNotNull(file);\n",
          "        Preconditions.checkArgument(Strings.isNotBlank(line));\n",
          "        Preconditions.checkArgument(!file.isDirectory(), \"file is dir:\" + file.getName());\n",
          "        if (append) {\n",
          "            Files.asCharSink(file, Charsets.UTF_8, FileWriteMode.APPEND).write(line);\n",
          "        } else {\n",
          "            Files.asCharSink(file, Charsets.UTF_8).write(line);\n",
          "        }\n",
          "    }\n",
          "\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 40
      }
    ],
    "com.google.common.collect.Ordering.nullsFirst": [
      {
        "link": "https://github.com/Alfred1991/javaDemo/blob/3a490e457a906d823e176f4ab6609d401096f0a7/guawaDemo/src/main/java/org/xiaofengcanyue/basicutilities/Ordering.java\n",
        "code": [
          "        };\n",
          "    }\n",
          "\n",
          "    public static void chaining(com.google.common.collect.Ordering order){\n",
          "        order.reverse();\n",
          "        order.nullsFirst();\n",
          "        order.compound(new Comparator() {\n",
          "            public int compare(Object o1, Object o2) {\n",
          "                return 0;\n",
          "            }\n",
          "        });\n"
        ],
        "line_number": 42,
        "start_line": 38,
        "end_line": 48
      },
      {
        "link": "https://github.com/KualiCo/jute/blob/44b6d2bb2d74a9ac65a1ef4f0e78adc56f0d5687/src/main/java/org/kuali/common/jute/base/Orderings.java\n",
        "code": [
          "\n",
          "public final class Orderings {\n",
          "\n",
          "    private Orderings() {}\n",
          "\n",
          "    public static final Ordering<String> NULLS_FIRST = nullsFirst();\n",
          "    public static final Ordering<Integer> NULL_INTEGERS_FIRST = nullsFirst();\n",
          "\n",
          "    public static <T extends Comparable<T>> Ordering<T> nullsFirst() {\n",
          "        return natural().nullsFirst();\n",
          "    }\n"
        ],
        "line_number": 10,
        "start_line": 6,
        "end_line": 16
      },
      {
        "link": "https://github.com/hooj0/guava-example/blob/3c30cf3bcbd07310f8398eaffe6aefcc42da8435/src/java/main/com/cnblogs/hoojo/ordering/OrderingTest.java\n",
        "code": [
          "<tr>\r\n",
          "<td width=\"199\"><a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Ordering.html#reverse()\"><tt>reverse()</tt></a></td>\r\n",
          "<td width=\"419\">\u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e8\u00af\u00ad\u00e4\u00b9\u0089\u00e7\u009b\u00b8\u00e5\u008f\u008d\u00e7\u009a\u0084\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e5\u0099\u00a8</td>\r\n",
          "</tr>\r\n",
          "<tr>\r\n",
          "<td width=\"199\"><a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Ordering.html#nullsFirst()\"><tt>nullsFirst()</tt></a></td>\r\n",
          "<td width=\"419\">\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e5\u0099\u00a8\u00ef\u00bc\u008c\u00e4\u00bd\u0086\u00e9\u00a2\u009d\u00e5\u00a4\u0096\u00e6\u008a\u008anull\u00e5\u0080\u00bc\u00e6\u008e\u0092\u00e5\u0088\u00b0\u00e6\u009c\u0080\u00e5\u0089\u008d\u00e9\u009d\u00a2\u00e3\u0080\u0082</td>\r\n",
          "</tr>\r\n",
          "<tr>\r\n",
          "<td width=\"199\"><a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Ordering.html#nullsLast()\"><tt>nullsLast()</tt></a></td>\r\n",
          "<td width=\"419\">\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e5\u0099\u00a8\u00ef\u00bc\u008c\u00e4\u00bd\u0086\u00e9\u00a2\u009d\u00e5\u00a4\u0096\u00e6\u008a\u008anull\u00e5\u0080\u00bc\u00e6\u008e\u0092\u00e5\u0088\u00b0\u00e6\u009c\u0080\u00e5\u0090\u008e\u00e9\u009d\u00a2\u00e3\u0080\u0082</td>\r\n"
        ],
        "line_number": 50,
        "start_line": 46,
        "end_line": 56
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/collect/NullsLastOrdering.java\n",
        "code": [
          "        return this.ordering.compare(t, t2);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Ordering\n",
          "    public <S extends T> Ordering<S> reverse() {\n",
          "        return this.ordering.reverse().nullsFirst();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Ordering\n",
          "    public <S extends T> Ordering<S> nullsFirst() {\n",
          "        return this.ordering.nullsFirst();\n"
        ],
        "line_number": 37,
        "start_line": 33,
        "end_line": 43
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/collect/NaturalOrdering.java\n",
        "code": [
          "        Preconditions.checkNotNull(comparable2);\n",
          "        return comparable.compareTo(comparable2);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Ordering\n",
          "    public <S extends Comparable> Ordering<S> nullsFirst() {\n",
          "        Ordering<S> ordering = (Ordering<S>) this.nullsFirst;\n",
          "        if (ordering != null) {\n",
          "            return ordering;\n",
          "        }\n",
          "        Ordering<S> nullsFirst2 = super.nullsFirst();\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/collect/NullsLastOrdering.java\n",
        "code": [
          "        return this.ordering.compare(t, t2);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Ordering\n",
          "    public <S extends T> Ordering<S> reverse() {\n",
          "        return this.ordering.reverse().nullsFirst();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Ordering\n",
          "    public <S extends T> Ordering<S> nullsFirst() {\n",
          "        return this.ordering.nullsFirst();\n"
        ],
        "line_number": 35,
        "start_line": 31,
        "end_line": 41
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/collect/NaturalOrdering.java\n",
        "code": [
          "        Preconditions.checkNotNull(comparable2);\n",
          "        return comparable.compareTo(comparable2);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Ordering\n",
          "    public <S extends Comparable> Ordering<S> nullsFirst() {\n",
          "        Ordering<S> ordering = (Ordering<S>) this.nullsFirst;\n",
          "        if (ordering != null) {\n",
          "            return ordering;\n",
          "        }\n",
          "        Ordering<S> nullsFirst2 = super.nullsFirst();\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/collect/NullsLastOrdering.java\n",
        "code": [
          "        return this.ordering.compare(t, t2);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Ordering\n",
          "    public <S extends T> Ordering<S> reverse() {\n",
          "        return this.ordering.reverse().nullsFirst();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Ordering\n",
          "    public <S extends T> Ordering<S> nullsFirst() {\n",
          "        return this.ordering.nullsFirst();\n"
        ],
        "line_number": 37,
        "start_line": 33,
        "end_line": 43
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/collect/NaturalOrdering.java\n",
        "code": [
          "        Preconditions.checkNotNull(comparable2);\n",
          "        return comparable.compareTo(comparable2);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Ordering\n",
          "    public <S extends Comparable> Ordering<S> nullsFirst() {\n",
          "        Ordering<S> ordering = (Ordering<S>) this.nullsFirst;\n",
          "        if (ordering != null) {\n",
          "            return ordering;\n",
          "        }\n",
          "        Ordering<S> nullsFirst2 = super.nullsFirst();\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.deviceauthserver-DeviceAuthServer/sources/com/google/common/collect/NullsLastOrdering.java\n",
        "code": [
          "        return this.ordering.compare(left, right);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Ordering\n",
          "    public <S extends T> Ordering<S> reverse() {\n",
          "        return this.ordering.reverse().nullsFirst();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Ordering\n",
          "    public <S extends T> Ordering<S> nullsFirst() {\n",
          "        return this.ordering.nullsFirst();\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      }
    ],
    "com.alibaba.fastjson.JSON.parseObject": [
      {
        "link": "https://github.com/xlongwei/light4j/blob/f9b99c44bda4499bdeeaf47a417d1d51d23421af/src/main/java/apijson/JSON.java\n",
        "code": [
          "\t}\n",
          "\t/**obj\u00e8\u00bd\u00acJSONObject\n",
          "\t * @param json\n",
          "\t * @return\n",
          "\t */\n",
          "\tpublic static JSONObject parseObject(Object obj) {\n",
          "\t\tif (obj instanceof JSONObject) {\n",
          "\t\t\treturn (JSONObject) obj;\n",
          "\t\t}\n",
          "\t\treturn parseObject(toJSONString(obj));\n",
          "\t}\n"
        ],
        "line_number": 120,
        "start_line": 116,
        "end_line": 126
      },
      {
        "link": "https://github.com/hailongfeng/XiaoShiZi/blob/264f94156f9fa1d85d599f10a7ff39a9796a7d9a/ZBLibrary/src/main/java/zuo/biao/library/util/JSON.java\n",
        "code": [
          "\t\n",
          "\t/**\n",
          "\t * @param s\n",
          "\t * @return\n",
          "\t */\n",
          "\tpublic static JSONObject parseObject(Object obj) {\n",
          "\t\treturn parseObject(toJSONString(obj));\n",
          "\t}\n",
          "\t/**json\u00e8\u00bd\u00acJSONObject\n",
          "\t * @param json\n",
          "\t * @return\n"
        ],
        "line_number": 53,
        "start_line": 49,
        "end_line": 59
      },
      {
        "link": "https://github.com/wujun728/jun_spring_plugin/blob/f2deb5889d76499c4535bb6664efa95a4402cf63/jun_ssh_api/apijson/src/main/java/apijson/JSON.java\n",
        "code": [
          "\t}\n",
          "\t/**obj\u00e8\u00bd\u00acJSONObject\n",
          "\t * @param json\n",
          "\t * @return\n",
          "\t */\n",
          "\tpublic static JSONObject parseObject(Object obj) {\n",
          "\t\tif (obj instanceof JSONObject) {\n",
          "\t\t\treturn (JSONObject) obj;\n",
          "\t\t}\n",
          "\t\treturn parseObject(toJSONString(obj));\n",
          "\t}\n"
        ],
        "line_number": 81,
        "start_line": 77,
        "end_line": 87
      },
      {
        "link": "https://github.com/wujun728/jun_spring_plugin/blob/f2deb5889d76499c4535bb6664efa95a4402cf63/jun_ssh_api/apijson/APIJSON/APIJSONORM/src/main/java/apijson/JSON.java\n",
        "code": [
          "\t}\n",
          "\t/**obj\u00e8\u00bd\u00acJSONObject\n",
          "\t * @param json\n",
          "\t * @return\n",
          "\t */\n",
          "\tpublic static JSONObject parseObject(Object obj) {\n",
          "\t\tif (obj instanceof JSONObject) {\n",
          "\t\t\treturn (JSONObject) obj;\n",
          "\t\t}\n",
          "\t\treturn parseObject(toJSONString(obj));\n",
          "\t}\n"
        ],
        "line_number": 81,
        "start_line": 77,
        "end_line": 87
      },
      {
        "link": "https://github.com/kehao-study/apijson_compile/blob/a758f7d8819ccd447ef09241e6d7b339d63eb56b/src/main/java/apijson/JSON.java\n",
        "code": [
          "\t}\n",
          "\t/**obj\u00e8\u00bd\u00acJSONObject\n",
          "\t * @param json\n",
          "\t * @return\n",
          "\t */\n",
          "\tpublic static JSONObject parseObject(Object obj) {\n",
          "\t\tif (obj instanceof JSONObject) {\n",
          "\t\t\treturn (JSONObject) obj;\n",
          "\t\t}\n",
          "\t\treturn parseObject(toJSONString(obj));\n",
          "\t}\n"
        ],
        "line_number": 81,
        "start_line": 77,
        "end_line": 87
      },
      {
        "link": "https://github.com/APIJSON/apijson-orm/blob/9f8b272138c807543a3532476bf4e1421bf46417/src/main/java/apijson/JSON.java\n",
        "code": [
          "\t}\n",
          "\t/**obj\u00e8\u00bd\u00acJSONObject\n",
          "\t * @param json\n",
          "\t * @return\n",
          "\t */\n",
          "\tpublic static JSONObject parseObject(Object obj) {\n",
          "\t\tif (obj instanceof JSONObject) {\n",
          "\t\t\treturn (JSONObject) obj;\n",
          "\t\t}\n",
          "\t\treturn parseObject(toJSONString(obj));\n",
          "\t}\n"
        ],
        "line_number": 81,
        "start_line": 77,
        "end_line": 87
      },
      {
        "link": "https://github.com/chaimengbing/kfc/blob/460f5d115ffaffdcaffc77c09c6c435daf2157ce/HardwareService/src/main/java/com/auv/utils/JSONUtils.java\n",
        "code": [
          "\n",
          "    /**\n",
          "     * @param obj\n",
          "     * @return\n",
          "     */\n",
          "    public static JSONObject parseObject(Object obj) {\n",
          "        return parseObject( toJSONString( obj ) );\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * json\u00e8\u00bd\u00acJSONObject\n"
        ],
        "line_number": 61,
        "start_line": 57,
        "end_line": 67
      },
      {
        "link": "https://github.com/aYIfseec/MyPoetry/blob/feb39ecd20537dd181c554226124911b42d89a6a/ZBLibrary/src/main/java/zuo/biao/library/util/JSON.java\n",
        "code": [
          "\t\n",
          "\t/**\n",
          "\t * @param s\n",
          "\t * @return\n",
          "\t */\n",
          "\tpublic static JSONObject parseObject(Object obj) {\n",
          "\t\treturn parseObject(toJSONString(obj));\n",
          "\t}\n",
          "\t/**json\u00e8\u00bd\u00acJSONObject\n",
          "\t * @param json\n",
          "\t * @return\n"
        ],
        "line_number": 53,
        "start_line": 49,
        "end_line": 59
      },
      {
        "link": "https://github.com/wujun728/jun_spring_plugin/blob/f2deb5889d76499c4535bb6664efa95a4402cf63/jun_ssh_api/apijson/APIJSON-Demo/APIJSON-Android/APIJSONApp/ZBLibrary/src/main/java/zuo/biao/library/util/JSON.java\n",
        "code": [
          "\n",
          "\t/**\n",
          "\t * @param s\n",
          "\t * @return\n",
          "\t */\n",
          "\tpublic static JSONObject parseObject(Object obj) {\n",
          "\t\treturn parseObject(toJSONString(obj));\n",
          "\t}\n",
          "\t/**json\u00e8\u00bd\u00acJSONObject\n",
          "\t * @param json\n",
          "\t * @return\n"
        ],
        "line_number": 53,
        "start_line": 49,
        "end_line": 59
      },
      {
        "link": "https://github.com/rainboy-learn/apijson-learn/blob/c16f1ad6a4786e726fece2b155b8673b89f08091/src/main/java/apijson/JSON.java\n",
        "code": [
          "\t}\n",
          "\t/**obj\u00e8\u00bd\u00acJSONObject\n",
          "\t * @param json\n",
          "\t * @return\n",
          "\t */\n",
          "\tpublic static JSONObject parseObject(Object obj) {\n",
          "\t\tif (obj instanceof JSONObject) {\n",
          "\t\t\treturn (JSONObject) obj;\n",
          "\t\t}\n",
          "\t\treturn parseObject(toJSONString(obj));\n",
          "\t}\n"
        ],
        "line_number": 81,
        "start_line": 77,
        "end_line": 87
      }
    ],
    "com.alibaba.fastjson.parser.DefaultJSONParser.parseObject": [
      {
        "link": "https://github.com/sealuzh/dynamic-performance-replication/blob/f89b4dd1143de282cd590311f0315f59c9c7143a/generated-tests/adynamosa/tests/s1044/23_fastjson/evosuite-tests/com/alibaba/fastjson/parser/DefaultJSONParser_ESTest.java\n",
        "code": [
          "  public void test008()  throws Throwable  {\n",
          "      DefaultJSONParser defaultJSONParser0 = new DefaultJSONParser(\"gcy6RuOL0~~L`\");\n",
          "      ZoneOffset zoneOffset0 = ZoneOffset.ofHours(0);\n",
          "      // Undeclared exception!\n",
          "      try { \n",
          "        defaultJSONParser0.parseObject((Object) zoneOffset0);\n",
          "        fail(\"Expecting exception: RuntimeException\");\n",
          "      \n",
          "      } catch(RuntimeException e) {\n",
          "         //\n",
          "         // syntax error, expect {, actual error\n"
        ],
        "line_number": 209,
        "start_line": 205,
        "end_line": 215
      },
      {
        "link": "https://github.com/sealuzh/dynamic-performance-replication/blob/f89b4dd1143de282cd590311f0315f59c9c7143a/generated-tests/dynamosa/tests/s1046/23_fastjson/evosuite-tests/com/alibaba/fastjson/parser/DefaultJSONParser_ESTest.java\n",
        "code": [
          "  @Test(timeout = 4000)\n",
          "  public void test010()  throws Throwable  {\n",
          "      DefaultJSONParser defaultJSONParser0 = new DefaultJSONParser(\"\");\n",
          "      // Undeclared exception!\n",
          "      try { \n",
          "        defaultJSONParser0.parseObject((Object) \"java.lang.String@0000000006\");\n",
          "        fail(\"Expecting exception: RuntimeException\");\n",
          "      \n",
          "      } catch(RuntimeException e) {\n",
          "         //\n",
          "         // syntax error, expect {, actual EOF\n"
        ],
        "line_number": 209,
        "start_line": 205,
        "end_line": 215
      },
      {
        "link": "https://github.com/sealuzh/dynamic-performance-replication/blob/f89b4dd1143de282cd590311f0315f59c9c7143a/generated-tests/adynamosa/tests/s1033/23_fastjson/evosuite-tests/com/alibaba/fastjson/parser/DefaultJSONParser_ESTest.java\n",
        "code": [
          "      JSONScanner jSONScanner0 = new JSONScanner(\"q9;0DoV<\");\n",
          "      jSONScanner0.nextToken();\n",
          "      ParserConfig parserConfig0 = new ParserConfig(false);\n",
          "      DefaultJSONParser defaultJSONParser0 = new DefaultJSONParser((Object) null, jSONScanner0, parserConfig0);\n",
          "      Class<Object> class0 = Object.class;\n",
          "      defaultJSONParser0.parseObject(class0);\n",
          "      // Undeclared exception!\n",
          "      try { \n",
          "        defaultJSONParser0.close();\n",
          "        fail(\"Expecting exception: RuntimeException\");\n",
          "      \n"
        ],
        "line_number": 120,
        "start_line": 116,
        "end_line": 126
      },
      {
        "link": "https://github.com/sealuzh/dynamic-performance-replication/blob/f89b4dd1143de282cd590311f0315f59c9c7143a/generated-tests/adynamosa/tests/s1006/23_fastjson/evosuite-tests/com/alibaba/fastjson/parser/DefaultJSONParser_ESTest.java\n",
        "code": [
          "\n",
          "  @Test(timeout = 4000)\n",
          "  public void test006()  throws Throwable  {\n",
          "      DefaultJSONParser defaultJSONParser0 = new DefaultJSONParser(\"}[d@8\u007fi1\");\n",
          "      Class<JSONObject> class0 = JSONObject.class;\n",
          "      JSONObject jSONObject0 = defaultJSONParser0.parseObject(class0);\n",
          "      Collator collator0 = Collator.getInstance(jSONObject0.defaultLocale);\n",
          "      Byte byte0 = new Byte((byte)38);\n",
          "      ParseContext parseContext0 = defaultJSONParser0.setContext((Object) collator0, (Object) byte0);\n",
          "      defaultJSONParser0.setContext(parseContext0, (Object) byte0, (Object) byte0);\n",
          "      Object object0 = defaultJSONParser0.getObject(\"TOD4\");\n"
        ],
        "line_number": 168,
        "start_line": 164,
        "end_line": 174
      },
      {
        "link": "https://github.com/sealuzh/dynamic-performance-replication/blob/f89b4dd1143de282cd590311f0315f59c9c7143a/generated-tests/adynamosa/tests/s1039/23_fastjson/evosuite-tests/com/alibaba/fastjson/parser/DefaultJSONParser_ESTest.java\n",
        "code": [
          "\n",
          "  @Test(timeout = 4000)\n",
          "  public void test005()  throws Throwable  {\n",
          "      DefaultJSONParser defaultJSONParser0 = new DefaultJSONParser(\"}r\");\n",
          "      Byte byte0 = new Byte((byte)71);\n",
          "      Object object0 = defaultJSONParser0.parseObject((Map) null, (Object) byte0);\n",
          "      assertNull(object0);\n",
          "  }\n",
          "\n",
          "  @Test(timeout = 4000)\n",
          "  public void test006()  throws Throwable  {\n"
        ],
        "line_number": 167,
        "start_line": 163,
        "end_line": 173
      },
      {
        "link": "https://github.com/sealuzh/dynamic-performance-replication/blob/f89b4dd1143de282cd590311f0315f59c9c7143a/generated-tests/adynamosa/tests/s1023/23_fastjson/evosuite-tests/com/alibaba/fastjson/parser/DefaultJSONParser_ESTest.java\n",
        "code": [
          "      DefaultJSONParser defaultJSONParser0 = new DefaultJSONParser(\"parse number key error\", parserConfig0);\n",
          "      Class<DecimalFormat> class0 = DecimalFormat.class;\n",
          "      ThrowableDeserializer throwableDeserializer0 = new ThrowableDeserializer(parserConfig0, class0);\n",
          "      // Undeclared exception!\n",
          "      try { \n",
          "        defaultJSONParser0.parseObject((Object) throwableDeserializer0);\n",
          "        fail(\"Expecting exception: RuntimeException\");\n",
          "      \n",
          "      } catch(RuntimeException e) {\n",
          "         //\n",
          "         // syntax error, expect {, actual error\n"
        ],
        "line_number": 241,
        "start_line": 237,
        "end_line": 247
      },
      {
        "link": "https://github.com/sealuzh/dynamic-performance-replication/blob/f89b4dd1143de282cd590311f0315f59c9c7143a/generated-tests/adynamosa/tests/s1004/23_fastjson/evosuite-tests/com/alibaba/fastjson/parser/DefaultJSONParser_ESTest.java\n",
        "code": [
          "      DefaultJSONParser defaultJSONParser0 = new DefaultJSONParser(\"{\\\"$ref\\\":\\\"..\\\"}\");\n",
          "      defaultJSONParser0.parse();\n",
          "      Class<Properties> class0 = Properties.class;\n",
          "      // Undeclared exception!\n",
          "      try { \n",
          "        defaultJSONParser0.parseObject(class0);\n",
          "        fail(\"Expecting exception: RuntimeException\");\n",
          "      \n",
          "      } catch(RuntimeException e) {\n",
          "         //\n",
          "         // syntax error, expect {, actual EOF, pos 0, json : {\\\"$ref\\\":\\\"..\\\"}\n"
        ],
        "line_number": 158,
        "start_line": 154,
        "end_line": 164
      },
      {
        "link": "https://github.com/sealuzh/dynamic-performance-replication/blob/f89b4dd1143de282cd590311f0315f59c9c7143a/generated-tests/adynamosa/tests/s1001/23_fastjson/evosuite-tests/com/alibaba/fastjson/parser/DefaultJSONParser_ESTest.java\n",
        "code": [
          "      ASMDeserializerFactory aSMDeserializerFactory0 = new ASMDeserializerFactory(classLoader0);\n",
          "      ParserConfig parserConfig0 = new ParserConfig(aSMDeserializerFactory0.classLoader);\n",
          "      DefaultJSONParser defaultJSONParser0 = new DefaultJSONParser(collator0, jSONScanner0, parserConfig0);\n",
          "      // Undeclared exception!\n",
          "      try { \n",
          "        defaultJSONParser0.parseObject((Object) aSMDeserializerFactory0.classLoader);\n",
          "        fail(\"Expecting exception: RuntimeException\");\n",
          "      \n",
          "      } catch(RuntimeException e) {\n",
          "         //\n",
          "         // syntax error, expect {, actual EOF\n"
        ],
        "line_number": 182,
        "start_line": 178,
        "end_line": 188
      },
      {
        "link": "https://github.com/sealuzh/dynamic-performance-replication/blob/f89b4dd1143de282cd590311f0315f59c9c7143a/generated-tests/adynamosa/tests/s1035/23_fastjson/evosuite-tests/com/alibaba/fastjson/parser/DefaultJSONParser_ESTest.java\n",
        "code": [
          "      ParserConfig parserConfig0 = ParserConfig.global;\n",
          "      DefaultJSONParser defaultJSONParser0 = new DefaultJSONParser(charArray0, 1, parserConfig0, (-3303));\n",
          "      DefaultJSONParser defaultJSONParser1 = new DefaultJSONParser(defaultJSONParser0.lexer, parserConfig0);\n",
          "      // Undeclared exception!\n",
          "      try { \n",
          "        defaultJSONParser1.parseObject();\n",
          "        fail(\"Expecting exception: RuntimeException\");\n",
          "      \n",
          "      } catch(RuntimeException e) {\n",
          "         //\n",
          "         // syntax error, expect {, actual EOF, pos 0, json : ~\n"
        ],
        "line_number": 160,
        "start_line": 156,
        "end_line": 166
      },
      {
        "link": "https://github.com/sealuzh/dynamic-performance-replication/blob/f89b4dd1143de282cd590311f0315f59c9c7143a/generated-tests/adynamosa/tests/s1032/23_fastjson/evosuite-tests/com/alibaba/fastjson/parser/DefaultJSONParser_ESTest.java\n",
        "code": [
          "      ParserConfig parserConfig0 = ParserConfig.global;\n",
          "      DefaultJSONParser defaultJSONParser0 = new DefaultJSONParser(\"\", parserConfig0, (-832));\n",
          "      Dimension dimension0 = new Dimension(56, (-832));\n",
          "      // Undeclared exception!\n",
          "      try { \n",
          "        defaultJSONParser0.parseObject((Object) dimension0);\n",
          "        fail(\"Expecting exception: RuntimeException\");\n",
          "      \n",
          "      } catch(RuntimeException e) {\n",
          "         //\n",
          "         // syntax error, expect {, actual EOF\n"
        ],
        "line_number": 169,
        "start_line": 165,
        "end_line": 175
      }
    ],
    "com.google.common.collect.MapMaker.weakKeys": [
      {
        "link": "https://github.com/Akarin-project/AkarinForge/blob/2804aa89e3c058d7db196424811beeac5622f6fd/sources/server/src/main/java/io/akarin/forge/executor/asm/SafeClassDefiner.java\n",
        "code": [
          "import java.util.function.Function;\n",
          "\n",
          "public class SafeClassDefiner\n",
          "implements ClassDefiner {\n",
          "    static final SafeClassDefiner INSTANCE = new SafeClassDefiner();\n",
          "    private final ConcurrentMap<ClassLoader, GeneratedClassLoader> loaders = new MapMaker().weakKeys().makeMap();\n",
          "\n",
          "    private SafeClassDefiner() {\n",
          "    }\n",
          "\n",
          "    /*\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/Eliminater74/com.google.android.tvlauncher/blob/e8284f9970d77a05042a57e9c2173856af7c4246/saved/sources/com/google/common/collect/Interners.java\n",
        "code": [
          "            return this;\n",
          "        }\n",
          "\n",
          "        public <E> Interner<E> build() {\n",
          "            if (!this.strong) {\n",
          "                this.mapMaker.weakKeys();\n",
          "            }\n",
          "            return new InternerImpl(this.mapMaker);\n",
          "        }\n",
          "    }\n",
          "\n"
        ],
        "line_number": 43,
        "start_line": 39,
        "end_line": 49
      },
      {
        "link": "https://github.com/bootstraponline/android_broken_poc/blob/7d03d4aa213e557884ed9dc66b8777e511e7d49f/BasicSample/app/src/main/java/io/appium/uiautomator2/server/AndroidElementsHash.java\n",
        "code": [
          "\n",
          "import java.util.Map;\n",
          "\n",
          "public abstract class AndroidElementsHash {\n",
          "    // Use weak hash map from Guava.\n",
          "    private final Map<Integer, AndroidElement> elements = new MapMaker().weakKeys().makeMap();\n",
          "\n",
          "    public AndroidElement addElement(AndroidElement element) {\n",
          "        elements.put(element.getId(), element);\n",
          "        return element;\n",
          "    }\n"
        ],
        "line_number": 8,
        "start_line": 4,
        "end_line": 14
      },
      {
        "link": "https://github.com/jwne/Yggdrasil/blob/fe228387656fdd7a3804736a2b8d05dc34c5b235/src/main/java/com/captainbern/yggdrasil/collection/PlayerHashMap.java\n",
        "code": [
          "\n",
          "    /**\n",
          "     * Construct a new player-based concurrent hash map.\n",
          "     */\n",
          "    public PlayerHashMap() {\n",
          "        this.delegate = new MapMaker().weakKeys().makeMap();\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * Construct a new player-based concurrent hash map.\n",
          "     * @param concurrencyLevel - guides the allowed concurrency among update operations.\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      },
      {
        "link": "https://github.com/kcjk/tap/blob/f238c486cb2fbd3be06c11a065c7898b1d20072a/v1_12_R1/src/main/java/com/nemosw/spigot/tap/v1_12_R1/world/NMSWorldSupport.java\n",
        "code": [
          "    public static NMSWorldSupport getInstance()\n",
          "    {\n",
          "        return instance.get();\n",
          "    }\n",
          "\n",
          "    private final Map<World, NMSWorld> worlds = new MapMaker().weakKeys().weakValues().makeMap();\n",
          "\n",
          "\tprivate final Map<Chunk, NMSChunk> chunks = new MapMaker().weakKeys().weakValues().makeMap();\n",
          "\n",
          "\t@Override\n",
          "\tpublic NMSWorld fromWorld(org.bukkit.World world)\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "https://github.com/georgeto/g3dit/blob/1c6fec351e10c73221a48c5021a871c954c392e2/g3dit/src/main/java/de/george/g3dit/util/event/HolderEventList.java\n",
        "code": [
          "import java.util.function.Consumer;\n",
          "\n",
          "import com.google.common.collect.MapMaker;\n",
          "\n",
          "public class HolderEventList<T> {\n",
          "\tprivate Map<Object, Set<Consumer<T>>> listeners = new MapMaker().weakKeys().makeMap();\n",
          "\n",
          "\tpublic void addListener(Object holder, Consumer<T> listener) {\n",
          "\t\tif (!listeners.containsKey(holder)) {\n",
          "\t\t\tlisteners.put(holder, new HashSet<>());\n",
          "\t\t}\n"
        ],
        "line_number": 10,
        "start_line": 6,
        "end_line": 16
      },
      {
        "link": "https://github.com/zhilien-tech/zhiliren-we/blob/2df7ed63a530c8546d9d901ff13a980d2df42ba7/we-test-parent/we-test-demo/src/main/java/org/zxc/guava/collection/UseMapMaker.java\n",
        "code": [
          " */\r\n",
          "public class UseMapMaker {\r\n",
          "\r\n",
          "\t@Test\r\n",
          "\tpublic void testWeakKeys() throws Exception {\r\n",
          "\t\tConcurrentMap<String, String> map = new MapMaker().weakKeys() // \u00e6\u008c\u0087\u00e5\u00ae\u009aMap\u00e4\u00bf\u009d\u00e5\u00ad\u0098\u00e7\u009a\u0084Key\u00e4\u00b8\u00baWeakReference\u00e6\u009c\u00ba\u00e5\u0088\u00b6  \r\n",
          "\t\t\t\t.makeMap();\r\n",
          "\r\n",
          "\t\tString key = \"key\";\r\n",
          "\t\tmap.put(key, \"value\"); // \u00e5\u008a\u00a0\u00e5\u0085",
          "\u00a5\u00e5\u0085"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "https://github.com/zhilirentech/zhiliren-we/blob/ab969fafc617891f46d0a36130157248f932d4af/we-test-parent/we-test-demo/src/main/java/org/zxc/guava/collection/UseMapMaker.java\n",
        "code": [
          " */\n",
          "public class UseMapMaker {\n",
          "\n",
          "\t@Test\n",
          "\tpublic void testWeakKeys() throws Exception {\n",
          "\t\tConcurrentMap<String, String> map = new MapMaker().weakKeys() // \u00e6\u008c\u0087\u00e5\u00ae\u009aMap\u00e4\u00bf\u009d\u00e5\u00ad\u0098\u00e7\u009a\u0084Key\u00e4\u00b8\u00baWeakReference\u00e6\u009c\u00ba\u00e5\u0088\u00b6  \n",
          "\t\t\t\t.makeMap();\n",
          "\n",
          "\t\tString key = \"key\";\n",
          "\t\tmap.put(key, \"value\"); // \u00e5\u008a\u00a0\u00e5\u0085",
          "\u00a5\u00e5\u0085"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "https://github.com/DimitriBurve/FlowDroid_NumberLeaksXML/blob/1a2ab1c48015741fe2836047893b3d9b7e4491d9/soot-infoflow/src/soot/jimple/infoflow/collect/WeakConcurrentHashSet.java\n",
        "code": [
          "    \n",
          "    /**\n",
          "     * Creates a new, empty ConcurrentHashSet. \n",
          "     */\n",
          "    public WeakConcurrentHashSet() {\n",
          "        delegate = new MapMaker().weakKeys().concurrencyLevel\n",
          "        \t\t(Runtime.getRuntime().availableProcessors()).makeMap();\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public int size() {\n"
        ],
        "line_number": 23,
        "start_line": 19,
        "end_line": 29
      },
      {
        "link": "https://github.com/Eliminater74/com.google.android.tvlauncher/blob/e8284f9970d77a05042a57e9c2173856af7c4246/src/main/java/com/google/common/collect/Interners.java\n",
        "code": [
          "            return this;\n",
          "        }\n",
          "\n",
          "        public <E> Interner<E> build() {\n",
          "            if (!this.strong) {\n",
          "                this.mapMaker.weakKeys();\n",
          "            }\n",
          "            return new InternerImpl(this.mapMaker);\n",
          "        }\n",
          "    }\n",
          "\n"
        ],
        "line_number": 43,
        "start_line": 39,
        "end_line": 49
      }
    ],
    "com.google.common.cache.CacheBuilder.weakKeys": [
      {
        "link": "https://github.com/shansun123/sparrow/blob/5eae1d009717f8eb64f90a22ac9b54a440ff0771/src/main/java/com/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic <K1, V1> com.google.common.cache.CacheBuilder<K1, V1> weigher(Weigher<? super K1, ? super V1> weigher) {\n",
          "\t\treturn builder.weigher(weigher);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> weakKeys() {\n",
          "\t\treturn builder.weakKeys();\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> weakValues() {\n",
          "\t\treturn builder.weakValues();\n"
        ],
        "line_number": 55,
        "start_line": 51,
        "end_line": 61
      },
      {
        "link": "https://github.com/zqhxuyuan/tutorials/blob/72740ec130a15331b0b2428b9750099c47073052/zava/src/main/java/com/github/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic <K1, V1> com.google.common.cache.CacheBuilder<K1, V1> weigher(Weigher<? super K1, ? super V1> weigher) {\n",
          "\t\treturn builder.weigher(weigher);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> weakKeys() {\n",
          "\t\treturn builder.weakKeys();\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> weakValues() {\n",
          "\t\treturn builder.weakValues();\n"
        ],
        "line_number": 55,
        "start_line": 51,
        "end_line": 61
      },
      {
        "link": "https://github.com/bigstickpolicies/JMTF/blob/312e1c685d0c552481fad3549db11a9fb3ba0ee8/src/main/java/core/ObjectResourceManager.java\n",
        "code": [
          "import com.google.common.cache.CacheBuilder;\n",
          "\n",
          "public class ObjectResourceManager {\n",
          "    private Cache<Object,ObjectResource> cache;\n",
          "    public ObjectResourceManager() {\n",
          "        cache = CacheBuilder.newBuilder().weakKeys().build();\n",
          "    }\n",
          "    public <T> ObjectResource<T> getResource(T o) {\n",
          "        //returns null if no object.\n",
          "        ObjectResource r=cache.getIfPresent(o);\n",
          "        if(r!=null) {\n"
        ],
        "line_number": 8,
        "start_line": 4,
        "end_line": 14
      },
      {
        "link": "https://github.com/zqhxuyuan/zava/blob/707691039b7aff8f4129e2b25d08b374610990e5/src/main/java/com/github/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic <K1, V1> com.google.common.cache.CacheBuilder<K1, V1> weigher(Weigher<? super K1, ? super V1> weigher) {\n",
          "\t\treturn builder.weigher(weigher);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> weakKeys() {\n",
          "\t\treturn builder.weakKeys();\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> weakValues() {\n",
          "\t\treturn builder.weakValues();\n"
        ],
        "line_number": 55,
        "start_line": 51,
        "end_line": 61
      },
      {
        "link": "https://github.com/Gilded-Games/OrbisLib/blob/147af30f2d7ff854c7bdbb4cc47d4e55db24d728/src/main/java/com/gildedgames/orbis/lib/util/cache/FileSystemCacheBuilder.java\n",
        "code": [
          "\t\tthis.underlyingCacheBuilder.softValues();\n",
          "\t\treturn this;\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * {@link com.google.common.cache.CacheBuilder#weakKeys()}\n",
          "\t */\n",
          "\tpublic FileSystemCacheBuilder<K, V> weakKeys()\n",
          "\t{\n",
          "\t\tthis.underlyingCacheBuilder.weakKeys();\n",
          "\t\treturn this;\n"
        ],
        "line_number": 152,
        "start_line": 148,
        "end_line": 158
      },
      {
        "link": "https://github.com/raphw/guava-cache-overflow-extension/blob/befa47bb955ffa9f344b44e8621290d65e6592d2/src/main/java/com/blogspot/mydailyjava/guava/cache/overflow/FileSystemCacheBuilder.java\n",
        "code": [
          "        underlyingCacheBuilder.softValues();\n",
          "        return this;\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.cache.CacheBuilder#weakKeys()}\n",
          "     */\n",
          "    public FileSystemCacheBuilder<K, V> weakKeys() {\n",
          "        underlyingCacheBuilder.weakKeys();\n",
          "        return this;\n",
          "    }\n"
        ],
        "line_number": 123,
        "start_line": 119,
        "end_line": 129
      },
      {
        "link": "https://github.com/Braj65/Sandbox/blob/ab7d5de63d65a120b264e3dc3219fbead1930a03/ScaleConcepts/src/main/java/designCache/guavaToDIsk/FileSystemCacheBuilder.java\n",
        "code": [
          "        underlyingCacheBuilder.softValues();\n",
          "        return this;\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.cache.CacheBuilder#weakKeys()}\n",
          "     */\n",
          "    public FileSystemCacheBuilder<K, V> weakKeys() {\n",
          "        underlyingCacheBuilder.weakKeys();\n",
          "        return this;\n",
          "    }\n"
        ],
        "line_number": 123,
        "start_line": 119,
        "end_line": 129
      },
      {
        "link": "https://github.com/yufarui/simple-world/blob/defccbb9fba4b413f011fd687c3c509162961296/simple-cache/src/main/java/guava/GuavaCacheDemo1.java\n",
        "code": [
          "import com.google.common.cache.Cache;\n",
          "import com.google.common.cache.CacheBuilder;\n",
          "\n",
          "public class GuavaCacheDemo1 {\n",
          "    static Cache<String, Object> testCache = CacheBuilder.newBuilder()\n",
          "            .weakKeys()\n",
          "            .recordStats()\n",
          "            .build();\n",
          "\n",
          "    public static void main(String[] args){\n",
          "        Object obj1 = new Object();\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "https://github.com/daniel097541/BeastFactionsHook/blob/26cab95255e2a1b091fbd3d4214fe5c8a948594a/core/src/main/java/info/beastsoftware/hookcore/cache/CachedManager.java\n",
        "code": [
          "    default LoadingCache<K, T> init(boolean weakKeys, boolean weakValues, long expireAfterAccess, long expireAfterWrite) {\n",
          "\n",
          "        CacheBuilder<Object, Object> builder = CacheBuilder.newBuilder();\n",
          "\n",
          "        if (weakKeys) {\n",
          "            builder.weakKeys();\n",
          "        }\n",
          "\n",
          "        if (weakValues) {\n",
          "            builder.weakValues();\n",
          "        }\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "https://github.com/stocky37/dropwizard-util/blob/4a53a114dd2bf6c1d8b14682e6d9abc695e0137a/cache/src/main/java/com/github/stocky37/util/cache/config/GuavaCacheFactory.java\n",
        "code": [
          "\t\tcacheBuilder.maximumWeight(weight);\n",
          "\t\treturn this;\n",
          "\t}\n",
          "\n",
          "\t@JsonProperty\n",
          "\tpublic GuavaCacheFactory weakKeys(boolean weakKeys) {\n",
          "\t\tif(weakKeys) cacheBuilder.weakKeys();\n",
          "\t\treturn this;\n",
          "\t}\n",
          "\n",
          "\t@JsonProperty\n"
        ],
        "line_number": 45,
        "start_line": 41,
        "end_line": 51
      }
    ],
    "org.mockito.ArgumentCaptor.capture": [
      {
        "link": "https://github.com/Noire-Black-Heart/study/blob/8f2fcd4153e8b3bea89a0e42d09acca8b1904a9e/YR3_1/SOFT3202/SOFT3202CODE/Week5Quiz/src/test/java/MyClassTest.java\n",
        "code": [
          "\t\t\n",
          "//\t\twhen(myDep.getSomeResult(anyString(), anyInt())).then(new Answer<Result>() {\n",
          "//\t\t    @Override\n",
          "//\t\t    public Result answer(InvocationOnMock invocation) throws Throwable {\n",
          "//\t\t        count++;\n",
          "//\t\t        verify(myDep, times(1)).getSomeResult(argstr.capture(), argint.capture());\n",
          "////\t\t\tverify(myDep, times(1)).getSomeResult(argstr.capture(), argint.capture());\n",
          "//\t\t        return null;\n",
          "//\t\t    }\n",
          "//\t\t}); \n",
          "\t\t\n"
        ],
        "line_number": 67,
        "start_line": 63,
        "end_line": 73
      },
      {
        "link": "}https://github.com/rherrmann/gonsole/blob/fcb6ed0f64029a0ecf6fd9847012dbbfff4efb89/com.codeaffine.console.core.test/src/com/codeaffine/console/core/internal/contentassist/ValueCaptor.java\n",
        "code": [
          "    actual.apply( document );\n",
          "    offsetCaptor = forClass( Integer.class );\n",
          "    lengthCaptor = forClass( Integer.class );\n",
          "    replacementCaptor = forClass( String.class );\n",
          "    try {\n",
          "      verify( document ).replace( offsetCaptor.capture(), lengthCaptor.capture(), replacementCaptor.capture() );\n",
          "    } catch( BadLocationException shouldNotHappen ) {\n",
          "      throw new IllegalStateException( shouldNotHappen );\n",
          "    }\n",
          "  }\n",
          "\n"
        ],
        "line_number": 30,
        "start_line": 26,
        "end_line": 36
      },
      {
        "link": "}https://github.com/YunZhang2014/test/blob/d4818c214a037360bf2f2c0aae7a52b75dd8de12/javaSETest/JunitTest/TestingwithJunit2015Test/origin/chapter-8/timeline.util/src/test/java/book/twju/timeline/util/BackgroundProcessorITest.java\n",
        "code": [
          "    RuntimeException expected = new RuntimeException();\n",
          "    \n",
          "    backgroundProcessor.process( () -> { throw expected; } );\n",
          "    sleep( 100 );\n",
          "    \n",
          "    verify( uiThreadDispatcher ).dispatch( captor.capture() );\n",
          "    assertThat( thrownBy( () -> captor.getValue().run() ) ).isSameAs( expected );\n",
          "  }\n",
          "  \n",
          "  @Test\n",
          "  public void processWithError() {\n"
        ],
        "line_number": 53,
        "start_line": 49,
        "end_line": 59
      },
      {
        "link": "https://github.com/ytgdoc/DemoAndroidMVP/blob/5ae1581f5b6cfada7e21bdb01fd4adb56801736d/app/src/test/java/com/antonioleiva/mvpexample/app/main/MainPresenterTest.java\n",
        "code": [
          "\n",
          "    @Test\n",
          "    public void checkIfRightMessageIsDisplayed() {\n",
          "        ArgumentCaptor<String> captor = forClass(String.class);\n",
          "        presenter.onItemClicked(1);\n",
          "        verify(view, times(1)).showMessage(captor.capture());\n",
          "        assertThat(captor.getValue(), is(\"Position 2 clicked\"));\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void checkIfViewIsReleasedOnDestroy() {\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      },
      {
        "link": "https://github.com/CJSCommonPlatform/microservice_framework_version_6/blob/25dc170f9178a6f6a6c96263f47781566d78600b/test-utils/test-utils-core/src/main/java/uk/gov/justice/services/test/utils/core/helper/EventStreamMockHelper.java\n",
        "code": [
          "     * @throws EventStreamException if an event could not be appended\n",
          "     */\n",
          "    @SuppressWarnings(\"unchecked\")\n",
          "    public static Stream<JsonEnvelope> verifyAppendAndGetArgumentFrom(final EventStream eventStream) throws EventStreamException {\n",
          "        final ArgumentCaptor<Stream> argumentCaptor = forClass(Stream.class);\n",
          "        verify(eventStream).append(argumentCaptor.capture());\n",
          "\n",
          "        return ((Stream<JsonEnvelope>) argumentCaptor.getValue());\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 34
      },
      {
        "link": "https://github.com/CJSCommonPlatform/microservice-framework/blob/24a33df30b30fb81f4a818c4030b8b55429e462e/test-utils/test-utils-core/src/main/java/uk/gov/justice/services/test/utils/core/helper/EventStreamMockHelper.java\n",
        "code": [
          "     * @throws EventStreamException if an event could not be appended\n",
          "     */\n",
          "    @SuppressWarnings(\"unchecked\")\n",
          "    public static Stream<JsonEnvelope> verifyAppendAndGetArgumentFrom(final EventStream eventStream) throws EventStreamException {\n",
          "        final ArgumentCaptor<Stream> argumentCaptor = forClass(Stream.class);\n",
          "        verify(eventStream).append(argumentCaptor.capture());\n",
          "\n",
          "        return ((Stream<JsonEnvelope>) argumentCaptor.getValue());\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 34
      },
      {
        "link": "https://github.com/Talentica/Mealspice-Android/blob/cecf35e122c259fa67741987b7e3227b5fc0fa47/app/src/test/java/com/talenitca/mealspiceandroid/screens/details/DetailsPresenterErrorTest.java\n",
        "code": [
          "    public void checkIfRightViewIsShown() {\n",
          "        ArgumentCaptor<Throwable> captor = forClass(Throwable.class);\n",
          "        presenter.start(\"anything\");\n",
          "        verify(view, times(1)).showLoading();\n",
          "        verify(view, times(1)).hideLoading();\n",
          "        verify(view, times(1)).onError(captor.capture());\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void checkfICorrectErrorPassed() {\n",
          "/*        ArgumentCaptor<String> captor2 = forClass(String.class);\n"
        ],
        "line_number": 52,
        "start_line": 48,
        "end_line": 58
      },
      {
        "link": "https://github.com/ksandrasegaramz/microservice-framework/blob/1ae0ee38389c8e77105fa9428ee5a4d73f06dec4/test-utils/test-utils-core/src/main/java/uk/gov/justice/services/test/utils/core/helper/EventStreamMockHelper.java\n",
        "code": [
          "     * @throws EventStreamException if an event could not be appended\n",
          "     */\n",
          "    @SuppressWarnings(\"unchecked\")\n",
          "    public static Stream<JsonEnvelope> verifyAppendAndGetArgumentFrom(final EventStream eventStream) throws EventStreamException {\n",
          "        final ArgumentCaptor<Stream> argumentCaptor = forClass(Stream.class);\n",
          "        verify(eventStream).append(argumentCaptor.capture());\n",
          "\n",
          "        return ((Stream<JsonEnvelope>) argumentCaptor.getValue());\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 34
      },
      {
        "link": "}https://github.com/Annoyer/timeline-generate/blob/e6890d75db2ed35a62fe863c6da7df5e04ed37ec/timeline-util/src/test/java/org/jcy/timeline/util/BackgroundProcessorITest.java\n",
        "code": [
          "        backgroundProcessor.process(() -> {\n",
          "            throw expected;\n",
          "        });\n",
          "        sleep(100);\n",
          "\n",
          "        verify(uiThreadDispatcher).dispatch(captor.capture());\n",
          "        assertThat(thrownBy(() -> captor.getValue().run())).isSameAs(expected);\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void processWithError() {\n"
        ],
        "line_number": 54,
        "start_line": 50,
        "end_line": 60
      },
      {
        "link": "https://github.com/jp-developer0/hybrisTrail/blob/a0208ffee7fee5b7f83dd982e372276492ae83d4/bin/platform/ext/processing/testsrc/de/hybris/platform/task/impl/TaskDAOLockingTest.java\n",
        "code": [
          "\t\tverify(taskDAO, times(2)).getLockQuery();\n",
          "\t\tverify(taskDAO, times(2)).getConditionConsumeQuery();\n",
          "\n",
          "\t\tfinal ArgumentCaptor<Boolean> txArgCaptor = forClass(Boolean.class);\n",
          "\t\tfinal ArgumentCaptor<Long> txObjIdCaptor = forClass(Long.class);\n",
          "\t\tverify(taskDAO, times(4)).markRunningTx(txObjIdCaptor.capture(), txArgCaptor.capture());\n",
          "\n",
          "\t\tassertThat(txArgCaptor.getAllValues()).allMatch(b -> b);\n",
          "\t\tassertThat(txObjIdCaptor.getAllValues()).filteredOn(aLong -> aLong.equals(txObjId)).hasSize(2);\n",
          "\t}\n",
          "\n"
        ],
        "line_number": 39,
        "start_line": 35,
        "end_line": 45
      }
    ],
    "org.assertj.core.api.AbstractObjectAssert.extracting": [
      {
        "link": "https://github.com/sigia-com/slgl/blob/3399dd7901c46314743ead8b0d7d6069e600a280/lambda/api/src/it/java/io/slgl/api/it/assertj/NodeResponseAssert.java\n",
        "code": [
          "\tpublic NodeResponseAssert(NodeResponse actual) {\n",
          "\t\tsuper(actual, NodeResponseAssert.class);\n",
          "\t}\n",
          "\n",
          "\tpublic NodeResponseAssert hasValueAtStatePath(Object value, Object... path) {\n",
          "\t\textracting(actual -> get(actual.getState(), path), type(Object.class))\n",
          "\t\t\t\t.isEqualTo(value);\n",
          "\t\treturn this;\n",
          "\t}\n",
          "}\n"
        ],
        "line_number": 15,
        "start_line": 11,
        "end_line": 20
      },
      {
        "link": "https://github.com/mikelue/jmisc/blob/1d094b394177831b5d97a05d95e85f16a713071e/testlib/src/main/java/guru/mikelue/misc/testlib/validation/ConstraintViolationAssert.java\n",
        "code": [
          "\t\tsuper(violation, ConstraintViolationAssert.class);\n",
          "\t}\n",
          "\n",
          "\tpublic ConstraintViolationAssert<T> constraintIsTypeOfAnnotation(Class<? extends Annotation> typeOfAnnotation)\n",
          "\t{\n",
          "\t\textracting(\"constraintDescriptor\")\n",
          "\t\t\t.extracting(\"annotation\")\n",
          "\t\t\t.as(\n",
          "\t\t\t\t\"Checks violation for property path: [%s/%s]. Invalid value: [%s]\",\n",
          "\t\t\t\tactual.getPropertyPath(), actual.getRootBeanClass().getSimpleName(),\n",
          "\t\t\t\tactual.getInvalidValue()\n"
        ],
        "line_number": 24,
        "start_line": 20,
        "end_line": 30
      },
      {
        "link": "https://github.com/jphp-group/jphp/blob/eefaac6d8195025ba53c2b7b0996a9c128b2ffb7/jphp-core/tests/org/develnext/jphp/assertj/TokenizerAssert.java\n",
        "code": [
          "    }\n",
          "\n",
          "    private void isStringTokenWithValue(String expectedValue, Token actual) {\n",
          "        assertThat(actual)\n",
          "                .isInstanceOf(StringExprToken.class)\n",
          "                .extracting(Token::getWord)\n",
          "                .isEqualTo(expectedValue);\n",
          "    }\n",
          "\n",
          "    public TokenizerAssert nextIsStringToken(String expectedValue, StringExprToken.Quote quote) {\n",
          "        Token actual = this.actual.nextToken();\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "}https://github.com/excelsiorsoft/java8-playground/blob/8922f58de744ad092a1732114e9f2d40b769a704/tesitng-assertions/src/test/java/streams/ChainedSoftAssertionTest.java\n",
        "code": [
          "\n",
          "    softly.assertThat(email)\n",
          "      .hasFrom(\"sender@example.com\")\n",
          "      .hasTo(\"recipient@example.com\")\n",
          "      .hasSubject(\"Message from Sender to Recipient\")\n",
          "      .extracting(\"from\", \"to\")\n",
          "      .contains(\"sender@example.com\")\n",
          "      .hasAtLeastOneElementOfType(String.class)\n",
          "      .doesNotContain(\"to@example.com\");\n",
          "\n",
          "    try {\n"
        ],
        "line_number": 23,
        "start_line": 19,
        "end_line": 29
      },
      {
        "link": "}https://github.com/dioxic/wfmt/blob/ccc46dca19d7d91d3317e8752e505a3271d1856a/src/test/java/uk/dioxic/wfmt/assertions/OrderAssert.java\n",
        "code": [
          "        return this;\n",
          "    }\n",
          "\n",
          "    public OrderAssert hasZeroSummaries() {\n",
          "        isNotNull();\n",
          "        extracting(Order::getActivities, InstanceOfAssertFactories.LIST)\n",
          "                .hasSize(0);\n",
          "\n",
          "        return this;\n",
          "    }\n",
          "\n"
        ],
        "line_number": 40,
        "start_line": 36,
        "end_line": 46
      },
      {
        "link": "https://github.com/sigia-com/slgl/blob/3399dd7901c46314743ead8b0d7d6069e600a280/lambda/api/src/it/java/io/slgl/api/it/assertj/AuditDataAssert.java\n",
        "code": [
          "        assertThat(actual.getPermissionAudit().getAnchor()).isEqualTo(link.getTargetAnchor());\n",
          "        return myself;\n",
          "    }\n",
          "\n",
          "    public AuditDataAssert hasEvaluatedVariable(String variable, Object value) {\n",
          "        extracting(PermissionAuditMessage::getPermissionAudit)\n",
          "                .extracting(result -> Stream.concat(\n",
          "                        result.getEvaluatedPermissions().stream()\n",
          "                                .map(PermissionEvaluation::getEvaluationResults)\n",
          "                                .flatMap(Collection::stream)\n",
          "                                .map(PermissionEvaluationResult::getEvaluationLog)\n"
        ],
        "line_number": 56,
        "start_line": 52,
        "end_line": 62
      },
      {
        "link": "https://github.com/sigia-com/slgl/blob/3399dd7901c46314743ead8b0d7d6069e600a280/lambda/api/src/it/java/io/slgl/api/it/assertj/AuditDataPermissionResultAssert.java\n",
        "code": [
          "    public AuditDataPermissionResultAssert(PermissionEvaluationResult actual) {\n",
          "        super(actual, AuditDataPermissionResultAssert.class);\n",
          "    }\n",
          "\n",
          "    public AuditDataPermissionResultAssert evaluationContextSatisfies(Consumer<Map<String, Object>> mapConsumer) {\n",
          "        extracting(PermissionEvaluationResult::getEvaluationContext)\n",
          "                .satisfies(mapConsumer);\n",
          "        return this;\n",
          "    }\n",
          "\n",
          "    public AuditDataPermissionResultAssert hasPermissionContextValueAtPath(Object value, String... path) {\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "https://github.com/GTmmiller/plump/blob/1890077a909036ee1c4f8812cdb140a7dc6e70c9/src/test/java/com/wiligsi/plump/server/assertion/SequencerAssert.java\n",
        "code": [
          "  }\n",
          "\n",
          "  public SequencerAssert isUpdatedFrom(Sequencer original) {\n",
          "    hasFieldOrPropertyWithValue(\"lockName\", original.getLockName());\n",
          "    hasFieldOrPropertyWithValue(\"sequenceNumber\", original.getSequenceNumber());\n",
          "    extracting(\"key\").isNotEqualTo(original.getKey());\n",
          "    assertThat(actual.getExpiration()).isGreaterThanOrEqualTo(original.getExpiration());\n",
          "\n",
          "    return this;\n",
          "  }\n",
          "}\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 22
      },
      {
        "link": "https://github.com/subinp-source/bin/blob/9771158fdd07dfaf03b687ac40fcb0bf860c708c/platform/ext/mediaweb/testsrc/de/hybris/platform/mediaweb/assertions/assertj/HttpResponseAssert.java\n",
        "code": [
          "\t\treturn new HttpStatusAssert(HttpStatus.valueOf(actual.getStatus()));\n",
          "\t}\n",
          "\n",
          "\tpublic HttpResponseAssert headerIsEqualTo(final String header, final String value)\n",
          "\t{\n",
          "\t\tassertThat(actual).isNotNull().extracting(s -> s.getHeader(header)).isEqualTo(value);\n",
          "\t\treturn this;\n",
          "\t}\n",
          "\n",
          "\tpublic HttpResponseAssert headerContains(final String header, final String... values)\n",
          "\t{\n"
        ],
        "line_number": 30,
        "start_line": 26,
        "end_line": 36
      },
      {
        "link": "https://github.com/Piszmog/cloud-config-client-java/blob/668b26c6b2946105e1efbab8a9b8f8c74a1c80ae/src/test/java/io/github/piszmog/cloudconfig/template/impl/LocalConfigTemplateTest.java\n",
        "code": [
          "\n",
          "    @Test\n",
          "    public void testInit() {\n",
          "        final LocalConfigTemplate template = new LocalConfigTemplate(new ConfigClientProperties(new StandardEnvironment()));\n",
          "        template.init();\n",
          "        assertThat(template).extracting(\"restTemplate\").isInstanceOf(RestTemplate.class).isNotNull();\n",
          "        final AbstractObjectAssert<?, ?> httpClient = assertThat(template).extracting(\"restTemplate\").extracting(\"requestFactory\")\n",
          "                .extracting(\"httpClient\");\n",
          "        httpClient.extracting(\"defaultConfig\")\n",
          "                .hasFieldOrPropertyWithValue(\"connectionRequestTimeout\", 185000)\n",
          "                .hasFieldOrPropertyWithValue(\"connectTimeout\", 185000)\n"
        ],
        "line_number": 33,
        "start_line": 29,
        "end_line": 39
      }
    ],
    "com.google.common.hash.HashCode.fromInt": [
      {
        "link": "https://github.com/jenqh/java-hash-benchmark/blob/205f276e14e76e83a368a5e1eb08aa7d7ab7cbe9/src/test/java/ms/jen/hashing/benchmark/worker/JpountzStreaming32HashWorkerTest.java\n",
        "code": [
          "  void getResult() {\n",
          "    when(mockStreamingXXHash32.getValue()).thenReturn(1);\n",
          "\n",
          "    HashCode hashCode = worker.getResult();\n",
          "\n",
          "    assertThat(hashCode).isEqualTo(HashCode.fromInt(1));\n",
          "  }\n",
          "}\n"
        ],
        "line_number": 44,
        "start_line": 40,
        "end_line": 47
      },
      {
        "link": "https://github.com/jenqh/java-hash-benchmark/blob/205f276e14e76e83a368a5e1eb08aa7d7ab7cbe9/src/main/java/ms/jen/hashing/benchmark/worker/JavaChecksumHashWorker.java\n",
        "code": [
          "    checksum.update(bytes, 0, bytes.length);\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public HashCode getResult() {\n",
          "    return HashCode.fromInt((int) checksum.getValue());\n",
          "  }\n",
          "}\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 24
      },
      {
        "link": "https://github.com/jenqh/java-hash-benchmark/blob/205f276e14e76e83a368a5e1eb08aa7d7ab7cbe9/src/test/java/ms/jen/hashing/benchmark/worker/JavaChecksumHashWorkerTest.java\n",
        "code": [
          "  void getResult() {\n",
          "    when(mockChecksum.getValue()).thenReturn(1L);\n",
          "\n",
          "    HashCode hashCode = worker.getResult();\n",
          "\n",
          "    assertThat(hashCode).isEqualTo(HashCode.fromInt(1));\n",
          "  }\n",
          "}\n"
        ],
        "line_number": 41,
        "start_line": 37,
        "end_line": 44
      },
      {
        "link": "https://github.com/kse1920/bazel_big_repo/blob/55e62df710986b410eb31b1d6b01cfe5e9597d15/src/test/java/com/google/devtools/build/lib/skyframe/serialization/HashCodeCodecTest.java\n",
        "code": [
          "public class HashCodeCodecTest {\n",
          "\n",
          "  @Test\n",
          "  public void testHashCodeCodec() throws Exception {\n",
          "    new SerializationTester(\n",
          "            HashCode.fromString(\"f00ba7\"), HashCode.fromInt(456789), HashCode.fromLong(9001L))\n",
          "        .runTests();\n",
          "  }\n",
          "}\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 33
      },
      {
        "link": "https://github.com/jenqh/java-hash-benchmark/blob/205f276e14e76e83a368a5e1eb08aa7d7ab7cbe9/src/main/java/ms/jen/hashing/benchmark/worker/JpountzStreaming32HashWorker.java\n",
        "code": [
          "    function.update(bytes, 0, bytes.length);\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public HashCode getResult() {\n",
          "    return HashCode.fromInt(function.getValue());\n",
          "  }\n",
          "}\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 25
      },
      {
        "link": "https://github.com/dilbrent/bazel-0.14.1/blob/b1283ad2762f2d2adbe8598082ef78028f242a41/src/test/java/com/google/devtools/build/lib/skyframe/serialization/HashCodeCodecTest.java\n",
        "code": [
          "public class HashCodeCodecTest {\n",
          "\n",
          "  @Test\n",
          "  public void testHashCodeCodec() throws Exception {\n",
          "    new SerializationTester(\n",
          "            HashCode.fromString(\"f00ba7\"), HashCode.fromInt(456789), HashCode.fromLong(9001L))\n",
          "        .runTests();\n",
          "  }\n",
          "}\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 33
      },
      {
        "link": "https://github.com/jenqh/java-hash-benchmark/blob/205f276e14e76e83a368a5e1eb08aa7d7ab7cbe9/src/test/java/ms/jen/hashing/benchmark/worker/GuavaHashWorkerTest.java\n",
        "code": [
          "    verify(mockHasher).putBytes(bytes);\n",
          "  }\n",
          "\n",
          "  @Test\n",
          "  void getResult() {\n",
          "    HashCode hashCode = HashCode.fromInt(1);\n",
          "    when(mockHasher.hash()).thenReturn(hashCode);\n",
          "\n",
          "    HashCode result = worker.getResult();\n",
          "\n",
          "    assertThat(result).isSameAs(hashCode);\n"
        ],
        "line_number": 40,
        "start_line": 36,
        "end_line": 46
      },
      {
        "link": "https://github.com/VHAINNOVATIONS/ASRCM/blob/68ecf819a579eef99076d27807de571ab2dbd843/srcalc/src/test/java/gov/va/med/srcalc/vista/vistalink/AccessVerifyConnectionSpecTest.java\n",
        "code": [
          "    @Test\n",
          "    public final void testEqualsObject()\n",
          "    {\n",
          "        EqualsVerifier.forClass(AccessVerifyConnectionSpec.class)\n",
          "                // EqualsVerifier can't construct HashCodes.\n",
          "                .withPrefabValues(HashCode.class, HashCode.fromInt(123), HashCode.fromInt(456))\n",
          "                // Divison is mutable: can't fix that.\n",
          "                .suppress(Warning.NONFINAL_FIELDS)\n",
          "                .verify();\n",
          "    }\n",
          "    \n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/JensRantil/java-canary-tools/blob/dcca45c679226cb37b600879ed99e63f7ec91d56/lib/src/test/java/io/github/jensrantil/tools/canary/WeightedShardedBuilderTest.java\n",
        "code": [
          "import org.junit.jupiter.api.Assertions;\n",
          "import org.junit.jupiter.api.Test;\n",
          "\n",
          "public class WeightedShardedBuilderTest {\n",
          "    // https://en.wikipedia.org/wiki/42_(number)#The_Hitchhiker's_Guide_to_the_Galaxy\n",
          "    private static final HashCode TEST_HASH_CODE = HashCode.fromInt(42);\n",
          "\n",
          "    @Test\n",
          "    public void testBasicCreation() {\n",
          "        TestInterface proxy =\n",
          "                new WeightedShardedBuilder<TestInterface>()\n"
        ],
        "line_number": 8,
        "start_line": 4,
        "end_line": 14
      },
      {
        "link": "}https://github.com/RobertSkalko/Age-of-Exile/blob/1f04bfaf2196a93436f11ac46442392897f87781/src/main/java/com/robertx22/age_of_exile/database/data/talent_tree/parser/GridPoint.java\n",
        "code": [
          "        return this.point;\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public int hashCode() {\n",
          "        return HashCode.fromInt(x)\n",
          "            .hashCode() + HashCode.fromInt(y)\n",
          "            .hashCode();\n",
          "    }\n",
          "\n",
          "    @Override\n"
        ],
        "line_number": 52,
        "start_line": 48,
        "end_line": 58
      }
    ],
    "com.google.common.collect.ComparisonChain.result": [
      {
        "link": "https://github.com/dstoianov/examples/blob/03bce674a0c12e33d33f643b0b01d6032f8b8e57/examples/src/test/java/compare/Attribute.java\n",
        "code": [
          "    @Override\n",
          "    public int compareTo(Attribute that) {\n",
          "        return ComparisonChain.start()\n",
          "                .compare(this.type, that.type)\n",
          "                .compare(this.value, that.value)\n",
          "                .result();\n",
          "    }\n",
          "\n",
          "}\n",
          "\n",
          "\n"
        ],
        "line_number": 68,
        "start_line": 64,
        "end_line": 74
      },
      {
        "link": "https://github.com/aspanfilov/otus_java_pro/blob/0ac90e3f81e734bd109adc05721e44ab91220483/hw01-gradle/src/main/java/ru/otus/HelloOtus.java\n",
        "code": [
          "\n",
          "import com.google.common.collect.ComparisonChain;\n",
          "\n",
          "public class HelloOtus {\n",
          "    public static void main(String[] args) {\n",
          "        int result =  ComparisonChain.start().compare(\"sameWord\", \"sameWord\").compare(1,1).compare(1,134).result();\n",
          "        System.out.println(result);\n",
          "        System.out.println(\"Done\");\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 6,
        "start_line": 2,
        "end_line": 11
      },
      {
        "link": "https://github.com/jsonzou/demos/blob/c60cfde673f04fadff589e6e3ab3416b9f25fd75/src/test/java/com/jsonzou/demo/guava/compare/CompareTest.java\n",
        "code": [
          "     * 1,0,-1\n",
          "     * \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e4\u00b8\u008d\u00e7\u009b\u00b8\u00e7\u00ad\u0089\u00e7\u009a\u0084\u00e5\u0080\u00bc\u00e4\u00b8\u00ad\u00e6\u0096\u00ad -1/1\n",
          "     */\n",
          "    @Test\n",
          "    public void compareTest(){\n",
          "      int result= ComparisonChain.start().compare(1,1).result();\n",
          "      System.out.println(result);\n",
          "      result= ComparisonChain.start().compare(1,1).compare(\"1\",\"3\").compare(\"1\",\"3\").result();\n",
          "      System.out.println(result);\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 19,
        "start_line": 15,
        "end_line": 25
      },
      {
        "link": "https://github.com/taiwan902/bp-src/blob/341a34ebf43ab71bea0becf343795e241641ef6a/source/Class_12131.java\n",
        "code": [
          "implements Comparator {\n",
          "    Class_12131() {\n",
          "    }\n",
          "\n",
          "    public int Method_12132(Class_9738 class_9738, Class_9738 class_97382) {\n",
          "        return ComparisonChain.start().compare((Comparable)class_9738.Method_9758().getId(), (Comparable)class_97382.Method_9758().getId()).result();\n",
          "    }\n",
          "\n",
          "    private void Method_12133() {\n",
          "        MethodHandle methodHandle = MethodHandles.constant(String.class, \"MC|BlazingPack\");\n",
          "    }\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/HammerSMP/YarnSource/blob/42762edb4d65ca049e792360b2db7d04f9e3c2dc/net/minecraft/client/gui/hud/spectator/TeleportSpectatorMenu.java\n",
        "code": [
          "\n",
          "@Environment(value=EnvType.CLIENT)\n",
          "public class TeleportSpectatorMenu\n",
          "implements SpectatorMenuCommandGroup,\n",
          "SpectatorMenuCommand {\n",
          "    private static final Ordering<PlayerListEntry> ORDERING = Ordering.from((arg, arg2) -> ComparisonChain.start().compare((Comparable)arg.getProfile().getId(), (Comparable)arg2.getProfile().getId()).result());\n",
          "    private final List<SpectatorMenuCommand> elements = Lists.newArrayList();\n",
          "\n",
          "    public TeleportSpectatorMenu() {\n",
          "        this(ORDERING.sortedCopy(MinecraftClient.getInstance().getNetworkHandler().getPlayerList()));\n",
          "    }\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/akun2014/TestJDK/blob/a3a0e448e0ec4a29e4042204832371782f493c91/src/main/java/com/ownerkaka/testjdk/guava/objects/TestObjects.java\n",
        "code": [
          "\n",
          "\n",
          "        int result = ComparisonChain.start()\n",
          "                .compare(1, 1)\n",
          "                .compare(\"asd\",\"aa\")\n",
          "                .result();\n",
          "\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 25
      },
      {
        "link": "https://github.com/tguduru/guava/blob/1d9c02fc065133625f59627e12349ab200482c2a/src/main/java/org/tguduru/guava/compare/ComparisonChainDemo.java\n",
        "code": [
          "            return Objects.hashCode(name, id);\n",
          "        }\n",
          "\n",
          "        public int compareTo(final Person o) {\n",
          "            // this eliminates lot of boiler plate code with comparison\n",
          "            return ComparisonChain.start().compare(getId(), o.getId()).compare(getName(), o.getName()).result();\n",
          "        }\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 63,
        "start_line": 59,
        "end_line": 67
      },
      {
        "link": "https://github.com/taiwan902/bp-src/blob/341a34ebf43ab71bea0becf343795e241641ef6a/source/Class_6753.java\n",
        "code": [
          "    }\n",
          "\n",
          "    public int Method_6756(Class_9738 class_9738, Class_9738 class_97382) {\n",
          "        Class_22057 class_22057 = class_9738.Method_9755();\n",
          "        Class_22057 class_220572 = class_97382.Method_9755();\n",
          "        return ComparisonChain.start().compareTrueFirst((class_9738.Method_9754() != Class_35650.Field_35654 ? 4717 & 19473 : 25634 & 2072) != 0, (class_97382.Method_9754() != Class_35650.Field_35654 ? 17189 & 1041 : -16064 & 7184) != 0).compare((Comparable)((Object)(class_22057 != null ? class_22057.Method_22075() : \"\")), (Comparable)((Object)(class_220572 != null ? class_220572.Method_22075() : \"\"))).compare((Comparable)((Object)class_9738.Method_9758().getName()), (Comparable)((Object)class_97382.Method_9758().getName())).result();\n",
          "    }\n",
          "}\n",
          "\n"
        ],
        "line_number": 33,
        "start_line": 29,
        "end_line": 37
      },
      {
        "link": "https://github.com/UniPoker/Backend/blob/835c1f08f44413d9e65fecadd2919e49ab910bc2/src/main/java/cards/Card.java\n",
        "code": [
          "    @Override\n",
          "    public int compareTo(Card card) {\n",
          "        return ComparisonChain.start()\n",
          "                .compare(value, card.value)\n",
          "//                .compare(symbol, card.symbol)\n",
          "                .result();\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 68,
        "start_line": 64,
        "end_line": 71
      },
      {
        "link": "https://github.com/zqhxuyuan/tutorials/blob/72740ec130a15331b0b2428b9750099c47073052/middleware/src/main/java/org/tguduru/guava/compare/ComparisonChainDemo.java\n",
        "code": [
          "            return Objects.hashCode(name, id);\n",
          "        }\n",
          "\n",
          "        public int compareTo(final Person o) {\n",
          "            // this eliminates lot of boiler plate code with comparison\n",
          "            return ComparisonChain.start().compare(getId(), o.getId()).compare(getName(), o.getName()).result();\n",
          "        }\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 63,
        "start_line": 59,
        "end_line": 67
      }
    ],
    "com.google.common.collect.Multimap.entries": [
      {
        "link": "https://github.com/pyranja/asio/blob/ab671f21531a47b41eb58217675e83489c8a7a81/test/src/main/java/at/ac/univie/isc/asio/junit/IsMultimapContaining.java\n",
        "code": [
          "  }\n",
          "\n",
          "  @Override\n",
          "  protected void describeMismatchSafely(final Multimap<K, V> item,\n",
          "                                        final Description mismatchDescription) {\n",
          "    mismatchDescription.appendText(\"map was \").appendValueList(\"[\", \", \", \"]\", item.entries());\n",
          "  }\n",
          "\n",
          "  /**\n",
          "   * Creates a matcher for {@link com.google.common.collect.Multimap}s matching when the examined\n",
          "   * map contains at least one entry whose key satisfies the specified <code>keyMatcher</code>\n"
        ],
        "line_number": 64,
        "start_line": 60,
        "end_line": 70
      },
      {
        "link": "https://github.com/balazsgrill/viatra-merged/blob/939408ed2a750a8e036009ecaf05e38be813f70d/query/plugins/org.eclipse.viatra.query.runtime.base/src/org/eclipse/viatra/query/runtime/base/api/QueryResultMultimap.java\n",
        "code": [
          "    /* (non-Javadoc)\n",
          "     * @see org.eclipse.viatra.query.runtime.base.api.QueryResultAssociativeStore#getCacheEntries()\n",
          "     */\n",
          "    @Override\n",
          "    protected Collection<Entry<KeyType, ValueType>> getCacheEntries() {\n",
          "        return cache.entries();\n",
          "    }\n",
          "\n",
          "    /* (non-Javadoc)\n",
          "     * @see org.eclipse.viatra.query.runtime.base.api.QueryResultAssociativeStore#internalCachePut(java.lang.Object, java.lang.Object)\n",
          "     */\n"
        ],
        "line_number": 70,
        "start_line": 66,
        "end_line": 76
      },
      {
        "link": "https://github.com/binave/common/blob/c3b135bc26bb869447a057fadf42c3f9414253f9/common-collect/src/main/java/org/binave/common/collection/proxy/MultimapProxy.java\n",
        "code": [
          "    public Collection<V> values() {\n",
          "        return this.multimap.values();\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public Collection<Map.Entry<K, V>> entries() {\n",
          "        return this.multimap.entries();\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public Map<K, Collection<V>> asMap() {\n"
        ],
        "line_number": 127,
        "start_line": 123,
        "end_line": 133
      },
      {
        "link": "https://github.com/viatra/org.eclipse.incquery/blob/8e24ed02f2779ea9777c8c7f27ed907df0f4e771/plugins/org.eclipse.incquery.runtime.base/src/org/eclipse/incquery/runtime/base/api/QueryResultMultimap.java\n",
        "code": [
          "    /* (non-Javadoc)\n",
          "     * @see org.eclipse.incquery.runtime.base.api.QueryResultAssociativeStore#getCacheEntries()\n",
          "     */\n",
          "    @Override\n",
          "    protected Collection<Entry<KeyType, ValueType>> getCacheEntries() {\n",
          "        return cache.entries();\n",
          "    }\n",
          "\n",
          "    /* (non-Javadoc)\n",
          "     * @see org.eclipse.incquery.runtime.base.api.QueryResultAssociativeStore#internalCachePut(java.lang.Object, java.lang.Object)\n",
          "     */\n"
        ],
        "line_number": 70,
        "start_line": 66,
        "end_line": 76
      },
      {
        "link": "https://github.com/siliconbrain/org.eclipse.incquery/blob/86657b1cd7dc3b2d58f6eb83d85a5862ab350048/plugins/org.eclipse.incquery.runtime.base/src/org/eclipse/incquery/runtime/base/api/QueryResultMultimap.java\n",
        "code": [
          "    /* (non-Javadoc)\n",
          "     * @see org.eclipse.incquery.runtime.base.api.QueryResultAssociativeStore#getCacheEntries()\n",
          "     */\n",
          "    @Override\n",
          "    protected Collection<Entry<KeyType, ValueType>> getCacheEntries() {\n",
          "        return cache.entries();\n",
          "    }\n",
          "\n",
          "    /* (non-Javadoc)\n",
          "     * @see org.eclipse.incquery.runtime.base.api.QueryResultAssociativeStore#internalCachePut(java.lang.Object, java.lang.Object)\n",
          "     */\n"
        ],
        "line_number": 70,
        "start_line": 66,
        "end_line": 76
      },
      {
        "link": "https://github.com/szrudi/emf-incquery-guitest/blob/7309e3a3056066135ee938b48f37347ba9e3eec9/plugins/org.eclipse.incquery.runtime.base/src/org/eclipse/incquery/runtime/base/api/QueryResultMultimap.java\n",
        "code": [
          "    /* (non-Javadoc)\r\n",
          "     * @see org.eclipse.incquery.runtime.base.api.QueryResultAssociativeStore#getCacheEntries()\r\n",
          "     */\r\n",
          "    @Override\r\n",
          "    protected Collection<Entry<KeyType, ValueType>> getCacheEntries() {\r\n",
          "        return cache.entries();\r\n",
          "    }\r\n",
          "\r\n",
          "    /* (non-Javadoc)\r\n",
          "     * @see org.eclipse.incquery.runtime.base.api.QueryResultAssociativeStore#internalCachePut(java.lang.Object, java.lang.Object)\r\n",
          "     */\r\n"
        ],
        "line_number": 70,
        "start_line": 66,
        "end_line": 76
      },
      {
        "link": "https://github.com/balazsgrill/viatra-merged/blob/939408ed2a750a8e036009ecaf05e38be813f70d/query/plugins/org.eclipse.viatra.query.runtime.base/src/org/eclipse/viatra/query/runtime/base/api/QueryResultMultimap.java\n",
        "code": [
          "    /* (non-Javadoc)\n",
          "     * @see org.eclipse.viatra.query.runtime.base.api.QueryResultAssociativeStore#getCacheEntries()\n",
          "     */\n",
          "    @Override\n",
          "    protected Collection<Entry<KeyType, ValueType>> getCacheEntries() {\n",
          "        return cache.entries();\n",
          "    }\n",
          "\n",
          "    /* (non-Javadoc)\n",
          "     * @see org.eclipse.viatra.query.runtime.base.api.QueryResultAssociativeStore#internalCachePut(java.lang.Object, java.lang.Object)\n",
          "     */\n"
        ],
        "line_number": 70,
        "start_line": 66,
        "end_line": 76
      },
      {
        "link": "https://github.com/siliconbrain/org.eclipse.incquery/blob/86657b1cd7dc3b2d58f6eb83d85a5862ab350048/plugins/org.eclipse.incquery.runtime.base/src/org/eclipse/incquery/runtime/base/api/QueryResultMultimap.java\n",
        "code": [
          "    /* (non-Javadoc)\n",
          "     * @see org.eclipse.incquery.runtime.base.api.QueryResultAssociativeStore#getCacheEntries()\n",
          "     */\n",
          "    @Override\n",
          "    protected Collection<Entry<KeyType, ValueType>> getCacheEntries() {\n",
          "        return cache.entries();\n",
          "    }\n",
          "\n",
          "    /* (non-Javadoc)\n",
          "     * @see org.eclipse.incquery.runtime.base.api.QueryResultAssociativeStore#internalCachePut(java.lang.Object, java.lang.Object)\n",
          "     */\n"
        ],
        "line_number": 70,
        "start_line": 66,
        "end_line": 76
      },
      {
        "link": "https://github.com/viatra/EMF-IncQuery/blob/7fc7aabb912f5b977eb732947a99af6e8e283a0d/plugins/org.eclipse.incquery.runtime.base/src/org/eclipse/incquery/runtime/base/api/QueryResultMultimap.java\n",
        "code": [
          "    /* (non-Javadoc)\r\n",
          "     * @see org.eclipse.incquery.runtime.base.api.QueryResultAssociativeStore#getCacheEntries()\r\n",
          "     */\r\n",
          "    @Override\r\n",
          "    protected Collection<Entry<KeyType, ValueType>> getCacheEntries() {\r\n",
          "        return cache.entries();\r\n",
          "    }\r\n",
          "\r\n",
          "    /* (non-Javadoc)\r\n",
          "     * @see org.eclipse.incquery.runtime.base.api.QueryResultAssociativeStore#internalCachePut(java.lang.Object, java.lang.Object)\r\n",
          "     */\r\n"
        ],
        "line_number": 70,
        "start_line": 66,
        "end_line": 76
      },
      {
        "link": "https://github.com/imbur/EIQ-LS-dev/blob/c555fc0d851b30c4c3c3168cfee64780761cdf82/plugins/org.eclipse.incquery.runtime.base/src/org/eclipse/incquery/runtime/base/api/QueryResultMultimap.java\n",
        "code": [
          "    /* (non-Javadoc)\n",
          "     * @see org.eclipse.incquery.runtime.base.api.QueryResultAssociativeStore#getCacheEntries()\n",
          "     */\n",
          "    @Override\n",
          "    protected Collection<Entry<KeyType, ValueType>> getCacheEntries() {\n",
          "        return cache.entries();\n",
          "    }\n",
          "\n",
          "    /* (non-Javadoc)\n",
          "     * @see org.eclipse.incquery.runtime.base.api.QueryResultAssociativeStore#internalCachePut(java.lang.Object, java.lang.Object)\n",
          "     */\n"
        ],
        "line_number": 70,
        "start_line": 66,
        "end_line": 76
      }
    ],
    "com.google.common.eventbus.EventBus.post": [
      {
        "link": "https://github.com/desabuh/OOP20-pogeshi/blob/c7e2625537798e8cee002fa64ab0a77842873003/src/main/java/notifier/GuavaEventBusAdapter.java\n",
        "code": [
          "     * global notification to all registered listeners.\n",
          "     * @param event to send to its listeners\n",
          "     */\n",
          "    @Override\n",
          "    public void notifyListener(final T event) {\n",
          "        this.eventBus.post(event);\n",
          "    }\n",
          "\n",
          "}\n"
        ],
        "line_number": 45,
        "start_line": 41,
        "end_line": 49
      },
      {
        "link": "https://github.com/bretterer/smythclay_bot/blob/e89135f046943cdf35ea88b6ebb68f5ad199c2a2/source/me/mast3rplan/phantombot/event/EventBus.java\n",
        "code": [
          "        eventBus.unregister(listener);\n",
          "        aeventBus.unregister(listener);\n",
          "        peventBus.unregister(listener);\n",
          "    }\n",
          "\n",
          "    public void post(Event event) {\n",
          "        if (PhantomBot.instance() == null || PhantomBot.instance().isExiting()) {\n",
          "            return;\n",
          "        }\n",
          "\n",
          "        eventBus.post(event);\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      },
      {
        "link": "https://github.com/alanbuttars/commons-java/blob/2b9f48bf2e7e5ab2903776b637e8c6f9f68909dd/commons-config/src/main/java/com/alanbuttars/commons/config/eventbus/EventBusSyncImpl.java\n",
        "code": [
          "\t/**\n",
          "\t * {@inheritDoc}\n",
          "\t */\n",
          "\t@Override\n",
          "\tpublic <E extends Event> void publish(E event) {\n",
          "\t\tgetEventBus().post(event);\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * {@inheritDoc}\n",
          "\t */\n"
        ],
        "line_number": 63,
        "start_line": 59,
        "end_line": 69
      },
      {
        "link": "https://github.com/yalelibrary/bulk-fcrepo-import/blob/c69644e487f22c170c2e7073a5810f5a9bc4e1d5/bfit-engine/src/main/java/edu/yale/library/ladybird/engine/EventBus.java\n",
        "code": [
          "            }\n",
          "        }\n",
          "        return eventBus;\n",
          "    }\n",
          "\n",
          "    public static void post(final Event event) {\n",
          "        getEventBus().post(event);\n",
          "    }\n",
          "\n",
          "}\n"
        ],
        "line_number": 61,
        "start_line": 57,
        "end_line": 66
      },
      {
        "link": "https://github.com/ydalekorey/multimodule-database/blob/33f619cf9b5a2a8ae92eee2fe8d1644045b8bde5/application/src/main/java/multimodule/application/events/GuavaEventBus.java\n",
        "code": [
          "public class GuavaEventBus implements EventBus {\n",
          "\n",
          "    private Map<String, com.google.common.eventbus.EventBus> eventBuses = new HashMap<>();\n",
          "\n",
          "    @Override\n",
          "    public void post(String topic, Object event) {\n",
          "        com.google.common.eventbus.EventBus topicEventBus = eventBuses.get(topic);\n",
          "\n",
          "        if (Objects.nonNull(topicEventBus)) {\n",
          "            topicEventBus.post(event);\n",
          "        }\n"
        ],
        "line_number": 15,
        "start_line": 11,
        "end_line": 21
      },
      {
        "link": "https://github.com/vishpatel/ddd-cqrs-base-project/blob/cd2308c7c04095a4beafc604eace1fdabd5f470d/src/main/java/org/nthdimenzion/ddd/infrastructure/EventBus.java\n",
        "code": [
          "        this.eventBus.unregister(listener);\r\n",
          "    }\r\n",
          "\r\n",
          "    @Override\r\n",
          "    public void raise(IEvent event) {\r\n",
          "        eventBus.post(event);\r\n",
          "    }\r\n",
          "}\r\n"
        ],
        "line_number": 24,
        "start_line": 20,
        "end_line": 27
      },
      {
        "link": "https://github.com/hgo/micronaut-quartz/blob/06b4bac51c7c839889427e7439ab8ee4bc9a2872/src/main/java/quartz/retry/EventBus.java\n",
        "code": [
          "    public void unregisterAsync(Object object) {\n",
          "        asyncEventBus.unregister(object);\n",
          "    }\n",
          "\n",
          "    public void postAsync(Object event) {\n",
          "        asyncEventBus.post(event);\n",
          "    }\n",
          "\n",
          "    public void register(Object object) {\n",
          "        eventBus.register(object);\n",
          "    }\n"
        ],
        "line_number": 35,
        "start_line": 31,
        "end_line": 41
      },
      {
        "link": "https://github.com/loveprotocol/jdg_android-0.0.1/blob/0d0f12866f33e74329823e1176dd98d48f6f608e/app/src/main/java/com/imhc2/plumboard/commons/eventbus/EventBus.java\n",
        "code": [
          "    }\n",
          "    public static  void unregister(Object o){\n",
          "        eventBus.unregister(o);\n",
          "    }\n",
          "\n",
          "    public static void post(Object event){\n",
          "        eventBus.post(event);\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 29
      },
      {
        "link": "https://github.com/stormpath/stormpath-shiro-eventbus-tutorial/blob/e68790e5725200f9fffca836bc9418ed921c3635/src/main/java/com/stormpath/examples/shiro/ShiroToGuavaEventBusBridge.java\n",
        "code": [
          "        this.shiroEventBus.register(this);\n",
          "    }\n",
          "\n",
          "    @Subscribe\n",
          "    public void bridgeEvent(Object event) {\n",
          "        this.guavaEventBus.post(event);\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * This example will just create a new EventBus, but for real world cases, you would use the same instance the rest\n",
          "     * of your components are using.\n"
        ],
        "line_number": 37,
        "start_line": 33,
        "end_line": 43
      },
      {
        "link": "https://github.com/third-party-service/framework/blob/827740664d7b5c0100ff5c093f867abebec5fd38/framework-eventbus/src/main/java/com/jzg/framework/eventbus/EventBus.java\n",
        "code": [
          "\n",
          "    /**\n",
          "     *\n",
          "     * @param event\n",
          "     */\n",
          "    public void post(Event event) {\n",
          "        eventBus.post(event);\n",
          "    }\n",
          "\n",
          "\n",
          "    public final String identifier() {\n"
        ],
        "line_number": 68,
        "start_line": 64,
        "end_line": 74
      }
    ],
    "org.mockito.internal.configuration.InjectingAnnotationEngine.injectMocks": [
      {
        "link": "https://github.com/porcupineyhairs/nuxeo/blob/c02d63a1ed41b31ee429178ebfd7c1d240ce6ab6/nuxeo-runtime/nuxeo-runtime-test/src/main/java/org/nuxeo/runtime/mockito/NuxeoInjectingAnnotationEngine.java\n",
        "code": [
          "    }\n",
          "\n",
          "    private void processInjectMocks(final Class<?> clazz, final Object testInstance) {\n",
          "        Class<?> classContext = clazz;\n",
          "        while (classContext != Object.class) {\n",
          "            injectMocks(testInstance);\n",
          "            classContext = classContext.getSuperclass();\n",
          "        }\n",
          "    }\n",
          "\n",
          "    private void processIndependentAnnotations(final Class<?> clazz, final Object testInstance) {\n"
        ],
        "line_number": 55,
        "start_line": 51,
        "end_line": 61
      },
      {
        "link": "https://github.com/vijayjcp/powermock/blob/09cf76fa37d85d303c76ceba099ff34dd0b5108b/api/mockito/src/main/java/org/powermock/api/mockito/internal/configuration/PowerMockitoInjectingAnnotationEngine.java\n",
        "code": [
          "\tpublic void process(Class<?> context, Object testClass) {\n",
          "\t\t// this will create @Spies:\n",
          "\t\tnew PowerMockitoSpyAnnotationEngine().process(context, testClass);\n",
          "\n",
          "\t\t// this injects mocks\n",
          "        injectMocks(testClass);\n",
          "\t}\n",
          "}\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 37
      },
      {
        "link": "https://github.com/nkxiaochuan/powermock/blob/64925fadeba2432358a89cd466576fd9e4e3c640/api/mockito/src/main/java/org/powermock/api/mockito/internal/configuration/PowerMockitoInjectingAnnotationEngine.java\n",
        "code": [
          "\tpublic void process(Class<?> context, Object testClass) {\n",
          "\t\t// this will create @Spies:\n",
          "\t\tnew PowerMockitoSpyAnnotationEngine().process(context, testClass);\n",
          "\n",
          "\t\t// this injects mocks\n",
          "        injectMocks(testClass);\n",
          "\t}\n",
          "}\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 37
      },
      {
        "link": "https://github.com/how8586/powermock/blob/64925fadeba2432358a89cd466576fd9e4e3c640/api/mockito/src/main/java/org/powermock/api/mockito/internal/configuration/PowerMockitoInjectingAnnotationEngine.java\n",
        "code": [
          "\tpublic void process(Class<?> context, Object testClass) {\n",
          "\t\t// this will create @Spies:\n",
          "\t\tnew PowerMockitoSpyAnnotationEngine().process(context, testClass);\n",
          "\n",
          "\t\t// this injects mocks\n",
          "        injectMocks(testClass);\n",
          "\t}\n",
          "}\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 37
      },
      {
        "link": "https://github.com/bsugitayasa/powermock/blob/09cf76fa37d85d303c76ceba099ff34dd0b5108b/api/mockito/src/main/java/org/powermock/api/mockito/internal/configuration/PowerMockitoInjectingAnnotationEngine.java\n",
        "code": [
          "\tpublic void process(Class<?> context, Object testClass) {\n",
          "\t\t// this will create @Spies:\n",
          "\t\tnew PowerMockitoSpyAnnotationEngine().process(context, testClass);\n",
          "\n",
          "\t\t// this injects mocks\n",
          "        injectMocks(testClass);\n",
          "\t}\n",
          "}\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 37
      },
      {
        "link": "https://github.com/mnky4a6/powermock/blob/09cf76fa37d85d303c76ceba099ff34dd0b5108b/api/mockito/src/main/java/org/powermock/api/mockito/internal/configuration/PowerMockitoInjectingAnnotationEngine.java\n",
        "code": [
          "\tpublic void process(Class<?> context, Object testClass) {\n",
          "\t\t// this will create @Spies:\n",
          "\t\tnew PowerMockitoSpyAnnotationEngine().process(context, testClass);\n",
          "\n",
          "\t\t// this injects mocks\n",
          "        injectMocks(testClass);\n",
          "\t}\n",
          "}\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 37
      },
      {
        "link": "https://github.com/Jebry/DataField/blob/b980202c24093d8c2725bdcfe27ac42e80f1d945/powermock-api/powermock-api-mockito/src/main/java/org/powermock/api/mockito/internal/configuration/PowerMockitoInjectingAnnotationEngine.java\n",
        "code": [
          "\tpublic void process(Class<?> context, Object testClass) {\n",
          "\t\t// this will create @Spies:\n",
          "\t\tnew PowerMockitoSpyAnnotationEngine().process(context, testClass);\n",
          "\n",
          "\t\t// this injects mocks\n",
          "        injectMocks(testClass);\n",
          "\t}\n",
          "}\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 37
      },
      {
        "link": "https://github.com/Willam2004/powermock/blob/09cf76fa37d85d303c76ceba099ff34dd0b5108b/api/mockito/src/main/java/org/powermock/api/mockito/internal/configuration/PowerMockitoInjectingAnnotationEngine.java\n",
        "code": [
          "\tpublic void process(Class<?> context, Object testClass) {\n",
          "\t\t// this will create @Spies:\n",
          "\t\tnew PowerMockitoSpyAnnotationEngine().process(context, testClass);\n",
          "\n",
          "\t\t// this injects mocks\n",
          "        injectMocks(testClass);\n",
          "\t}\n",
          "}\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 37
      },
      {
        "link": "https://github.com/chiffchaff/powermock/blob/09cf76fa37d85d303c76ceba099ff34dd0b5108b/api/mockito/src/main/java/org/powermock/api/mockito/internal/configuration/PowerMockitoInjectingAnnotationEngine.java\n",
        "code": [
          "\tpublic void process(Class<?> context, Object testClass) {\n",
          "\t\t// this will create @Spies:\n",
          "\t\tnew PowerMockitoSpyAnnotationEngine().process(context, testClass);\n",
          "\n",
          "\t\t// this injects mocks\n",
          "        injectMocks(testClass);\n",
          "\t}\n",
          "}\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 37
      },
      {
        "link": "https://github.com/Jebry/DataField/blob/b980202c24093d8c2725bdcfe27ac42e80f1d945/powermock-api/powermock-api-mockito2/src/main/java/org/powermock/api/mockito/internal/configuration/PowerMockitoInjectingAnnotationEngine.java\n",
        "code": [
          "\tpublic void process(Class<?> context, Object testClass) {\n",
          "\t\t// this will create @Spies:\n",
          "\t\tnew PowerMockitoSpyAnnotationEngine().process(context, testClass);\n",
          "\n",
          "\t\t// this injects mocks\n",
          "        injectMocks(testClass);\n",
          "\t}\n",
          "}\n"
        ],
        "line_number": 35,
        "start_line": 31,
        "end_line": 38
      }
    ],
    "com.google.common.collect.Ordering.natural": [
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.deviceauthserver-DeviceAuthServer/sources/com/google/common/collect/ReverseNaturalOrdering.java\n",
        "code": [
          "        return right.compareTo(left);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Ordering\n",
          "    public <S extends Comparable> Ordering<S> reverse() {\n",
          "        return Ordering.natural();\n",
          "    }\n",
          "\n",
          "    public <E extends Comparable> E min(E a, E b) {\n",
          "        return (E) ((Comparable) NaturalOrdering.INSTANCE.max(a, b));\n",
          "    }\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/collect/ReverseNaturalOrdering.java\n",
        "code": [
          "final class ReverseNaturalOrdering extends Ordering<Comparable> implements Serializable {\n",
          "    static final ReverseNaturalOrdering INSTANCE = new ReverseNaturalOrdering();\n",
          "    private static final long serialVersionUID = 0;\n",
          "\n",
          "    public String toString() {\n",
          "        return \"Ordering.natural().reverse()\";\n",
          "    }\n",
          "\n",
          "    public int compare(Comparable comparable, Comparable comparable2) {\n",
          "        Preconditions.checkNotNull(comparable);\n",
          "        if (comparable == comparable2) {\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": "https://github.com/alphagov/locate-api/blob/208d9b47a1f748aeea5f8687cfe970863812fbf7/locate-api-service/src/main/java/uk/gov/gds/locate/api/model/Ordering.java\n",
        "code": [
          "     */\n",
          "\n",
          "    @Override\n",
          "    public int compareTo(Ordering o) {\n",
          "        return ComparisonChain.start().\n",
          "                compare(this.saoStartNumber, o.getSaoStartNumber(), com.google.common.collect.Ordering.natural().nullsLast()).\n",
          "                compare(this.saoStartSuffix, o.getSaoStartSuffix(), com.google.common.collect.Ordering.natural().nullsLast()).\n",
          "                compare(this.saoEndNumber, o.getSaoEndNumber(), com.google.common.collect.Ordering.natural().nullsLast()).\n",
          "                compare(this.saoEndSuffix, o.getSaoEndSuffix(), com.google.common.collect.Ordering.natural().nullsLast()).\n",
          "                compare(this.paoStartNumber, o.getPaoStartNumber(), com.google.common.collect.Ordering.natural().nullsLast()).\n",
          "                compare(this.paoStartSuffix, o.getPaoStartSuffix(), com.google.common.collect.Ordering.natural().nullsLast()).\n"
        ],
        "line_number": 167,
        "start_line": 163,
        "end_line": 173
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/collect/ReverseNaturalOrdering.java\n",
        "code": [
          "final class ReverseNaturalOrdering extends Ordering<Comparable> implements Serializable {\n",
          "    static final ReverseNaturalOrdering INSTANCE = new ReverseNaturalOrdering();\n",
          "    private static final long serialVersionUID = 0;\n",
          "\n",
          "    public String toString() {\n",
          "        return \"Ordering.natural().reverse()\";\n",
          "    }\n",
          "\n",
          "    public int compare(Comparable comparable, Comparable comparable2) {\n",
          "        Preconditions.checkNotNull(comparable);\n",
          "        if (comparable == comparable2) {\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/collect/ReverseNaturalOrdering.java\n",
        "code": [
          "        return right.compareTo(left);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Ordering\n",
          "    public <S extends Comparable> Ordering<S> reverse() {\n",
          "        return Ordering.natural();\n",
          "    }\n",
          "\n",
          "    public <E extends Comparable> E min(E a, E b) {\n",
          "        return (E) ((Comparable) NaturalOrdering.INSTANCE.max(a, b));\n",
          "    }\n"
        ],
        "line_number": 23,
        "start_line": 19,
        "end_line": 29
      },
      {
        "link": "https://github.com/hooj0/guava-example/blob/3c30cf3bcbd07310f8398eaffe6aefcc42da8435/src/java/main/com/cnblogs/hoojo/ordering/OrderingTest.java\n",
        "code": [
          "<tr>\r\n",
          "<td width=\"199\"><b>\u00e6\u0096\u00b9\u00e6\u00b3\u0095</b><b></b></td>\r\n",
          "<td width=\"419\"><b>\u00e6\u008f\u008f\u00e8\u00bf\u00b0</b><b></b></td>\r\n",
          "</tr>\r\n",
          "<tr>\r\n",
          "<td width=\"199\"><a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Ordering.html#natural()\"><tt>natural()</tt></a></td>\r\n",
          "<td width=\"419\">\u00e5\u00af\u00b9\u00e5\u008f\u00af\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e5\u0081\u009a\u00e8\u0087\u00aa\u00e7\u0084\u00b6\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u0095\u00b0\u00e5\u00ad\u0097\u00e6\u008c\u0089\u00e5\u00a4\u00a7\u00e5\u00b0\u008f\u00ef\u00bc\u008c\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e6\u008c\u0089\u00e5\u0085",
          "\u0088\u00e5\u0090\u008e\u00e6\u008e\u0092\u00e5\u00ba\u008f</td>\r\n",
          "</tr>\r\n",
          "<tr>\r\n",
          "<td width=\"199\"><a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Ordering.html#usingToString()\"><tt>usingToString()</tt></a></td>\r\n"
        ],
        "line_number": 23,
        "start_line": 19,
        "end_line": 29
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/OrderingUtil.java\n",
        "code": [
          "*/ \n",
          "public static <T> com.google.common.collect.Ordering<T> from(java.util.Comparator<T> p0){\n",
          "\treturn com.google.common.collect.Ordering.from(p0);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.Ordering#natural()}\n",
          "*@see com.google.common.collect.Ordering#natural()\n",
          "*<code>public static <C> com.google.common.collect.Ordering<C> com.google.common.collect.Ordering.natural()\n",
          "*natural()</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 105,
        "start_line": 101,
        "end_line": 111
      },
      {
        "link": "https://github.com/zqhxuyuan/tutorials/blob/72740ec130a15331b0b2428b9750099c47073052/middleware/src/main/java/org/tguduru/guava/collections/OrderingDemo.java\n",
        "code": [
          " * @author Guduru, Thirupathi Reddy\n",
          " * @modified 11/19/15\n",
          " */\n",
          "public class OrderingDemo {\n",
          "    public static void main(final String[] args) {\n",
          "        final Ordering<String> naturalOrdering = Ordering.natural();\n",
          "        final List<String> states = Lists.newArrayList(\"KS\", \"MO\", \"OH\", \"NY\", \"SC\");\n",
          "        System.out.println(naturalOrdering.immutableSortedCopy(states)); // this prints the same order as the order is\n",
          "                                                                         // natural.\n",
          "        final Ordering<Object> arbitraryOrdering = Ordering.arbitrary();\n",
          "        System.out.println(arbitraryOrdering.immutableSortedCopy(states));// thia one order arbitrarily.\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 22
      },
      {
        "link": "https://github.com/KualiCo/jute/blob/44b6d2bb2d74a9ac65a1ef4f0e78adc56f0d5687/src/main/java/org/kuali/common/jute/base/Orderings.java\n",
        "code": [
          "\n",
          "    public static final Ordering<String> NULLS_FIRST = nullsFirst();\n",
          "    public static final Ordering<Integer> NULL_INTEGERS_FIRST = nullsFirst();\n",
          "\n",
          "    public static <T extends Comparable<T>> Ordering<T> nullsFirst() {\n",
          "        return natural().nullsFirst();\n",
          "    }\n",
          "\n",
          "}\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 18
      },
      {
        "link": "https://github.com/Alfred1991/javaDemo/blob/3a490e457a906d823e176f4ab6609d401096f0a7/guawaDemo/src/main/java/org/xiaofengcanyue/basicutilities/Ordering.java\n",
        "code": [
          "    public static void main(String[] args) {\n",
          "\n",
          "    }\n",
          "\n",
          "    public static void creation(){\n",
          "        com.google.common.collect.Ordering.natural();\n",
          "        com.google.common.collect.Ordering.usingToString();\n",
          "        com.google.common.collect.Ordering.from(new Comparator<Object>() {\n",
          "            public int compare(Object o1, Object o2) {\n",
          "                return 0;\n",
          "            }\n"
        ],
        "line_number": 24,
        "start_line": 20,
        "end_line": 30
      }
    ],
    "com.google.common.cache.CacheBuilder.recordStats": [
      {
        "link": "https://github.com/openjdl/java-server-framework/blob/98059528bffc5bcfc5aee5024eb18b3f18d564ab/jsf-core/src/main/java/com/openjdl/jsf/core/cache/CachesInMemory.java\n",
        "code": [
          "  public CachesInMemory(Class<T> type, CacheLoader<T, K, S> loader) {\n",
          "    this.type = type;\n",
          "    this.loader = loader;\n",
          "\n",
          "    this.single = com.google.common.cache.CacheBuilder.newBuilder()\n",
          "      .recordStats()\n",
          "      .expireAfterWrite(EXPIRE_DURATION, EXPIRE_TIME_UNIT)\n",
          "      .build(com.google.common.cache.CacheLoader.from((key) ->\n",
          "        Optional.ofNullable(loader.loadSingle(Objects.requireNonNull(key)))\n",
          "      ));\n",
          "    this.page = com.google.common.cache.CacheBuilder.newBuilder()\n"
        ],
        "line_number": 71,
        "start_line": 67,
        "end_line": 77
      },
      {
        "link": "https://github.com/Gilded-Games/OrbisLib/blob/147af30f2d7ff854c7bdbb4cc47d4e55db24d728/src/main/java/com/gildedgames/orbis/lib/util/cache/FileSystemCacheBuilder.java\n",
        "code": [
          "\t\tthis.underlyingCacheBuilder.maximumWeight(weight);\n",
          "\t\treturn this;\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * {@link com.google.common.cache.CacheBuilder#recordStats()}\n",
          "\t */\n",
          "\tpublic FileSystemCacheBuilder<K, V> recordStats()\n",
          "\t{\n",
          "\t\tthis.underlyingCacheBuilder.recordStats();\n",
          "\t\treturn this;\n"
        ],
        "line_number": 134,
        "start_line": 130,
        "end_line": 140
      },
      {
        "link": "https://github.com/18965050/oasis/blob/e5f1cfa32b74fe37aaf0872c497f7c8502df052d/oasis-common-test/src/test/java/cn/xyz/chaos/guava/common/cache/RemovalListenerTest.java\n",
        "code": [
          "     */\n",
          "    @Test\n",
          "    public void testRemovalAfterLastAccessed() throws Exception {\n",
          "        BookRemovalListener bookRemovalListener = new BookRemovalListener();\n",
          "        LoadingCache<String, Book> bookCache = CacheBuilder.newBuilder().expireAfterAccess(10, TimeUnit.MILLISECONDS)\n",
          "                .softValues().recordStats().removalListener(bookRemovalListener).build(bookCacheLoader);\n",
          "\n",
          "        Book book = bookCache.get(\"ISBN-234567\");\n",
          "        assertThat(book.getAuthor(), is(\"Vandeley, Art\"));\n",
          "        assertThat(book.getIsbn(), is(\"ISBN-234567\"));\n",
          "        Thread.sleep(20);\n"
        ],
        "line_number": 73,
        "start_line": 69,
        "end_line": 79
      },
      {
        "link": "https://github.com/Braj65/Sandbox/blob/ab7d5de63d65a120b264e3dc3219fbead1930a03/ScaleConcepts/src/main/java/designCache/guavaToDIsk/FileSystemCacheBuilder.java\n",
        "code": [
          "        underlyingCacheBuilder.maximumWeight(weight);\n",
          "        return this;\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.cache.CacheBuilder#recordStats()}\n",
          "     */\n",
          "    public FileSystemCacheBuilder<K, V> recordStats() {\n",
          "        underlyingCacheBuilder.recordStats();\n",
          "        return this;\n",
          "    }\n"
        ],
        "line_number": 107,
        "start_line": 103,
        "end_line": 113
      },
      {
        "link": "https://github.com/lhong375/aura/blob/5ce3c6e53f3120f45fca05707883d21e2e29f3e5/aura-impl/src/main/java/org/auraframework/impl/cache/CacheImpl.java\n",
        "code": [
          "\t\t\t\t.newBuilder().initialCapacity(builder.initialCapacity)\n",
          "\t\t\t\t.maximumSize(builder.maximumSize)\n",
          "\t\t\t\t.concurrencyLevel(builder.concurrencyLevel);\n",
          "\n",
          "\t\tif (builder.recordStats) {\n",
          "\t\t\tcb = cb.recordStats();\n",
          "\t\t}\n",
          "\n",
          "\t\tif (builder.softValues) {\n",
          "\t\t\tcb = cb.softValues();\n",
          "\t\t}\n"
        ],
        "line_number": 40,
        "start_line": 36,
        "end_line": 46
      },
      {
        "link": "https://github.com/zqhxuyuan/zava/blob/707691039b7aff8f4129e2b25d08b374610990e5/src/main/java/com/github/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic <K1, V1> com.google.common.cache.CacheBuilder<K1, V1> removalListener(RemovalListener<? super K1, ? super V1> listener) {\n",
          "\t\treturn builder.removalListener(listener);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> recordStats() {\n",
          "\t\treturn builder.recordStats();\n",
          "\t}\n",
          "\n",
          "\tpublic <K1, V1> LoadingCache<K1, V1> build(CacheLoader<? super K1, V1> loader) {\n",
          "\t\treturn builder.build(loader);\n"
        ],
        "line_number": 87,
        "start_line": 83,
        "end_line": 93
      },
      {
        "link": "https://github.com/zqhxuyuan/tutorials/blob/72740ec130a15331b0b2428b9750099c47073052/zava/src/main/java/com/github/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic <K1, V1> com.google.common.cache.CacheBuilder<K1, V1> removalListener(RemovalListener<? super K1, ? super V1> listener) {\n",
          "\t\treturn builder.removalListener(listener);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> recordStats() {\n",
          "\t\treturn builder.recordStats();\n",
          "\t}\n",
          "\n",
          "\tpublic <K1, V1> LoadingCache<K1, V1> build(CacheLoader<? super K1, V1> loader) {\n",
          "\t\treturn builder.build(loader);\n"
        ],
        "line_number": 87,
        "start_line": 83,
        "end_line": 93
      },
      {
        "link": "https://github.com/ligaofei-xue/springboot-xdtest/blob/8a42c89d121776093afd0eb44b19e9dbbd9923ca/src/main/java/com/ligaofei/springbootxdtest/utils/BaseCache.java\n",
        "code": [
          "            .concurrencyLevel(5)\n",
          "            //\u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e8\u00bf\u0087\u00e6\u009c\u009f\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00ef\u00bc\u008c\u00e5\u0086\u0099\u00e5\u0085",
          "\u00a5\u00e5\u0090\u008e10\u00e5\u0088\u0086\u00e9\u0092\u009f\u00e8\u00bf\u0087\u00e6\u009c\u009f\n",
          "            .expireAfterWrite(600,TimeUnit.SECONDS)\n",
          "            //\u00e7\u00bb\u009f\u00e8\u00ae\u00a1\u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e5\u0091\u00bd\u00e4\u00b8\u00ad\u00e7\u008e\u0087\n",
          "            .recordStats()\n",
          "            .build();\n",
          "\n",
          "\n",
          "    private Cache<String,Object> oneHourCache = CacheBuilder.newBuilder()\n",
          "            //\u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e5\u0088\u009d\u00e5\u00a7\u008b\u00e5\u00a4\u00a7\u00e5\u00b0\u008f\u00ef\u00bc\u008c\u00e5\u00ba\u0094\u00e8\u00af\u00a5\u00e5\u0090\u0088\u00e7\u0090\u0086\u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00ef\u00bc\u008c\u00e5\u0090\u008e\u00e7\u00bb\u00ad\u00e4\u00bc\u009a\u00e6\u0089\u00a9\u00e5\u00ae\u00b9\n"
        ],
        "line_number": 27,
        "start_line": 23,
        "end_line": 33
      },
      {
        "link": "https://github.com/raphw/guava-cache-overflow-extension/blob/befa47bb955ffa9f344b44e8621290d65e6592d2/src/main/java/com/blogspot/mydailyjava/guava/cache/overflow/FileSystemCacheBuilder.java\n",
        "code": [
          "        underlyingCacheBuilder.maximumWeight(weight);\n",
          "        return this;\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.cache.CacheBuilder#recordStats()}\n",
          "     */\n",
          "    public FileSystemCacheBuilder<K, V> recordStats() {\n",
          "        underlyingCacheBuilder.recordStats();\n",
          "        return this;\n",
          "    }\n"
        ],
        "line_number": 107,
        "start_line": 103,
        "end_line": 113
      },
      {
        "link": "https://github.com/shansun123/sparrow/blob/5eae1d009717f8eb64f90a22ac9b54a440ff0771/src/main/java/com/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic <K1, V1> com.google.common.cache.CacheBuilder<K1, V1> removalListener(RemovalListener<? super K1, ? super V1> listener) {\n",
          "\t\treturn builder.removalListener(listener);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> recordStats() {\n",
          "\t\treturn builder.recordStats();\n",
          "\t}\n",
          "\n",
          "\tpublic <K1, V1> LoadingCache<K1, V1> build(CacheLoader<? super K1, V1> loader) {\n",
          "\t\treturn builder.build(loader);\n"
        ],
        "line_number": 87,
        "start_line": 83,
        "end_line": 93
      }
    ],
    "com.google.common.collect.Multimaps.newMultimap": [
      {
        "link": "https://github.com/fhigit/js-test-driver/blob/f527fd5bcbe216ba45b2237a9582c4e434aefd64/JsTestDriver/src/com/google/jstestdriver/output/TestResultHolder.java\n",
        "code": [
          "\n",
          "  private <T> Multimap<BrowserInfo, T> createMultiMap(\n",
          "      Map<BrowserInfo, Collection<T>> map) {\n",
          "    Supplier<Collection<T>> collectionSupplier = new LinkListSupplier<T>();\n",
          "    Multimap<BrowserInfo, T> resultMultimap =\n",
          "        Multimaps.<BrowserInfo, T>newMultimap(map, collectionSupplier);\n",
          "    return resultMultimap;\n",
          "  }\n",
          "\n",
          "  /**\n",
          "   * @return a map of browser name to test results from that browser\n"
        ],
        "line_number": 50,
        "start_line": 46,
        "end_line": 56
      },
      {
        "link": "https://github.com/vukanac/js-test-driver/blob/f527fd5bcbe216ba45b2237a9582c4e434aefd64/JsTestDriver/src/com/google/jstestdriver/output/TestResultHolder.java\n",
        "code": [
          "\n",
          "  private <T> Multimap<BrowserInfo, T> createMultiMap(\n",
          "      Map<BrowserInfo, Collection<T>> map) {\n",
          "    Supplier<Collection<T>> collectionSupplier = new LinkListSupplier<T>();\n",
          "    Multimap<BrowserInfo, T> resultMultimap =\n",
          "        Multimaps.<BrowserInfo, T>newMultimap(map, collectionSupplier);\n",
          "    return resultMultimap;\n",
          "  }\n",
          "\n",
          "  /**\n",
          "   * @return a map of browser name to test results from that browser\n"
        ],
        "line_number": 50,
        "start_line": 46,
        "end_line": 56
      },
      {
        "link": "https://github.com/webleyson/js-test-driver/blob/f527fd5bcbe216ba45b2237a9582c4e434aefd64/JsTestDriver/src/com/google/jstestdriver/output/TestResultHolder.java\n",
        "code": [
          "\n",
          "  private <T> Multimap<BrowserInfo, T> createMultiMap(\n",
          "      Map<BrowserInfo, Collection<T>> map) {\n",
          "    Supplier<Collection<T>> collectionSupplier = new LinkListSupplier<T>();\n",
          "    Multimap<BrowserInfo, T> resultMultimap =\n",
          "        Multimaps.<BrowserInfo, T>newMultimap(map, collectionSupplier);\n",
          "    return resultMultimap;\n",
          "  }\n",
          "\n",
          "  /**\n",
          "   * @return a map of browser name to test results from that browser\n"
        ],
        "line_number": 50,
        "start_line": 46,
        "end_line": 56
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/MultimapUtil.java\n",
        "code": [
          "*/ \n",
          "public static <K,V,M extends com.google.common.collect.Multimap<K, V> > M invertFrom(com.google.common.collect.Multimap<? extends V, ? extends K> p0,M p1){\n",
          "\treturn com.google.common.collect.Multimaps.invertFrom(p0,p1);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.Multimaps#newMultimap(java.util.Map<K, java.util.Collection<V>>,com.google.common.base.Supplier<? extends java.util.Collection<V>>)}\n",
          "*@see com.google.common.collect.Multimaps#newMultimap(java.util.Map<K, java.util.Collection<V>>,com.google.common.base.Supplier<? extends java.util.Collection<V>>)\n",
          "*<code>public static <K,V> com.google.common.collect.Multimap<K, V> com.google.common.collect.Multimaps.newMultimap(java.util.Map<K, java.util.Collection<V>>,com.google.common.base.Supplier<? extends java.util.Collection<V>>)\n",
          "*newMultimap(java.util.Map<K, java.util.Collection<V>> p0,com.google.common.base.Supplier<? extends java.util.Collection<V>> p1)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 66,
        "start_line": 62,
        "end_line": 72
      },
      {
        "link": "https://github.com/lauraluo/js-test-driver/blob/f527fd5bcbe216ba45b2237a9582c4e434aefd64/JsTestDriver/src/com/google/jstestdriver/output/TestResultHolder.java\n",
        "code": [
          "\n",
          "  private <T> Multimap<BrowserInfo, T> createMultiMap(\n",
          "      Map<BrowserInfo, Collection<T>> map) {\n",
          "    Supplier<Collection<T>> collectionSupplier = new LinkListSupplier<T>();\n",
          "    Multimap<BrowserInfo, T> resultMultimap =\n",
          "        Multimaps.<BrowserInfo, T>newMultimap(map, collectionSupplier);\n",
          "    return resultMultimap;\n",
          "  }\n",
          "\n",
          "  /**\n",
          "   * @return a map of browser name to test results from that browser\n"
        ],
        "line_number": 50,
        "start_line": 46,
        "end_line": 56
      },
      {
        "link": "https://github.com/bsed/js-test-driver/blob/f527fd5bcbe216ba45b2237a9582c4e434aefd64/JsTestDriver/src/com/google/jstestdriver/output/TestResultHolder.java\n",
        "code": [
          "\n",
          "  private <T> Multimap<BrowserInfo, T> createMultiMap(\n",
          "      Map<BrowserInfo, Collection<T>> map) {\n",
          "    Supplier<Collection<T>> collectionSupplier = new LinkListSupplier<T>();\n",
          "    Multimap<BrowserInfo, T> resultMultimap =\n",
          "        Multimaps.<BrowserInfo, T>newMultimap(map, collectionSupplier);\n",
          "    return resultMultimap;\n",
          "  }\n",
          "\n",
          "  /**\n",
          "   * @return a map of browser name to test results from that browser\n"
        ],
        "line_number": 50,
        "start_line": 46,
        "end_line": 56
      },
      {
        "link": "https://github.com/MarcinSc/TerasologyPrime/blob/014e8ad99538c855db68856993c21520ce58f7db/secsy-context/src/main/java/com.gempukku.secsy.context/util/PriorityCollection.java\n",
        "code": [
          "import java.util.Collections;\n",
          "import java.util.Iterator;\n",
          "import java.util.TreeMap;\n",
          "\n",
          "public class PriorityCollection<T> implements Iterable<T> {\n",
          "    private Multimap<Integer, T> multimap = Multimaps.newMultimap(new TreeMap<>(Collections.reverseOrder()),\n",
          "            (Supplier<Collection<T>>) ArrayList::new);\n",
          "\n",
          "    public void add(T t) {\n",
          "        int priority = getItemPriority(t);\n",
          "\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": "https://github.com/bndtools/bnd/blob/ba0bd37c2c33afe4ccfd8660b1a37b1c1ac52eaa/bndtools.test/tester/unresolved-test/src/test/MyTest2.java\n",
        "code": [
          "\t\n",
          "\tMultimap<String, String> m;\n",
          "\t\n",
          "\t@Test\n",
          "\tpublic void myTest2() {\n",
          "\t\tm = Multimaps.newMultimap(new HashMap<>(), ArrayList::new);\n",
          "\t}\n",
          "\t\n",
          "\t@Test\n",
          "\tpublic void myTest3() {\n",
          "\t\tthrow new AssertionFailedError();\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "https://github.com/HaroonBadsha/js-test-driver/blob/f527fd5bcbe216ba45b2237a9582c4e434aefd64/JsTestDriver/src/com/google/jstestdriver/output/TestResultHolder.java\n",
        "code": [
          "\n",
          "  private <T> Multimap<BrowserInfo, T> createMultiMap(\n",
          "      Map<BrowserInfo, Collection<T>> map) {\n",
          "    Supplier<Collection<T>> collectionSupplier = new LinkListSupplier<T>();\n",
          "    Multimap<BrowserInfo, T> resultMultimap =\n",
          "        Multimaps.<BrowserInfo, T>newMultimap(map, collectionSupplier);\n",
          "    return resultMultimap;\n",
          "  }\n",
          "\n",
          "  /**\n",
          "   * @return a map of browser name to test results from that browser\n"
        ],
        "line_number": 50,
        "start_line": 46,
        "end_line": 56
      },
      {
        "link": "https://github.com/queer/hyperblock/blob/47947e7a000beda694030bfa3de609aa87ccd27c/libhyper/src/main/java/gg/amy/singyeong/data/ProxiedRequest.java\n",
        "code": [
          "    @Default\n",
          "    private final HttpMethod method = HttpMethod.GET;\n",
          "    private final String route;\n",
          "    private final Query query;\n",
          "    @Default\n",
          "    private final Multimap<String, String> headers = Multimaps.newMultimap(new HashMap<>(), ArrayList::new);\n",
          "    private final Object body;\n",
          "}\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 32
      }
    ],
    "org.mockito.MockitoAnnotations.initMocks": [
      {
        "link": "https://github.com/diologds/UniversityStudy/blob/da5cafdb164f291db589bd7a3636eee1483def0f/WebProjects/iShop/src/test/java/lv/javaguru/java2/ishop/servlet/mvc/InjectMocksTest.java\n",
        "code": [
          " * @author <a href=\"mailto:viktor.savonin@odnoklassniki.ru\">Viktor Savonin</a>\n",
          " */\n",
          "public class InjectMocksTest {\n",
          "\n",
          "    @Before\n",
          "    public void initMocks() {\n",
          "        MockitoAnnotations.initMocks(this);\n",
          "    }\n",
          "\n",
          "}\n"
        ],
        "line_number": 11,
        "start_line": 7,
        "end_line": 16
      },
      {
        "link": "https://github.com/eea/eionet.datadict/blob/658fabed4acd0892a12d87b261935f09eb6ba817/src/test/java/eionet/datadict/dal/impl/NamespaceDaoImplTest.java\n",
        "code": [
          "    @Spy\n",
          "    private NamespaceRowMapper rowMapper;\n",
          "    \n",
          "    @Before\n",
          "    public void setUp() {\n",
          "        MockitoAnnotations.initMocks(this);\n",
          "    }\n",
          "    \n",
          "    @Test\n",
          "    public void testNamespaceRowMapper() throws SQLException {\n",
          "        when(resultSet.getString(anyString())).thenReturn(\"\");\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "https://github.com/hkastler/reeler/blob/cc13e817317284457dbd597f6362c1f7ca1354ba/reeler/src/test/java/com/hkstlr/reeler/weblogger/weblogs/boundary/manager/WeblogBookmarkManagerTest.java\n",
        "code": [
          "    }\n",
          "\n",
          "   @Before\n",
          "    public void setUp() throws NamingException {\n",
          "\n",
          "        initMocks(this);\n",
          "        this.cut.em = em;\n",
          "\n",
          "    }\n",
          "    \n",
          "     @Test\n"
        ],
        "line_number": 46,
        "start_line": 42,
        "end_line": 52
      },
      {
        "link": "}https://github.com/DianaVargasOrellana/promotionLabo11/blob/09496743036a84bf546b9dee26e29145d39b43e2/src/test/java/com/example/promotiondiana/service/PromotionServiceImplTest.java\n",
        "code": [
          "    private Promotion promotion;\n",
          "\n",
          "\n",
          "    @BeforeTestMethod\n",
          "    public void before(){\n",
          "        initMocks(this);\n",
          "        String date = \"08/10\";\n",
          "        client = new ClientDto();\n",
          "        client.setName(\"Diana\");\n",
          "        client.setEmail(\"dianav715@gmail.com\");\n",
          "        client.setBirthday(date);\n"
        ],
        "line_number": 59,
        "start_line": 55,
        "end_line": 65
      },
      {
        "link": "https://github.com/ExpediaGroup/molten/blob/7b199990fba2c2b76107d030650307820b93979c/molten-test/src/main/java/com/hotels/molten/test/mockito/ReactiveMockitoAnnotations.java\n",
        "code": [
          "     *\n",
          "     * @param testClass the test class to initialize\n",
          "     * @deprecated Use {@link org.mockito.MockitoAnnotations#openMocks(Object)} instead, or the {@code MockitoExtension} if having JUnit Jupiter tests.\n",
          "     */\n",
          "    @Deprecated\n",
          "    public static void initMocks(Object testClass) {\n",
          "        MockitoAnnotations.initMocks(testClass);\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 42
      },
      {
        "link": "https://github.com/lvqiliya/spring4.x/blob/d28effdd722bc215c581a3f84f5a09f03f01a8c9/chapter20/src/test/java/sample/mockito/MockAnnotationTest.java\n",
        "code": [
          "public class MockAnnotationTest {\n",
          "\n",
          "    @Mock User mockUser;\n",
          "    \n",
          "    @Before \n",
          "    public void initMocks() {\n",
          "        MockitoAnnotations.initMocks(this);\n",
          "    }\n",
          "\n",
          "\n",
          "\t@Test\n"
        ],
        "line_number": 15,
        "start_line": 11,
        "end_line": 21
      },
      {
        "link": "https://github.com/SoftmedTanzania/UNFPA_UzaziSalama_CHW/blob/b6ff930eb8562c2a088bbd66e117f3dd42d828be/opensrp-app/src/test/java/org/ei/opensrp/service/PendingFormSubmissionServiceTest.java\n",
        "code": [
          "    private FormDataRepository repository;\n",
          "    private PendingFormSubmissionService pendingFormSubmissionService;\n",
          "\n",
          "    @Before\n",
          "    public void setUp() {\n",
          "        initMocks(this);\n",
          "        pendingFormSubmissionService = new PendingFormSubmissionService(repository);\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void shouldFetchPendingFormSubmissionCount() {\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/robertohsalami/treinamento-exacta/blob/4485f1ef605475082da9368a8b21d88796cc7ec7/mockito/src/test/java/com/mockito/business/AddressSearchTest2.java\n",
        "code": [
          "\n",
          "    //no setup do nosso teste, inclu\u00c3\u00admos uma chamada para a classe MockitoAnnotations, que \u00c3\u00a9 respons\u00c3\u00a1vel por processar as anota\u00c3\u00a7\u00c3\u00b5es da classe\n",
          "    //enviada para o m\u00c3\u00a9todo initMocks\n",
          "    @Before\n",
          "    public void setUp(){\n",
          "        //MockitoAnnotations.initMocks(this);\n",
          "        initMocks(this);\n",
          "        addressSearch = new AddressSearch(mockAddressSearchService);\n",
          "    }\n",
          "\n",
          "    @Test\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      },
      {
        "link": "https://github.com/edwardlee03/spring-test-x/blob/476a5c4823c0df2c78dc6bc87c8b0e10c816fe93/src/main/java/com/test/AbstractTestNGUnitTests.java\n",
        "code": [
          " *       <a href=\"http://testng.org/doc/documentation-main.html#annotations\">\n",
          " *           2 - Annotations</a>\n",
          " *   </li>\n",
          " * </ul>\n",
          " *\n",
          " * @see org.mockito.MockitoAnnotations#initMocks(Object)\n",
          " * @author Bert Lee\n",
          " * @since 2014-8-19\n",
          " */\n",
          "// [FAQ] Is Mockito thread-safe?\n",
          "//@Test(singleThreaded = true)\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      },
      {
        "link": "https://github.com/up1/course-java-framework-with-springboot/blob/cae845581fe928edce812b7ff43ae97eb0bb3c62/workshop/demo/src/test/java/kbtg/tech/demo/controller/HelloControllerUnitTest.java\n",
        "code": [
          "    \n",
          "    @Mock private MessageService messageService;\n",
          "    \n",
          "    @Before\n",
          "    public void initial() {\n",
          "       MockitoAnnotations.initMocks(this);\n",
          "       helloController = new HelloController(messageService);\n",
          "    }\n",
          "    \n",
          "    @Test\n",
          "    public void test() {\n"
        ],
        "line_number": 23,
        "start_line": 19,
        "end_line": 29
      }
    ],
    "com.google.common.base.Joiner.join": [
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/base/Joiner.java\n",
        "code": [
          "\n",
          "    public final StringBuilder appendTo(StringBuilder sb, @NullableDecl Object obj, @NullableDecl Object obj2, Object... objArr) {\n",
          "        return appendTo(sb, iterable(obj, obj2, objArr));\n",
          "    }\n",
          "\n",
          "    public final String join(Iterable<?> iterable) {\n",
          "        return join(iterable.iterator());\n",
          "    }\n",
          "\n",
          "    public final String join(Iterator<?> it) {\n",
          "        return appendTo(new StringBuilder(), it).toString();\n"
        ],
        "line_number": 73,
        "start_line": 69,
        "end_line": 79
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/base/Joiner.java\n",
        "code": [
          "    @CanIgnoreReturnValue\n",
          "    public final StringBuilder appendTo(StringBuilder sb, @NullableDecl Object obj, @NullableDecl Object obj2, Object... objArr) {\n",
          "        return appendTo(sb, iterable(obj, obj2, objArr));\n",
          "    }\n",
          "\n",
          "    public final String join(Iterable<?> iterable) {\n",
          "        return join(iterable.iterator());\n",
          "    }\n",
          "\n",
          "    public final String join(Iterator<?> it) {\n",
          "        return appendTo(new StringBuilder(), it).toString();\n"
        ],
        "line_number": 85,
        "start_line": 81,
        "end_line": 91
      },
      {
        "link": "https://github.com/Eliminater74/com.google.android.tvlauncher/blob/e8284f9970d77a05042a57e9c2173856af7c4246/saved/sources/com/google/common/base/Joiner.java\n",
        "code": [
          "    @CanIgnoreReturnValue\n",
          "    public final StringBuilder appendTo(StringBuilder builder, @NullableDecl Object first, @NullableDecl Object second, Object... rest) {\n",
          "        return appendTo(builder, (Iterable<?>) iterable(first, second, rest));\n",
          "    }\n",
          "\n",
          "    public final String join(Iterable<?> parts) {\n",
          "        return join(parts.iterator());\n",
          "    }\n",
          "\n",
          "    public final String join(Iterator<?> parts) {\n",
          "        return appendTo(new StringBuilder(), parts).toString();\n"
        ],
        "line_number": 163,
        "start_line": 159,
        "end_line": 169
      },
      {
        "link": "https://github.com/trujunzhang/mxYoutube/blob/d5c99b8eb80e8939e502a5a99e562b644779f74b/android/mxYoutubeApp/libraries/google/google-http-client/src/main/java/com/google/api/client/util/Joiner.java\n",
        "code": [
          "\n",
          "  /**\n",
          "   * Returns a string containing the string representation of each of {@code parts}, using the\n",
          "   * previously configured separator between each.\n",
          "   */\n",
          "  public final String join(Iterable<?> parts) {\n",
          "    return wrapped.join(parts);\n",
          "  }\n",
          "}\n"
        ],
        "line_number": 52,
        "start_line": 48,
        "end_line": 56
      },
      {
        "link": "https://github.com/18965050/oasis/blob/e5f1cfa32b74fe37aaf0872c497f7c8502df052d/oasis-common-test/src/test/java/cn/xyz/chaos/guava/common/base/JoinerTest.java\n",
        "code": [
          "        Map<String, String> testMap = Maps.newLinkedHashMap();\n",
          "        testMap.put(\"Washington D.C\", \"Redskins\");\n",
          "        testMap.put(\"New York City\", \"Giants\");\n",
          "        testMap.put(\"Philadelphia\", \"Eagles\");\n",
          "        testMap.put(\"Dallas\", \"Cowboys\");\n",
          "        String returnedString = Joiner.on(\"#\").withKeyValueSeparator(\"=\").join(testMap);\n",
          "        assertThat(returnedString, is(expectedString));\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.base.Joiner#join(Object[]) }\u00e6\u00b5\u008b\u00e8\u00af\u0095\n"
        ],
        "line_number": 35,
        "start_line": 31,
        "end_line": 41
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/base/Joiner.java\n",
        "code": [
          "    @CanIgnoreReturnValue\n",
          "    public final StringBuilder appendTo(StringBuilder builder, @NullableDecl Object first, @NullableDecl Object second, Object... rest) {\n",
          "        return appendTo(builder, iterable(first, second, rest));\n",
          "    }\n",
          "\n",
          "    public final String join(Iterable<?> parts) {\n",
          "        return join(parts.iterator());\n",
          "    }\n",
          "\n",
          "    public final String join(Iterator<?> parts) {\n",
          "        return appendTo(new StringBuilder(), parts).toString();\n"
        ],
        "line_number": 85,
        "start_line": 81,
        "end_line": 91
      },
      {
        "link": "https://github.com/ryangardner/excursion-decompiling/blob/ecc1982649200e1a40519c09219842eb2a3b6beb/divestory-CFR/com/google/api/client/util/Joiner.java\n",
        "code": [
          "\n",
          "    public static Joiner on(char c) {\n",
          "        return new Joiner(com.google.common.base.Joiner.on(c));\n",
          "    }\n",
          "\n",
          "    public final String join(Iterable<?> iterable) {\n",
          "        return this.wrapped.join(iterable);\n",
          "    }\n",
          "}\n",
          "\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 21
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.deviceauthserver-DeviceAuthServer/sources/com/google/common/base/Joiner.java\n",
        "code": [
          "\n",
          "    public final StringBuilder appendTo(StringBuilder builder, @Nullable Object first, @Nullable Object second, Object... rest) {\n",
          "        return appendTo(builder, iterable(first, second, rest));\n",
          "    }\n",
          "\n",
          "    public final String join(Iterable<?> parts) {\n",
          "        return join(parts.iterator());\n",
          "    }\n",
          "\n",
          "    public final String join(Iterator<?> parts) {\n",
          "        return appendTo(new StringBuilder(), parts).toString();\n"
        ],
        "line_number": 77,
        "start_line": 73,
        "end_line": 83
      },
      {
        "link": "https://github.com/ryangardner/excursion-decompiling/blob/ecc1982649200e1a40519c09219842eb2a3b6beb/divestory-Fernflower/com/google/api/client/util/Joiner.java\n",
        "code": [
          "\n",
          "   public static Joiner on(char var0) {\n",
          "      return new Joiner(com.google.common.base.Joiner.on(var0));\n",
          "   }\n",
          "\n",
          "   public final String join(Iterable<?> var1) {\n",
          "      return this.wrapped.join(var1);\n",
          "   }\n",
          "}\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 17
      },
      {
        "link": "https://github.com/Eliminater74/com.google.android.tvlauncher/blob/e8284f9970d77a05042a57e9c2173856af7c4246/src/main/java/com/google/common/base/Joiner.java\n",
        "code": [
          "    @CanIgnoreReturnValue\n",
          "    public final StringBuilder appendTo(StringBuilder builder, @NullableDecl Object first, @NullableDecl Object second, Object... rest) {\n",
          "        return appendTo(builder, (Iterable<?>) iterable(first, second, rest));\n",
          "    }\n",
          "\n",
          "    public final String join(Iterable<?> parts) {\n",
          "        return join(parts.iterator());\n",
          "    }\n",
          "\n",
          "    public final String join(Iterator<?> parts) {\n",
          "        return appendTo(new StringBuilder(), parts).toString();\n"
        ],
        "line_number": 163,
        "start_line": 159,
        "end_line": 169
      }
    ],
    "com.google.common.base.Objects.hashCode": [
      {
        "link": "}https://github.com/Mizzlr/intellij-community/blob/7e1217822045325b2e9269505d07c65daa9e5e9d/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/vsmysee/intellij-community-145.2070/blob/830c8cc41c92cc9e7ac2bf5e0acfb5f712962f47/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/czeidler/idea/blob/68170b1efd753eabd393008b703f06f67bdbe533/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/cash2one/SVN_BackUp_Test_Lev/blob/91cb7ea98530f1e7e552a1d4f7d128f2995e7b82/intellij-community/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/pk-codebox-evo/intellij-community-jan-2017/blob/f2fb9107301bcff384286918120ace8b693cba27/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/Mizzlr/intellij-community/blob/7e1217822045325b2e9269505d07c65daa9e5e9d/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/Mizzlr/intellij-community/blob/7e1217822045325b2e9269505d07c65daa9e5e9d/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/jskierbi/intellij-ce-playground/blob/62a2045ab06d03fb05d327451c1a147280a711f5/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/cash2one/SVN_BackUp_Test_Lev/blob/91cb7ea98530f1e7e552a1d4f7d128f2995e7b82/intellij-community/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/Soya93/Extract-Refactoring/blob/81d187f0013fc8a6c3f846ea644344bc9c94ecb1/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/Soya93/Extract-Refactoring/blob/81d187f0013fc8a6c3f846ea644344bc9c94ecb1/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/luckystar5408/Jvav-Studio-Community/blob/084e8ca780cccca8ae862cc9f63d8b8a52926656/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/jskierbi/intellij-ce-playground/blob/62a2045ab06d03fb05d327451c1a147280a711f5/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/pk-codebox-evo/intellij-community-jan-2017/blob/f2fb9107301bcff384286918120ace8b693cba27/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/cash2one/SVN_BackUp_Test_Lev/blob/91cb7ea98530f1e7e552a1d4f7d128f2995e7b82/intellij-community/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/Soya93/Extract-Refactoring/blob/81d187f0013fc8a6c3f846ea644344bc9c94ecb1/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/JetBrains/intellij-community/blob/0e2aa4030ee763c9b0c828f0b5119f4cdcc66f35/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/17712484466/intellij-community/blob/df7df2d07ecb4db1886dcef871e0a7883be6751b/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/czeidler/idea/blob/68170b1efd753eabd393008b703f06f67bdbe533/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/jared2501/test/blob/451ec7edc28ad2096ef5f0004dc8d510189cca38/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/17712484466/intellij-community/blob/df7df2d07ecb4db1886dcef871e0a7883be6751b/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/JetBrains/intellij-community/blob/0e2aa4030ee763c9b0c828f0b5119f4cdcc66f35/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/easysoc/intellij-community/blob/1baa9b25b5c1f9b19b3aeee72d54efad7c5f7b96/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/17712484466/intellij-community/blob/df7df2d07ecb4db1886dcef871e0a7883be6751b/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/pk-codebox-evo/intellij-community-jan-2017/blob/f2fb9107301bcff384286918120ace8b693cba27/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/JetBrains/intellij-community/blob/0e2aa4030ee763c9b0c828f0b5119f4cdcc66f35/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/jared2501/test/blob/451ec7edc28ad2096ef5f0004dc8d510189cca38/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/jskierbi/intellij-ce-playground/blob/62a2045ab06d03fb05d327451c1a147280a711f5/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/easysoc/intellij-community/blob/1baa9b25b5c1f9b19b3aeee72d54efad7c5f7b96/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "}https://github.com/czeidler/idea/blob/68170b1efd753eabd393008b703f06f67bdbe533/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "  public boolean equals(Object obj) {\n",
          "    return obj != null;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public int hashCode() {\n",
          "    return super.hashCode();\n",
          "  }\n",
          "}\n",
          "class A extends B {\n",
          "  Object[] a1;\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      }
    ],
    "com.google.common.cache.CacheStats.minus": [
      {
        "link": "https://github.com/joansmith/jackrabbit-oak/blob/b6e49dd9a37cccbf3486df1234acf2f96fc2f133/oak-core/src/main/java/org/apache/jackrabbit/oak/cache/CacheStats.java\n",
        "code": [
          "    public String getName() {\n",
          "        return name;\n",
          "    }\n",
          "\n",
          "    private com.google.common.cache.CacheStats stats() {\n",
          "        return cache.stats().minus(lastSnapshot);\n",
          "    }\n",
          "\n",
          "    static String timeInWords(long nanos) {\n",
          "        long millis = TimeUnit.NANOSECONDS.toMillis(nanos);\n",
          "        return String.format(\"%d min, %d sec\",\n"
        ],
        "line_number": 169,
        "start_line": 165,
        "end_line": 175
      },
      {
        "link": "https://github.com/bobisapotato/gerrit/blob/a070eb88d03dc50d81e7c4f338f90bded99583ae/java/com/google/gerrit/truth/CacheStatsSubject.java\n",
        "code": [
          "    return this;\n",
          "  }\n",
          "\n",
          "  public void hasHitCount(int expectedHitCount) {\n",
          "    isNotNull();\n",
          "    check(\"hitCount()\").that(stats.minus(start).hitCount()).isEqualTo(expectedHitCount);\n",
          "  }\n",
          "\n",
          "  public void hasMissCount(int expectedMissCount) {\n",
          "    isNotNull();\n",
          "    check(\"missCount()\").that(stats.minus(start).missCount()).isEqualTo(expectedMissCount);\n"
        ],
        "line_number": 56,
        "start_line": 52,
        "end_line": 62
      },
      {
        "link": "https://github.com/joansmith1/jackrabbit-oak/blob/e0450b7a1e710b0ce391393ab773d10efa1c9f55/oak-core/src/main/java/org/apache/jackrabbit/oak/cache/CacheStats.java\n",
        "code": [
          "    public String getName() {\n",
          "        return name;\n",
          "    }\n",
          "\n",
          "    private com.google.common.cache.CacheStats stats() {\n",
          "        return cache.stats().minus(lastSnapshot);\n",
          "    }\n",
          "\n",
          "    static String timeInWords(long nanos) {\n",
          "        long millis = TimeUnit.NANOSECONDS.toMillis(nanos);\n",
          "        return String.format(\"%d min, %d sec\",\n"
        ],
        "line_number": 167,
        "start_line": 163,
        "end_line": 173
      },
      {
        "link": "https://github.com/joansmith2/jackrabbit-oak/blob/e0450b7a1e710b0ce391393ab773d10efa1c9f55/oak-core/src/main/java/org/apache/jackrabbit/oak/cache/CacheStats.java\n",
        "code": [
          "    public String getName() {\n",
          "        return name;\n",
          "    }\n",
          "\n",
          "    private com.google.common.cache.CacheStats stats() {\n",
          "        return cache.stats().minus(lastSnapshot);\n",
          "    }\n",
          "\n",
          "    static String timeInWords(long nanos) {\n",
          "        long millis = TimeUnit.NANOSECONDS.toMillis(nanos);\n",
          "        return String.format(\"%d min, %d sec\",\n"
        ],
        "line_number": 167,
        "start_line": 163,
        "end_line": 173
      },
      {
        "link": "https://github.com/joansmith3/jackrabbit-oak/blob/e0450b7a1e710b0ce391393ab773d10efa1c9f55/oak-core/src/main/java/org/apache/jackrabbit/oak/cache/CacheStats.java\n",
        "code": [
          "    public String getName() {\n",
          "        return name;\n",
          "    }\n",
          "\n",
          "    private com.google.common.cache.CacheStats stats() {\n",
          "        return cache.stats().minus(lastSnapshot);\n",
          "    }\n",
          "\n",
          "    static String timeInWords(long nanos) {\n",
          "        long millis = TimeUnit.NANOSECONDS.toMillis(nanos);\n",
          "        return String.format(\"%d min, %d sec\",\n"
        ],
        "line_number": 167,
        "start_line": 163,
        "end_line": 173
      },
      {
        "link": "https://github.com/hzut/gerrittb/blob/831d0040346e2c6876a9b71c482864609bafdfd9/java/com/google/gerrit/truth/CacheStatsSubject.java\n",
        "code": [
          "    return this;\n",
          "  }\n",
          "\n",
          "  public void hasHitCount(int expectedHitCount) {\n",
          "    isNotNull();\n",
          "    check(\"hitCount()\").that(stats.minus(start).hitCount()).isEqualTo(expectedHitCount);\n",
          "  }\n",
          "\n",
          "  public void hasMissCount(int expectedMissCount) {\n",
          "    isNotNull();\n",
          "    check(\"missCount()\").that(stats.minus(start).missCount()).isEqualTo(expectedMissCount);\n"
        ],
        "line_number": 56,
        "start_line": 52,
        "end_line": 62
      },
      {
        "link": "https://github.com/denismo/jackrabbit-dynamodb-store/blob/953080b9de9b9333aec85292a75b7f75904d7a19/oak-core/src/main/java/org/apache/jackrabbit/oak/cache/CacheStats.java\n",
        "code": [
          "    public String getName() {\n",
          "        return name;\n",
          "    }\n",
          "\n",
          "    private com.google.common.cache.CacheStats stats() {\n",
          "        return cache.stats().minus(lastSnapshot);\n",
          "    }\n",
          "\n",
          "    static String timeInWords(long nanos) {\n",
          "        long millis = TimeUnit.NANOSECONDS.toMillis(nanos);\n",
          "        return String.format(\"%d min, %d sec\",\n"
        ],
        "line_number": 167,
        "start_line": 163,
        "end_line": 173
      },
      {
        "link": "https://github.com/qtqa/gerrit/blob/3f89ad20459163c445b88a1cd912b670f8cd17db/java/com/google/gerrit/truth/CacheStatsSubject.java\n",
        "code": [
          "    return this;\n",
          "  }\n",
          "\n",
          "  public void hasHitCount(int expectedHitCount) {\n",
          "    isNotNull();\n",
          "    check(\"hitCount()\").that(stats.minus(start).hitCount()).isEqualTo(expectedHitCount);\n",
          "  }\n",
          "\n",
          "  public void hasMissCount(int expectedMissCount) {\n",
          "    isNotNull();\n",
          "    check(\"missCount()\").that(stats.minus(start).missCount()).isEqualTo(expectedMissCount);\n"
        ],
        "line_number": 56,
        "start_line": 52,
        "end_line": 62
      },
      {
        "link": "https://github.com/qzmfranklin/gerrit/blob/c735a7c24d277ee5cd84c9fd4a10c85ea5b0a005/java/com/google/gerrit/truth/CacheStatsSubject.java\n",
        "code": [
          "    return this;\n",
          "  }\n",
          "\n",
          "  public void hasHitCount(int expectedHitCount) {\n",
          "    isNotNull();\n",
          "    check(\"hitCount()\").that(stats.minus(start).hitCount()).isEqualTo(expectedHitCount);\n",
          "  }\n",
          "\n",
          "  public void hasMissCount(int expectedMissCount) {\n",
          "    isNotNull();\n",
          "    check(\"missCount()\").that(stats.minus(start).missCount()).isEqualTo(expectedMissCount);\n"
        ],
        "line_number": 56,
        "start_line": 52,
        "end_line": 62
      },
      {
        "link": "https://github.com/Jertlok/gerrit/blob/2a9116fc765562de5fab57d2cef50e45ac7c1b40/java/com/google/gerrit/truth/CacheStatsSubject.java\n",
        "code": [
          "    return this;\n",
          "  }\n",
          "\n",
          "  public void hasHitCount(int expectedHitCount) {\n",
          "    isNotNull();\n",
          "    check(\"hitCount()\").that(stats.minus(start).hitCount()).isEqualTo(expectedHitCount);\n",
          "  }\n",
          "\n",
          "  public void hasMissCount(int expectedMissCount) {\n",
          "    isNotNull();\n",
          "    check(\"missCount()\").that(stats.minus(start).missCount()).isEqualTo(expectedMissCount);\n"
        ],
        "line_number": 56,
        "start_line": 52,
        "end_line": 62
      }
    ],
    "org.mockito.stubbing.OngoingStubbing.then": [
      {
        "link": "https://github.com/vijayjcp/powermock/blob/09cf76fa37d85d303c76ceba099ff34dd0b5108b/api/mockito/src/main/java/org/powermock/api/mockito/internal/expectation/DelegatingToConstructorsOngoingStubbing.java\n",
        "code": [
          "                when.thenAnswer(answer);\n",
          "            }\n",
          "        }.invoke();\n",
          "    }\n",
          "\n",
          "    public OngoingStubbing<T> then(final Answer<?> answer) {\n",
          "        stubbing.then(answer);\n",
          "        return new InvokeStubMethod() {\n",
          "            @Override\n",
          "            public void performStubbing(OngoingStubbing<T> when) {\n",
          "                when.then(answer);\n"
        ],
        "line_number": 103,
        "start_line": 99,
        "end_line": 109
      }
    ],
    "com.google.common.collect.MultimapBuilder.treeKeys": [
      {
        "link": "https://github.com/dubu/guava-libraries/blob/47b7717473d269db4a5af25678bccce73c736c66/guava-tests/test/com/google/common/collect/MultimapBuilderTest.java\n",
        "code": [
          "  @GwtIncompatible(\"doesn't build without explicit type parameters on build() methods\")\n",
          "  public void testGenerics() {\n",
          "    ListMultimap<String, Integer> a = MultimapBuilder.hashKeys().arrayListValues().build();\n",
          "    SortedSetMultimap<String, Integer> b = MultimapBuilder.linkedHashKeys().treeSetValues().build();\n",
          "    SetMultimap<String, Integer> c =\n",
          "        MultimapBuilder.treeKeys(String.CASE_INSENSITIVE_ORDER).hashSetValues().build();\n",
          "  }\n",
          "\n",
          "  public void testGenerics_gwtCompatible() {\n",
          "    ListMultimap<String, Integer> a =\n",
          "        MultimapBuilder.hashKeys().arrayListValues().<String, Integer>build();\n"
        ],
        "line_number": 45,
        "start_line": 41,
        "end_line": 51
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "                return Platform.newLinkedHashMapWithExpectedSize(i);\n",
          "            }\n",
          "        };\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Comparable> treeKeys() {\n",
          "        return treeKeys(Ordering.natural());\n",
          "    }\n",
          "\n",
          "    public static <K0> MultimapBuilderWithKeys<K0> treeKeys(final Comparator<K0> comparator) {\n",
          "        Preconditions.checkNotNull(comparator);\n"
        ],
        "line_number": 64,
        "start_line": 60,
        "end_line": 70
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.deviceauthserver-DeviceAuthServer/sources/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "                return new LinkedHashMap(expectedKeys);\n",
          "            }\n",
          "        };\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Comparable> treeKeys() {\n",
          "        return treeKeys(Ordering.natural());\n",
          "    }\n",
          "\n",
          "    public static <K0> MultimapBuilderWithKeys<K0> treeKeys(final Comparator<K0> comparator) {\n",
          "        Preconditions.checkNotNull(comparator);\n"
        ],
        "line_number": 68,
        "start_line": 64,
        "end_line": 74
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "                return Platform.newLinkedHashMapWithExpectedSize(expectedKeys);\n",
          "            }\n",
          "        };\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Comparable> treeKeys() {\n",
          "        return treeKeys(Ordering.natural());\n",
          "    }\n",
          "\n",
          "    public static <K0> MultimapBuilderWithKeys<K0> treeKeys(final Comparator<K0> comparator) {\n",
          "        Preconditions.checkNotNull(comparator);\n"
        ],
        "line_number": 64,
        "start_line": 60,
        "end_line": 70
      },
      {
        "link": "https://github.com/duyleekun/zycami-ded/blob/27686ca846de6d164692c81bac2ae7f85710361f/src/main/java/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "        CollectPreconditions.checkNonnegative(n10, \"expectedKeys\");\n",
          "        MultimapBuilder$2 multimapBuilder$2 = new MultimapBuilder$2(n10);\n",
          "        return multimapBuilder$2;\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilder$MultimapBuilderWithKeys treeKeys() {\n",
          "        return MultimapBuilder.treeKeys(Ordering.natural());\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilder$MultimapBuilderWithKeys treeKeys(Comparator comparator) {\n",
          "        Preconditions.checkNotNull(comparator);\n"
        ],
        "line_number": 52,
        "start_line": 48,
        "end_line": 58
      },
      {
        "link": "https://github.com/tianweidut/guava-study/blob/544b5b4ac0d1594eea1b9489cd4d37bf373ca3e0/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/MultimapBuilderTest.java\n",
        "code": [
          "  public void testGenerics_gwtCompatible() {\n",
          "    ListMultimap<String, Integer> a =\n",
          "        MultimapBuilder.hashKeys().arrayListValues().<String, Integer>build();\n",
          "    SortedSetMultimap<String, Integer> b =\n",
          "        MultimapBuilder.linkedHashKeys().treeSetValues().<String, Integer>build();\n",
          "    SetMultimap<String, Integer> c = MultimapBuilder.treeKeys(String.CASE_INSENSITIVE_ORDER)\n",
          "        .hashSetValues().<String, Integer>build();\n",
          "  }\n",
          "\n",
          "  public void testTreeKeys_gwtCompatible() {\n",
          "    ListMultimap<String, Integer> multimap =\n"
        ],
        "line_number": 41,
        "start_line": 37,
        "end_line": 47
      },
      {
        "link": "https://github.com/privatemousse/guava/blob/729800f33ca04808da7906dfa6356e179c91df7e/guava-tests/test/com/google/common/collect/MultimapBuilderTest.java\n",
        "code": [
          "  @GwtIncompatible(\"doesn't build without explicit type parameters on build() methods\")\n",
          "  public void testGenerics() {\n",
          "    ListMultimap<String, Integer> a = MultimapBuilder.hashKeys().arrayListValues().build();\n",
          "    SortedSetMultimap<String, Integer> b = MultimapBuilder.linkedHashKeys().treeSetValues().build();\n",
          "    SetMultimap<String, Integer> c =\n",
          "        MultimapBuilder.treeKeys(String.CASE_INSENSITIVE_ORDER).hashSetValues().build();\n",
          "  }\n",
          "\n",
          "  public void testGenerics_gwtCompatible() {\n",
          "    ListMultimap<String, Integer> a =\n",
          "        MultimapBuilder.hashKeys().arrayListValues().<String, Integer>build();\n"
        ],
        "line_number": 45,
        "start_line": 41,
        "end_line": 51
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "                return Platform.newLinkedHashMapWithExpectedSize(i);\n",
          "            }\n",
          "        };\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Comparable> treeKeys() {\n",
          "        return treeKeys(Ordering.natural());\n",
          "    }\n",
          "\n",
          "    public static <K0> MultimapBuilderWithKeys<K0> treeKeys(final Comparator<K0> comparator) {\n",
          "        Preconditions.checkNotNull(comparator);\n"
        ],
        "line_number": 64,
        "start_line": 60,
        "end_line": 70
      },
      {
        "link": "https://github.com/upclab/socrates-matcher-android/blob/81594ffd21e1714f86d5316eff43f73e7d00545b/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "    public static MultimapBuilderWithKeys<Object> linkedHashKeys(int expectedKeys) {\n",
          "        CollectPreconditions.checkNonnegative(expectedKeys, \"expectedKeys\");\n",
          "        return new C07182(expectedKeys);\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Comparable> treeKeys() {\n",
          "        return treeKeys(Ordering.natural());\n",
          "    }\n",
          "\n",
          "    public static <K0> MultimapBuilderWithKeys<K0> treeKeys(Comparator<K0> comparator) {\n",
          "        Preconditions.checkNotNull(comparator);\n"
        ],
        "line_number": 340,
        "start_line": 336,
        "end_line": 346
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "                return Platform.newLinkedHashMapWithExpectedSize(i);\n",
          "            }\n",
          "        };\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Comparable> treeKeys() {\n",
          "        return treeKeys(Ordering.natural());\n",
          "    }\n",
          "\n",
          "    public static <K0> MultimapBuilderWithKeys<K0> treeKeys(final Comparator<K0> comparator) {\n",
          "        Preconditions.checkNotNull(comparator);\n"
        ],
        "line_number": 60,
        "start_line": 56,
        "end_line": 66
      }
    ],
    "com.google.common.base.Ascii.equalsIgnoreCase": [
      {
        "link": "https://github.com/proofpoint/platform/blob/949f785ea0212b1f5c68a2d92cc0bd8f4bd46ff2/http-server/src/main/java/com/proofpoint/http/server/GZipRequestFilter.java\n",
        "code": [
          "    {\n",
          "        HttpServletRequest request = (HttpServletRequest) servletRequest;\n",
          "        HttpServletResponse response = (HttpServletResponse) servletResponse;\n",
          "\n",
          "        String contentEncoding = request.getHeader(\"content-encoding\");\n",
          "        if (contentEncoding != null && equalsIgnoreCase(contentEncoding, \"gzip\")) {\n",
          "            filterChain.doFilter(new GZipRequestWrapper(request), servletResponse);\n",
          "        }\n",
          "        else {\n",
          "            filterChain.doFilter(request, response);\n",
          "        }\n"
        ],
        "line_number": 45,
        "start_line": 41,
        "end_line": 51
      },
      {
        "link": "https://github.com/Hapag-Lloyd/oversigt/blob/affc11b21444abffb272af92a039af80d892f38e/core/src/main/java/com/hlag/oversigt/security/Roles.java\n",
        "code": [
          "\t\treturn role;\n",
          "\t}\n",
          "\n",
          "\tpublic static Optional<Roles> fromString(final String string) {\n",
          "\t\tfor (final Roles roles : values()) {\n",
          "\t\t\tif (Ascii.equalsIgnoreCase(roles.name(), string) || Ascii.equalsIgnoreCase(roles.name, string)) {\n",
          "\t\t\t\treturn Optional.of(roles);\n",
          "\t\t\t}\n",
          "\t\t}\n",
          "\t\treturn Optional.empty();\n",
          "\t}\n"
        ],
        "line_number": 37,
        "start_line": 33,
        "end_line": 43
      },
      {
        "link": "https://github.com/MinlerNull/UiConductor/blob/5d5f4face03d80788541f46ddcb938f58e82f997/backend/core/utils/RegionType.java\n",
        "code": [
          "\n",
          "  private final String regionType;\n",
          "\n",
          "  public static RegionType fromString(String value) {\n",
          "    for (RegionType regionType : RegionType.values()) {\n",
          "      if (Ascii.equalsIgnoreCase(regionType.regionType, value)\n",
          "          || Ascii.equalsIgnoreCase(regionType.toString(), value)) {\n",
          "        return regionType;\n",
          "      }\n",
          "    }\n",
          "    return RegionType.UNKNOWN;\n"
        ],
        "line_number": 35,
        "start_line": 31,
        "end_line": 41
      },
      {
        "link": "https://github.com/google/tsunami-security-scanner/blob/3ed174a869e8b398f4400e0a5be1888c954e3f5f/common/src/main/java/com/google/tsunami/common/version/KnownQualifier.java\n",
        "code": [
          "  }\n",
          "\n",
          "  static boolean isKnownQualifier(String string) {\n",
          "    checkNotNull(string);\n",
          "    return Arrays.stream(KnownQualifier.values())\n",
          "        .anyMatch(knownQualifier -> Ascii.equalsIgnoreCase(knownQualifier.qualifierText, string));\n",
          "  }\n",
          "\n",
          "  static KnownQualifier fromText(String string) {\n",
          "    checkNotNull(string);\n",
          "    return Arrays.stream(KnownQualifier.values())\n"
        ],
        "line_number": 50,
        "start_line": 46,
        "end_line": 56
      },
      {
        "link": "https://github.com/privatemousse/guava/blob/729800f33ca04808da7906dfa6356e179c91df7e/guava-tests/benchmark/com/google/common/base/AsciiBenchmark.java\n",
        "code": [
          "    CharSequence[] lhs = new CharSequence[] { testString, testSeq, testString, testSeq };\n",
          "    CharSequence[] rhs = new CharSequence[] { upperString, upperString, upperSeq, upperSeq };\n",
          "\n",
          "    boolean dummy = false;\n",
          "    for (int i = 0; i < reps; i++) {\n",
          "      dummy ^= Ascii.equalsIgnoreCase(lhs[i & 0x3], rhs[i & 0x3]);\n",
          "    }\n",
          "    return dummy;\n",
          "  }\n",
          "\n",
          "  @Benchmark boolean equalsIgnoreCaseStringOnly(int reps) {\n"
        ],
        "line_number": 120,
        "start_line": 116,
        "end_line": 126
      },
      {
        "link": "https://github.com/google/tsunami-security-scanner/blob/b8a4c0066e37e0a91a92f1b81ba33da247451abe/main/src/main/java/com/google/tsunami/main/cli/option/OutputDataFormat.java\n",
        "code": [
          "   * @param value the string representation of the {@link OutputDataFormat} enum.\n",
          "   * @return the parsed {@link OutputDataFormat} enum.\n",
          "   */\n",
          "  public static Optional<OutputDataFormat> parse(String value) {\n",
          "    for (OutputDataFormat outputDataFormat : OutputDataFormat.values()) {\n",
          "      if (Ascii.equalsIgnoreCase(outputDataFormat.name(), value)) {\n",
          "        return Optional.of(outputDataFormat);\n",
          "      }\n",
          "    }\n",
          "\n",
          "    return Optional.empty();\n"
        ],
        "line_number": 33,
        "start_line": 29,
        "end_line": 39
      },
      {
        "link": "https://github.com/pitchpoint-solutions/sfs/blob/d62387f494b369c819e03e5dc9e97b39a9fc85b0/sfs-server/src/main/java/org/sfs/util/NullSafeAscii.java\n",
        "code": [
          "            return Ascii.truncate(seq, maxLength, truncationIndicator);\n",
          "        }\n",
          "        return null;\n",
          "    }\n",
          "\n",
          "    public static boolean equalsIgnoreCase(CharSequence s1, CharSequence s2) {\n",
          "        if (s1 == s2) {\n",
          "            return true;\n",
          "        } else if (s1 == null || s2 == null) {\n",
          "            return false;\n",
          "        } else {\n"
        ],
        "line_number": 73,
        "start_line": 69,
        "end_line": 79
      },
      {
        "link": "https://github.com/dubu/guava-libraries/blob/47b7717473d269db4a5af25678bccce73c736c66/guava-tests/benchmark/com/google/common/base/AsciiBenchmark.java\n",
        "code": [
          "    CharSequence[] lhs = new CharSequence[] { testString, testSeq, testString, testSeq };\n",
          "    CharSequence[] rhs = new CharSequence[] { upperString, upperString, upperSeq, upperSeq };\n",
          "\n",
          "    boolean dummy = false;\n",
          "    for (int i = 0; i < reps; i++) {\n",
          "      dummy ^= Ascii.equalsIgnoreCase(lhs[i & 0x3], rhs[i & 0x3]);\n",
          "    }\n",
          "    return dummy;\n",
          "  }\n",
          "\n",
          "  @Benchmark boolean equalsIgnoreCaseStringOnly(int reps) {\n"
        ],
        "line_number": 120,
        "start_line": 116,
        "end_line": 126
      },
      {
        "link": "https://github.com/akjava/akjava_gwtlib/blob/2cea41951a7a011020690453194f878a3817b143/src/com/akjava/gwt/html5/client/file/FilePredicates.java\n",
        "code": [
          "\t\t\tif(file==null){\r\n",
          "\t\t\t\treturn false;\r\n",
          "\t\t\t}\r\n",
          "\t\t\tString extension=FileUtils.getExtension(file.getFileName());\r\n",
          "\t\t\tfor(String ext:extensions){\r\n",
          "\t\t\t\tboolean match=Ascii.equalsIgnoreCase(extension, ext);\r\n",
          "\t\t\t\tif(match){\r\n",
          "\t\t\t\t\treturn true;\r\n",
          "\t\t\t\t}\r\n",
          "\t\t\t}\r\n",
          "\t\t\t\r\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/Afikoman/TsunamiTest/blob/f8b0cc70d1ef74e2680e5789c276426a021f9719/tsunami-security-scanner/common/src/main/java/com/google/tsunami/common/version/KnownQualifier.java\n",
        "code": [
          "  }\n",
          "\n",
          "  static boolean isKnownQualifier(String string) {\n",
          "    checkNotNull(string);\n",
          "    return Arrays.stream(KnownQualifier.values())\n",
          "        .anyMatch(knownQualifier -> Ascii.equalsIgnoreCase(knownQualifier.qualifierText, string));\n",
          "  }\n",
          "\n",
          "  static KnownQualifier fromText(String string) {\n",
          "    checkNotNull(string);\n",
          "    return Arrays.stream(KnownQualifier.values())\n"
        ],
        "line_number": 50,
        "start_line": 46,
        "end_line": 56
      }
    ],
    "org.mockito.Mockito.stubVoid": [
      {
        "link": "https://github.com/rmuir/securemock/blob/49008bcd3aab115909bb1ffec6f4916c0246fd07/src/main/java/org/elasticsearch/mock/Mockito.java\n",
        "code": [
          "            }\n",
          "        });\n",
          "    }\n",
          "    \n",
          "    @Deprecated\n",
          "    public static <T> VoidMethodStubbable<T> stubVoid(final T mock) {\n",
          "        return AccessController.doPrivileged(new PrivilegedAction<VoidMethodStubbable<T>>() {\n",
          "            @Override\n",
          "            public VoidMethodStubbable<T> run() {\n",
          "                return org.mockito.Mockito.stubVoid(mock);\n",
          "            }\n"
        ],
        "line_number": 195,
        "start_line": 191,
        "end_line": 201
      },
      {
        "link": "https://github.com/elastic/securemock/blob/639dc44b6bbeb074dd799e51bd69fe0e87699922/src/main/java/org/elasticsearch/mock/Mockito.java\n",
        "code": [
          "            }\n",
          "        });\n",
          "    }\n",
          "    \n",
          "    @Deprecated\n",
          "    public static <T> VoidMethodStubbable<T> stubVoid(final T mock) {\n",
          "        return AccessController.doPrivileged(new PrivilegedAction<VoidMethodStubbable<T>>() {\n",
          "            @Override\n",
          "            public VoidMethodStubbable<T> run() {\n",
          "                return org.mockito.Mockito.stubVoid(mock);\n",
          "            }\n"
        ],
        "line_number": 195,
        "start_line": 191,
        "end_line": 201
      },
      {
        "link": "https://github.com/evosuite-problematic-tests/test-data/blob/ca17583607f76e7853d1bb17a20669ce6d616d0c/Mockito/Mockito/evosuite-branch/1/src/Mockito-16f/org/mockito/Mockito_ESTest.java\n",
        "code": [
          "\n",
          "  @Test(timeout = 4000)\n",
          "  public void test16()  throws Throwable  {\n",
          "      // Undeclared exception!\n",
          "      try { \n",
          "        Mockito.stubVoid((Object) \")S[\");\n",
          "        fail(\"Expecting exception: RuntimeException\");\n",
          "      \n",
          "      } catch(RuntimeException e) {\n",
          "      }\n",
          "  }\n"
        ],
        "line_number": 178,
        "start_line": 174,
        "end_line": 184
      },
      {
        "link": "}https://github.com/Tateology/java-corpus/blob/804cb203b0ffe57f22a1f5002a72fbadb38c3215/mockito/test/org/mockito/MockitoTest.java\n",
        "code": [
          "    }\n",
          "    \n",
          "    @SuppressWarnings(\"deprecation\")\n",
          "    @Test(expected=NotAMockException.class)\n",
          "    public void shouldValidateMockWhenStubbingVoid() {\n",
          "        Mockito.stubVoid(\"notMock\");\n",
          "    }\n",
          "    \n",
          "    @Test(expected=NotAMockException.class)\n",
          "    public void shouldValidateMockWhenCreatingInOrderObject() {\n",
          "        Mockito.inOrder(\"notMock\");\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      },
      {
        "link": "}https://github.com/senrigan/wnms/blob/267cbaf0a4bfcf2f66c121bcc5d8dd017d5a8ad3/mockito-master/mockito-master/test/org/mockito/MockitoTest.java\n",
        "code": [
          "    }\n",
          "    \n",
          "    @SuppressWarnings(\"deprecation\")\n",
          "    @Test(expected=NotAMockException.class)\n",
          "    public void shouldValidateMockWhenStubbingVoid() {\n",
          "        Mockito.stubVoid(\"notMock\");\n",
          "    }\n",
          "    \n",
          "    @Test(expected=NotAMockException.class)\n",
          "    public void shouldValidateMockWhenCreatingInOrderObject() {\n",
          "        Mockito.inOrder(\"notMock\");\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      },
      {
        "link": "}https://github.com/hub-se/BugLoRD/blob/068db7d777dd09333694259f5a2c4a5bbe086007/spectra-generator/src/test/resources/Mockito12b/test/org/mockito/MockitoTest.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @SuppressWarnings(\"deprecation\")\n",
          "    @Test(expected = NotAMockException.class)\n",
          "    public void shouldValidateMockWhenStubbingVoid() {\n",
          "        Mockito.stubVoid(\"notMock\");\n",
          "    }\n",
          "\n",
          "    @Test(expected = NotAMockException.class)\n",
          "    public void shouldValidateMockWhenCreatingInOrderObject() {\n",
          "        Mockito.inOrder(\"notMock\");\n"
        ],
        "line_number": 50,
        "start_line": 46,
        "end_line": 56
      },
      {
        "link": "https://github.com/ThalaivaStars/OrgRepo1/blob/bfbee383bd2b2e4a928006d1703c22c0a2aae155/securemock/src/main/java/org/elasticsearch/mock/Mockito.java\n",
        "code": [
          "            }\n",
          "        });\n",
          "    }\n",
          "    \n",
          "    @Deprecated\n",
          "    public static <T> VoidMethodStubbable<T> stubVoid(final T mock) {\n",
          "        return AccessController.doPrivileged(new PrivilegedAction<VoidMethodStubbable<T>>() {\n",
          "            @Override\n",
          "            public VoidMethodStubbable<T> run() {\n",
          "                return org.mockito.Mockito.stubVoid(mock);\n",
          "            }\n"
        ],
        "line_number": 195,
        "start_line": 191,
        "end_line": 201
      },
      {
        "link": "}https://github.com/sdogruyol/mockito/blob/220717f2923e84a6c0242e7880adaf527dd1fb45/test/org/mockito/MockitoTest.java\n",
        "code": [
          "    }\n",
          "    \n",
          "    @SuppressWarnings(\"deprecation\")\n",
          "    @Test(expected=NotAMockException.class)\n",
          "    public void shouldValidateMockWhenStubbingVoid() {\n",
          "        Mockito.stubVoid(\"notMock\");\n",
          "    }\n",
          "    \n",
          "    @Test(expected=NotAMockException.class)\n",
          "    public void shouldValidateMockWhenCreatingInOrderObject() {\n",
          "        Mockito.inOrder(\"notMock\");\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      },
      {
        "link": "}https://github.com/xgdsmileboy/StateCoverLocator/blob/60ebef4726176058d0de92340eda1d172cb879d0/res/junitRes/mockito/mockito_1_buggy/test/org/mockito/MockitoTest.java\n",
        "code": [
          "    }\n",
          "    \n",
          "    @SuppressWarnings(\"deprecation\")\n",
          "    @Test(expected=NotAMockException.class)\n",
          "    public void shouldValidateMockWhenStubbingVoid() {\n",
          "        Mockito.stubVoid(\"notMock\");\n",
          "    }\n",
          "    \n",
          "    @Test(expected=NotAMockException.class)\n",
          "    public void shouldValidateMockWhenCreatingInOrderObject() {\n",
          "        Mockito.inOrder(\"notMock\");\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      },
      {
        "link": "}https://github.com/liudabingSjtu/MyMockito/blob/06eb23d3aa28c19066529762da4a92bd2f4f34cd/test/org/mockito/MockitoTest.java\n",
        "code": [
          "    }\n",
          "    \n",
          "    @SuppressWarnings(\"deprecation\")\n",
          "    @Test(expected=NotAMockException.class)\n",
          "    public void shouldValidateMockWhenStubbingVoid() {\n",
          "        Mockito.stubVoid(\"notMock\");\n",
          "    }\n",
          "    \n",
          "    @Test(expected=NotAMockException.class)\n",
          "    public void shouldValidateMockWhenCreatingInOrderObject() {\n",
          "        Mockito.inOrder(\"notMock\");\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      }
    ],
    "com.google.common.collect.FluentIterable.limit": [
      {
        "link": "}https://github.com/17712484466/intellij-community/blob/df7df2d07ecb4db1886dcef871e0a7883be6751b/java/typeMigration/testData/inspections/guava/fixAllProblems.java\n",
        "code": [
          "  public FluentIterable<String> create() {\n",
          "    return FluentIterable.from(new ArrayList<String>()).transform(s -> s + s);\n",
          "  }\n",
          "\n",
          "  public FluentIterable<String> create2() {\n",
          "    return create().limit(12);\n",
          "  }\n",
          "\n",
          "  public FluentIterable<String> create3() {\n",
          "    return create2().limit(12);\n",
          "  }\n"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      },
      {
        "link": "}https://github.com/vsmysee/intellij-community-145.2070/blob/830c8cc41c92cc9e7ac2bf5e0acfb5f712962f47/java/typeMigration/testData/inspections/guava/fixAllProblems.java\n",
        "code": [
          "  public FluentIterable<String> create() {\n",
          "    return FluentIterable.from(new ArrayList<String>()).transform(s -> s + s);\n",
          "  }\n",
          "\n",
          "  public FluentIterable<String> create2() {\n",
          "    return create().limit(12);\n",
          "  }\n",
          "\n",
          "  public FluentIterable<String> create3() {\n",
          "    return create2().limit(12);\n",
          "  }\n"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      },
      {
        "link": "https://github.com/dansimpson/chronos/blob/9cd0b92a36355536838cd3ae571338149a2dda70/chronos-api/src/main/java/org/ds/chronos/timeline/stream/DataStream.java\n",
        "code": [
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * @param size\n",
          "\t * @return\n",
          "\t * @see com.google.common.collect.FluentIterable#limit(int)\n",
          "\t */\n",
          "\tpublic final FluentIterable<O> limit(int size) {\n",
          "\t\treturn source.limit(size);\n",
          "\t}\n",
          "\n"
        ],
        "line_number": 191,
        "start_line": 187,
        "end_line": 197
      },
      {
        "link": "https://github.com/przodownikR1/university_training/blob/27b6bffd0bd1c1f839aa1a4e61dc8f6d2872e743/src/test/java/pl/java/scalatech/test/guava/FunctionTest.java\n",
        "code": [
          "    @Test\n",
          "    public void fluentTest() {\n",
          "        FluentIterable<Integer> numbers = from(asList(1, 2, 3, 4, 5, 6));\n",
          "        System.out.println(numbers.filter(Predicates.byEvenNumbers()));\n",
          "        System.out.println(numbers.filter(Predicates.bigggerThanValues()));\n",
          "        System.out.println(numbers.limit(4));\n",
          "        System.out.println(numbers.toSortedList(new Comparator<Integer>() {\n",
          "\n",
          "            @Override\n",
          "            public int compare(Integer o1, Integer o2) {\n",
          "                if (o2.intValue() > o1.intValue()) {\n"
        ],
        "line_number": 89,
        "start_line": 85,
        "end_line": 95
      },
      {
        "link": "}https://github.com/Mizzlr/intellij-community/blob/7e1217822045325b2e9269505d07c65daa9e5e9d/java/typeMigration/testData/inspections/guava/fixAllProblems.java\n",
        "code": [
          "  public FluentIterable<String> create() {\n",
          "    return FluentIterable.from(new ArrayList<String>()).transform(s -> s + s);\n",
          "  }\n",
          "\n",
          "  public FluentIterable<String> create2() {\n",
          "    return create().limit(12);\n",
          "  }\n",
          "\n",
          "  public FluentIterable<String> create3() {\n",
          "    return create2().limit(12);\n",
          "  }\n"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      },
      {
        "link": "https://github.com/angryziber/slides/blob/055d336ac9c0fbf985fb150a3ba158b725f1b840/java7/src/GuavaDemo.java\n",
        "code": [
          "\n",
          "    out.println(from(list).filter(new Predicate<String>() {\n",
          "      @Override public boolean apply(String s) {\n",
          "        return s.startsWith(\"a\");\n",
          "      }\n",
          "    }).limit(5).toSortedList(natural().reverse()));\n",
          "  }\n",
          "}\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 39
      },
      {
        "link": "https://github.com/wq19880601/java-util-examples/blob/ac75836491d34e7026acfb37a113e2f83beab99e/src/test/java/com/levelup/java/collections/TakeNElementsFromList.java\n",
        "code": [
          "\t\t\n",
          "\t\tList<Integer> contestents = Lists.newArrayList(1, 2, 3, 4, 5, 6, 7, 8);\n",
          "\t\t\n",
          "\t\tList<Integer> contestWinners = contestents\n",
          "\t\t\t\t.stream()\n",
          "\t\t\t\t.limit(5)\n",
          "\t\t\t\t.collect(Collectors.toList());\n",
          "\t\t\n",
          "\t\tassertEquals(5, contestWinners.size());\n",
          "\t}\n",
          "\t\n"
        ],
        "line_number": 48,
        "start_line": 44,
        "end_line": 54
      },
      {
        "link": "}https://github.com/JetBrains/intellij-community/blob/0e2aa4030ee763c9b0c828f0b5119f4cdcc66f35/java/typeMigration/testData/inspections/guava/fixAllProblems.java\n",
        "code": [
          "  public FluentIterable<String> create() {\n",
          "    return FluentIterable.from(new ArrayList<String>()).transform(s -> s + s);\n",
          "  }\n",
          "\n",
          "  public FluentIterable<String> create2() {\n",
          "    return create().limit(12);\n",
          "  }\n",
          "\n",
          "  public FluentIterable<String> create3() {\n",
          "    return create2().limit(12);\n",
          "  }\n"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      },
      {
        "link": "https://github.com/mazhongjia/googleguava/blob/469dd25c28702ade798f86b25390b45519475bb7/src/main/java/com/mzj/guava/collections/FluentIterableExampleTest.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void testCycle(){\n",
          "        FluentIterable<String> lists = build();\n",
          "        FluentIterable<String> cycle = lists.cycle().limit(20);//cycle\u00e6\u0098\u00af\u00e5\u00be\u00aa\u00e7\u008e\u00af\u00ef\u00bc\u008c\u00e7\u009b\u00b8\u00e5\u00bd\u0093\u00e4\u00ba\u008eJAVA8\u00e7\u009a\u0084\u00e6\u0097\u00a0\u00e9\u0099\u0090\u00e6\u00b5\u0081generate\n",
          "        System.out.println(cycle);\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void testTransformAndConcat(){\n"
        ],
        "line_number": 30,
        "start_line": 26,
        "end_line": 36
      },
      {
        "link": "}https://github.com/pk-codebox-evo/intellij-community-jan-2017/blob/f2fb9107301bcff384286918120ace8b693cba27/java/typeMigration/testData/inspections/guava/fixAllProblems.java\n",
        "code": [
          "  public FluentIterable<String> create() {\n",
          "    return FluentIterable.from(new ArrayList<String>()).transform(s -> s + s);\n",
          "  }\n",
          "\n",
          "  public FluentIterable<String> create2() {\n",
          "    return create().limit(12);\n",
          "  }\n",
          "\n",
          "  public FluentIterable<String> create3() {\n",
          "    return create2().limit(12);\n",
          "  }\n"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      }
    ],
    "com.google.common.cache.CacheStats.totalLoadTime": [
      {
        "link": "https://github.com/joansmith1/jackrabbit-oak/blob/e0450b7a1e710b0ce391393ab773d10efa1c9f55/oak-core/src/main/java/org/apache/jackrabbit/oak/cache/CacheStats.java\n",
        "code": [
          "        return stats().loadExceptionRate();\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public long getTotalLoadTime() {\n",
          "        return stats().totalLoadTime();\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public double getAverageLoadPenalty() {\n",
          "        return stats().averageLoadPenalty();\n"
        ],
        "line_number": 98,
        "start_line": 94,
        "end_line": 104
      },
      {
        "link": "https://github.com/platformlayer/platformlayer/blob/e7a8cdff2aefa658cb41cffdd8c33d19e3b5bc3c/shared/utils/src/main/java/org/platformlayer/metrics/CacheMetricsReporter.java\n",
        "code": [
          "\t\tsubtree.addInt(\"loadCount\", stats.loadCount());\n",
          "\t\tsubtree.addInt(\"loadExceptionCount\", stats.loadExceptionCount());\n",
          "\t\tsubtree.addInt(\"loadSuccessCount\", stats.loadSuccessCount());\n",
          "\t\tsubtree.addInt(\"missCount\", stats.missCount());\n",
          "\t\tsubtree.addInt(\"requestCount\", stats.requestCount());\n",
          "\t\tsubtree.addInt(\"totalLoadTime\", stats.totalLoadTime());\n",
          "\n",
          "\t\tsubtree.addFloat(\"averageLoadPenalty\", stats.averageLoadPenalty());\n",
          "\t\tsubtree.addFloat(\"hitRate\", stats.hitRate());\n",
          "\t\tsubtree.addFloat(\"loadExceptionRate\", stats.loadExceptionRate());\n",
          "\t\tsubtree.addFloat(\"missRate\", stats.missRate());\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/eric-erki/Everything-as-a-service/blob/e7a8cdff2aefa658cb41cffdd8c33d19e3b5bc3c/shared/utils/src/main/java/org/platformlayer/metrics/CacheMetricsReporter.java\n",
        "code": [
          "\t\tsubtree.addInt(\"loadCount\", stats.loadCount());\n",
          "\t\tsubtree.addInt(\"loadExceptionCount\", stats.loadExceptionCount());\n",
          "\t\tsubtree.addInt(\"loadSuccessCount\", stats.loadSuccessCount());\n",
          "\t\tsubtree.addInt(\"missCount\", stats.missCount());\n",
          "\t\tsubtree.addInt(\"requestCount\", stats.requestCount());\n",
          "\t\tsubtree.addInt(\"totalLoadTime\", stats.totalLoadTime());\n",
          "\n",
          "\t\tsubtree.addFloat(\"averageLoadPenalty\", stats.averageLoadPenalty());\n",
          "\t\tsubtree.addFloat(\"hitRate\", stats.hitRate());\n",
          "\t\tsubtree.addFloat(\"loadExceptionRate\", stats.loadExceptionRate());\n",
          "\t\tsubtree.addFloat(\"missRate\", stats.missRate());\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/hashsdn/hashsdn-infrautils/blob/b9ca3b3eec69993bb9bd213635aa6ad8acbbb398/caches/impl/guava/src/main/java/org/opendaylight/infrautils/caches/guava/internal/GuavaCacheStatsAdapter.java\n",
        "code": [
          "                .put(\"loadExceptionCount\", guavaStats.loadExceptionCount())\n",
          "                .put(\"loadExceptionRate\", guavaStats.loadExceptionRate())\n",
          "                .put(\"loadSuccessCount\", guavaStats.loadSuccessCount())\n",
          "                .put(\"missRate\", guavaStats.missRate())\n",
          "                .put(\"requestCount\", guavaStats.requestCount())\n",
          "                .put(\"totalLoadTime\", guavaStats.totalLoadTime())\n",
          "                .build();\n",
          "    }\n",
          "\n",
          "}\n"
        ],
        "line_number": 55,
        "start_line": 51,
        "end_line": 60
      },
      {
        "link": "https://github.com/qianmoyushang/poetry/blob/c7f3f525f97b9af81349b131154fc04ac3f0b661/ivan-4-poetry/src/main/java/cn/dendarii/ivan/common/bean/http/HBCacheStats.java\n",
        "code": [
          "            tar.setMissCount(src.missCount());\n",
          "            tar.setHitRate(src.hitRate());\n",
          "            tar.setMissRate(src.missRate());\n",
          "            tar.setLoadSuccessCount(src.loadSuccessCount());\n",
          "            tar.setLoadExceptionCount(src.loadExceptionCount());\n",
          "            tar.setTotalLoadTime(src.totalLoadTime());\n",
          "            tar.setEvictionCount(src.evictionCount());\n",
          "            tar.setAverageLoadPenalty(src.averageLoadPenalty());\n",
          "        }\n",
          "        return tar;\n",
          "    }\n"
        ],
        "line_number": 35,
        "start_line": 31,
        "end_line": 41
      },
      {
        "link": "https://github.com/alanda-io/alanda/blob/e1456e6c5c3c0f18b7d36825bfa487b45f213a45/backend/alanda-base/src/main/java/io/alanda/base/util/cache/CacheStatsDto.java\n",
        "code": [
          "    this.hitCount = cs.hitCount();\n",
          "    this.missCount = cs.missCount();\n",
          "\n",
          "    this.loadSuccessCount = cs.loadSuccessCount();\n",
          "    this.loadExceptionCount = cs.loadExceptionCount();\n",
          "    this.totalLoadTime = cs.totalLoadTime();\n",
          "    this.evictionCount = cs.evictionCount();\n",
          "    \n",
          "    this.hitRate = cs.hitRate();\n",
          "\n",
          "    this.averageLoadPenalty = cs.averageLoadPenalty();\n"
        ],
        "line_number": 48,
        "start_line": 44,
        "end_line": 54
      },
      {
        "link": "https://github.com/tclan126/glassdoorapk/blob/858772b5f2caa20a9370c52d8dbda83da4ee1d69/sources/com/google/common/cache/AbstractCache.java\n",
        "code": [
          "            com.google.common.cache.CacheStats snapshot = statsCounter.snapshot();\n",
          "            this.hitCount.add(snapshot.hitCount());\n",
          "            this.missCount.add(snapshot.missCount());\n",
          "            this.loadSuccessCount.add(snapshot.loadSuccessCount());\n",
          "            this.loadExceptionCount.add(snapshot.loadExceptionCount());\n",
          "            this.totalLoadTime.add(snapshot.totalLoadTime());\n",
          "            this.evictionCount.add(snapshot.evictionCount());\n",
          "        }\n",
          "\n",
          "        @Override // com.google.common.cache.AbstractCache.StatsCounter\n",
          "        public void recordEviction() {\n"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      },
      {
        "link": "https://github.com/joansmith2/jackrabbit-oak/blob/e0450b7a1e710b0ce391393ab773d10efa1c9f55/oak-core/src/main/java/org/apache/jackrabbit/oak/cache/CacheStats.java\n",
        "code": [
          "        return stats().loadExceptionRate();\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public long getTotalLoadTime() {\n",
          "        return stats().totalLoadTime();\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public double getAverageLoadPenalty() {\n",
          "        return stats().averageLoadPenalty();\n"
        ],
        "line_number": 98,
        "start_line": 94,
        "end_line": 104
      },
      {
        "link": "https://github.com/votingsystem/votingsystem/blob/316c6440e462bc3394b682bb0d8644140e7b6588/votingsystem-serviceprovider/src/main/java/org/votingsystem/serviceprovider/util/CacheStats.java\n",
        "code": [
          "    public CacheStats(com.google.common.cache.CacheStats cacheStats) {\n",
          "        this.hitCount = cacheStats.hitCount();\n",
          "        this.missCount = cacheStats.missCount();\n",
          "        this.loadSuccessCount = cacheStats.loadSuccessCount();\n",
          "        this.loadExceptionCount = cacheStats.loadExceptionCount();\n",
          "        this.totalLoadTime = cacheStats.totalLoadTime();\n",
          "        this.evictionCount = cacheStats.evictionCount();\n",
          "    }\n",
          "\n",
          "    public long getHitCount() {\n",
          "        return hitCount;\n"
        ],
        "line_number": 19,
        "start_line": 15,
        "end_line": 25
      },
      {
        "link": "https://github.com/denismo/jackrabbit-dynamodb-store/blob/953080b9de9b9333aec85292a75b7f75904d7a19/oak-core/src/main/java/org/apache/jackrabbit/oak/cache/CacheStats.java\n",
        "code": [
          "        return stats().loadExceptionRate();\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public long getTotalLoadTime() {\n",
          "        return stats().totalLoadTime();\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public double getAverageLoadPenalty() {\n",
          "        return stats().averageLoadPenalty();\n"
        ],
        "line_number": 98,
        "start_line": 94,
        "end_line": 104
      }
    ],
    "org.mockito.mock.MockCreationSettings.getInvocationListeners": [
      {
        "link": "https://github.com/lujunfa/springboot-debug/blob/48b552f8c99c3f732ceb8342df25271659c1253b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/MockReset.java\n",
        "code": [
          "\tstatic MockReset get(Object mock) {\n",
          "\t\tMockReset reset = MockReset.NONE;\n",
          "\t\tMockingDetails mockingDetails = Mockito.mockingDetails(mock);\n",
          "\t\tif (mockingDetails.isMock()) {\n",
          "\t\t\tMockCreationSettings<?> settings = mockingDetails.getMockCreationSettings();\n",
          "\t\t\tList<InvocationListener> listeners = settings.getInvocationListeners();\n",
          "\t\t\tfor (Object listener : listeners) {\n",
          "\t\t\t\tif (listener instanceof ResetInvocationListener) {\n",
          "\t\t\t\t\treset = ((ResetInvocationListener) listener).getReset();\n",
          "\t\t\t\t}\n",
          "\t\t\t}\n"
        ],
        "line_number": 107,
        "start_line": 103,
        "end_line": 113
      },
      {
        "link": "https://github.com/CodingAdai/spring-boot-study/blob/533a2f70933d0dfbe7ed034ea2e50297b70fdaa5/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/MockReset.java\n",
        "code": [
          "\tstatic MockReset get(Object mock) {\n",
          "\t\tMockReset reset = MockReset.NONE;\n",
          "\t\tMockingDetails mockingDetails = Mockito.mockingDetails(mock);\n",
          "\t\tif (mockingDetails.isMock()) {\n",
          "\t\t\tMockCreationSettings<?> settings = mockingDetails.getMockCreationSettings();\n",
          "\t\t\tList<InvocationListener> listeners = settings.getInvocationListeners();\n",
          "\t\t\tfor (Object listener : listeners) {\n",
          "\t\t\t\tif (listener instanceof ResetInvocationListener) {\n",
          "\t\t\t\t\treset = ((ResetInvocationListener) listener).getReset();\n",
          "\t\t\t\t}\n",
          "\t\t\t}\n"
        ],
        "line_number": 107,
        "start_line": 103,
        "end_line": 113
      },
      {
        "link": "https://github.com/mbboyraz/jiraPostFunctions/blob/c90eb41ab0e3680bf8b0221b41c596b17560052b/target/classes/org/mockito/internal/handler/InvocationNotifierHandler.java\n",
        "code": [
          "    private final List<InvocationListener> invocationListeners;\r\n",
          "    private final InternalMockHandler<T> mockHandler;\r\n",
          "\r\n",
          "    public InvocationNotifierHandler(InternalMockHandler<T> mockHandler, MockCreationSettings settings) {\r\n",
          "        this.mockHandler = mockHandler;\r\n",
          "        this.invocationListeners = settings.getInvocationListeners();\r\n",
          "    }\r\n",
          "\r\n",
          "    public Object handle(Invocation invocation) throws Throwable {\r\n",
          "        try {\r\n",
          "            Object returnedValue = mockHandler.handle(invocation);\r\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      },
      {
        "link": "https://github.com/dingkang1/dkdecangku/blob/3e4090c3e306325e74f920b3003f94e8a361ad64/spring-boot-1.5.11.RELEASE/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/MockReset.java\n",
        "code": [
          "\tstatic MockReset get(Object mock) {\n",
          "\t\tMockReset reset = MockReset.NONE;\n",
          "\t\tif (ClassUtils.isPresent(\"org.mockito.internal.util.MockUtil\", null)) {\n",
          "\t\t\tif (Mockito.mockingDetails(mock).isMock()) {\n",
          "\t\t\t\tMockCreationSettings settings = MockitoApi.get().getMockSettings(mock);\n",
          "\t\t\t\tList listeners = settings.getInvocationListeners();\n",
          "\t\t\t\tfor (Object listener : listeners) {\n",
          "\t\t\t\t\tif (listener instanceof ResetInvocationListener) {\n",
          "\t\t\t\t\t\treset = ((ResetInvocationListener) listener).getReset();\n",
          "\t\t\t\t\t}\n",
          "\t\t\t\t}\n"
        ],
        "line_number": 108,
        "start_line": 104,
        "end_line": 114
      },
      {
        "link": "https://github.com/yinquan529/platform-external-mockito/blob/34f80a94e45f7110ec3444c1d0ecfacc194d009a/src/org/mockito/internal/handler/InvocationNotifierHandler.java\n",
        "code": [
          "    private List<InvocationListener> invocationListeners;\r\n",
          "    private InternalMockHandler<T> mockHandler;\r\n",
          "\r\n",
          "    public InvocationNotifierHandler(InternalMockHandler<T> mockHandler, MockCreationSettings settings) {\r\n",
          "        this.mockHandler = mockHandler;\r\n",
          "        this.invocationListeners = settings.getInvocationListeners();\r\n",
          "    }\r\n",
          "\r\n",
          "    public Object handle(Invocation invocation) throws Throwable {\r\n",
          "        try {\r\n",
          "            Object returnedValue = mockHandler.handle(invocation);\r\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      },
      {
        "link": "https://github.com/hello-shf/spring-boot-2.0.4.RELEASE/blob/38631aef899f61efbf18f96b2683fd7b261dab39/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/MockReset.java\n",
        "code": [
          "\tstatic MockReset get(Object mock) {\n",
          "\t\tMockReset reset = MockReset.NONE;\n",
          "\t\tMockingDetails mockingDetails = Mockito.mockingDetails(mock);\n",
          "\t\tif (mockingDetails.isMock()) {\n",
          "\t\t\tMockCreationSettings<?> settings = mockingDetails.getMockCreationSettings();\n",
          "\t\t\tList<InvocationListener> listeners = settings.getInvocationListeners();\n",
          "\t\t\tfor (Object listener : listeners) {\n",
          "\t\t\t\tif (listener instanceof ResetInvocationListener) {\n",
          "\t\t\t\t\treset = ((ResetInvocationListener) listener).getReset();\n",
          "\t\t\t\t}\n",
          "\t\t\t}\n"
        ],
        "line_number": 112,
        "start_line": 108,
        "end_line": 118
      },
      {
        "link": "https://github.com/Barikpramod/mavenp/blob/4bde91e33e2860b2aab142028c04eff37b7791f2/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/MockReset.java\n",
        "code": [
          "\t@SuppressWarnings(\"rawtypes\")\n",
          "\tstatic MockReset get(Object mock) {\n",
          "\t\tMockReset reset = MockReset.NONE;\n",
          "\t\tif (util.isMock(mock)) {\n",
          "\t\t\tMockCreationSettings settings = util.getMockSettings(mock);\n",
          "\t\t\tList listeners = settings.getInvocationListeners();\n",
          "\t\t\tfor (Object listener : listeners) {\n",
          "\t\t\t\tif (listener instanceof ResetInvocationListener) {\n",
          "\t\t\t\t\treset = ((ResetInvocationListener) listener).getReset();\n",
          "\t\t\t\t}\n",
          "\t\t\t}\n"
        ],
        "line_number": 109,
        "start_line": 105,
        "end_line": 115
      },
      {
        "link": "https://github.com/IllusionRom-deprecated/android_platform_external_mockito/blob/34f80a94e45f7110ec3444c1d0ecfacc194d009a/src/org/mockito/internal/handler/InvocationNotifierHandler.java\n",
        "code": [
          "    private List<InvocationListener> invocationListeners;\r\n",
          "    private InternalMockHandler<T> mockHandler;\r\n",
          "\r\n",
          "    public InvocationNotifierHandler(InternalMockHandler<T> mockHandler, MockCreationSettings settings) {\r\n",
          "        this.mockHandler = mockHandler;\r\n",
          "        this.invocationListeners = settings.getInvocationListeners();\r\n",
          "    }\r\n",
          "\r\n",
          "    public Object handle(Invocation invocation) throws Throwable {\r\n",
          "        try {\r\n",
          "            Object returnedValue = mockHandler.handle(invocation);\r\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      },
      {
        "link": "https://github.com/Mylearningexperiences/sindhu/blob/4bde91e33e2860b2aab142028c04eff37b7791f2/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/MockReset.java\n",
        "code": [
          "\t@SuppressWarnings(\"rawtypes\")\n",
          "\tstatic MockReset get(Object mock) {\n",
          "\t\tMockReset reset = MockReset.NONE;\n",
          "\t\tif (util.isMock(mock)) {\n",
          "\t\t\tMockCreationSettings settings = util.getMockSettings(mock);\n",
          "\t\t\tList listeners = settings.getInvocationListeners();\n",
          "\t\t\tfor (Object listener : listeners) {\n",
          "\t\t\t\tif (listener instanceof ResetInvocationListener) {\n",
          "\t\t\t\t\treset = ((ResetInvocationListener) listener).getReset();\n",
          "\t\t\t\t}\n",
          "\t\t\t}\n"
        ],
        "line_number": 109,
        "start_line": 105,
        "end_line": 115
      },
      {
        "link": "https://github.com/brianwoo/cm11_grouper/blob/b23d9dd09915bf2c1a744113e507d3d7fc32f4bd/external/mockito/src/org/mockito/internal/handler/InvocationNotifierHandler.java\n",
        "code": [
          "    private List<InvocationListener> invocationListeners;\r\n",
          "    private InternalMockHandler<T> mockHandler;\r\n",
          "\r\n",
          "    public InvocationNotifierHandler(InternalMockHandler<T> mockHandler, MockCreationSettings settings) {\r\n",
          "        this.mockHandler = mockHandler;\r\n",
          "        this.invocationListeners = settings.getInvocationListeners();\r\n",
          "    }\r\n",
          "\r\n",
          "    public Object handle(Invocation invocation) throws Throwable {\r\n",
          "        try {\r\n",
          "            Object returnedValue = mockHandler.handle(invocation);\r\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      }
    ],
    "com.google.common.cache.LoadingCache.getUnchecked": [
      {
        "link": "https://github.com/wlj5240/tutorials/blob/58595acd6f3868c3e9ef2e05c9a0deaed05408e3/guava/src/main/java/org/baeldung/guava/memoizer/FibonacciSequence.java\n",
        "code": [
          "        if (n == 0) {\n",
          "            return BigInteger.ZERO;\n",
          "        } else if (n == 1) {\n",
          "            return BigInteger.ONE;\n",
          "        } else {\n",
          "            return memo.getUnchecked(n - 1).add(memo.getUnchecked(n - 2));\n",
          "        }\n",
          "    }\n",
          "\n",
          "}\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 26
      },
      {
        "link": "https://github.com/kiranbadala/java-practice/blob/baa041ce0e8c2bf8b1a4fd8afea247821440d7fc/guava-library-practice/src/test/java/com/kiran/practice/guava_join_split_collections/GuavaCacheTest.java\n",
        "code": [
          "\t\t\t\treturn key.toUpperCase();\n",
          "\t\t\t}\n",
          "\n",
          "\t\t};\n",
          "\t\tLoadingCache<String, String> cache = CacheBuilder.newBuilder().build(loader);\n",
          "\t\tcache.getUnchecked(\"KIRAN\");\n",
          "\t\tcache.getUnchecked(\"KARAN\");\n",
          "\t\tcache.getUnchecked(\"KuRAN\");\n",
          "\t\tcache.getUnchecked(\"KARAN\");\n",
          "\t\tSystem.out.println(cache.size());\n",
          "\t\tcache.getUnchecked(\"KIRAN\");\n"
        ],
        "line_number": 24,
        "start_line": 20,
        "end_line": 30
      },
      {
        "link": "https://github.com/MykolaBova/proj.proj.2/blob/0d71c2ba55243921d42ade31fc2274784f81958c/baeldung/tutorials/guava-modules/guava-core/src/main/java/com/baeldung/guava/memoizer/FibonacciSequence.java\n",
        "code": [
          "        if (n == 0) {\n",
          "            return BigInteger.ZERO;\n",
          "        } else if (n == 1) {\n",
          "            return BigInteger.ONE;\n",
          "        } else {\n",
          "            return memo.getUnchecked(n - 1).add(memo.getUnchecked(n - 2));\n",
          "        }\n",
          "    }\n",
          "\n",
          "}\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 25
      },
      {
        "link": "https://github.com/grzegorz2047/PlayerRegisterSystem/blob/b53a567761f4aebd73c6d9a90baa94de852ac52d/src/main/java/pl/grzegorz2047/ticketentrysystem/rest/SimpleCache.java\n",
        "code": [
          "                    });\n",
          "\n",
          "    }\n",
          "\n",
          "    public boolean canAttempt(String ip)  {\n",
          "        return attemptsCache.getUnchecked(ip) < MAX_ATTEMPT;\n",
          "    }\n",
          "    public void attempt(String ip) {\n",
          "        int attempts = attemptsCache.getUnchecked(ip);\n",
          "        attempts++;\n",
          "        attemptsCache.put(ip, attempts);\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "https://github.com/malikLuk/about_everything/blob/872378d234a5a26b0c8ff642a184b7c0bccaf273/src/main/java/habr/caching/Algorythms.java\n",
        "code": [
          "    };\n",
          "\n",
          "    static LoadingCache<String, String> cache = CacheBuilder.newBuilder().maximumSize(3).build(loader);\n",
          "\n",
          "    public static void main(String[] args) {\n",
          "        cache.getUnchecked(\"first\");\n",
          "        cache.getUnchecked(\"sec\");\n",
          "        cache.getUnchecked(\"dsdt\");\n",
          "        cache.getUnchecked(\"fsdst\");\n",
          "        cache.getUnchecked(\"fsds11t\");\n",
          "        System.out.println();\n"
        ],
        "line_number": 37,
        "start_line": 33,
        "end_line": 43
      },
      {
        "link": "https://github.com/NVardell/Other/blob/abdc3ad655fed30021eae06fea3bf065ddd1e5b2/Tutorials/guava/src/main/java/org/baeldung/guava/memoizer/FibonacciSequence.java\n",
        "code": [
          "        if (n == 0) {\n",
          "            return BigInteger.ZERO;\n",
          "        } else if (n == 1) {\n",
          "            return BigInteger.ONE;\n",
          "        } else {\n",
          "            return memo.getUnchecked(n - 1).add(memo.getUnchecked(n - 2));\n",
          "        }\n",
          "    }\n",
          "\n",
          "}\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 26
      },
      {
        "link": "https://github.com/kalidask21/baeldungrepo/blob/69f947e3cd1c1b830b6b69fe94f17f226c31c365/guava/src/main/java/org/baeldung/guava/memoizer/FibonacciSequence.java\n",
        "code": [
          "        if (n == 0) {\n",
          "            return BigInteger.ZERO;\n",
          "        } else if (n == 1) {\n",
          "            return BigInteger.ONE;\n",
          "        } else {\n",
          "            return memo.getUnchecked(n - 1).add(memo.getUnchecked(n - 2));\n",
          "        }\n",
          "    }\n",
          "\n",
          "}\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 26
      },
      {
        "link": "https://github.com/luc-neulens/test/blob/6995a96704911fa77db2cc450c62866131b71bc0/guava/src/main/java/org/baeldung/guava/memoizer/FibonacciSequence.java\n",
        "code": [
          "        if (n == 0) {\n",
          "            return BigInteger.ZERO;\n",
          "        } else if (n == 1) {\n",
          "            return BigInteger.ONE;\n",
          "        } else {\n",
          "            return memo.getUnchecked(n - 1).add(memo.getUnchecked(n - 2));\n",
          "        }\n",
          "    }\n",
          "\n",
          "}\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 26
      },
      {
        "link": "https://github.com/atknatk/java-microservice-framework/blob/b664940481efb1177cbce7bde2c6fdb052542aa0/esys-framework/uaa-service/src/main/java/com/esys/framework/uaa/captcha/ReCaptchaAttemptService.java\n",
        "code": [
          "    public void reCaptchaSucceeded(final String key) {\n",
          "        attemptsCache.invalidate(key);\n",
          "    }\n",
          "\n",
          "    public void reCaptchaFailed(final String key) {\n",
          "        int attempts = attemptsCache.getUnchecked(key);\n",
          "        attempts++;\n",
          "        attemptsCache.put(key, attempts);\n",
          "    }\n",
          "\n",
          "    public boolean isBlocked(final String key) {\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "https://github.com/Kast0rTr0y/ao/blob/189a44ab341e5d613ae9db0e98365688b80162ed/activeobjects-core/src/net/java/ao/schema/CachingTableNameConverter.java\n",
        "code": [
          "            }\n",
          "        });\n",
          "    }\n",
          "\n",
          "    public String getName(Class<? extends RawEntity<?>> entityClass) {\n",
          "        return cache.getUnchecked(entityClass);\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 32
      }
    ],
    "org.mockito.invocation.InvocationOnMock.getMock": [
      {
        "link": "}https://github.com/peeracle/webrtc/blob/7db17c3b2bd7e42b23cc25a2fa574cd3d9e9f7ff/chromium/src/third_party/mockito/src/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n",
        "code": [
          "    /* (non-Javadoc)\n",
          "     * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)\n",
          "     */\n",
          "    public Object answer(InvocationOnMock invocation) {\n",
          "        if (methodsGuru.isToString(invocation.getMethod())) {\n",
          "            Object mock = invocation.getMock();\n",
          "            MockName name = mockUtil.getMockName(mock);\n",
          "            if (name.isDefault()) {\n",
          "                return \"Mock for \" + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + \", hashCode: \" + mock.hashCode();\n",
          "            } else {\n",
          "                return name.toString();\n"
        ],
        "line_number": 64,
        "start_line": 60,
        "end_line": 70
      },
      {
        "link": "https://github.com/sergiodctest/mockitoclone/blob/0c4e494a16141a65f22605a57382a222040f340b/src/main/java/org/mockito/internal/stubbing/defaultanswers/TriesToReturnSelf.java\n",
        "code": [
          "\n",
          "    private final ReturnsEmptyValues defaultReturn = new ReturnsEmptyValues();\n",
          "\n",
          "    public Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "        Class<?> methodReturnType = invocation.getMethod().getReturnType();\n",
          "        Object mock = invocation.getMock();\n",
          "        Class<?> mockType = MockUtil.getMockHandler(mock).getMockSettings().getTypeToMock();\n",
          "\n",
          "        if (methodReturnType.isAssignableFrom(mockType)) {\n",
          "            return invocation.getMock();\n",
          "        }\n"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      },
      {
        "link": "https://github.com/uqam22/mockito/blob/2b2f41b8d5baf3377137c015944be1ad5713046c/src/main/java/org/mockito/internal/stubbing/defaultanswers/TriesToReturnSelf.java\n",
        "code": [
          "\n",
          "    private final ReturnsEmptyValues defaultReturn = new ReturnsEmptyValues();\n",
          "\n",
          "    public Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "        Class<?> methodReturnType = invocation.getMethod().getReturnType();\n",
          "        Object mock = invocation.getMock();\n",
          "        Class<?> mockType = MockUtil.getMockHandler(mock).getMockSettings().getTypeToMock();\n",
          "\n",
          "        if (methodReturnType.isAssignableFrom(mockType)) {\n",
          "            return invocation.getMock();\n",
          "        }\n"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      },
      {
        "link": "https://github.com/oakesja/XboxLiveApi/blob/3cf4ee8453755a225bb4cb46309f378c7e1afb63/src/test/java/helpers/AnswerWithSelf.java\n",
        "code": [
          "    }\n",
          "\n",
          "    public Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "        Class<?> returnType = invocation.getMethod().getReturnType();\n",
          "        if (returnType == clazz) {\n",
          "            return invocation.getMock();\n",
          "        } else {\n",
          "            return delegate.answer(invocation);\n",
          "        }\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/kiwibrowser/src/blob/ad4fdb6d6e87d5587e4d9b54c6f159ffa055b67d/third_party/mockito/src/src/main/java/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n",
        "code": [
          "    /* (non-Javadoc)\n",
          "     * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)\n",
          "     */\n",
          "    public Object answer(InvocationOnMock invocation) {\n",
          "        if (methodsGuru.isToString(invocation.getMethod())) {\n",
          "            Object mock = invocation.getMock();\n",
          "            MockName name = MockUtil.getMockName(mock);\n",
          "            if (name.isDefault()) {\n",
          "                return \"Mock for \" + MockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + \", hashCode: \" + mock.hashCode();\n",
          "            } else {\n",
          "                return name.toString();\n"
        ],
        "line_number": 50,
        "start_line": 46,
        "end_line": 56
      },
      {
        "link": "}https://github.com/mbboyraz/jiraPostFunctions/blob/c90eb41ab0e3680bf8b0221b41c596b17560052b/target/classes/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n",
        "code": [
          "    /* (non-Javadoc)\n",
          "     * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)\n",
          "     */\n",
          "    public Object answer(InvocationOnMock invocation) {\n",
          "        if (methodsGuru.isToString(invocation.getMethod())) {\n",
          "            Object mock = invocation.getMock();\n",
          "            MockName name = mockUtil.getMockName(mock);\n",
          "            if (name.isDefault()) {\n",
          "                return \"Mock for \" + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + \", hashCode: \" + mock.hashCode();\n",
          "            } else {\n",
          "                return name.toString();\n"
        ],
        "line_number": 64,
        "start_line": 60,
        "end_line": 70
      },
      {
        "link": "}https://github.com/Spirals-Team/defects4j-presentation-urls/blob/de5701afe1cd018bd09a19a902d8cc295a2bc38c/projects/Mockito/24/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n",
        "code": [
          "    /* (non-Javadoc)\n",
          "     * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)\n",
          "     */\n",
          "    public Object answer(InvocationOnMock invocation) {\n",
          "        if (methodsGuru.isToString(invocation.getMethod())) {\n",
          "            Object mock = invocation.getMock();\n",
          "            MockName name = mockUtil.getMockName(mock);\n",
          "            if (name.isDefault()) {\n",
          "                return \"Mock for \" + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + \", hashCode: \" + mock.hashCode();\n",
          "            } else {\n",
          "                return name.toString();\n"
        ],
        "line_number": 64,
        "start_line": 60,
        "end_line": 70
      },
      {
        "link": "https://github.com/Spirals-Team/defects4j-presentation-urls/blob/de5701afe1cd018bd09a19a902d8cc295a2bc38c/projects/Mockito/18/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n",
        "code": [
          "    /* (non-Javadoc)\n",
          "     * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)\n",
          "     */\n",
          "    public Object answer(InvocationOnMock invocation) {\n",
          "        if (methodsGuru.isToString(invocation.getMethod())) {\n",
          "            Object mock = invocation.getMock();\n",
          "            MockName name = mockUtil.getMockName(mock);\n",
          "            if (name.isDefault()) {\n",
          "                return \"Mock for \" + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + \", hashCode: \" + mock.hashCode();\n",
          "            } else {\n",
          "                return name.toString();\n"
        ],
        "line_number": 63,
        "start_line": 59,
        "end_line": 69
      },
      {
        "link": "https://github.com/nans1899/Medscape-decompile/blob/26bbd3e603de315b31afcc64fe3f2503dc3de854/sources/org/mockito/internal/stubbing/defaultanswers/RetrieveGenericsForDefaultAnswers.java\n",
        "code": [
          "        }\n",
          "        return returnValueFor == null ? new ReturnsMoreEmptyValues().returnValueFor(cls) : returnValueFor;\n",
          "    }\n",
          "\n",
          "    private static Class<?> findTypeFromGeneric(InvocationOnMock invocationOnMock, TypeVariable typeVariable) {\n",
          "        Class<?> rawType = GenericMetadataSupport.inferFrom(MockUtil.getMockHandler(invocationOnMock.getMock()).getMockSettings().getTypeToMock()).resolveGenericReturnType(invocationOnMock.getMethod()).rawType();\n",
          "        return rawType == Object.class ? findTypeFromGenericInArguments(invocationOnMock, typeVariable) : rawType;\n",
          "    }\n",
          "\n",
          "    private static Class<?> findTypeFromGenericInArguments(InvocationOnMock invocationOnMock, TypeVariable typeVariable) {\n",
          "        Type[] genericParameterTypes = invocationOnMock.getMethod().getGenericParameterTypes();\n"
        ],
        "line_number": 76,
        "start_line": 72,
        "end_line": 82
      },
      {
        "link": "https://github.com/kiwibrowser/src/blob/ad4fdb6d6e87d5587e4d9b54c6f159ffa055b67d/third_party/mockito/src/src/main/java/org/mockito/internal/stubbing/defaultanswers/TriesToReturnSelf.java\n",
        "code": [
          "\n",
          "    private final ReturnsEmptyValues defaultReturn = new ReturnsEmptyValues();\n",
          "\n",
          "    public Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "        Class<?> methodReturnType = invocation.getMethod().getReturnType();\n",
          "        Object mock = invocation.getMock();\n",
          "        Class<?> mockType = MockUtil.getMockHandler(mock).getMockSettings().getTypeToMock();\n",
          "\n",
          "        if (methodReturnType.isAssignableFrom(mockType)) {\n",
          "            return invocation.getMock();\n",
          "        }\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      }
    ],
    "org.mockito.InOrder.verify": [
      {
        "link": "https://github.com/joansmith/anathema/blob/9ea0e4621b01b440f129e8527969e11d9a1b180e/Platform_TreeFramework/src/test/java/net/sf/anathema/platform/tree/view/draw/ShapeDrawerTest.java\n",
        "code": [
          "  public void drawsPolygonOutline() throws Exception {\n",
          "    Canvas graphics = mock(Canvas.class);\n",
          "    Polygon polygon = new Polygon();\n",
          "    new ShapeDrawer(polygon, stroke).draw(graphics);\n",
          "    InOrder inOrder = inOrder(graphics);\n",
          "    inOrder.verify(graphics).setColor(RGBColor.Pink);\n",
          "    inOrder.verify(graphics).setStrokeWidth(new Width(4));\n",
          "    inOrder.verify(graphics).draw(polygon);\n",
          "  }\n",
          "}\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 26
      },
      {
        "link": "https://github.com/joansmith2/anathema/blob/9ea0e4621b01b440f129e8527969e11d9a1b180e/Platform_TreeFramework/src/test/java/net/sf/anathema/platform/tree/view/draw/ShapeDrawerTest.java\n",
        "code": [
          "  public void drawsPolygonOutline() throws Exception {\n",
          "    Canvas graphics = mock(Canvas.class);\n",
          "    Polygon polygon = new Polygon();\n",
          "    new ShapeDrawer(polygon, stroke).draw(graphics);\n",
          "    InOrder inOrder = inOrder(graphics);\n",
          "    inOrder.verify(graphics).setColor(RGBColor.Pink);\n",
          "    inOrder.verify(graphics).setStrokeWidth(new Width(4));\n",
          "    inOrder.verify(graphics).draw(polygon);\n",
          "  }\n",
          "}\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 26
      },
      {
        "link": "https://github.com/gianvittorio/TDD/blob/0093e9189c83ac6cd30bd7102e7d84c02f190028/primeiroTeste/src/test/java/com/gianvittorio/MockitoTests.java\n",
        "code": [
          "//        lista.add(any());\n",
          "\n",
          "        // Verificacao\n",
          "        InOrder inOrder = Mockito.inOrder(lista);\n",
          "\n",
          "        inOrder.verify(lista).size();\n",
          "        inOrder.verify(lista).add(any());\n",
          "\n",
          "\n",
          "//        Assertions.assertThat(sz)\n",
          "//                .isEqualTo(20);\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/joansmith/anathema/blob/9ea0e4621b01b440f129e8527969e11d9a1b180e/Platform_TreeFramework/src/test/java/net/sf/anathema/platform/tree/view/interaction/RightClickResetterTest.java\n",
        "code": [
          "\n",
          "  @Test\n",
          "  public void resetsTransformationAndZoomsOutALittleOnRightClickWithCtrl() throws Exception {\n",
          "    resetter.mouseClicked(MouseButton.Secondary, MetaKey.CTRL, AnyCoordinate,1);\n",
          "    InOrder inOrder = Mockito.inOrder(panel);\n",
          "    inOrder.verify(panel).resetTransformation();\n",
          "    inOrder.verify(panel).scale(0.75);\n",
          "  }\n",
          "\n",
          "  @Test\n",
          "  public void doesNothingOnClickWithoutCtrl() throws Exception {\n"
        ],
        "line_number": 19,
        "start_line": 15,
        "end_line": 25
      },
      {
        "link": "https://github.com/refi64/chromium-tar/blob/82ebd6a0473341fa75dd3bbb2f584da99f5ac92c/components/module_installer/android/junit/src/org/chromium/components/module_installer/engine/ApkEngineTest.java\n",
        "code": [
          "\n",
          "        // Act.\n",
          "        mEngine.install(moduleName, listener);\n",
          "\n",
          "        // Assert.\n",
          "        inOrder.verify(listener).onComplete(false);\n",
          "        inOrder.verifyNoMoreInteractions();\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 39,
        "start_line": 35,
        "end_line": 43
      },
      {
        "link": "https://github.com/AntonYakovenko/Quiz/blob/0f70206deab2d8bc1567e3f57c625aa82029f7b0/src/test/java/examples/mockito/_3_InOrder.java\n",
        "code": [
          "        list.add(\"A\");\n",
          "        list.remove(\"C\");\n",
          "        list.add(\"B\");\n",
          "\n",
          "        InOrder inOrder = Mockito.inOrder(list);\n",
          "        inOrder.verify(list).remove(\"C\");\n",
          "        inOrder.verify(list).add(\"B\");\n",
          "        inOrder.verify(list).add(\"A\");\n",
          "        verifyNoMoreInteractions(list);\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      },
      {
        "link": "}https://github.com/liudabingSjtu/MyMockito/blob/06eb23d3aa28c19066529762da4a92bd2f4f34cd/test/org/mockitousage/bugs/MultipleInOrdersTest.java\n",
        "code": [
          "        \n",
          "        InOrder inOrder = inOrder(list);\n",
          "        InOrder inAnotherOrder = inOrder(list);\n",
          "        assertNotSame(inOrder, inAnotherOrder);\n",
          "        \n",
          "        inOrder.verify(list).add(\"a\");\n",
          "        inOrder.verify(list).add(\"b\");\n",
          "        \n",
          "        inAnotherOrder.verify(list).add(\"x\");\n",
          "        inAnotherOrder.verify(list).add(\"y\");\n",
          "    }\n"
        ],
        "line_number": 30,
        "start_line": 26,
        "end_line": 36
      },
      {
        "link": "https://github.com/edekadigital/sonar-dependency-version/blob/b41d653dbdb8291a49acc8f371fb2799e643cddd/sonar-dependency-version-plugin/src/test/java/org/sonar/dependencyversion/rule/DependencyVersionRuleDefinitionTest.java\n",
        "code": [
          "\n",
          "    this.rule.define(context);\n",
          "\n",
          "    InOrder inOrder = inOrder(context, repo);\n",
          "\n",
          "    inOrder.verify(context).createRepository(REPOSITORY_KEY, LANGUAGE_KEY);\n",
          "    inOrder.verify(repo).createRule(RULE_KEY);\n",
          "\n",
          "    inOrder.verify(repo).done();\n",
          "    inOrder.verifyNoMoreInteractions();\n",
          "  }\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      },
      {
        "link": "}https://github.com/sdogruyol/mockito/blob/220717f2923e84a6c0242e7880adaf527dd1fb45/test/org/mockitousage/bugs/MultipleInOrdersTest.java\n",
        "code": [
          "        \r\n",
          "        InOrder inOrder = inOrder(list);\r\n",
          "        InOrder inAnotherOrder = inOrder(list);\r\n",
          "        assertNotSame(inOrder, inAnotherOrder);\r\n",
          "        \r\n",
          "        inOrder.verify(list).add(\"a\");\r\n",
          "        inOrder.verify(list).add(\"b\");\r\n",
          "        \r\n",
          "        inAnotherOrder.verify(list).add(\"x\");\r\n",
          "        inAnotherOrder.verify(list).add(\"y\");\r\n",
          "    }\r\n"
        ],
        "line_number": 30,
        "start_line": 26,
        "end_line": 36
      },
      {
        "link": "}https://github.com/hanfak/design-patterns-examples-/blob/8f7be4fbb1bd5feb5972262956467ec426bdd778/src/test/java/testing/mockito/inorder/InOrderTest.java\n",
        "code": [
          "    mockedList.size();\n",
          "    mockedList.add(\"a parameter\");\n",
          "    mockedList.clear();\n",
          "\n",
          "    InOrder inOrder = Mockito.inOrder(mockedList);\n",
          "    inOrder.verify(mockedList).size();\n",
          "    inOrder.verify(mockedList).add(\"a parameter\");\n",
          "    inOrder.verify(mockedList).clear();\n",
          "  }\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 25
      }
    ],
    "org.mockito.Mockito.verify": [
      {
        "link": "https://github.com/Dragonwrath/AndroidDemo/blob/bb7ffb4229097e01d6b50b0427f9b2d0dfa2721a/android-mock/src/test/java/com/joke/mock/offical_mock/OfficalTest_Part_4.java\n",
        "code": [
          "     */\n",
          "    @Test\n",
          "    public void step_35() {\n",
          "        ArrayList mock = mock(ArrayList.class);\n",
          "        // will print a custom message on verification failure\n",
          "        verify(mock, description(\"This will print on failure\")).clear();\n",
          "\n",
          "        // will work with any verification mode\n",
          "        verify(mock, times(2).description(\"someMethod should be called twice\")).size();\n",
          "    }\n",
          "\n"
        ],
        "line_number": 120,
        "start_line": 116,
        "end_line": 126
      },
      {
        "link": "https://github.com/Dragonwrath/AndroidDemo/blob/bb7ffb4229097e01d6b50b0427f9b2d0dfa2721a/android-mock/src/test/java/com/joke/mock/offical_mock/OfficalTest_Part_3.java\n",
        "code": [
          "     */\n",
          "    @Test\n",
          "    public void step_22() {\n",
          "//\n",
          "//        //passes when someMethod() is called within given time span\n",
          "//        verify(mock, timeout(100)).someMethod();\n",
          "//        //above is an alias to:\n",
          "//        verify(mock, timeout(100).times(1)).someMethod();\n",
          "//\n",
          "//        //passes when someMethod() is called *exactly* 2 times within given time span\n",
          "//        verify(mock, timeout(100).times(2)).someMethod();\n"
        ],
        "line_number": 59,
        "start_line": 55,
        "end_line": 65
      },
      {
        "link": "https://github.com/Dragonwrath/AndroidDemo/blob/bb7ffb4229097e01d6b50b0427f9b2d0dfa2721a/android-mock/src/test/java/com/joke/mock/offical_mock/OfficalTest_Part_1.java\n",
        "code": [
          "\n",
          "        //following prints \"null\" because get(999) was not stubbed\n",
          "        System.out.println(mockedLinkList.get(999));\n",
          "\n",
          "        //Although it is possible to verify a stubbed invocation, usually it's just redundant\n",
          "        //If your code cares what get(0) returns, then something else breaks (often even before verify() gets executed).\n",
          "        //If your code doesn't care what get(0) returns, then it should not be stubbed. Not convinced? See here.\n",
          "        verify(mockedLinkList).get(0);\n",
          "//        verify(mockedLinkList).get(1);\n",
          "    }\n",
          "\n"
        ],
        "line_number": 62,
        "start_line": 58,
        "end_line": 68
      },
      {
        "link": "https://github.com/nelsonandredias/Spring/blob/d5396a59f8807958f680bcf30e8bd8bbaff5d5cd/TestingSpring/udemy.unittesting.spring.boot.verification.basic/src/test/java/com/java/udemy/unittesting/spring/boot/verification/basic/ListMockVerifyTest.java\n",
        "code": [
          "\t\t//SUT (calling the method for testing purpose in the verify)\n",
          "\t\tString value1 = mock.get(0);\n",
          "\t\tString value2 = mock.get(1);\n",
          "\t\t\n",
          "\t\t//verify that the get method is called on the mock list\n",
          "\t\tverify(mock).get(0);\n",
          "\t\t\n",
          "\t\tverify(mock, times(2)).get(anyInt());\n",
          "\t\t\n",
          "\t\t//verify the get method of the mock list is called at least one time\n",
          "\t\tverify(mock, atLeast(1)).get(anyInt());\n"
        ],
        "line_number": 39,
        "start_line": 35,
        "end_line": 45
      },
      {
        "link": "https://github.com/Loannb8733/conception_agile/blob/12f3a5da47120125d35e03c49288929ee4e25cdd/TP1/hellodoublure/src/test/java/fr/unilim/fr/TestDoublures.java\n",
        "code": [
          "\t\t when(user.getLogin()).thenReturn(\"alice\");\n",
          "\n",
          "\t\t System.out.println(user.getLogin());\n",
          "\t\t System.out.println(user.getLogin());\n",
          "\n",
          "\t\t verify(user, times(2)).getLogin(); //V\u00e9rification de l'affichage appel\u00e9 2 fois\n",
          "\t\t //verify(user).getLogin(); //verifier que la m\u00e9thode a \u00e9t\u00e9 appel\u00e9\n",
          "\t\t \n",
          "\t}\n",
          "\t \n",
          "\t@Test\n"
        ],
        "line_number": 43,
        "start_line": 39,
        "end_line": 49
      },
      {
        "link": "https://github.com/isaksky/selenium/blob/cf881f336a5c423d43c5307cad4682b550799ee6/java/client/test/org/openqa/selenium/interactions/touch/TouchLongPressTest.java\n",
        "code": [
          "  @Test\n",
          "  public void testCanLongPress() {\n",
          "    LongPressAction longPress = new LongPressAction(mockTouch, locatableStub);\n",
          "    longPress.perform();\n",
          "\n",
          "    verify(mockTouch).longPress(mockCoordinates);\n",
          "    verifyNoMoreInteractions(mockTouch);\n",
          "    verifyZeroInteractions(mockCoordinates);\n",
          "  }\n",
          "}\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 56
      },
      {
        "link": "https://github.com/kadrivaripuu/JavaTraining/blob/dc91bac386e6fb2f0d0ecf0019f610af7e9f32f9/Demo/Spring/Spring-000-MASTER/Spring-300-Advanced/Spring-370-UnitTests/src/test/java/com/knits/spring/utest/Test03MockitoAnnotations.java\n",
        "code": [
          "\t\t//real call on the mock\n",
          "\t\taMockedListOfString.indexOf(\"A Test\");\n",
          "\t\t\n",
          "\t\t\n",
          "\t\t//1) verify that method was called\n",
          "\t\tverify(aMockedListOfString).indexOf(\"A Test\");\n",
          "\t\t\n",
          "\t\t//2) verify that method was called (times)\n",
          "\t\tverify(aMockedListOfString, times(1)).indexOf(\"A Test\");\n",
          "\t\t\n",
          "\t\t//3) verify no interaction with method\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      },
      {
        "link": "https://github.com/Dragonwrath/AndroidDemo/blob/bb7ffb4229097e01d6b50b0427f9b2d0dfa2721a/android-mock/src/test/java/com/joke/mock/offical_mock/OfficalTest_Part_2.java\n",
        "code": [
          "\n",
          "        //size() method was stubbed - 100 is printed\n",
          "        System.out.println(spy.size());\n",
          "\n",
          "        //optionally, you can verify\n",
          "        verify(spy).add(\"one\");\n",
          "        verify(spy).add(\"two\");\n",
          "    }\n",
          "\n",
          "\n",
          "    /*\n"
        ],
        "line_number": 137,
        "start_line": 133,
        "end_line": 143
      },
      {
        "link": "https://github.com/nelsonandredias/Spring/blob/d5396a59f8807958f680bcf30e8bd8bbaff5d5cd/TestingSpring/udemy.unittesting.spring.boot.spy.basic/src/test/java/com/java/udemy/unittesting/spring/boot/verification/basic/ListMockVerifyTest.java\n",
        "code": [
          "\t\t//SUT (calling the method for testing purpose in the verify)\n",
          "\t\tString value1 = mock.get(0);\n",
          "\t\tString value2 = mock.get(1);\n",
          "\t\t\n",
          "\t\t//verify that the get method is called on the mock list\n",
          "\t\tverify(mock).get(0);\n",
          "\t\t\n",
          "\t\tverify(mock, times(2)).get(anyInt());\n",
          "\t\t\n",
          "\t\t//verify the get method of the mock list is called at least one time\n",
          "\t\tverify(mock, atLeast(1)).get(anyInt());\n"
        ],
        "line_number": 39,
        "start_line": 35,
        "end_line": 45
      },
      {
        "link": "https://github.com/nelsonandredias/Spring/blob/d5396a59f8807958f680bcf30e8bd8bbaff5d5cd/TestingSpring/udemy.unittesting.spring.boot.argumentcapture.basic/src/test/java/com/java/udemy/unittesting/spring/boot/verification/basic/ListMockVerifyTest.java\n",
        "code": [
          "\t\t//SUT (calling the method for testing purpose in the verify)\n",
          "\t\tString value1 = mock.get(0);\n",
          "\t\tString value2 = mock.get(1);\n",
          "\t\t\n",
          "\t\t//verify that the get method is called on the mock list\n",
          "\t\tverify(mock).get(0);\n",
          "\t\t\n",
          "\t\tverify(mock, times(2)).get(anyInt());\n",
          "\t\t\n",
          "\t\t//verify the get method of the mock list is called at least one time\n",
          "\t\tverify(mock, atLeast(1)).get(anyInt());\n"
        ],
        "line_number": 39,
        "start_line": 35,
        "end_line": 45
      }
    ],
    "com.google.common.base.Functions.forMap": [
      {
        "link": "https://github.com/511659192/trivial/blob/33f19661d0cdb5849fde20ba73e32e221577f01c/src/test/java/com/ym/guava/FunctionsTest.java\n",
        "code": [
          "            }\n",
          "        };\n",
          "        /**\n",
          "         * forMap\n",
          "         */\n",
          "        Function<String, Integer> function = Functions.forMap(map);\n",
          "        //\u00e8\u00b0\u0083\u00e7\u0094\u00a8apply\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00ef\u00bc\u008c\u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e9\u0080\u009a\u00e8\u00bf\u0087key\u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e7\u009b\u00b8\u00e5\u00ba\u0094\u00e7\u009a\u0084value\n",
          "        System.out.println(function.apply(\"love\"));//i love u\n",
          "        //\u00e5\u00bd\u0093apply\u00e7\u009a\u0084key\u00e5\u0080\u00bc\u00e5\u009c\u00a8Map\u00e9\u0087\u008c\u00e4\u00b8\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e6\u0097\u00b6\u00ef\u00bc\u008c\u00e4\u00bc\u009a\u00e6\u008a\u009b\u00e5\u0087\u00ba\u00e5\u00bc\u0082\u00e5\u00b8\u00b8\n",
          "        //java.lang.IllegalArgumentException: Key 'like' not present in map\n",
          "//        System.out.println(function.apply(\"like\"));\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      },
      {
        "link": "https://github.com/oscarwei168/hibernate/blob/27dd9433c398e20ea423a4dec6d8737ece9fd308/src/main/java/tw/com/oscar/guava/functions/FunctionsTest.java\n",
        "code": [
          "        Function func1 = Functions.compose(toLen, reverse);\n",
          "\n",
          "        Map<String, String> map = Maps.newHashMap();\n",
          "        /** a function used to obtaining value from map's key **/\n",
          "        /** throw exception when no value return **/\n",
          "        Function<String, String> func2 = Functions.forMap(map);\n",
          "        Function<String, String> func3 = Functions.forMap(map, \"unknown\");\n",
          "\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 49,
        "start_line": 45,
        "end_line": 54
      },
      {
        "link": "https://github.com/Maple-mxf/opensource/blob/7f43171728959429fd3cba3df162dbc582f78c8e/jopen-core/src/test/java/io/jopen/core/function/util/FunctionsTest.java\n",
        "code": [
          "        // \u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e8\u00b0\u0083\u00e7\u0094\u00a8toString\n",
          "        Function<Object, String> stringFunction = Functions.toStringFunction();\n",
          "\n",
          "        //\n",
          "        Map<String, Integer> map = new HashMap<>();\n",
          "        Function<String, Integer> mapFunction = Functions.forMap(map);\n",
          "\n",
          "        Function<Object, Object> identityFunction = Functions.identity();\n",
          "\n",
          "        Function<Object, Boolean> predicateFunction = Functions.forPredicate(Objects::nonNull);\n",
          "\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "https://github.com/doublecancel/practice1/blob/58e788c190c7ec103787f3dadce94c96a3dd201d/bigGuava/src/main/java/lazy/Test.java\n",
        "code": [
          "        Map<String, Integer> map = Maps.newHashMap();\n",
          "        map.put(\"a\", 1);\n",
          "        map.put(\"b\", 2);\n",
          "        map.put(\"c\", 3);\n",
          "        map.put(\"d\", 4);\n",
          "        Function mapfunction = com.google.common.base.Functions.forMap(map);\n",
          "\n",
          "        IntStream.range(1, 100).forEach(a -> {\n",
          "//            System.out.println(function.apply(a));\n",
          "            System.out.println(mapfunction.apply(\"a\"));\n",
          "        });\n"
        ],
        "line_number": 37,
        "start_line": 33,
        "end_line": 43
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/FunctionUtil.java\n",
        "code": [
          "*/ \n",
          "public static <E> com.google.common.base.Function<java.lang.Object, E> constant(E p0){\n",
          "\treturn com.google.common.base.Functions.constant(p0);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.base.Functions#forMap(java.util.Map<K, ? extends V>,V)}\n",
          "*@see com.google.common.base.Functions#forMap(java.util.Map<K, ? extends V>,V)\n",
          "*<code>public static <K,V> com.google.common.base.Function<K, V> com.google.common.base.Functions.forMap(java.util.Map<K, ? extends V>,V)\n",
          "*forMap(java.util.Map<K, ? extends V> p0,V p1)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 53,
        "start_line": 49,
        "end_line": 59
      },
      {
        "link": "https://github.com/isarandi/text_semantic_similarity/blob/ac480dac6815cc9899e6b839a339901e085e51bd/util/Comparators.java\n",
        "code": [
          "\t\t\t\treturn function.apply(o1).compareTo(function.apply(o2));\n",
          "\t\t\t}\n",
          "\t\t};\n",
          "\t}\n",
          "\t\n",
          "\tpublic static <A, B extends Comparable<B>> Comparator<A> forMap(final Map<A,B> map)\n",
          "\t{\n",
          "\t\treturn Comparators.forFunction(Functions.forMap(map));\n",
          "\t}\n",
          "}\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 27
      },
      {
        "link": "https://github.com/szaqal/KitchenSink/blob/770e34071c7306ffa893570099f3ddd48625de68/Java/Guava/szaqalguava/src/test/java/szaqal/guava/test/FunctionsTest.java\n",
        "code": [
          "\tpublic void testForMap() {\n",
          "\t\tMap<String, String> map = new HashMap<String, String>();\n",
          "\t\tmap.put(\"key1\", \"val1\");\n",
          "\t\tmap.put(\"key2\", \"val2\");\n",
          "\t\tmap.put(\"key3\", \"val3\");\n",
          "\t\tFunction<String, String> forMap = Functions.forMap(map);\n",
          "\t\tassertEquals(\"val2\", forMap.apply(\"key2\"));\n",
          "\t\tFunction<String, String> forMap2 = Functions.forMap(map, \"zzz\");\n",
          "\t\tassertEquals(\"zzz\", forMap2.apply(\"rubbish\"));\n",
          "\t\tFunction<String, String> identity = Functions.identity();\n",
          "\t\tassertEquals(\"fff\", identity.apply(\"fff\"));\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/364418945/springbootdemo/blob/792d975f1ba86ef1477544549eee3cfb1723e71f/src/main/java/com/example/demo/guava/FunctionsTest.java\n",
        "code": [
          "        assertThat(Functions.toStringFunction().apply(123),equalTo(\"123\"));\n",
          "    }\n",
          "\n",
          "\n",
          "    @Test\n",
          "    public void forMap(){\n",
          "        Map map = ImmutableMap.of(\"key1\",\"value1\");\n",
          "        Function f = Functions.forMap(map);\n",
          "        assertThat(f.apply(\"key1\"),equalTo(\"value1\"));\n",
          "    }\n",
          "\n"
        ],
        "line_number": 44,
        "start_line": 40,
        "end_line": 50
      },
      {
        "link": "https://github.com/18965050/oasis/blob/e5f1cfa32b74fe37aaf0872c497f7c8502df052d/oasis-common-test/src/test/java/cn/xyz/chaos/guava/common/base/FunctionsTest.java\n",
        "code": [
          "        Function<Long, String> composedFunction = Functions.compose(dateFormatFunction, longToDateFunction);\n",
          "        assertThat(composedFunction.apply(time), is(\"18/11/2003\"));\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.base.Functions#forMap(Map)}\u00e6\u0088\u0090\u00e5\u008a\u009f\u00e6\u00b5\u008b\u00e8\u00af\u0095\n",
          "     */\n",
          "    @Test\n",
          "    public void testForMapFunction() throws Exception {\n",
          "        Function<String, State> stateMapFunction = Functions.forMap(stateMap);\n",
          "        assertThat(stateMapFunction.apply(\"TX\"), is(state));\n"
        ],
        "line_number": 107,
        "start_line": 103,
        "end_line": 113
      },
      {
        "link": "https://github.com/Lisichenghah/guava-demo/blob/1bbd7c42deb9e228900c3248ec614abd456bc473/src/test/java/top/lisicheng/functional/FunctionsTest.java\n",
        "code": [
          "        assertEquals(Functions.constant(\"constant\").apply(2), \"constant\");\n",
          "\n",
          "        // \u00e7\u0094\u00a8\u00e5\u008e\u009f\u00e5\u0080\u00bc\u00e5\u00bd\u0093\u00e5\u0081\u009akey\u00ef\u00bc\u008c\u00e8\u008e\u00b7\u00e5\u008f\u0096map\u00e4\u00b8\u00ad\u00e7\u009a\u0084value\n",
          "        // \u00e5\u00a6\u0082\u00e6\u00b2\u00a1\u00e6\u009c\u0089\u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e5\u0088\u00b0\u00e7\u00bb\u0093\u00e6\u009e\u009c\u00ef\u00bc\u008cthrows IllegalArgumentException\n",
          "        // \u00e7\u00ad\u0089\u00e4\u00ba\u008ejava.util.function.Function t -> map.get(t)\n",
          "        assertEquals(Functions.forMap(map).apply(\"k1\"), \"v1\");\n",
          "        assertNull(Functions.forMap(map).apply(\"k2\"));\n",
          "        assertThrows(IllegalArgumentException.class, () -> Functions.forMap(map).apply(\"k3\"));\n",
          "\n",
          "        // \u00e4\u00b8\u008e\u00e4\u00b8\u008a\u00e9\u009d\u00a2\u00e7\u00a4\u00ba\u00e4\u00be\u008b\u00e7\u00b1\u00bb\u00e4\u00bc\u00bc\u00ef\u00bc\u008c\u00e4\u00b8\u008d\u00e5\u0090\u008c\u00e7\u009a\u0084\u00e6\u0098\u00af\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u00b2\u00a1\u00e6\u009c\u0089\u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e5\u0088\u00b0\u00e7\u00bb\u0093\u00e6\u009e\u009c\u00ef\u00bc\u008c\u00e6\u0088\u0096\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e5\u0080\u00bc\n",
          "        // \u00e7\u00ad\u0089\u00e4\u00ba\u008ejava.util.function.Function t -> map.get(t) == null ? \"\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e5\u0080\u00bc\" : map.get(t)\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      }
    ],
    "org.mockito.Mockito.doAnswer": [
      {
        "link": "}https://github.com/ojacobson/attic/blob/337f33e3adc06f820a7d2a29e8168364d19ddeff/unacceptable/unacceptable-database/src/test/java/io/github/unacceptable/database/DatabaseContextTest.java\n",
        "code": [
          "\n",
          "public class DatabaseContextTest {\n",
          "    @Test\n",
          "    public void ruleDrivenDatabaseLifecycle() throws Throwable {\n",
          "        DatabaseContext context = spy(DatabaseContext.class);\n",
          "        doAnswer(RETURNS_MOCKS).when(context).create();\n",
          "        doAnswer(RETURNS_MOCKS).when(context).destroy();\n",
          "\n",
          "        TestRule rules = context.rules();\n",
          "\n",
          "        Statement statement = mock(Statement.class);\n"
        ],
        "line_number": 27,
        "start_line": 23,
        "end_line": 33
      },
      {
        "link": "}https://github.com/Kolsha/shift-cft/blob/2f947e71499523b79fe66bf67a2dc130f6111dd0/Android/app/src/test/java/ru/ftc/android/shifttemple/features/books/presentation/BookListPresenterTest.java\n",
        "code": [
          "\n",
          "    @Before\n",
          "    public void setUp() throws Exception {\n",
          "        presenter = new BookListPresenter(interactor);\n",
          "\n",
          "        doAnswer(createAnswer(list)).when(interactor).loadBooks(any(Carry.class));\n",
          "\n",
          "        presenter.attachView(view);\n",
          "    }\n",
          "\n",
          "    @After\n"
        ],
        "line_number": 46,
        "start_line": 42,
        "end_line": 52
      },
      {
        "link": "https://github.com/xiaomanwong/androidx/blob/2f31f44307934840b65378e06c09ad9bb7760169/work/workmanager/src/androidTest/java/androidx/work/impl/utils/EnqueueRunnableTest.java\n",
        "code": [
          "    @Test\n",
          "    public void testScheduleWorkInBackground_isCalled() {\n",
          "        EnqueueRunnable runnable = spy(new EnqueueRunnable(mWorkContinuation));\n",
          "        // For some reason when().thenReturn() does not seem to work here. :(\n",
          "        // TODO(rahulrav@) Figure out why.\n",
          "        doAnswer(new Answer() {\n",
          "            @Override\n",
          "            public Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "                return true;\n",
          "            }\n",
          "        }).when(runnable).addToDatabase();\n"
        ],
        "line_number": 61,
        "start_line": 57,
        "end_line": 67
      },
      {
        "link": "https://github.com/kompiro/jamcircle/blob/200e688f01b635fb2bc9395d29c29d53685d9141/org.kompiro.jamcircle.kanban.ui.test/src/org/kompiro/jamcircle/kanban/ui/model/TrashModelTest.java\n",
        "code": [
          "\t\tassertFalse(trash.containCard(card));\n",
          "\t}\n",
          "\n",
          "\t@Test\n",
          "\tpublic void getCards() throws Exception {\n",
          "\t\tdoAnswer(new Answer<Object>() {\n",
          "\t\t\tpublic Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "\t\t\t\tdoReturn(new Card[] { card }).when(kanbanService).findCardsInTrash();\n",
          "\t\t\t\treturn null;\n",
          "\t\t\t}\n",
          "\t\t}).when(card).setTrashed(true);\n"
        ],
        "line_number": 57,
        "start_line": 53,
        "end_line": 63
      },
      {
        "link": "https://github.com/neufeldj14/sonartest/blob/940fc6143ae975b2ea0e611121bab63e0df58948/server/sonar-server/src/test/java/org/sonar/server/notification/NotificationServiceTest.java\n",
        "code": [
          "   * Only one notification should be delivered to Simon by Email.\n",
          "   */\n",
          "  @Test\n",
          "  public void scenario1() {\n",
          "    setUpMocks();\n",
          "    doAnswer(addUser(ASSIGNEE_SIMON, emailChannel)).when(commentOnIssueAssignedToMe).dispatch(same(notification), any(NotificationDispatcher.Context.class));\n",
          "    doAnswer(addUser(CREATOR_SIMON, emailChannel)).when(commentOnIssueCreatedByMe).dispatch(same(notification), any(NotificationDispatcher.Context.class));\n",
          "\n",
          "    service.start();\n",
          "    verify(emailChannel, timeout(2000)).deliver(notification, ASSIGNEE_SIMON);\n",
          "    service.stop();\n"
        ],
        "line_number": 91,
        "start_line": 87,
        "end_line": 97
      },
      {
        "link": "https://github.com/ArrowOS/android_frameworks_support/blob/fea1e3bc8bf4940b7b5eeb18e82a0f838b22e42d/work/workmanager/src/androidTest/java/androidx/work/impl/utils/EnqueueRunnableTest.java\n",
        "code": [
          "    @Test\n",
          "    public void testScheduleWorkInBackground_isCalled() {\n",
          "        EnqueueRunnable runnable = spy(new EnqueueRunnable(mWorkContinuation));\n",
          "        // For some reason when().thenReturn() does not seem to work here. :(\n",
          "        // TODO(rahulrav@) Figure out why.\n",
          "        doAnswer(new Answer() {\n",
          "            @Override\n",
          "            public Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "                return true;\n",
          "            }\n",
          "        }).when(runnable).addToDatabase();\n"
        ],
        "line_number": 52,
        "start_line": 48,
        "end_line": 58
      },
      {
        "link": "https://github.com/xiaomanwong/androidx/blob/2f31f44307934840b65378e06c09ad9bb7760169/work/workmanager/src/androidTest/java/androidx/work/impl/utils/EnqueueRunnableTest.java\n",
        "code": [
          "    @Test\n",
          "    public void testScheduleWorkInBackground_isCalled() {\n",
          "        EnqueueRunnable runnable = spy(new EnqueueRunnable(mWorkContinuation));\n",
          "        // For some reason when().thenReturn() does not seem to work here. :(\n",
          "        // TODO(rahulrav@) Figure out why.\n",
          "        doAnswer(new Answer() {\n",
          "            @Override\n",
          "            public Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "                return true;\n",
          "            }\n",
          "        }).when(runnable).addToDatabase();\n"
        ],
        "line_number": 61,
        "start_line": 57,
        "end_line": 67
      },
      {
        "link": "https://github.com/JoseAndresMejiasRojas/Campus-UCR/blob/b9c6d77e2d3f212e2109a3b78d6b4d74c86f531d/app/src/test/java/cr/ac/ucr/ecci/cql/campus20/MockParcel.java\n",
        "code": [
          "        final Answer<Object> answer = i -> {\n",
          "            final Object arg = i.getArgument(0);\n",
          "            mStore.add(arg);\n",
          "            return arg;\n",
          "        };\n",
          "//        doAnswer(answer).when(mParcel).writeByte(anyByte());\n",
          "        doAnswer(answer).when(mParcel).writeInt(anyInt());\n",
          "        doAnswer(answer).when(mParcel).writeString(anyString());\n",
          "        doAnswer(answer).when(mParcel).writeParcelable(any(Parcelable.class), anyInt());\n",
          "        // doAnswer(answer).when(mParcel).writeLong(anyLong());\n",
          "        // doAnswer(answer).when(mParcel).writeFloat(anyFloat());\n"
        ],
        "line_number": 49,
        "start_line": 45,
        "end_line": 55
      },
      {
        "link": "}https://github.com/Kolsha/shift-cft/blob/2f947e71499523b79fe66bf67a2dc130f6111dd0/Other/samokryl-shift-6e14684e2527/app/src/test/java/ru/ftc/android/shifttemple/features/books/presentation/BookListPresenterTest.java\n",
        "code": [
          "\n",
          "    @Before\n",
          "    public void setUp() throws Exception {\n",
          "        presenter = new BookListPresenter(interactor);\n",
          "\n",
          "        doAnswer(createAnswer(list)).when(interactor).loadBooks(any(Carry.class));\n",
          "\n",
          "        presenter.attachView(view);\n",
          "    }\n",
          "\n",
          "    @After\n"
        ],
        "line_number": 46,
        "start_line": 42,
        "end_line": 52
      },
      {
        "link": "https://github.com/ArrowOS/android_frameworks_support/blob/fea1e3bc8bf4940b7b5eeb18e82a0f838b22e42d/work/workmanager/src/androidTest/java/androidx/work/impl/utils/EnqueueRunnableTest.java\n",
        "code": [
          "    @Test\n",
          "    public void testScheduleWorkInBackground_isCalled() {\n",
          "        EnqueueRunnable runnable = spy(new EnqueueRunnable(mWorkContinuation));\n",
          "        // For some reason when().thenReturn() does not seem to work here. :(\n",
          "        // TODO(rahulrav@) Figure out why.\n",
          "        doAnswer(new Answer() {\n",
          "            @Override\n",
          "            public Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "                return true;\n",
          "            }\n",
          "        }).when(runnable).addToDatabase();\n"
        ],
        "line_number": 52,
        "start_line": 48,
        "end_line": 58
      },
      {
        "link": "}https://github.com/ojacobson/attic/blob/337f33e3adc06f820a7d2a29e8168364d19ddeff/unacceptable/unacceptable-database/src/test/java/io/github/unacceptable/database/DatabaseContextTest.java\n",
        "code": [
          "\n",
          "public class DatabaseContextTest {\n",
          "    @Test\n",
          "    public void ruleDrivenDatabaseLifecycle() throws Throwable {\n",
          "        DatabaseContext context = spy(DatabaseContext.class);\n",
          "        doAnswer(RETURNS_MOCKS).when(context).create();\n",
          "        doAnswer(RETURNS_MOCKS).when(context).destroy();\n",
          "\n",
          "        TestRule rules = context.rules();\n",
          "\n",
          "        Statement statement = mock(Statement.class);\n"
        ],
        "line_number": 27,
        "start_line": 23,
        "end_line": 33
      },
      {
        "link": "}https://github.com/DavidRicardoWilde/chain3j-Win-Demo/blob/02bf07989a0f5d35144444ed963ac5f008c7822f/moac/src/test/java/org/chain3j/protocol/geth/JsonRpc2_0MoacTest.java\n",
        "code": [
          "\n",
          "    @Before\n",
          "    public void before() throws Exception {\n",
          "        when(webSocketClient.connectBlocking()).thenReturn(true);\n",
          "\n",
          "        doAnswer(invocation -> {\n",
          "            listener = invocation.getArgumentAt(0, WebSocketListener.class);\n",
          "            return null;\n",
          "        }).when(webSocketClient).setListener(any());\n",
          "\n",
          "        doAnswer(invocation -> {\n"
        ],
        "line_number": 41,
        "start_line": 37,
        "end_line": 47
      },
      {
        "link": "https://github.com/refi64/chromium-tar/blob/82ebd6a0473341fa75dd3bbb2f584da99f5ac92c/chrome/browser/download/android/java/src/org/chromium/chrome/browser/download/dialogs/DownloadLaterDialogHelperUnitTest.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void testShowDialog() {\n",
          "        OfflineItemSchedule schedule = new OfflineItemSchedule(true, -1);\n",
          "        doAnswer(invocation -> {\n",
          "            mDownloadLaterDialogHelper.onDownloadLaterDialogComplete(\n",
          "                    DownloadLaterDialogChoice.DOWNLOAD_LATER, START_TIME);\n",
          "            return null;\n",
          "        })\n",
          "                .when(mDownloadLaterDialog)\n"
        ],
        "line_number": 74,
        "start_line": 70,
        "end_line": 80
      },
      {
        "link": "https://github.com/neufeldj14/sonartest/blob/940fc6143ae975b2ea0e611121bab63e0df58948/server/sonar-server/src/test/java/org/sonar/server/notification/NotificationServiceTest.java\n",
        "code": [
          "   * Only one notification should be delivered to Simon by Email.\n",
          "   */\n",
          "  @Test\n",
          "  public void scenario1() {\n",
          "    setUpMocks();\n",
          "    doAnswer(addUser(ASSIGNEE_SIMON, emailChannel)).when(commentOnIssueAssignedToMe).dispatch(same(notification), any(NotificationDispatcher.Context.class));\n",
          "    doAnswer(addUser(CREATOR_SIMON, emailChannel)).when(commentOnIssueCreatedByMe).dispatch(same(notification), any(NotificationDispatcher.Context.class));\n",
          "\n",
          "    service.start();\n",
          "    verify(emailChannel, timeout(2000)).deliver(notification, ASSIGNEE_SIMON);\n",
          "    service.stop();\n"
        ],
        "line_number": 91,
        "start_line": 87,
        "end_line": 97
      },
      {
        "link": "https://github.com/PAC-X-ROM/android_frameworks_support/blob/51aaeda9a764b699e912553be730110d88bcaed1/work/workmanager/src/androidTest/java/androidx/work/impl/utils/EnqueueRunnableTest.java\n",
        "code": [
          "    @Test\n",
          "    public void testScheduleWorkInBackground_isCalled() {\n",
          "        EnqueueRunnable runnable = spy(new EnqueueRunnable(mWorkContinuation));\n",
          "        // For some reason when().thenReturn() does not seem to work here. :(\n",
          "        // TODO(rahulrav@) Figure out why.\n",
          "        doAnswer(new Answer() {\n",
          "            @Override\n",
          "            public Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "                return true;\n",
          "            }\n",
          "        }).when(runnable).addToDatabase();\n"
        ],
        "line_number": 52,
        "start_line": 48,
        "end_line": 58
      },
      {
        "link": "}https://github.com/Kolsha/shift-cft/blob/2f947e71499523b79fe66bf67a2dc130f6111dd0/Android/app/src/test/java/ru/ftc/android/shifttemple/features/books/presentation/BookListPresenterTest.java\n",
        "code": [
          "\n",
          "    @Before\n",
          "    public void setUp() throws Exception {\n",
          "        presenter = new BookListPresenter(interactor);\n",
          "\n",
          "        doAnswer(createAnswer(list)).when(interactor).loadBooks(any(Carry.class));\n",
          "\n",
          "        presenter.attachView(view);\n",
          "    }\n",
          "\n",
          "    @After\n"
        ],
        "line_number": 46,
        "start_line": 42,
        "end_line": 52
      },
      {
        "link": "https://github.com/PAC-X-ROM/android_frameworks_support/blob/51aaeda9a764b699e912553be730110d88bcaed1/work/workmanager/src/androidTest/java/androidx/work/impl/utils/EnqueueRunnableTest.java\n",
        "code": [
          "    @Test\n",
          "    public void testScheduleWorkInBackground_isCalled() {\n",
          "        EnqueueRunnable runnable = spy(new EnqueueRunnable(mWorkContinuation));\n",
          "        // For some reason when().thenReturn() does not seem to work here. :(\n",
          "        // TODO(rahulrav@) Figure out why.\n",
          "        doAnswer(new Answer() {\n",
          "            @Override\n",
          "            public Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "                return true;\n",
          "            }\n",
          "        }).when(runnable).addToDatabase();\n"
        ],
        "line_number": 52,
        "start_line": 48,
        "end_line": 58
      },
      {
        "link": "}https://github.com/Kolsha/shift-cft/blob/2f947e71499523b79fe66bf67a2dc130f6111dd0/Other/samokryl-shift-6e14684e2527/app/src/test/java/ru/ftc/android/shifttemple/features/books/presentation/BookListPresenterTest.java\n",
        "code": [
          "\n",
          "    @Before\n",
          "    public void setUp() throws Exception {\n",
          "        presenter = new BookListPresenter(interactor);\n",
          "\n",
          "        doAnswer(createAnswer(list)).when(interactor).loadBooks(any(Carry.class));\n",
          "\n",
          "        presenter.attachView(view);\n",
          "    }\n",
          "\n",
          "    @After\n"
        ],
        "line_number": 46,
        "start_line": 42,
        "end_line": 52
      },
      {
        "link": "https://github.com/JoseAndresMejiasRojas/Campus-UCR/blob/b9c6d77e2d3f212e2109a3b78d6b4d74c86f531d/app/src/test/java/cr/ac/ucr/ecci/cql/campus20/MockParcel.java\n",
        "code": [
          "        final Answer<Object> answer = i -> {\n",
          "            final Object arg = i.getArgument(0);\n",
          "            mStore.add(arg);\n",
          "            return arg;\n",
          "        };\n",
          "//        doAnswer(answer).when(mParcel).writeByte(anyByte());\n",
          "        doAnswer(answer).when(mParcel).writeInt(anyInt());\n",
          "        doAnswer(answer).when(mParcel).writeString(anyString());\n",
          "        doAnswer(answer).when(mParcel).writeParcelable(any(Parcelable.class), anyInt());\n",
          "        // doAnswer(answer).when(mParcel).writeLong(anyLong());\n",
          "        // doAnswer(answer).when(mParcel).writeFloat(anyFloat());\n"
        ],
        "line_number": 49,
        "start_line": 45,
        "end_line": 55
      },
      {
        "link": "https://github.com/kompiro/jamcircle/blob/200e688f01b635fb2bc9395d29c29d53685d9141/org.kompiro.jamcircle.kanban.ui.test/src/org/kompiro/jamcircle/kanban/ui/model/TrashModelTest.java\n",
        "code": [
          "\t\tassertFalse(trash.containCard(card));\n",
          "\t}\n",
          "\n",
          "\t@Test\n",
          "\tpublic void getCards() throws Exception {\n",
          "\t\tdoAnswer(new Answer<Object>() {\n",
          "\t\t\tpublic Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "\t\t\t\tdoReturn(new Card[] { card }).when(kanbanService).findCardsInTrash();\n",
          "\t\t\t\treturn null;\n",
          "\t\t\t}\n",
          "\t\t}).when(card).setTrashed(true);\n"
        ],
        "line_number": 57,
        "start_line": 53,
        "end_line": 63
      }
    ],
    "com.google.common.collect.Maps.uniqueIndex": [
      {
        "link": "https://github.com/andreyvit/yoursway-commons/blob/1581ef88c0a3bb2646267a16dce1b60698c9f7af/com.yoursway.utils/src/com/yoursway/utils/instrusive/IntrusiveMaps.java\n",
        "code": [
          "        return new IntrusiveMapImpl<K, V>(Maps.<K, V> newHashMap(), valueToKey);\n",
          "    }\n",
          "    \n",
          "    public static <K, V> IntrusiveMap<K, V> newIntrusiveHashMap(Collection<? extends V> m,\n",
          "            Function<V, K> valueToKey) {\n",
          "        return new IntrusiveMapImpl<K, V>(Maps.<K, V> newHashMap(uniqueIndex(m, valueToKey)), valueToKey);\n",
          "    }\n",
          "    \n",
          "    public static <K, V> IntrusiveMap<K, V> newIntrusiveHashMapWithExpectedSize(int expectedSize,\n",
          "            Function<V, K> valueToKey) {\n",
          "        return new IntrusiveMapImpl<K, V>(Maps.<K, V> newHashMapWithExpectedSize(expectedSize), valueToKey);\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/18965050/oasis/blob/e5f1cfa32b74fe37aaf0872c497f7c8502df052d/oasis-common-test/src/test/java/cn/xyz/chaos/guava/common/collection/MapsTest.java\n",
        "code": [
          "    private Book book2 = new Book.Builder().isbn(\"ISBN456\").title(\"book2\").build();\n",
          "    private Book book3 = new Book.Builder().isbn(\"ISBN789\").title(\"book3\").build();\n",
          "    private List<Book> books = Lists.newArrayList(book, book2, book3);\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.collect.Maps#uniqueIndex(Iterable, Function)}\u00e6\u00b5\u008b\u00e8\u00af\u0095\n",
          "     */\n",
          "    @Test\n",
          "    public void uniqueIndexTest() {\n",
          "        Map<String, Book> bookMap = Maps.uniqueIndex(books, new Function<Book, String>() {\n",
          "            @Override\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      },
      {
        "link": "https://github.com/andreyvit/yoursway-commons/blob/1581ef88c0a3bb2646267a16dce1b60698c9f7af/com.yoursway.utils/src/com/yoursway/utils/instrusive/IntrusiveMaps.java\n",
        "code": [
          "        return new IntrusiveMapImpl<K, V>(Maps.<K, V> newHashMap(), valueToKey);\n",
          "    }\n",
          "    \n",
          "    public static <K, V> IntrusiveMap<K, V> newIntrusiveHashMap(Collection<? extends V> m,\n",
          "            Function<V, K> valueToKey) {\n",
          "        return new IntrusiveMapImpl<K, V>(Maps.<K, V> newHashMap(uniqueIndex(m, valueToKey)), valueToKey);\n",
          "    }\n",
          "    \n",
          "    public static <K, V> IntrusiveMap<K, V> newIntrusiveHashMapWithExpectedSize(int expectedSize,\n",
          "            Function<V, K> valueToKey) {\n",
          "        return new IntrusiveMapImpl<K, V>(Maps.<K, V> newHashMapWithExpectedSize(expectedSize), valueToKey);\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/ImmutableMapUtil.java\n",
        "code": [
          "*/ \n",
          "public static <K,V> com.google.common.collect.ImmutableMap<K, V> toMap(java.lang.Iterable<K> p0,com.google.common.base.Function<? super K, V> p1){\n",
          "\treturn com.google.common.collect.Maps.toMap(p0,p1);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.Maps#uniqueIndex(java.util.Iterator<V>,com.google.common.base.Function<? super V, K>)}\n",
          "*@see com.google.common.collect.Maps#uniqueIndex(java.util.Iterator<V>,com.google.common.base.Function<? super V, K>)\n",
          "*<code>public static <K,V> com.google.common.collect.ImmutableMap<K, V> com.google.common.collect.Maps.uniqueIndex(java.util.Iterator<V>,com.google.common.base.Function<? super V, K>)\n",
          "*uniqueIndex(java.util.Iterator<V> p0,com.google.common.base.Function<? super V, K> p1)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 170,
        "start_line": 166,
        "end_line": 176
      },
      {
        "link": "https://github.com/hitakaken/ndp/blob/659ce2dd6dd8233a8a745fbe54ee0799c75879cc/ndp-core/src/main/java/com/novbank/ndp/core/util/MapUtils.java\n",
        "code": [
          "\n",
          "/**\n",
          " * Created by CaoKe on 2015/6/3.\n",
          " */\n",
          "public class MapUtils {\n",
          "    public static <K,V> ImmutableMap<K,V> uniqueIndex(Iterator<V> values, Function<? super V,K> keyFunction){\n",
          "        return Maps.uniqueIndex(values, FunctionWrapUtils.wrap(keyFunction));\n",
          "    }\n",
          "\n",
          "    public static <K,V> ImmutableMap<K,V> uniqueIndex(Iterable<V> values, Function<? super V,K> keyFunction){\n",
          "        return Maps.uniqueIndex(values, FunctionWrapUtils.wrap(keyFunction));\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": "}https://github.com/paul-sadler-ext/javasizzle/blob/96686ba14c493fe2630fdcc9e95d764cb9f9d157/JSizzle/src/org/jsizzle/Delta.java\n",
        "code": [
          "                                                                 Set<? extends T> afters,\r\n",
          "                                                                 Function<? super T, U> uniqueness)\r\n",
          "            throws IllegalArgumentException\r\n",
          "    {\r\n",
          "        final Map<? extends T, U> beforeToKey = domainRestrict(uniqueness, befores);\r\n",
          "        final Map<U, ? extends T> keyToAfter = uniqueIndex(afters, uniqueness);\r\n",
          "        final Map<? extends T, ? extends T> deltas = transformValues(filterValues(beforeToKey, in(keyToAfter.keySet())), forMap(keyToAfter));\r\n",
          "        return transform(deltas.entrySet(), new Function<Entry<? extends T, ? extends T>, Delta<T>>()\r\n",
          "        {\r\n",
          "            @Override\r\n",
          "            public Delta<T> apply(Entry<? extends T, ? extends T> from)\r\n"
        ],
        "line_number": 93,
        "start_line": 89,
        "end_line": 99
      },
      {
        "link": "https://github.com/alexvictoor/community-plugins/blob/0e21c50cf4aac248ccf90641eca7d647da21fef3/deployit-cli-plugins/mustachifier/src/main/java/ext/deployit/community/cli/mustachify/collect/Maps2.java\n",
        "code": [
          "     *            <code>null</code>\n",
          "     * @param valueFunction\n",
          "     *            the function that produces values for the keys\n",
          "     * @return a map containing the keys from the given set with values which\n",
          "     *         are generated from the keys\n",
          "     * @see Maps#uniqueIndex(Iterable, Function)\n",
          "     */\n",
          "    public static @Nonnull <K, V> Map<K, V> fromKeys(@Nonnull Set<K> keys,\n",
          "            @Nonnull Function<? super K, V> valueFunction) {\n",
          "        // can't use ImmutableMap.Builder as we're allowing null values\n",
          "        Map<K, V> result = newHashMapWithExpectedSize(keys.size());\n"
        ],
        "line_number": 64,
        "start_line": 60,
        "end_line": 70
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/ImmutableMapUtil.java\n",
        "code": [
          "*/ \n",
          "public static <K,V> com.google.common.collect.ImmutableMap<K, V> toMap(java.lang.Iterable<K> p0,com.google.common.base.Function<? super K, V> p1){\n",
          "\treturn com.google.common.collect.Maps.toMap(p0,p1);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.Maps#uniqueIndex(java.util.Iterator<V>,com.google.common.base.Function<? super V, K>)}\n",
          "*@see com.google.common.collect.Maps#uniqueIndex(java.util.Iterator<V>,com.google.common.base.Function<? super V, K>)\n",
          "*<code>public static <K,V> com.google.common.collect.ImmutableMap<K, V> com.google.common.collect.Maps.uniqueIndex(java.util.Iterator<V>,com.google.common.base.Function<? super V, K>)\n",
          "*uniqueIndex(java.util.Iterator<V> p0,com.google.common.base.Function<? super V, K> p1)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 170,
        "start_line": 166,
        "end_line": 176
      },
      {
        "link": "https://github.com/alexvictoor/community-plugins/blob/0e21c50cf4aac248ccf90641eca7d647da21fef3/deployit-cli-plugins/dar-manifest-exporter/src/main/java/ext/deployit/community/cli/manifestexport/collect/Maps2.java\n",
        "code": [
          "     *            <code>null</code>\n",
          "     * @param valueFunction\n",
          "     *            the function that produces values for the keys\n",
          "     * @return a map containing the keys from the given set with values which\n",
          "     *         are generated from the keys\n",
          "     * @see Maps#uniqueIndex(Iterable, Function)\n",
          "     */\n",
          "    public static @Nonnull <K, V> Map<K, V> fromKeys(@Nonnull Set<K> keys,\n",
          "            @Nonnull Function<? super K, V> valueFunction) {\n",
          "        // can't use ImmutableMap.Builder as we're allowing null values\n",
          "        Map<K, V> result = newHashMapWithExpectedSize(keys.size());\n"
        ],
        "line_number": 39,
        "start_line": 35,
        "end_line": 45
      },
      {
        "link": "https://github.com/rags/playground/blob/29284721b47b542d73fbb951101fd73519803582/Java/fp/src/main/java/fp/Department.java\n",
        "code": [
          "\n",
          "    public static void main(String[] args) {\n",
          "        //map of department name and total salary\n",
          "        final ArrayList<Department> departments = new ArrayList<>();\n",
          "        final Map<String, Double> departmentTotalSalMap = transformValues(\n",
          "                uniqueIndex(departments, new Function<Department, String>() {\n",
          "                    @Override\n",
          "                    public String apply(Department department) {\n",
          "                        return department.name;\n",
          "                    }\n",
          "                }),\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "}https://github.com/paul-sadler-ext/javasizzle/blob/96686ba14c493fe2630fdcc9e95d764cb9f9d157/JSizzle/src/org/jsizzle/Delta.java\n",
        "code": [
          "                                                                 Set<? extends T> afters,\r\n",
          "                                                                 Function<? super T, U> uniqueness)\r\n",
          "            throws IllegalArgumentException\r\n",
          "    {\r\n",
          "        final Map<? extends T, U> beforeToKey = domainRestrict(uniqueness, befores);\r\n",
          "        final Map<U, ? extends T> keyToAfter = uniqueIndex(afters, uniqueness);\r\n",
          "        final Map<? extends T, ? extends T> deltas = transformValues(filterValues(beforeToKey, in(keyToAfter.keySet())), forMap(keyToAfter));\r\n",
          "        return transform(deltas.entrySet(), new Function<Entry<? extends T, ? extends T>, Delta<T>>()\r\n",
          "        {\r\n",
          "            @Override\r\n",
          "            public Delta<T> apply(Entry<? extends T, ? extends T> from)\r\n"
        ],
        "line_number": 93,
        "start_line": 89,
        "end_line": 99
      },
      {
        "link": "https://github.com/alexvictoor/community-plugins/blob/0e21c50cf4aac248ccf90641eca7d647da21fef3/deployit-cli-plugins/plain-archive-converter/src/main/java/ext/deployit/community/cli/plainarchive/collect/Maps2.java\n",
        "code": [
          "     *            <code>null</code>\n",
          "     * @param valueFunction\n",
          "     *            the function that produces values for the keys\n",
          "     * @return a map containing the keys from the given set with values which\n",
          "     *         are generated from the keys\n",
          "     * @see Maps#uniqueIndex(Iterable, Function)\n",
          "     */\n",
          "    public static @Nonnull <K, V> Map<K, V> fromKeys(@Nonnull Set<K> keys,\n",
          "            @Nonnull Function<? super K, V> valueFunction) {\n",
          "        // can't use ImmutableMap.Builder as we're allowing null values\n",
          "        Map<K, V> result = newHashMapWithExpectedSize(keys.size());\n"
        ],
        "line_number": 64,
        "start_line": 60,
        "end_line": 70
      },
      {
        "link": "}https://github.com/paul-sadler-ext/javasizzle/blob/96686ba14c493fe2630fdcc9e95d764cb9f9d157/JSizzle/src/org/jsizzle/Delta.java\n",
        "code": [
          "                                                                 Set<? extends T> afters,\r\n",
          "                                                                 Function<? super T, U> uniqueness)\r\n",
          "            throws IllegalArgumentException\r\n",
          "    {\r\n",
          "        final Map<? extends T, U> beforeToKey = domainRestrict(uniqueness, befores);\r\n",
          "        final Map<U, ? extends T> keyToAfter = uniqueIndex(afters, uniqueness);\r\n",
          "        final Map<? extends T, ? extends T> deltas = transformValues(filterValues(beforeToKey, in(keyToAfter.keySet())), forMap(keyToAfter));\r\n",
          "        return transform(deltas.entrySet(), new Function<Entry<? extends T, ? extends T>, Delta<T>>()\r\n",
          "        {\r\n",
          "            @Override\r\n",
          "            public Delta<T> apply(Entry<? extends T, ? extends T> from)\r\n"
        ],
        "line_number": 93,
        "start_line": 89,
        "end_line": 99
      },
      {
        "link": "https://github.com/alexvictoor/community-plugins/blob/0e21c50cf4aac248ccf90641eca7d647da21fef3/deployit-cli-plugins/mustachifier/src/main/java/ext/deployit/community/cli/mustachify/collect/Maps2.java\n",
        "code": [
          "     *            <code>null</code>\n",
          "     * @param valueFunction\n",
          "     *            the function that produces values for the keys\n",
          "     * @return a map containing the keys from the given set with values which\n",
          "     *         are generated from the keys\n",
          "     * @see Maps#uniqueIndex(Iterable, Function)\n",
          "     */\n",
          "    public static @Nonnull <K, V> Map<K, V> fromKeys(@Nonnull Set<K> keys,\n",
          "            @Nonnull Function<? super K, V> valueFunction) {\n",
          "        // can't use ImmutableMap.Builder as we're allowing null values\n",
          "        Map<K, V> result = newHashMapWithExpectedSize(keys.size());\n"
        ],
        "line_number": 64,
        "start_line": 60,
        "end_line": 70
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/ImmutableMapUtil.java\n",
        "code": [
          "*/ \n",
          "public static <K,V> com.google.common.collect.ImmutableMap<K, V> toMap(java.lang.Iterable<K> p0,com.google.common.base.Function<? super K, V> p1){\n",
          "\treturn com.google.common.collect.Maps.toMap(p0,p1);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.Maps#uniqueIndex(java.util.Iterator<V>,com.google.common.base.Function<? super V, K>)}\n",
          "*@see com.google.common.collect.Maps#uniqueIndex(java.util.Iterator<V>,com.google.common.base.Function<? super V, K>)\n",
          "*<code>public static <K,V> com.google.common.collect.ImmutableMap<K, V> com.google.common.collect.Maps.uniqueIndex(java.util.Iterator<V>,com.google.common.base.Function<? super V, K>)\n",
          "*uniqueIndex(java.util.Iterator<V> p0,com.google.common.base.Function<? super V, K> p1)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 170,
        "start_line": 166,
        "end_line": 176
      },
      {
        "link": "https://github.com/msuno/swagger-spring-boot-starter/blob/725c103128b954cded8c5935e13b21d5d5a53c0d/src/main/java/cn/msuno/swagger/spring/boot/autoconfigure/mappers/SecurityMapper.java\n",
        "code": [
          "  public Map<String, SecuritySchemeDefinition> toSecuritySchemeDefinitions(ResourceListing from) {\n",
          "    if (from == null) {\n",
          "      return newHashMap();\n",
          "    }\n",
          "    TreeMap<String, SecuritySchemeDefinition> result = newTreeMap();\n",
          "    result.putAll(transformValues(uniqueIndex(from.getSecuritySchemes(), schemeName()),\n",
          "        toSecuritySchemeDefinition()));\n",
          "    return result;\n",
          "  }\n",
          "\n",
          "  private Function<SecurityScheme, String> schemeName() {\n"
        ],
        "line_number": 50,
        "start_line": 46,
        "end_line": 56
      },
      {
        "link": "https://github.com/rags/playground/blob/29284721b47b542d73fbb951101fd73519803582/Java/fp/src/main/java/fp/Department.java\n",
        "code": [
          "\n",
          "    public static void main(String[] args) {\n",
          "        //map of department name and total salary\n",
          "        final ArrayList<Department> departments = new ArrayList<>();\n",
          "        final Map<String, Double> departmentTotalSalMap = transformValues(\n",
          "                uniqueIndex(departments, new Function<Department, String>() {\n",
          "                    @Override\n",
          "                    public String apply(Department department) {\n",
          "                        return department.name;\n",
          "                    }\n",
          "                }),\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "https://github.com/msuno/swagger-spring-boot-starter/blob/725c103128b954cded8c5935e13b21d5d5a53c0d/src/main/java/cn/msuno/swagger/spring/boot/autoconfigure/mappers/SecurityMapper.java\n",
        "code": [
          "  public Map<String, SecuritySchemeDefinition> toSecuritySchemeDefinitions(ResourceListing from) {\n",
          "    if (from == null) {\n",
          "      return newHashMap();\n",
          "    }\n",
          "    TreeMap<String, SecuritySchemeDefinition> result = newTreeMap();\n",
          "    result.putAll(transformValues(uniqueIndex(from.getSecuritySchemes(), schemeName()),\n",
          "        toSecuritySchemeDefinition()));\n",
          "    return result;\n",
          "  }\n",
          "\n",
          "  private Function<SecurityScheme, String> schemeName() {\n"
        ],
        "line_number": 50,
        "start_line": 46,
        "end_line": 56
      },
      {
        "link": "https://github.com/msuno/swagger-spring-boot-starter/blob/725c103128b954cded8c5935e13b21d5d5a53c0d/src/main/java/cn/msuno/swagger/spring/boot/autoconfigure/mappers/SecurityMapper.java\n",
        "code": [
          "  public Map<String, SecuritySchemeDefinition> toSecuritySchemeDefinitions(ResourceListing from) {\n",
          "    if (from == null) {\n",
          "      return newHashMap();\n",
          "    }\n",
          "    TreeMap<String, SecuritySchemeDefinition> result = newTreeMap();\n",
          "    result.putAll(transformValues(uniqueIndex(from.getSecuritySchemes(), schemeName()),\n",
          "        toSecuritySchemeDefinition()));\n",
          "    return result;\n",
          "  }\n",
          "\n",
          "  private Function<SecurityScheme, String> schemeName() {\n"
        ],
        "line_number": 50,
        "start_line": 46,
        "end_line": 56
      },
      {
        "link": "https://github.com/hitakaken/ndp/blob/659ce2dd6dd8233a8a745fbe54ee0799c75879cc/ndp-core/src/main/java/com/novbank/ndp/core/util/MapUtils.java\n",
        "code": [
          "\n",
          "/**\n",
          " * Created by CaoKe on 2015/6/3.\n",
          " */\n",
          "public class MapUtils {\n",
          "    public static <K,V> ImmutableMap<K,V> uniqueIndex(Iterator<V> values, Function<? super V,K> keyFunction){\n",
          "        return Maps.uniqueIndex(values, FunctionWrapUtils.wrap(keyFunction));\n",
          "    }\n",
          "\n",
          "    public static <K,V> ImmutableMap<K,V> uniqueIndex(Iterable<V> values, Function<? super V,K> keyFunction){\n",
          "        return Maps.uniqueIndex(values, FunctionWrapUtils.wrap(keyFunction));\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": "https://github.com/18965050/oasis/blob/e5f1cfa32b74fe37aaf0872c497f7c8502df052d/oasis-common-test/src/test/java/cn/xyz/chaos/guava/common/collection/MapsTest.java\n",
        "code": [
          "    private Book book2 = new Book.Builder().isbn(\"ISBN456\").title(\"book2\").build();\n",
          "    private Book book3 = new Book.Builder().isbn(\"ISBN789\").title(\"book3\").build();\n",
          "    private List<Book> books = Lists.newArrayList(book, book2, book3);\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.collect.Maps#uniqueIndex(Iterable, Function)}\u00e6\u00b5\u008b\u00e8\u00af\u0095\n",
          "     */\n",
          "    @Test\n",
          "    public void uniqueIndexTest() {\n",
          "        Map<String, Book> bookMap = Maps.uniqueIndex(books, new Function<Book, String>() {\n",
          "            @Override\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      },
      {
        "link": "https://github.com/alexvictoor/community-plugins/blob/0e21c50cf4aac248ccf90641eca7d647da21fef3/deployit-cli-plugins/plain-archive-converter/src/main/java/ext/deployit/community/cli/plainarchive/collect/Maps2.java\n",
        "code": [
          "     *            <code>null</code>\n",
          "     * @param valueFunction\n",
          "     *            the function that produces values for the keys\n",
          "     * @return a map containing the keys from the given set with values which\n",
          "     *         are generated from the keys\n",
          "     * @see Maps#uniqueIndex(Iterable, Function)\n",
          "     */\n",
          "    public static @Nonnull <K, V> Map<K, V> fromKeys(@Nonnull Set<K> keys,\n",
          "            @Nonnull Function<? super K, V> valueFunction) {\n",
          "        // can't use ImmutableMap.Builder as we're allowing null values\n",
          "        Map<K, V> result = newHashMapWithExpectedSize(keys.size());\n"
        ],
        "line_number": 64,
        "start_line": 60,
        "end_line": 70
      },
      {
        "link": "https://github.com/alexvictoor/community-plugins/blob/0e21c50cf4aac248ccf90641eca7d647da21fef3/deployit-cli-plugins/dar-manifest-exporter/src/main/java/ext/deployit/community/cli/manifestexport/collect/Maps2.java\n",
        "code": [
          "     *            <code>null</code>\n",
          "     * @param valueFunction\n",
          "     *            the function that produces values for the keys\n",
          "     * @return a map containing the keys from the given set with values which\n",
          "     *         are generated from the keys\n",
          "     * @see Maps#uniqueIndex(Iterable, Function)\n",
          "     */\n",
          "    public static @Nonnull <K, V> Map<K, V> fromKeys(@Nonnull Set<K> keys,\n",
          "            @Nonnull Function<? super K, V> valueFunction) {\n",
          "        // can't use ImmutableMap.Builder as we're allowing null values\n",
          "        Map<K, V> result = newHashMapWithExpectedSize(keys.size());\n"
        ],
        "line_number": 39,
        "start_line": 35,
        "end_line": 45
      },
      {
        "link": "https://github.com/andreyvit/yoursway-commons/blob/1581ef88c0a3bb2646267a16dce1b60698c9f7af/com.yoursway.utils/src/com/yoursway/utils/instrusive/IntrusiveMaps.java\n",
        "code": [
          "        return new IntrusiveMapImpl<K, V>(Maps.<K, V> newHashMap(), valueToKey);\n",
          "    }\n",
          "    \n",
          "    public static <K, V> IntrusiveMap<K, V> newIntrusiveHashMap(Collection<? extends V> m,\n",
          "            Function<V, K> valueToKey) {\n",
          "        return new IntrusiveMapImpl<K, V>(Maps.<K, V> newHashMap(uniqueIndex(m, valueToKey)), valueToKey);\n",
          "    }\n",
          "    \n",
          "    public static <K, V> IntrusiveMap<K, V> newIntrusiveHashMapWithExpectedSize(int expectedSize,\n",
          "            Function<V, K> valueToKey) {\n",
          "        return new IntrusiveMapImpl<K, V>(Maps.<K, V> newHashMapWithExpectedSize(expectedSize), valueToKey);\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/alexvictoor/community-plugins/blob/0e21c50cf4aac248ccf90641eca7d647da21fef3/deployit-cli-plugins/plain-archive-converter/src/main/java/ext/deployit/community/cli/plainarchive/collect/Maps2.java\n",
        "code": [
          "     *            <code>null</code>\n",
          "     * @param valueFunction\n",
          "     *            the function that produces values for the keys\n",
          "     * @return a map containing the keys from the given set with values which\n",
          "     *         are generated from the keys\n",
          "     * @see Maps#uniqueIndex(Iterable, Function)\n",
          "     */\n",
          "    public static @Nonnull <K, V> Map<K, V> fromKeys(@Nonnull Set<K> keys,\n",
          "            @Nonnull Function<? super K, V> valueFunction) {\n",
          "        // can't use ImmutableMap.Builder as we're allowing null values\n",
          "        Map<K, V> result = newHashMapWithExpectedSize(keys.size());\n"
        ],
        "line_number": 64,
        "start_line": 60,
        "end_line": 70
      },
      {
        "link": "https://github.com/hitakaken/ndp/blob/659ce2dd6dd8233a8a745fbe54ee0799c75879cc/ndp-core/src/main/java/com/novbank/ndp/core/util/MapUtils.java\n",
        "code": [
          "\n",
          "/**\n",
          " * Created by CaoKe on 2015/6/3.\n",
          " */\n",
          "public class MapUtils {\n",
          "    public static <K,V> ImmutableMap<K,V> uniqueIndex(Iterator<V> values, Function<? super V,K> keyFunction){\n",
          "        return Maps.uniqueIndex(values, FunctionWrapUtils.wrap(keyFunction));\n",
          "    }\n",
          "\n",
          "    public static <K,V> ImmutableMap<K,V> uniqueIndex(Iterable<V> values, Function<? super V,K> keyFunction){\n",
          "        return Maps.uniqueIndex(values, FunctionWrapUtils.wrap(keyFunction));\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/ImmutableMapUtil.java\n",
        "code": [
          "*/ \n",
          "public static <K,V> com.google.common.collect.ImmutableMap<K, V> toMap(java.lang.Iterable<K> p0,com.google.common.base.Function<? super K, V> p1){\n",
          "\treturn com.google.common.collect.Maps.toMap(p0,p1);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.Maps#uniqueIndex(java.util.Iterator<V>,com.google.common.base.Function<? super V, K>)}\n",
          "*@see com.google.common.collect.Maps#uniqueIndex(java.util.Iterator<V>,com.google.common.base.Function<? super V, K>)\n",
          "*<code>public static <K,V> com.google.common.collect.ImmutableMap<K, V> com.google.common.collect.Maps.uniqueIndex(java.util.Iterator<V>,com.google.common.base.Function<? super V, K>)\n",
          "*uniqueIndex(java.util.Iterator<V> p0,com.google.common.base.Function<? super V, K> p1)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 170,
        "start_line": 166,
        "end_line": 176
      },
      {
        "link": "https://github.com/alexvictoor/community-plugins/blob/0e21c50cf4aac248ccf90641eca7d647da21fef3/deployit-cli-plugins/dar-manifest-exporter/src/main/java/ext/deployit/community/cli/manifestexport/collect/Maps2.java\n",
        "code": [
          "     *            <code>null</code>\n",
          "     * @param valueFunction\n",
          "     *            the function that produces values for the keys\n",
          "     * @return a map containing the keys from the given set with values which\n",
          "     *         are generated from the keys\n",
          "     * @see Maps#uniqueIndex(Iterable, Function)\n",
          "     */\n",
          "    public static @Nonnull <K, V> Map<K, V> fromKeys(@Nonnull Set<K> keys,\n",
          "            @Nonnull Function<? super K, V> valueFunction) {\n",
          "        // can't use ImmutableMap.Builder as we're allowing null values\n",
          "        Map<K, V> result = newHashMapWithExpectedSize(keys.size());\n"
        ],
        "line_number": 39,
        "start_line": 35,
        "end_line": 45
      },
      {
        "link": "https://github.com/rags/playground/blob/29284721b47b542d73fbb951101fd73519803582/Java/fp/src/main/java/fp/Department.java\n",
        "code": [
          "\n",
          "    public static void main(String[] args) {\n",
          "        //map of department name and total salary\n",
          "        final ArrayList<Department> departments = new ArrayList<>();\n",
          "        final Map<String, Double> departmentTotalSalMap = transformValues(\n",
          "                uniqueIndex(departments, new Function<Department, String>() {\n",
          "                    @Override\n",
          "                    public String apply(Department department) {\n",
          "                        return department.name;\n",
          "                    }\n",
          "                }),\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "https://github.com/alexvictoor/community-plugins/blob/0e21c50cf4aac248ccf90641eca7d647da21fef3/deployit-cli-plugins/mustachifier/src/main/java/ext/deployit/community/cli/mustachify/collect/Maps2.java\n",
        "code": [
          "     *            <code>null</code>\n",
          "     * @param valueFunction\n",
          "     *            the function that produces values for the keys\n",
          "     * @return a map containing the keys from the given set with values which\n",
          "     *         are generated from the keys\n",
          "     * @see Maps#uniqueIndex(Iterable, Function)\n",
          "     */\n",
          "    public static @Nonnull <K, V> Map<K, V> fromKeys(@Nonnull Set<K> keys,\n",
          "            @Nonnull Function<? super K, V> valueFunction) {\n",
          "        // can't use ImmutableMap.Builder as we're allowing null values\n",
          "        Map<K, V> result = newHashMapWithExpectedSize(keys.size());\n"
        ],
        "line_number": 64,
        "start_line": 60,
        "end_line": 70
      },
      {
        "link": "https://github.com/18965050/oasis/blob/e5f1cfa32b74fe37aaf0872c497f7c8502df052d/oasis-common-test/src/test/java/cn/xyz/chaos/guava/common/collection/MapsTest.java\n",
        "code": [
          "    private Book book2 = new Book.Builder().isbn(\"ISBN456\").title(\"book2\").build();\n",
          "    private Book book3 = new Book.Builder().isbn(\"ISBN789\").title(\"book3\").build();\n",
          "    private List<Book> books = Lists.newArrayList(book, book2, book3);\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.collect.Maps#uniqueIndex(Iterable, Function)}\u00e6\u00b5\u008b\u00e8\u00af\u0095\n",
          "     */\n",
          "    @Test\n",
          "    public void uniqueIndexTest() {\n",
          "        Map<String, Book> bookMap = Maps.uniqueIndex(books, new Function<Book, String>() {\n",
          "            @Override\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      }
    ],
    "com.google.common.collect.Ordering.explicit": [
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/OrderingUtil.java\n",
        "code": [
          "*/ \n",
          "public static <T> com.google.common.collect.Ordering<T> compound(java.lang.Iterable<? extends java.util.Comparator<? super T>> p0){\n",
          "\treturn com.google.common.collect.Ordering.compound(p0);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.Ordering#explicit(java.util.List<T>)}\n",
          "*@see com.google.common.collect.Ordering#explicit(java.util.List<T>)\n",
          "*<code>public static <T> com.google.common.collect.Ordering<T> com.google.common.collect.Ordering.explicit(java.util.List<T>)\n",
          "*explicit(java.util.List<T> p0)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 53,
        "start_line": 49,
        "end_line": 59
      },
      {
        "link": "https://github.com/lstephen/ai-search/blob/3cdb6b56ba5058bb6e1bfaa7edb31cdbbf72395f/src/test/java/com/github/lstephen/ai/search/TestHillClimbing.java\n",
        "code": [
          "  }\n",
          "\n",
          "  @Test\n",
          "  public void optimizingBooleanToTrue() {\n",
          "    Boolean result = HillClimbing.<Boolean>builder()\n",
          "      .heuristic(Ordering.explicit(false, true))\n",
          "      .actionGenerator((s) -> Stream.of((b) -> !b))\n",
          "      .build()\n",
          "      .search(false);\n",
          "\n",
          "    Assertions.assertThat(result).isTrue();\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "https://github.com/hooj0/guava-example/blob/3c30cf3bcbd07310f8398eaffe6aefcc42da8435/src/java/main/com/cnblogs/hoojo/ordering/OrderingTest.java\n",
        "code": [
          "\t\tSystem.out.println(list); // [null, null, 9, 1, 1, 6, 7, 7, 4, 5, 2, 3, 3]\r\n",
          "\t\t\r\n",
          "\t\t// \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e5\u0085",
          "\u0083\u00e7\u00b4\u00a0\u00e7\u009a\u0084\u00e9\u00a1\u00ba\u00e5\u00ba\u008f\u00e8\u00bf\u009b\u00e6\u008e\u0092\u00e5\u00ba\u008f\r\n",
          "\t\tlist = Lists.newArrayList(1, 3, 2, 7, 5, 4, 9, 6, 3, 7, 1, 8);\r\n",
          "\t\tlist.sort(Ordering.explicit(4, 3, 2, 1, 0, 5, 6, 7, 8, 9));\r\n",
          "\t\tSystem.out.println(list); // [4, 3, 3, 2, 1, 1, 5, 6, 7, 7, 8, 9]\r\n",
          "\t}\r\n",
          "\t\r\n",
          "\tclass Entity {\r\n",
          "\t\tpublic int a;\r\n"
        ],
        "line_number": 281,
        "start_line": 277,
        "end_line": 287
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/OrderingUtil.java\n",
        "code": [
          "*/ \n",
          "public static <T> com.google.common.collect.Ordering<T> compound(java.lang.Iterable<? extends java.util.Comparator<? super T>> p0){\n",
          "\treturn com.google.common.collect.Ordering.compound(p0);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.Ordering#explicit(java.util.List<T>)}\n",
          "*@see com.google.common.collect.Ordering#explicit(java.util.List<T>)\n",
          "*<code>public static <T> com.google.common.collect.Ordering<T> com.google.common.collect.Ordering.explicit(java.util.List<T>)\n",
          "*explicit(java.util.List<T> p0)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 53,
        "start_line": 49,
        "end_line": 59
      },
      {
        "link": "https://github.com/AsukiLiu/Java-Common/blob/b17f23e956e2e635f27d3b46dec9bc597779fd11/tool/src/test/java/org/asuki/tool/guava/OrderingTest.java\n",
        "code": [
          "        List<Integer> leastOf = natural().leastOf(toSort, 3);\n",
          "        assertThat(leastOf, equalTo(newArrayList(1, 2, 2)));\n",
          "\n",
          "        toSort = asList(1, 2, 11);\n",
          "        Collections.sort(toSort, Ordering.usingToString());\n",
          "        Ordering<Integer> expectedOrder = explicit(newArrayList(1, 11, 2));\n",
          "        assertThat(expectedOrder.isOrdered(toSort), is(true));\n",
          "\n",
          "        int found = Ordering.usingToString().binarySearch(toSort, 11);\n",
          "        assertThat(found, equalTo(1));\n",
          "        found = Ordering.usingToString().max(toSort);\n"
        ],
        "line_number": 45,
        "start_line": 41,
        "end_line": 51
      },
      {
        "link": "https://github.com/akiraly/sickle-cell-disease/blob/f7ad85b8b94bede5781be31b5402584a18266f92/src/main/java/com/github/akiraly/scd/SCDLevel.java\n",
        "code": [
          "enum SCDLevel {\r\n",
          "  Healthy,\r\n",
          "  Carrier, // SCT\r\n",
          "  Infected; // SCD\r\n",
          "\r\n",
          "  static final Ordering<SCDLevel> ORDERING = Ordering.explicit(Healthy, Carrier, Infected);\r\n",
          "}\r\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 16
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/1b7f61aa43c14f6785bee90a1315d08a150dc11d/hollywood/com.oculus.deviceauthserver-DeviceAuthServer/sources/com/google/common/collect/Ordering.java\n",
        "code": [
          "    public static <T> Ordering<T> from(Ordering<T> ordering) {\n",
          "        return (Ordering) Preconditions.checkNotNull(ordering);\n",
          "    }\n",
          "\n",
          "    @GwtCompatible(serializable = true)\n",
          "    public static <T> Ordering<T> explicit(List<T> valuesInOrder) {\n",
          "        return new ExplicitOrdering(valuesInOrder);\n",
          "    }\n",
          "\n",
          "    @GwtCompatible(serializable = true)\n",
          "    public static <T> Ordering<T> explicit(T leastValue, T... remainingValuesInOrder) {\n"
        ],
        "line_number": 45,
        "start_line": 41,
        "end_line": 51
      },
      {
        "link": "https://github.com/fxwhu/demo/blob/2a3964b8199c57b981a957a8ca7bcd87c2aafe57/bmss/bmss-guava-test/src/test/java/com/bmss/test/guava/collection/OrderingTest.java\n",
        "code": [
          "    final ArrayList<Integer> integers = Lists.newArrayList(null, 3, 4, 9, 10, 20);\n",
          "\n",
          "    //arbitrary() \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e4\u00bb\u00bb\u00e6\u0084\u008f\u00e9\u00a1\u00ba\u00e5\u00ba\u008f\u00e5\u00af\u00b9\u00e6\u0089\u0080\u00e6\u009c\u0089\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e5\u0085",
          "\u00b6\u00e4\u00b8\u00adcompare(a, b) == 0 \u00e6\u0084\u008f\u00e5\u0091\u00b3\u00e7\u009d\u0080a == b\u00ef\u00bc\u0088\u00e8\u00ba\u00ab\u00e4\u00bb\u00bd\u00e5\u00b9\u00b3\u00e7\u00ad\u0089\u00ef\u00bc\u0089\n",
          "    //usingToString() \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e7\u0094\u00b1\u00e5\u00ae\u0083\u00e4\u00bb\u00ac\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e7\u009a\u0084\u00e8\u0087\u00aa\u00e7\u0084\u00b6\u00e9\u00a1\u00ba\u00e5\u00ba\u008f\u00ef\u00bc\u008ctoString()\u00e6\u00af\u0094\u00e8\u00be\u0083\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e8\u00bf\u009b\u00e8\u00a1\u008c\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e3\u0080\u0082\n",
          "    //explicit() \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e5\u00ae\u0083\u00e4\u00bb\u00ac\u00e5\u0087\u00ba\u00e7\u008e\u00b0\u00e7\u009a\u0084\u00e5\u00ae\u009a\u00e5\u0088\u0097\u00e8\u00a1\u00a8\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e9\u00a1\u00ba\u00e5\u00ba\u008f\u00e6\u00af\u0094\u00e8\u00be\u0083\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e8\u00bf\u009b\u00e8\u00a1\u008c\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e3\u0080\u0082\n",
          "    //greatestOf(Iterable<E> iterable, int k) \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e4\u00bb\u008e\u00e7\u00bb\u0099\u00e5\u00ae\u009a\u00e7\u009a\u0084\u00e8\u00bf\u00ad\u00e4\u00bb\u00a3\u00e5\u0099\u00a8\u00e6\u008c\u0089\u00e7\u0085",
          "\u00a7\u00e8\u00bf\u0099\u00e4\u00b8\u00aa\u00e9\u00a1\u00ba\u00e5\u00ba\u008f\u00ef\u00bc\u008c\u00e4\u00bb\u008e\u00e6\u009c\u0080\u00e5\u00a4\u00a7\u00e5\u0088\u00b0\u00e6\u009c\u0080\u00e5\u00b0\u008fk\u00e4\u00b8\u00aa\u00e6\u009c\u0080\u00e5\u00a4\u00a7\u00e7\u009a\u0084\u00e5\u0085",
          "\u0083\u00e7\u00b4\u00a0\u00e3\u0080\u0082\n",
          "    @Test\n",
          "    public void tetsOrdering() {\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/collect/Ordering.java\n",
        "code": [
          "    @Deprecated\n",
          "    public static <T> Ordering<T> from(Ordering<T> ordering) {\n",
          "        return (Ordering) Preconditions.checkNotNull(ordering);\n",
          "    }\n",
          "\n",
          "    public static <T> Ordering<T> explicit(List<T> list) {\n",
          "        return new ExplicitOrdering(list);\n",
          "    }\n",
          "\n",
          "    public static <T> Ordering<T> explicit(T t, T... tArr) {\n",
          "        return explicit(Lists.asList(t, tArr));\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/anonl/nvlist/blob/451746d2c31bc26e98fc2b027b2611b6dfd916f2/api/src/main/java/nl/weeaboo/vn/core/SkipMode.java\n",
        "code": [
          "\n",
          "    /** Skip until the end of the scene, or until a choice appears. */\n",
          "    SCENE;\n",
          "\n",
          "    private static final Ordering<SkipMode> ORDER = Ordering\n",
          "            .explicit(NONE, AUTO_READ, PARAGRAPH, SCENE)\n",
          "            .nullsFirst();\n",
          "\n",
          "    /**\n",
          "     * Returns the highest priority skip mode.\n",
          "     */\n"
        ],
        "line_number": 24,
        "start_line": 20,
        "end_line": 30
      }
    ],
    "com.google.common.collect.Table.put": [
      {
        "link": "}https://github.com/gabordobrei/diploma-simulation/blob/c243e42009f80ee840718a095cff0e392bc4692d/src/hu/dobrei/diploma/Stat.java\n",
        "code": [
          "\t\t\tmax = Math.max(max, Math.max(e.out, e.in));\n",
          "\t\t}\n",
          "\n",
          "\t\tfor (int i = 0; i < max / step + 1; i++) {\n",
          "\t\t\tfor (int j = 0; j < max / step + 1; j++) {\n",
          "\t\t\t\tscatter.put(i * step, j * step, 0);\n",
          "\t\t\t}\n",
          "\t\t}\n",
          "\n",
          "\t\tRange<Integer> outRange;\n",
          "\t\tRange<Integer> inRange;\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/X-rapido/guava_quick_start/blob/8e5ea68661e2fb7d49f91a51129161fa1c9cd28c/spring-boot-guava/src/test/java/com/example/guava/collect/TablesTest.java\n",
        "code": [
          "     * transpose rowKey\u00e4\u00b8\u008ecolumnKey\u00e7\u00bf\u00bb\u00e8\u00bd\u00ac\n",
          "     */\n",
          "    @Test\n",
          "    public void test_transpose() {\n",
          "        Table<String, String, Integer> table = HashBasedTable.create();\n",
          "        table.put(\"jack\", \"java\", 98);\n",
          "        table.put(\"jack\", \"php\", 65);\n",
          "        table.put(\"jack\", \"ui\", 80);\n",
          "        table.put(\"jack\", \"mysql\", 86);\n",
          "\n",
          "        System.out.println(\"\u00e9\u0081\u008d\u00e5\u008e\u0086 table\");\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "}https://github.com/Darlyyuhui/history/blob/6338dc4e9514038b65f12a8f174e49d41ecb71b6/SSMS/epms-mianzhu/src/main/java/com/xiangxun/atms/module/apb/service/impl/ApbInfoServiceImpl.java\n",
        "code": [
          "\t\tTable<String, String, String> table = HashBasedTable.create();\n",
          "\t\tTable<String, String, List<String>> table1 = HashBasedTable.create();\n",
          "\t\tcom.google.common.collect.Table table6= (com.google.common.collect.Table)cache.get(ApbProductTypeCache.CODE_NAME);\n",
          "\t\tfor(ApbInfo apbInfo:list){\n",
          "\t\t\tList<String> mainProductList = new ArrayList<String>();\n",
          "\t\t\ttable.put(apbInfo.getId(), ApbInfoCache.ID_NAME, apbInfo.getName());\n",
          "\t\t\tString mainProduct=apbInfo.getMainProduct();\n",
          "\t\t\tif(mainProduct != null && !\"\".equals(mainProduct)){\n",
          "\t\t\t\tString[] mainProducts=mainProduct.split(\",\");\n",
          "\t\t\t\tfor(String s:mainProducts){\n",
          "\t\t\t\t\tString ss=(String) table6.column(ApbProductTypeCache.CODE_NAME).get(s);\n"
        ],
        "line_number": 45,
        "start_line": 41,
        "end_line": 51
      },
      {
        "link": "https://github.com/mondhs/spantus/blob/d8dae09dc140143c1500627262f2773c367d4907/externals/experiment/spnt-exp-segment/src/test/java/org/spantus/exp/recognition/dao/ChartJFreeDao.java\n",
        "code": [
          "\tprivate static final String BY_NOISE = \"BY_NOISE\";\n",
          "\tprivate static final String RECOGNITION_TYPE = \"RECOGNITION_TYPE\";\n",
          "\tprivate static final String BY_RECOGNION_TYPE = \"BY_RECOGNION_TYPE\";\n",
          "\n",
          "\tstatic{\n",
          "\t\ttranslate.put(ATPAZINIMAS, \"Atpa\u00c5\u00beinimas\");\n",
          "\t\ttranslate.put(SEGMENTACIJA, \"Segmentacija\");\n",
          "\t\ttranslate.put(SEGMENTATION_ERRORS, \"Segmentavimo klaidos\");\n",
          "\t\ttranslate.put(RECOGNITION_ERRORS, \"Skiemen\u00c5\u00b3 atpa\u00c5\u00beinimo klaidos\");\n",
          "\t\ttranslate.put(RECOGNITION_SEGMENTATION_ERROR_RATIOS, \"Segment\u00c5\u00b3 aptikimo ir atpa\u00c5\u00beinimo santykiai\");\n",
          "\t\ttranslate.put(ERROR_RATIOS,\"Klaid\u00c5\u00b3 santykis %\");\n"
        ],
        "line_number": 52,
        "start_line": 48,
        "end_line": 58
      },
      {
        "link": "}https://github.com/hunterhector/cmu-script/blob/de9d93f45ae718927b86bbeff1224b4d275911bc/cross-document-script/src/main/java/edu/cmu/cs/lti/script/model/FeatureTable.java\n",
        "code": [
          "  private Table<String, String, Double> featureTable = HashBasedTable.create();\n",
          "\n",
          "  private int size = 0;\n",
          "\n",
          "  public void addFeature(String featureType, String featureName, double featureValue) {\n",
          "    featureTable.put(featureType, featureName, featureValue);\n",
          "    size++;\n",
          "  }\n",
          "\n",
          "  public Table<String, String, Double> getFeatures() {\n",
          "    return featureTable;\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": "https://github.com/waggag/Java300-And-XML/blob/bcc8f1d8aff5a0795f0b14f952bfcafe696e41e3/java300/src/cn/waggag/guava/GuavaTable.java\n",
        "code": [
          "public class GuavaTable {\n",
          "\n",
          "\tpublic static void main(String[] args) {\n",
          "\t\tTable<String, String, Integer> tables = HashBasedTable.create();\n",
          "\t\t//\u00b2\u00e2\u00ca\u00d4\u00ca\u00fd\u00be\u00dd\n",
          "\t\ttables.put(\"a\", \"javase\", 80);\n",
          "\t\ttables.put(\"b\", \"javase\", 90);\n",
          "\t\ttables.put(\"a\", \"oracle\", 100);\n",
          "\t\ttables.put(\"b\", \"oracle\", 95);\n",
          "\t\t\n",
          "\t\t//\u00b2\u00e9\u00bf\u00b4\u00cb\u00f9\u00d3\u00d0\u00b5\u00c4\u00d0\u00d0\u00ca\u00fd\u00be\u00dd\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "}https://github.com/linboqiao/EEA/blob/5b6ffa08d1972946d6941ac6b7ae57f9fe805dcc/cmu-script/cross-document-script/src/main/java/edu/cmu/cs/lti/script/model/FeatureTable.java\n",
        "code": [
          "  private Table<String, String, Double> featureTable = HashBasedTable.create();\n",
          "\n",
          "  private int size = 0;\n",
          "\n",
          "  public void addFeature(String featureType, String featureName, double featureValue) {\n",
          "    featureTable.put(featureType, featureName, featureValue);\n",
          "    size++;\n",
          "  }\n",
          "\n",
          "  public Table<String, String, Double> getFeatures() {\n",
          "    return featureTable;\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": "https://github.com/gwmccort/examples/blob/dd7d37d74d37a95e8775fe515f2e2d68c9d818b7/guava/src/main/java/com/javarticles/guava/GuavaTableExample.java\n",
        "code": [
          " */\n",
          "public class GuavaTableExample {\n",
          "    \n",
          "    public static void main(String[] args) {\n",
          "        Table<String, String, String> table = HashBasedTable.create();\n",
          "        table.put(\"Language\", \"Java\", \"1.8\");\n",
          "        table.put(\"Language\", \"Ruby\", \"2.2.3\");\n",
          "        table.put(\"IOC\", \"Spring\", \"4.1.4\");\n",
          "        table.put(\"IOC\", \"Guice\", \"4.0\");\n",
          "        table.put(\"Database\", \"Oracle\", \"12c\");\n",
          "        table.put(\"Database\", \"MySQL\", \"5.0\");\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/khotyn/learning-guava/blob/e8241b981cb461023fa89edf7c2d366ce2700f98/src/test/java/com/khotyn/learning/guava/LearningTable.java\n",
        "code": [
          "public class LearningTable {\n",
          "\n",
          "    @Test\n",
          "    public void testTable() {\n",
          "        Table<String, String, String> persons = HashBasedTable.create();\n",
          "        persons.put(\"khotyn\", \"huang\", \"khotynhuang\");\n",
          "        persons.put(\"khotyn\", \"tian\", \"khotyntian\");\n",
          "        persons.put(\"vivian\", \"huang\", \"vivianhuang\");\n",
          "        persons.put(\"vivian\", \"tian\", \"viviantian\");\n",
          "        String desc = persons.get(\"khotyn\", \"tian\");\n",
          "        Assert.assertEquals(\"khotyntian\", desc);\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "https://github.com/gutaoaining/JavaTest/blob/6e99534a272edb814e7f24f7eb1adaa04ff0a642/src/Guava/TableStudy.java\n",
        "code": [
          " * @since\n",
          " */\n",
          "public class TableStudy {\n",
          "     public static void main(String[] args) {\n",
          "\t\tTable<String, String, Double> gradeTable = HashBasedTable.create();\n",
          "\t    gradeTable.put(\"gutao\", \"Chinese\", 90.2);\n",
          "\t    gradeTable.put(\"gutao\", \"Math\", 96.2);\n",
          "\t    gradeTable.put(\"nibei\", \"Chinese\", 90.2);\n",
          "\t    gradeTable.put(\"nibei\", \"sport\", 80.2);\n",
          "\t    gradeTable.put(\"luoming\", \"English\", 60.2);\n",
          "\t    Set<Cell<String, String, Double>> cells = gradeTable.cellSet();\n"
        ],
        "line_number": 27,
        "start_line": 23,
        "end_line": 33
      }
    ],
    "com.google.common.cache.CacheStats.evictionCount": [
      {
        "link": "https://github.com/qianmoyushang/poetry/blob/c7f3f525f97b9af81349b131154fc04ac3f0b661/ivan-4-poetry/src/main/java/cn/dendarii/ivan/common/bean/http/HBCacheStats.java\n",
        "code": [
          "            tar.setHitRate(src.hitRate());\n",
          "            tar.setMissRate(src.missRate());\n",
          "            tar.setLoadSuccessCount(src.loadSuccessCount());\n",
          "            tar.setLoadExceptionCount(src.loadExceptionCount());\n",
          "            tar.setTotalLoadTime(src.totalLoadTime());\n",
          "            tar.setEvictionCount(src.evictionCount());\n",
          "            tar.setAverageLoadPenalty(src.averageLoadPenalty());\n",
          "        }\n",
          "        return tar;\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/tclan126/glassdoorapk/blob/858772b5f2caa20a9370c52d8dbda83da4ee1d69/sources/com/google/common/cache/AbstractCache.java\n",
        "code": [
          "            this.hitCount.add(snapshot.hitCount());\n",
          "            this.missCount.add(snapshot.missCount());\n",
          "            this.loadSuccessCount.add(snapshot.loadSuccessCount());\n",
          "            this.loadExceptionCount.add(snapshot.loadExceptionCount());\n",
          "            this.totalLoadTime.add(snapshot.totalLoadTime());\n",
          "            this.evictionCount.add(snapshot.evictionCount());\n",
          "        }\n",
          "\n",
          "        @Override // com.google.common.cache.AbstractCache.StatsCounter\n",
          "        public void recordEviction() {\n",
          "            this.evictionCount.increment();\n"
        ],
        "line_number": 19,
        "start_line": 15,
        "end_line": 25
      },
      {
        "link": "https://github.com/wangyaomail/ivan/blob/8920afdff7506e75b9b72d4d70ead7758eda2bf0/ivan-4-poetry/src/main/java/cn/dendarii/ivan/common/bean/http/HBCacheStats.java\n",
        "code": [
          "            tar.setHitRate(src.hitRate());\n",
          "            tar.setMissRate(src.missRate());\n",
          "            tar.setLoadSuccessCount(src.loadSuccessCount());\n",
          "            tar.setLoadExceptionCount(src.loadExceptionCount());\n",
          "            tar.setTotalLoadTime(src.totalLoadTime());\n",
          "            tar.setEvictionCount(src.evictionCount());\n",
          "            tar.setAverageLoadPenalty(src.averageLoadPenalty());\n",
          "        }\n",
          "        return tar;\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/joansmith2/jackrabbit-oak/blob/e0450b7a1e710b0ce391393ab773d10efa1c9f55/oak-core/src/main/java/org/apache/jackrabbit/oak/cache/CacheStats.java\n",
        "code": [
          "        return stats().averageLoadPenalty();\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public long getEvictionCount() {\n",
          "        return stats().evictionCount();\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public long getElementCount() {\n",
          "        return cache.size();\n"
        ],
        "line_number": 108,
        "start_line": 104,
        "end_line": 114
      },
      {
        "link": "https://github.com/votingsystem/votingsystem/blob/316c6440e462bc3394b682bb0d8644140e7b6588/votingsystem-serviceprovider/src/main/java/org/votingsystem/serviceprovider/util/CacheStats.java\n",
        "code": [
          "        this.hitCount = cacheStats.hitCount();\n",
          "        this.missCount = cacheStats.missCount();\n",
          "        this.loadSuccessCount = cacheStats.loadSuccessCount();\n",
          "        this.loadExceptionCount = cacheStats.loadExceptionCount();\n",
          "        this.totalLoadTime = cacheStats.totalLoadTime();\n",
          "        this.evictionCount = cacheStats.evictionCount();\n",
          "    }\n",
          "\n",
          "    public long getHitCount() {\n",
          "        return hitCount;\n",
          "    }\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/GMYL/kg/blob/1900a19091bb160c42a1cf6e749b603a994e44b5/src/main/java/hb/kg/common/bean/http/HBCacheStats.java\n",
        "code": [
          "            tar.setHitRate(src.hitRate());\n",
          "            tar.setMissRate(src.missRate());\n",
          "            tar.setLoadSuccessCount(src.loadSuccessCount());\n",
          "            tar.setLoadExceptionCount(src.loadExceptionCount());\n",
          "            tar.setTotalLoadTime(src.totalLoadTime());\n",
          "            tar.setEvictionCount(src.evictionCount());\n",
          "            tar.setAverageLoadPenalty(src.averageLoadPenalty());\n",
          "        }\n",
          "        return tar;\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/joansmith3/jackrabbit-oak/blob/e0450b7a1e710b0ce391393ab773d10efa1c9f55/oak-core/src/main/java/org/apache/jackrabbit/oak/cache/CacheStats.java\n",
        "code": [
          "        return stats().averageLoadPenalty();\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public long getEvictionCount() {\n",
          "        return stats().evictionCount();\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public long getElementCount() {\n",
          "        return cache.size();\n"
        ],
        "line_number": 108,
        "start_line": 104,
        "end_line": 114
      },
      {
        "link": "https://github.com/alanda-io/alanda/blob/e1456e6c5c3c0f18b7d36825bfa487b45f213a45/backend/alanda-base/src/main/java/io/alanda/base/util/cache/CacheStatsDto.java\n",
        "code": [
          "    this.missCount = cs.missCount();\n",
          "\n",
          "    this.loadSuccessCount = cs.loadSuccessCount();\n",
          "    this.loadExceptionCount = cs.loadExceptionCount();\n",
          "    this.totalLoadTime = cs.totalLoadTime();\n",
          "    this.evictionCount = cs.evictionCount();\n",
          "    \n",
          "    this.hitRate = cs.hitRate();\n",
          "\n",
          "    this.averageLoadPenalty = cs.averageLoadPenalty();\n",
          "    this.loadExceptionRate = cs.loadExceptionRate();\n"
        ],
        "line_number": 49,
        "start_line": 45,
        "end_line": 55
      },
      {
        "link": "https://github.com/joansmith1/jackrabbit-oak/blob/e0450b7a1e710b0ce391393ab773d10efa1c9f55/oak-core/src/main/java/org/apache/jackrabbit/oak/cache/CacheStats.java\n",
        "code": [
          "        return stats().averageLoadPenalty();\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public long getEvictionCount() {\n",
          "        return stats().evictionCount();\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public long getElementCount() {\n",
          "        return cache.size();\n"
        ],
        "line_number": 108,
        "start_line": 104,
        "end_line": 114
      },
      {
        "link": "https://github.com/joansmith/jackrabbit-oak/blob/b6e49dd9a37cccbf3486df1234acf2f96fc2f133/oak-core/src/main/java/org/apache/jackrabbit/oak/cache/CacheStats.java\n",
        "code": [
          "        return stats().averageLoadPenalty();\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public long getEvictionCount() {\n",
          "        return stats().evictionCount();\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public long getElementCount() {\n",
          "        return cache.size();\n"
        ],
        "line_number": 110,
        "start_line": 106,
        "end_line": 116
      }
    ],
    "org.mockito.ArgumentCaptor.forClass": [
      {
        "link": "https://github.com/Lukmannudin/CountYourNumber/blob/c13cfea296811a8c25c477332c54d6bbce869674/androidmvp-master/androidmvp-master/app/src/test/java/com/antonioleiva/mvpexample/app/main/MainPresenterTest.java\n",
        "code": [
          "        verify(view, times(1)).showMessage(anyString());\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void checkIfRightMessageIsDisplayed() {\n",
          "        ArgumentCaptor<String> captor = forClass(String.class);\n",
          "        presenter.onItemClicked(1);\n",
          "        verify(view, times(1)).showMessage(captor.capture());\n",
          "        assertThat(captor.getValue(), is(\"Position 2 clicked\"));\n",
          "    }\n",
          "\n"
        ],
        "line_number": 49,
        "start_line": 45,
        "end_line": 55
      },
      {
        "link": "https://github.com/Michelle0716/androidMVP-master/blob/7aebac67a9c994751703535ea10635e561b1cacb/app/src/test/java/com/antonioleiva/mvpexample/app/main/MainPresenterTest.java\n",
        "code": [
          "        verify(view, times(1)).showMessage(anyString());\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void checkIfRightMessageIsDisplayed() {\n",
          "        ArgumentCaptor<String> captor = forClass(String.class);\n",
          "        presenter.onItemClicked(1);\n",
          "        verify(view, times(1)).showMessage(captor.capture());\n",
          "        assertThat(captor.getValue(), is(\"Position 2 clicked\"));\n",
          "    }\n",
          "\n"
        ],
        "line_number": 49,
        "start_line": 45,
        "end_line": 55
      },
      {
        "link": "}https://github.com/YunZhang2014/test/blob/d4818c214a037360bf2f2c0aae7a52b75dd8de12/javaSETest/JunitTest/TestingwithJunit2015Test/origin/chapter-8/timeline.util/src/test/java/book/twju/timeline/util/BackgroundProcessorITest.java\n",
        "code": [
          "      .isInstanceOf( IllegalArgumentException.class );\n",
          "  }\n",
          "  \n",
          "  @Test\n",
          "  public void processWithRuntimeProblem() {\n",
          "    ArgumentCaptor<Runnable> captor = forClass( Runnable.class );\n",
          "    RuntimeException expected = new RuntimeException();\n",
          "    \n",
          "    backgroundProcessor.process( () -> { throw expected; } );\n",
          "    sleep( 100 );\n",
          "    \n"
        ],
        "line_number": 47,
        "start_line": 43,
        "end_line": 53
      },
      {
        "link": "https://github.com/ytgdoc/DemoAndroidMVP/blob/5ae1581f5b6cfada7e21bdb01fd4adb56801736d/app/src/test/java/com/antonioleiva/mvpexample/app/main/MainPresenterTest.java\n",
        "code": [
          "        verify(view, times(1)).showMessage(anyString());\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void checkIfRightMessageIsDisplayed() {\n",
          "        ArgumentCaptor<String> captor = forClass(String.class);\n",
          "        presenter.onItemClicked(1);\n",
          "        verify(view, times(1)).showMessage(captor.capture());\n",
          "        assertThat(captor.getValue(), is(\"Position 2 clicked\"));\n",
          "    }\n",
          "\n"
        ],
        "line_number": 49,
        "start_line": 45,
        "end_line": 55
      },
      {
        "link": "https://github.com/ksandrasegaramz/microservice-framework/blob/1ae0ee38389c8e77105fa9428ee5a4d73f06dec4/core/src/test/java/uk/gov/justice/services/core/audit/SimpleAuditClientTest.java\n",
        "code": [
          "        when(envelope.toString()).thenReturn(envelopeJson);\n",
          "        when(serviceContextNameProvider.getServiceContextName()).thenReturn(serviceContextName);\n",
          "\n",
          "        simpleAuditClient.auditEntry(envelope);\n",
          "\n",
          "        final ArgumentCaptor<String> argumentCaptor = forClass(String.class);\n",
          "\n",
          "        verify(logger).info(argumentCaptor.capture());\n",
          "\n",
          "        final String json = argumentCaptor.getValue();\n",
          "\n"
        ],
        "line_number": 49,
        "start_line": 45,
        "end_line": 55
      },
      {
        "link": "https://github.com/CJSCommonPlatform/microservice-framework/blob/24a33df30b30fb81f4a818c4030b8b55429e462e/test-utils/test-utils-core/src/main/java/uk/gov/justice/services/test/utils/core/helper/EventStreamMockHelper.java\n",
        "code": [
          "     * @return the Stream of JsonEnvelopes\n",
          "     * @throws EventStreamException if an event could not be appended\n",
          "     */\n",
          "    @SuppressWarnings(\"unchecked\")\n",
          "    public static Stream<JsonEnvelope> verifyAppendAndGetArgumentFrom(final EventStream eventStream) throws EventStreamException {\n",
          "        final ArgumentCaptor<Stream> argumentCaptor = forClass(Stream.class);\n",
          "        verify(eventStream).append(argumentCaptor.capture());\n",
          "\n",
          "        return ((Stream<JsonEnvelope>) argumentCaptor.getValue());\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "https://github.com/Talentica/Mealspice-Android/blob/cecf35e122c259fa67741987b7e3227b5fc0fa47/app/src/test/java/com/talenitca/mealspiceandroid/screens/details/DetailsPresenterErrorTest.java\n",
        "code": [
          "        assertNull(presenter.getView());\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void checkIfRightViewIsShown() {\n",
          "        ArgumentCaptor<Throwable> captor = forClass(Throwable.class);\n",
          "        presenter.start(\"anything\");\n",
          "        verify(view, times(1)).showLoading();\n",
          "        verify(view, times(1)).hideLoading();\n",
          "        verify(view, times(1)).onError(captor.capture());\n",
          "    }\n"
        ],
        "line_number": 48,
        "start_line": 44,
        "end_line": 54
      },
      {
        "link": "https://github.com/ksandrasegaramz/microservice-framework/blob/1ae0ee38389c8e77105fa9428ee5a4d73f06dec4/test-utils/test-utils-core/src/main/java/uk/gov/justice/services/test/utils/core/helper/EventStreamMockHelper.java\n",
        "code": [
          "     * @return the Stream of JsonEnvelopes\n",
          "     * @throws EventStreamException if an event could not be appended\n",
          "     */\n",
          "    @SuppressWarnings(\"unchecked\")\n",
          "    public static Stream<JsonEnvelope> verifyAppendAndGetArgumentFrom(final EventStream eventStream) throws EventStreamException {\n",
          "        final ArgumentCaptor<Stream> argumentCaptor = forClass(Stream.class);\n",
          "        verify(eventStream).append(argumentCaptor.capture());\n",
          "\n",
          "        return ((Stream<JsonEnvelope>) argumentCaptor.getValue());\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "}https://github.com/rherrmann/gonsole/blob/fcb6ed0f64029a0ecf6fd9847012dbbfff4efb89/com.codeaffine.console.core.test/src/com/codeaffine/console/core/internal/contentassist/ValueCaptor.java\n",
        "code": [
          "  }\n",
          "\n",
          "  void captureReplacementValues() {\n",
          "    IDocument document = mock( IDocument.class );\n",
          "    actual.apply( document );\n",
          "    offsetCaptor = forClass( Integer.class );\n",
          "    lengthCaptor = forClass( Integer.class );\n",
          "    replacementCaptor = forClass( String.class );\n",
          "    try {\n",
          "      verify( document ).replace( offsetCaptor.capture(), lengthCaptor.capture(), replacementCaptor.capture() );\n",
          "    } catch( BadLocationException shouldNotHappen ) {\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      },
      {
        "link": "https://github.com/CJSCommonPlatform/microservice_framework_version_6/blob/25dc170f9178a6f6a6c96263f47781566d78600b/test-utils/test-utils-core/src/main/java/uk/gov/justice/services/test/utils/core/helper/EventStreamMockHelper.java\n",
        "code": [
          "     * @return the Stream of JsonEnvelopes\n",
          "     * @throws EventStreamException if an event could not be appended\n",
          "     */\n",
          "    @SuppressWarnings(\"unchecked\")\n",
          "    public static Stream<JsonEnvelope> verifyAppendAndGetArgumentFrom(final EventStream eventStream) throws EventStreamException {\n",
          "        final ArgumentCaptor<Stream> argumentCaptor = forClass(Stream.class);\n",
          "        verify(eventStream).append(argumentCaptor.capture());\n",
          "\n",
          "        return ((Stream<JsonEnvelope>) argumentCaptor.getValue());\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      }
    ],
    "com.google.common.collect.MapMaker.makeMap": [
      {
        "link": "https://github.com/yawkat/fiction-android/blob/7c1ad8a44fc28073188baa8d0903c89b3206bf9e/app/src/main/java/at/yawk/fiction/android/ui/WeakBiMap.java\n",
        "code": [
          " * BiMap-like class with weak keys and values.\n",
          " *\n",
          " * @author yawkat\n",
          " */\n",
          "class WeakBiMap<K, V> {\n",
          "    private static <K, V> Map<K, V> makeMap() {\n",
          "        return new MapMaker()\n",
          "                .weakKeys().weakValues()\n",
          "                .makeMap();\n",
          "    }\n",
          "\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": "https://github.com/Akarin-project/AkarinForge/blob/2804aa89e3c058d7db196424811beeac5622f6fd/sources/server/src/main/java/io/akarin/forge/executor/asm/SafeClassDefiner.java\n",
        "code": [
          "import java.util.function.Function;\n",
          "\n",
          "public class SafeClassDefiner\n",
          "implements ClassDefiner {\n",
          "    static final SafeClassDefiner INSTANCE = new SafeClassDefiner();\n",
          "    private final ConcurrentMap<ClassLoader, GeneratedClassLoader> loaders = new MapMaker().weakKeys().makeMap();\n",
          "\n",
          "    private SafeClassDefiner() {\n",
          "    }\n",
          "\n",
          "    /*\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/Double1996/learn-code/blob/7dcaafc4b81a46b0f22cfdd8631de541fdbd0266/java/java-core-learning-example/src/main/java/org/javacore/colgoogle/MapMakerT.java\n",
        "code": [
          " */\n",
          "public class MapMakerT {\n",
          "    // \u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e6\u00a1\u0088\u00e4\u00be\u008b:\u00e5\u00ad\u0098\u00e5\u0082\u00a8\u00e9\u00aa\u008c\u00e8\u00af\u0081\u00e7\u00a0\u0081\n",
          "    // <String, String> == <\u00e7\u0094\u00a8\u00e6\u0088\u00b7\u00e5\u0094\u00af\u00e4\u00b8\u0080\u00ef\u00bc\u008c\u00e9\u00aa\u008c\u00e8\u00af\u0081\u00e7\u00a0\u0081>\n",
          "    // expiration(15, TimeUnit.MINUTES) \u00e6\u009c\u0089\u00e6\u0095\u0088\u00e6\u009c\u009f15\u00e5\u0088\u0086\u00e9\u0092\u009f\n",
          "    ConcurrentMap<String,String> capthcaMap = new MapMaker().expiration(15, TimeUnit.MINUTES).makeMap();\n",
          "\n",
          "    // \u00e8\u00ae\u00be\u00e7\u00bd\u00aeConcurrentMap\u00e7\u009a\u0084concurrencyLevel\u00e5\u008f\u0082\u00e6\u0095\u00b0 \u00ef\u00bc\u008c\u00e4\u00be\u008b\u00e5\u00a6\u0082ConcurrentHashMap\u00e6\u0098\u00af\u00e7\u0094\u00a8\u00e6\u009d\u00a5\u00e6\u008e\u00a7\u00e5\u0088\u00b6\u00e5\u0085",
          "\u00b6Segment\u00e6\u0095\u00b0\u00e7\u00bb\u0084\u00e7\u009a\u0084\u00e5\u00a4\u00a7\u00e5\u00b0\u008f\n",
          "    ConcurrentMap<String,Object> map1 = new MapMaker().concurrencyLevel(8).makeMap();\n",
          "\n"
        ],
        "line_number": 15,
        "start_line": 11,
        "end_line": 21
      },
      {
        "link": "https://github.com/willawn/HouseReadily/blob/cec51e073248df4e099595d4efe8fe48e24acd8a/HouseReadily/src/com/huzhiyi/postserver/client/ContextData.java\n",
        "code": [
          "import java.util.concurrent.ConcurrentMap;\r\n",
          "\r\n",
          "import com.google.common.collect.MapMaker;\r\n",
          "\r\n",
          "public class ContextData {\r\n",
          "\tprivate static ConcurrentMap<String, ArrayList<String>> historyData = new MapMaker().makeMap();\r\n",
          "\r\n",
          "\tprivate static ConcurrentMap<String, Integer> viewId = new MapMaker().makeMap();\r\n",
          "\r\n",
          "\tprivate static ConcurrentMap<String, ArrayList<String>> viewIdData = new MapMaker().makeMap();\r\n",
          "\r\n"
        ],
        "line_number": 8,
        "start_line": 4,
        "end_line": 14
      },
      {
        "link": "https://github.com/ghalib3/jdk/blob/519e47cb8aa55fdb2070c0534eee78121bd7f630/guava-modules/guava-collections-map/src/test/java/com/baeldung/guava/mapmaker/GuavaMapMakerUnitTest.java\n",
        "code": [
          "import static org.junit.Assert.assertNotNull;\n",
          "\n",
          "public class GuavaMapMakerUnitTest {\n",
          "    @Test\n",
          "    public void whenCreateCaches_thenCreated() {\n",
          "        ConcurrentMap<User, Session> sessionCache = new MapMaker().makeMap();\n",
          "        assertNotNull(sessionCache);\n",
          "\n",
          "        ConcurrentMap<User, Profile> profileCache = new MapMaker().makeMap();\n",
          "        assertNotNull(profileCache);\n",
          "\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      },
      {
        "link": "https://github.com/manhnh0903/Tutorials/blob/dd3a253dd91239937d901d56c83775e637d30cf7/guava-collections-map/src/test/java/com/baeldung/guava/mapmaker/GuavaMapMakerUnitTest.java\n",
        "code": [
          "import static org.junit.Assert.assertNotNull;\n",
          "\n",
          "public class GuavaMapMakerUnitTest {\n",
          "    @Test\n",
          "    public void whenCreateCaches_thenCreated() {\n",
          "        ConcurrentMap<User, Session> sessionCache = new MapMaker().makeMap();\n",
          "        assertNotNull(sessionCache);\n",
          "\n",
          "        ConcurrentMap<User, Profile> profileCache = new MapMaker().makeMap();\n",
          "        assertNotNull(profileCache);\n",
          "\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      },
      {
        "link": "https://github.com/sureshgangaram/Java1/blob/230fd8d849a4cf2dde564307cd3c4cf424068227/guava-modules/guava-collections-map/src/test/java/com/baeldung/guava/mapmaker/GuavaMapMakerUnitTest.java\n",
        "code": [
          "import static org.junit.Assert.assertNotNull;\n",
          "\n",
          "public class GuavaMapMakerUnitTest {\n",
          "    @Test\n",
          "    public void whenCreateCaches_thenCreated() {\n",
          "        ConcurrentMap<User, Session> sessionCache = new MapMaker().makeMap();\n",
          "        assertNotNull(sessionCache);\n",
          "\n",
          "        ConcurrentMap<User, Profile> profileCache = new MapMaker().makeMap();\n",
          "        assertNotNull(profileCache);\n",
          "\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      },
      {
        "link": "https://github.com/vipinsharma29/youtube-codes/blob/a72971124069ea238e1869b731199a420cc3212c/tutorials-master/guava-collections-map/src/test/java/com/baeldung/guava/mapmaker/GuavaMapMakerUnitTest.java\n",
        "code": [
          "import static org.junit.Assert.assertNotNull;\n",
          "\n",
          "public class GuavaMapMakerUnitTest {\n",
          "    @Test\n",
          "    public void whenCreateCaches_thenCreated() {\n",
          "        ConcurrentMap<User, Session> sessionCache = new MapMaker().makeMap();\n",
          "        assertNotNull(sessionCache);\n",
          "\n",
          "        ConcurrentMap<User, Profile> profileCache = new MapMaker().makeMap();\n",
          "        assertNotNull(profileCache);\n",
          "\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.deviceauthserver-DeviceAuthServer/sources/com/google/common/collect/Interners.java\n",
        "code": [
          "public final class Interners {\n",
          "    private Interners() {\n",
          "    }\n",
          "\n",
          "    public static <E> Interner<E> newStrongInterner() {\n",
          "        final ConcurrentMap<E, E> map = new MapMaker().makeMap();\n",
          "        return new Interner<E>() {\n",
          "            /* class com.google.common.collect.Interners.AnonymousClass1 */\n",
          "\n",
          "            @Override // com.google.common.collect.Interner\n",
          "            public E intern(E sample) {\n"
        ],
        "line_number": 15,
        "start_line": 11,
        "end_line": 21
      },
      {
        "link": "https://github.com/JeffLi1993/java-core-learning-example/blob/ab9f4d17afc3ea14a5a2078db18bdf6573021d76/src/main/java/org/javacore/colgoogle/MapMakerT.java\n",
        "code": [
          " */\n",
          "public class MapMakerT {\n",
          "    // \u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e6\u00a1\u0088\u00e4\u00be\u008b:\u00e5\u00ad\u0098\u00e5\u0082\u00a8\u00e9\u00aa\u008c\u00e8\u00af\u0081\u00e7\u00a0\u0081\n",
          "    // <String, String> == <\u00e7\u0094\u00a8\u00e6\u0088\u00b7\u00e5\u0094\u00af\u00e4\u00b8\u0080\u00ef\u00bc\u008c\u00e9\u00aa\u008c\u00e8\u00af\u0081\u00e7\u00a0\u0081>\n",
          "    // expiration(15, TimeUnit.MINUTES) \u00e6\u009c\u0089\u00e6\u0095\u0088\u00e6\u009c\u009f15\u00e5\u0088\u0086\u00e9\u0092\u009f\n",
          "    ConcurrentMap<String,String> capthcaMap = new MapMaker().expiration(15, TimeUnit.MINUTES).makeMap();\n",
          "\n",
          "    // \u00e8\u00ae\u00be\u00e7\u00bd\u00aeConcurrentMap\u00e7\u009a\u0084concurrencyLevel\u00e5\u008f\u0082\u00e6\u0095\u00b0 \u00ef\u00bc\u008c\u00e4\u00be\u008b\u00e5\u00a6\u0082ConcurrentHashMap\u00e6\u0098\u00af\u00e7\u0094\u00a8\u00e6\u009d\u00a5\u00e6\u008e\u00a7\u00e5\u0088\u00b6\u00e5\u0085",
          "\u00b6Segment\u00e6\u0095\u00b0\u00e7\u00bb\u0084\u00e7\u009a\u0084\u00e5\u00a4\u00a7\u00e5\u00b0\u008f\n",
          "    ConcurrentMap<String,Object> map1 = new MapMaker().concurrencyLevel(8).makeMap();\n",
          "\n"
        ],
        "line_number": 15,
        "start_line": 11,
        "end_line": 21
      }
    ],
    "com.google.common.util.concurrent.Futures.allAsList": [
      {
        "link": "https://github.com/wangjicong/Android-6.0-packages/blob/ac1a67c36f90013ac1de82309f84bd215d5fdca9/code/apps/Camera2/src/com/android/camera/async/Futures2.java\n",
        "code": [
          "        futures[1] = f2;\n",
          "\n",
          "        // Futures.allAsList is used instead of Futures.successfulAsList because\n",
          "        // allAsList will propagate the failures instead of null values to the\n",
          "        // parameters of the supplied function.\n",
          "        ListenableFuture<List<Object>> result = Futures.allAsList(futures);\n",
          "        return Futures.transform(result, new AsyncFunction<List<Object>, TResult>() {\n",
          "            @Override\n",
          "            public ListenableFuture<TResult> apply(@Nullable List<Object> list) throws Exception {\n",
          "                T1 value1 = (T1) list.get(0);\n",
          "                T2 value2 = (T2) list.get(1);\n"
        ],
        "line_number": 97,
        "start_line": 93,
        "end_line": 103
      },
      {
        "link": "https://github.com/lucasaytt/presto-0.235/blob/461cd3afc4063c5087e5185afe774b561c144a04/presto-main/src/main/java/com/facebook/presto/operator/PartitionedConsumption.java\n",
        "code": [
          "                IntConsumer disposer)\n",
          "        {\n",
          "            this.partitionNumber = partitionNumber;\n",
          "            this.requested = SettableFuture.create();\n",
          "            this.loaded = Futures.transformAsync(\n",
          "                    allAsList(requested, previousReleased),\n",
          "                    ignored -> loader.apply(partitionNumber),\n",
          "                    directExecutor());\n",
          "            this.released = SettableFuture.create();\n",
          "            released.addListener(() -> disposer.accept(partitionNumber), directExecutor());\n",
          "            this.pendingReleases = consumersCount;\n"
        ],
        "line_number": 133,
        "start_line": 129,
        "end_line": 139
      },
      {
        "link": "https://github.com/Colt-Enigma/platform_packages_apps_Camera2/blob/6aa73009328512ac0a49940f667c163616f66acb/src/com/android/camera/async/Futures2.java\n",
        "code": [
          "        futures[1] = f2;\n",
          "\n",
          "        // Futures.allAsList is used instead of Futures.successfulAsList because\n",
          "        // allAsList will propagate the failures instead of null values to the\n",
          "        // parameters of the supplied function.\n",
          "        ListenableFuture<List<Object>> result = Futures.<Object>allAsList(futures);\n",
          "        return Futures.transformAsync(result, new AsyncFunction<List<Object>, TResult>() {\n",
          "            @Override\n",
          "            public ListenableFuture<TResult> apply(@Nullable List<Object> list) throws Exception {\n",
          "                T1 value1 = (T1) list.get(0);\n",
          "                T2 value2 = (T2) list.get(1);\n"
        ],
        "line_number": 98,
        "start_line": 94,
        "end_line": 104
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/ListenableFutureUtil.java\n",
        "code": [
          "* @author  http://blog.csdn.net/zfrong/\n",
          "* @author zengfr3000@qq.com\n",
          "*/\n",
          "public final class ListenableFutureUtil{ \n",
          "/**\n",
          "*{@link com.google.common.util.concurrent.Futures#allAsList(com.google.common.util.concurrent.ListenableFuture<? extends V>...)}\n",
          "*@see com.google.common.util.concurrent.Futures#allAsList(com.google.common.util.concurrent.ListenableFuture<? extends V>...)\n",
          "*<code>public static <V> com.google.common.util.concurrent.ListenableFuture<java.util.List<V>> com.google.common.util.concurrent.Futures.allAsList(com.google.common.util.concurrent.ListenableFuture<? extends V>...)\n",
          "*allAsList(com.google.common.util.concurrent.ListenableFuture<? extends V>... p0)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      },
      {
        "link": "https://github.com/hi3g/freki/blob/b4ebe388fdeaceeefb83aa8552a5826299967285/core/src/main/java/se/tre/freki/utils/MoreMaps.java\n",
        "code": [
          "    try {\n",
          "      for (final Map.Entry<K1, V> inputEntry : inputEntries) {\n",
          "        transformedEntryFutures.add(transformation.apply(inputEntry));\n",
          "      }\n",
          "\n",
          "      return transform(allAsList(transformedEntryFutures),\n",
          "          new Function<List<Map.Entry<K2, V>>, Map<K2, V>>() {\n",
          "            @Override\n",
          "            public Map<K2, V> apply(@Nonnull final List<Map.Entry<K2, V>> transformedEntries) {\n",
          "              final ImmutableMap.Builder<K2, V> transformedMap = ImmutableMap.builder();\n",
          "\n"
        ],
        "line_number": 49,
        "start_line": 45,
        "end_line": 55
      },
      {
        "link": "https://github.com/udoprog/tiny-async-java/blob/987706d4b7f2d13b45eefdc6c54ea63ce64b3310/tiny-async-perftest/src/main/java/eu/toolchain/perftests/jmh/Immediate.java\n",
        "code": [
          "              return !input;\n",
          "            }\n",
          "          }));\n",
          "    }\n",
          "\n",
          "    com.google.common.util.concurrent.Futures.allAsList(futures).get();\n",
          "  }\n",
          "}\n"
        ],
        "line_number": 42,
        "start_line": 38,
        "end_line": 45
      },
      {
        "link": "https://github.com/sjx782392329/presto-exercise-debug/blob/1fd52ff53710d4206898b83990713bd8e8046396/core/trino-main/src/main/java/io/trino/operator/PartitionedConsumption.java\n",
        "code": [
          "                IntConsumer disposer)\n",
          "        {\n",
          "            this.partitionNumber = partitionNumber;\n",
          "            this.requested = SettableFuture.create();\n",
          "            this.loaded = Futures.transformAsync(\n",
          "                    allAsList(requested, previousReleased),\n",
          "                    ignored -> loader.apply(partitionNumber),\n",
          "                    directExecutor());\n",
          "            this.released = SettableFuture.create();\n",
          "            released.addListener(() -> disposer.accept(partitionNumber), directExecutor());\n",
          "            this.pendingReleases = consumersCount;\n"
        ],
        "line_number": 128,
        "start_line": 124,
        "end_line": 134
      },
      {
        "link": "https://github.com/wjf989/prestoStudy/blob/b1f7890e8436397d89d0d30ef30e60bc29a51bce/presto-main/src/main/java/io/prestosql/operator/PartitionedConsumption.java\n",
        "code": [
          "                IntConsumer disposer)\n",
          "        {\n",
          "            this.partitionNumber = partitionNumber;\n",
          "            this.requested = SettableFuture.create();\n",
          "            this.loaded = Futures.transformAsync(\n",
          "                    allAsList(requested, previousReleased),\n",
          "                    ignored -> loader.apply(partitionNumber),\n",
          "                    directExecutor());\n",
          "            this.released = SettableFuture.create();\n",
          "            released.addListener(() -> disposer.accept(partitionNumber), directExecutor());\n",
          "            this.pendingReleases = consumersCount;\n"
        ],
        "line_number": 128,
        "start_line": 124,
        "end_line": 134
      },
      {
        "link": "https://github.com/longw5/prestodb/blob/f7fd5266b10b0bf9d966c6f7ed3aa682cf675f5f/presto-main/src/main/java/com/facebook/presto/operator/PartitionedConsumption.java\n",
        "code": [
          "                IntConsumer disposer)\n",
          "        {\n",
          "            this.partitionNumber = partitionNumber;\n",
          "            this.requested = SettableFuture.create();\n",
          "            this.loaded = Futures.transformAsync(\n",
          "                    allAsList(requested, previousReleased),\n",
          "                    ignored -> loader.apply(partitionNumber),\n",
          "                    directExecutor());\n",
          "            this.released = SettableFuture.create();\n",
          "            released.addListener(() -> disposer.accept(partitionNumber), directExecutor());\n",
          "            this.pendingReleases = consumersCount;\n"
        ],
        "line_number": 133,
        "start_line": 129,
        "end_line": 139
      },
      {
        "link": "https://github.com/dimakuzminov/jclouds-vcloud-director-support/blob/de79b9af0e337457dc98b5e7cd9e346e942e5caf/apis/ec2/src/main/java/org/jclouds/ec2/compute/strategy/DescribeImagesParallel.java\n",
        "code": [
          "\n",
          "   @Override\n",
          "   public Iterable<? extends org.jclouds.ec2.domain.Image> apply(\n",
          "            final Iterable<Entry<String, DescribeImagesOptions>> queries) {\n",
          "      ListenableFuture<List<Set<? extends org.jclouds.ec2.domain.Image>>> futures\n",
          "         = allAsList(transform(\n",
          "                            queries,\n",
          "                            new Function<Entry<String, DescribeImagesOptions>,\n",
          "                            ListenableFuture<? extends Set<? extends org.jclouds.ec2.domain.Image>>>() {\n",
          "                               public ListenableFuture<Set<? extends org.jclouds.ec2.domain.Image>> apply(\n",
          "                                                                                                          final Entry<String, DescribeImagesOptions> from) {\n"
        ],
        "line_number": 67,
        "start_line": 63,
        "end_line": 73
      }
    ],
    "com.google.common.collect.Multimaps.transformEntries": [
      {
        "link": "https://github.com/jmanhnv/java-tricks/blob/5f76271a0494cf8eab9dfe5de903d97eec92f0fa/src/main/java/collections/grouping/GroupUtil.java\n",
        "code": [
          "\t\t};\n",
          "\t\tMultimap<Integer, String> index = Multimaps.index(badGuys, stringLengthFunction);\n",
          "\t\tSystem.out.println(index);\n",
          "\t}\n",
          "\n",
          "\tpublic static void transformEntries() {\n",
          "\t\tMultimap<String, Integer> multimap = ImmutableMultimap.of(\"a\", 1, \"a\", 4, \"b\", 6);\n",
          "\t\tEntryTransformer<String, Integer, String> transformer = new EntryTransformer<String, Integer, String>() {\n",
          "\t\t\tpublic String transformEntry(String key, Integer value) {\n",
          "\t\t\t\treturn key + value;\n",
          "\t\t\t}\n"
        ],
        "line_number": 68,
        "start_line": 64,
        "end_line": 74
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.deviceauthserver-DeviceAuthServer/sources/com/google/common/collect/Multimaps.java\n",
        "code": [
          "        }\n",
          "    }\n",
          "\n",
          "    public static <K, V1, V2> Multimap<K, V2> transformValues(Multimap<K, V1> fromMultimap, Function<? super V1, V2> function) {\n",
          "        Preconditions.checkNotNull(function);\n",
          "        return transformEntries(fromMultimap, Maps.asEntryTransformer(function));\n",
          "    }\n",
          "\n",
          "    public static <K, V1, V2> Multimap<K, V2> transformEntries(Multimap<K, V1> fromMap, Maps.EntryTransformer<? super K, ? super V1, V2> transformer) {\n",
          "        return new TransformedEntriesMultimap(fromMap, transformer);\n",
          "    }\n"
        ],
        "line_number": 671,
        "start_line": 667,
        "end_line": 677
      },
      {
        "link": "https://github.com/duyleekun/zycami-ded/blob/27686ca846de6d164692c81bac2ae7f85710361f/src/main/java/com/google/common/collect/Multimaps.java\n",
        "code": [
          "\n",
          "    public static SortedSetMultimap synchronizedSortedSetMultimap(SortedSetMultimap sortedSetMultimap) {\n",
          "        return Synchronized.sortedSetMultimap(sortedSetMultimap, null);\n",
          "    }\n",
          "\n",
          "    public static ListMultimap transformEntries(ListMultimap listMultimap, Maps$EntryTransformer maps$EntryTransformer) {\n",
          "        Multimaps$TransformedEntriesListMultimap multimaps$TransformedEntriesListMultimap = new Multimaps$TransformedEntriesListMultimap(listMultimap, maps$EntryTransformer);\n",
          "        return multimaps$TransformedEntriesListMultimap;\n",
          "    }\n",
          "\n",
          "    public static Multimap transformEntries(Multimap multimap, Maps$EntryTransformer maps$EntryTransformer) {\n"
        ],
        "line_number": 274,
        "start_line": 270,
        "end_line": 280
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/MultimapUtil.java\n",
        "code": [
          "*/ \n",
          "public static <K,V> com.google.common.collect.Multimap<K, V> synchronizedMultimap(com.google.common.collect.Multimap<K, V> p0){\n",
          "\treturn com.google.common.collect.Multimaps.synchronizedMultimap(p0);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.Multimaps#transformEntries(com.google.common.collect.Multimap<K, V1>,com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>)}\n",
          "*@see com.google.common.collect.Multimaps#transformEntries(com.google.common.collect.Multimap<K, V1>,com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>)\n",
          "*<code>public static <K,V1,V2> com.google.common.collect.Multimap<K, V2> com.google.common.collect.Multimaps.transformEntries(com.google.common.collect.Multimap<K, V1>,com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>)\n",
          "*transformEntries(com.google.common.collect.Multimap<K, V1> p0,com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2> p1)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 92,
        "start_line": 88,
        "end_line": 98
      },
      {
        "link": "https://github.com/rvbiljouw/awsum-backend/blob/2623bbf73517bb61cd0fbcf87974606cc0b7c75c/awsum-api/src/main/java/me/rvbiljouw/awsum/util/BindingUtils.java\n",
        "code": [
          "    public static Multimap<String, Object> bindingResultToMap(BindingResult result) {\n",
          "        List<FieldError> errors = result.getAllErrors().stream()\n",
          "                .filter(error -> error instanceof FieldError)\n",
          "                .map(error -> (FieldError) error)\n",
          "                .collect(Collectors.toList());\n",
          "        return Multimaps.transformEntries(index(errors, FieldError::getField), (k, v) -> v.getDefaultMessage());\n",
          "    }\n",
          "\n",
          "}\n"
        ],
        "line_number": 53,
        "start_line": 49,
        "end_line": 57
      },
      {
        "link": "https://github.com/Eliminater74/com.google.android.tvlauncher/blob/e8284f9970d77a05042a57e9c2173856af7c4246/src/main/java/com/google/common/collect/Multimaps.java\n",
        "code": [
          "        }\n",
          "    }\n",
          "\n",
          "    public static <K, V1, V2> Multimap<K, V2> transformValues(Multimap<K, V1> fromMultimap, Function<? super V1, V2> function) {\n",
          "        Preconditions.checkNotNull(function);\n",
          "        return transformEntries(fromMultimap, Maps.asEntryTransformer(function));\n",
          "    }\n",
          "\n",
          "    /* JADX DEBUG: Failed to find minimal casts for resolve overloaded methods, cast all args instead\n",
          "     method: com.google.common.collect.Multimaps.transformEntries(com.google.common.collect.ListMultimap, com.google.common.collect.Maps$EntryTransformer):com.google.common.collect.ListMultimap<K, V2>\n",
          "     arg types: [com.google.common.collect.ListMultimap<K, V1>, com.google.common.collect.Maps$EntryTransformer<K, V1, V2>]\n"
        ],
        "line_number": 814,
        "start_line": 810,
        "end_line": 820
      },
      {
        "link": "https://github.com/Eliminater74/com.google.android.tvlauncher/blob/e8284f9970d77a05042a57e9c2173856af7c4246/saved/sources/com/google/common/collect/Multimaps.java\n",
        "code": [
          "        }\n",
          "    }\n",
          "\n",
          "    public static <K, V1, V2> Multimap<K, V2> transformValues(Multimap<K, V1> fromMultimap, Function<? super V1, V2> function) {\n",
          "        Preconditions.checkNotNull(function);\n",
          "        return transformEntries(fromMultimap, Maps.asEntryTransformer(function));\n",
          "    }\n",
          "\n",
          "    /* JADX DEBUG: Failed to find minimal casts for resolve overloaded methods, cast all args instead\n",
          "     method: com.google.common.collect.Multimaps.transformEntries(com.google.common.collect.ListMultimap, com.google.common.collect.Maps$EntryTransformer):com.google.common.collect.ListMultimap<K, V2>\n",
          "     arg types: [com.google.common.collect.ListMultimap<K, V1>, com.google.common.collect.Maps$EntryTransformer<K, V1, V2>]\n"
        ],
        "line_number": 814,
        "start_line": 810,
        "end_line": 820
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/collect/Multimaps.java\n",
        "code": [
          "        }\n",
          "    }\n",
          "\n",
          "    public static <K, V1, V2> Multimap<K, V2> transformValues(Multimap<K, V1> multimap, Function<? super V1, V2> function) {\n",
          "        Preconditions.checkNotNull(function);\n",
          "        return transformEntries(multimap, Maps.asEntryTransformer(function));\n",
          "    }\n",
          "\n",
          "    public static <K, V1, V2> ListMultimap<K, V2> transformValues(ListMultimap<K, V1> listMultimap, Function<? super V1, V2> function) {\n",
          "        Preconditions.checkNotNull(function);\n",
          "        return transformEntries((ListMultimap) listMultimap, Maps.asEntryTransformer(function));\n"
        ],
        "line_number": 796,
        "start_line": 792,
        "end_line": 802
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/collect/Multimaps.java\n",
        "code": [
          "        }\n",
          "    }\n",
          "\n",
          "    public static <K, V1, V2> Multimap<K, V2> transformValues(Multimap<K, V1> multimap, Function<? super V1, V2> function) {\n",
          "        Preconditions.checkNotNull(function);\n",
          "        return transformEntries(multimap, Maps.asEntryTransformer(function));\n",
          "    }\n",
          "\n",
          "    public static <K, V1, V2> ListMultimap<K, V2> transformValues(ListMultimap<K, V1> listMultimap, Function<? super V1, V2> function) {\n",
          "        Preconditions.checkNotNull(function);\n",
          "        return transformEntries((ListMultimap) listMultimap, Maps.asEntryTransformer(function));\n"
        ],
        "line_number": 774,
        "start_line": 770,
        "end_line": 780
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/collect/Multimaps.java\n",
        "code": [
          "        }\n",
          "    }\n",
          "\n",
          "    public static <K, V1, V2> Multimap<K, V2> transformValues(Multimap<K, V1> fromMultimap, Function<? super V1, V2> function) {\n",
          "        Preconditions.checkNotNull(function);\n",
          "        return transformEntries(fromMultimap, Maps.asEntryTransformer(function));\n",
          "    }\n",
          "\n",
          "    public static <K, V1, V2> ListMultimap<K, V2> transformValues(ListMultimap<K, V1> fromMultimap, Function<? super V1, V2> function) {\n",
          "        Preconditions.checkNotNull(function);\n",
          "        return transformEntries((ListMultimap) fromMultimap, (Maps.EntryTransformer) Maps.asEntryTransformer(function));\n"
        ],
        "line_number": 793,
        "start_line": 789,
        "end_line": 799
      }
    ],
    "org.mockito.Mockito.doNothing": [
      {
        "link": "https://github.com/gridgentoo/PentahoPlatform/blob/326167a4deb6b40f43109efedae6d00f31c21935/extensions/src/test/java/org/pentaho/platform/web/servlet/UIServletTest.java\n",
        "code": [
          "      @Override\n",
          "      public Log getLogger() {\n",
          "        return logger;\n",
          "      }\n",
          "    } );\n",
          "    doNothing().when( logger ).fatal( anyString(), anyObject() );\n",
          "    doNothing().when( uiServlet ).formatErrorMessage( any( IPentahoSession.class ), any( StringBuffer.class ), anyString() );\n",
          "  }\n",
          "\n",
          "  @Test\n",
          "  public void testDoGet() throws Exception {\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 64
      },
      {
        "link": "https://github.com/udoprog/tiny-async-java/blob/987706d4b7f2d13b45eefdc6c54ea63ce64b3310/tiny-async-core/src/test/java/eu/toolchain/concurrent/CollectHelperTest.java\n",
        "code": [
          "    new CollectHelper<>(0, collector, sources, target);\n",
          "  }\n",
          "\n",
          "  @Test\n",
          "  public void testResolved() throws Exception {\n",
          "    doNothing().when(helper).add(any(Byte.class), anyObject());\n",
          "    helper.completed(result);\n",
          "    verify(helper).add(CollectHelper.COMPLETED, result);\n",
          "  }\n",
          "\n",
          "  @Test\n"
        ],
        "line_number": 56,
        "start_line": 52,
        "end_line": 62
      },
      {
        "link": "https://github.com/Evan-Peterson/bingr/blob/034c3803925850286781da1a42000f00be06aa54/Frontend/app/src/androidTest/java/com/bingr/app/auth/RegisterPresenterTest.java\n",
        "code": [
          "        params.put(\"emailId\", \"ree@ree.ree\");\n",
          "        params.put(\"password\", \"testTest3\");\n",
          "        JSONObject userData = new JSONObject(params);\n",
          "\n",
          "        requester = mock(AuthRequest.class);\n",
          "        doNothing().when(requester).registerRequest(userData);\n",
          "\n",
          "        RegisterPresenter presenter = new RegisterPresenter(requester);\n",
          "        doNothing().when(requester).setPresenter(presenter);\n",
          "\n",
          "        presenter.submitRegister(userData);\n"
        ],
        "line_number": 46,
        "start_line": 42,
        "end_line": 52
      },
      {
        "link": "https://github.com/aabouraya/shield/blob/a46feefa2cf39e9a7ce5dc2a3de006f9573c5f33/src/test/java/com/knowhow/shield/service/impl/ActivationServiceImplTest.java\n",
        "code": [
          "    @Test\n",
          "    public void sendActivationEmailExpectCreateTokenAndSendEmail() {\n",
          "        //Arrange\n",
          "        User user = mock(User.class);\n",
          "        doReturn(\"123456789\").when(verificationTokenService).createVerificationToken(any(User.class));\n",
          "        // doNothing().when(emailService).sendActivationEmail(any(User.class), anyString());\n",
          "\n",
          "        //Act\n",
          "        activationService.sendActivationEmail(user);\n",
          "\n",
          "        //Assert\n"
        ],
        "line_number": 48,
        "start_line": 44,
        "end_line": 54
      },
      {
        "link": "https://github.com/test-acc-vaccym/packages_apps_Settings/blob/16da813cbf315b357c21b4400e0e9bab67cb6e67/tests/robotests/src/com/android/settings/wallpaper/WallpaperTypeSettingsTest.java\n",
        "code": [
          "    public void testOnPreferenceTreeClick_shouldLaunchIntentAndFinish() {\n",
          "        Activity activity = Robolectric.setupActivity(Activity.class);\n",
          "        WallpaperTypeSettings fragment = spy(new WallpaperTypeSettings());\n",
          "        doReturn(activity).when(fragment).getActivity();\n",
          "        mPreference.setIntent(mIntent);\n",
          "        doNothing().when(fragment).finish();\n",
          "        ArgumentCaptor<Intent> intent = ArgumentCaptor.forClass(Intent.class);\n",
          "        doNothing().when(fragment).startActivity(intent.capture());\n",
          "\n",
          "        boolean handled = fragment.onPreferenceTreeClick(mPreference);\n",
          "\n"
        ],
        "line_number": 52,
        "start_line": 48,
        "end_line": 58
      },
      {
        "link": "https://github.com/juankysoriano/Zen/blob/834c55fc8ab54f80407f39d1e9b338fcb233c686/zen-android/src/test/java/zenproject/meditation/android/sketch/painting/ink/InkPerformerTest.java\n",
        "code": [
          "        when(rainbowInputController.getSmoothX()).thenReturn(2f);\n",
          "        when(rainbowInputController.getSmoothY()).thenReturn(2f);\n",
          "    }\n",
          "\n",
          "    private void disableRainbowDrawerInvocations() {\n",
          "        Mockito.doNothing().when(rainbowDrawer).noStroke();\n",
          "        Mockito.doNothing().when(rainbowDrawer).smooth();\n",
          "        Mockito.doNothing().when(rainbowDrawer).tint(anyInt());\n",
          "        Mockito.doNothing().when(rainbowDrawer).pushMatrix();\n",
          "        Mockito.doNothing().when(rainbowDrawer).translate(anyFloat(), anyFloat());\n",
          "        Mockito.doNothing().when(rainbowDrawer).rotate(anyFloat());\n"
        ],
        "line_number": 147,
        "start_line": 143,
        "end_line": 153
      },
      {
        "link": "https://github.com/nadar71/EarthquakeWatchdog/blob/cb2a50d7e14962d22dbf81833f2b8fd7d08f4dff/app/src/test/java/com/indiewalk/watchdog/earthquake/data/EarthquakeRepositoryTest.java\n",
        "code": [
          "\n",
          "\n",
          "    @Test // OK ran single\n",
          "    public void loadAll_test() {\n",
          "        EarthquakeRepository spy_repository = spy(repository);\n",
          "        doNothing().when(spy_repository).initializeData();  //ignore this method\n",
          "        spy_repository.loadAll();\n",
          "        verify(mockDao, times(1)).loadAll();\n",
          "    }\n",
          "\n",
          "\n"
        ],
        "line_number": 70,
        "start_line": 66,
        "end_line": 76
      },
      {
        "link": "https://github.com/Evan-Peterson/bingr/blob/034c3803925850286781da1a42000f00be06aa54/Frontend/app/src/androidTest/java/com/bingr/app/auth/LoginPresenterTest.java\n",
        "code": [
          "    public void submitLogin_callsRequest(){\n",
          "        String email = \"ree@ree.com\";\n",
          "        String password = \"ree\";\n",
          "\n",
          "        requester = mock(AuthRequest.class);\n",
          "        doNothing().when(requester).loginRequest(email, password);\n",
          "\n",
          "        LoginPresenter presenter = new LoginPresenter(requester);\n",
          "        doNothing().when(requester).setPresenter(presenter);\n",
          "\n",
          "        presenter.submitLogin(email, password);\n"
        ],
        "line_number": 40,
        "start_line": 36,
        "end_line": 46
      },
      {
        "link": "https://github.com/icplayer/icplayer/blob/4c66211b9343559eafbd0f7120c95d96f37ba013/src/test/java/com/lorepo/icplayer/client/module/text/GWTInlineChoiceWCAGTestCase.java\n",
        "code": [
          "\t}\r\n",
          "\t\r\n",
          "\t@Test\r\n",
          "\tpublic void testDropdownChangeSelected() throws Exception {\r\n",
          "\t\tInlineChoiceWidget choiceSpy = spy(this.choiceWidget);\r\n",
          "\t\tdoNothing().when(choiceSpy).fireChangeEvent();\r\n",
          "\t\tdoReturn(0).when(choiceSpy).getSelectedIndex();\r\n",
          "\t\tdoReturn(4).when(choiceSpy).getItemCount();\r\n",
          "\t\tdoNothing().when(choiceSpy).setSelectedIndex(any(Integer.class));\r\n",
          "\t\t\r\n",
          "\t\tchoiceSpy.setWorkMode();\r\n"
        ],
        "line_number": 63,
        "start_line": 59,
        "end_line": 69
      },
      {
        "link": "https://github.com/mivanac/geode/blob/aced6d46b52ef5889eedc061757d2d2b309c5f73/geode-core/src/test/java/org/apache/geode/internal/cache/BucketRegionJUnitTest.java\n",
        "code": [
          "    br.getEventTracker().setInitialized();\n",
          "\n",
          "    // since br is a real bucket region object, we need to tell mockito to monitor it\n",
          "    br = spy(br);\n",
          "\n",
          "    // doNothing().when(dm).addMembershipListener(any());\n",
          "    doNothing().when(br).distributeUpdateOperation(any(), anyLong());\n",
          "    doNothing().when(br).distributeDestroyOperation(any());\n",
          "    doNothing().when(br).distributeInvalidateOperation(any());\n",
          "    doNothing().when(br).distributeUpdateEntryVersionOperation(any());\n",
          "    doNothing().when(br).checkForPrimary();\n"
        ],
        "line_number": 62,
        "start_line": 58,
        "end_line": 68
      }
    ],
    "com.google.common.cache.CacheBuilder.newBuilder": [
      {
        "link": "https://github.com/shansun123/sparrow/blob/5eae1d009717f8eb64f90a22ac9b54a440ff0771/src/main/java/com/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          " * @author lanbo <br>\n",
          " * @version 1.0 <br>\n",
          " * @date 2012-8-29\n",
          " */\n",
          "public class LocalCacheBuilder<K, V> extends CacheBuilder<K, V> {\n",
          "\tcom.google.common.cache.CacheBuilder<Object, Object>\tbuilder\t= com.google.common.cache.CacheBuilder.newBuilder();\n",
          "\n",
          "\tprivate LocalCacheBuilder() {\n",
          "\t\tsuper();\n",
          "\t}\n",
          "\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/Braj65/Sandbox/blob/ab7d5de63d65a120b264e3dc3219fbead1930a03/ScaleConcepts/src/main/java/designCache/guavaToDIsk/FileSystemCacheBuilder.java\n",
        "code": [
          "    public static FileSystemCacheBuilder<Object, Object> from(String spec) {\n",
          "        return new FileSystemCacheBuilder<Object, Object>(CacheBuilder.from(spec));\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.cache.CacheBuilder#newBuilder()}\n",
          "     */\n",
          "    public static FileSystemCacheBuilder<Object, Object> newBuilder() {\n",
          "        return new FileSystemCacheBuilder<Object, Object>();\n",
          "    }\n",
          "\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/geektcp/okhoxi-common/blob/5fe27e0045e052c423100fecaa3247b1a3416880/okhoxi-common-core/src/main/java/com/okhoxi/common/core/cache/CacheBuilder.java\n",
        "code": [
          "    public static <K, V> LoadingCache<K, V> create(CacheLoader<K, V> loader) {\n",
          "        return create(loader, TIME_OUT_MINUTES);\n",
          "    }\n",
          "\n",
          "    public static <K, V> LoadingCache<K, V> create(CacheLoader loader, long durationMins) {\n",
          "        return com.google.common.cache.CacheBuilder.newBuilder()\n",
          "                .refreshAfterWrite(durationMins, TimeUnit.MINUTES)\n",
          "                .build(loader);\n",
          "    }\n",
          "\n",
          "    public static <K, V> LoadingCache<K, V> create(CacheLoader loader, RemovalListener removalListener,\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/openjdl/java-server-framework/blob/98059528bffc5bcfc5aee5024eb18b3f18d564ab/jsf-core/src/main/java/com/openjdl/jsf/core/cache/CachesInMemory.java\n",
        "code": [
          "   */\n",
          "  public CachesInMemory(Class<T> type, CacheLoader<T, K, S> loader) {\n",
          "    this.type = type;\n",
          "    this.loader = loader;\n",
          "\n",
          "    this.single = com.google.common.cache.CacheBuilder.newBuilder()\n",
          "      .recordStats()\n",
          "      .expireAfterWrite(EXPIRE_DURATION, EXPIRE_TIME_UNIT)\n",
          "      .build(com.google.common.cache.CacheLoader.from((key) ->\n",
          "        Optional.ofNullable(loader.loadSingle(Objects.requireNonNull(key)))\n",
          "      ));\n"
        ],
        "line_number": 70,
        "start_line": 66,
        "end_line": 76
      },
      {
        "link": "}https://github.com/anatlyzer/a2l/blob/74f2c3ca81e45233a44461e95a4898ba1f237983/tests/a2l.tests.imdb/src-gen/a2l/tests/findcouples/optimised/FindCouplesIMDbGlobalContext.java\n",
        "code": [
          "import imdb.movies.Actress;\n",
          "\n",
          "public class FindCouplesIMDbGlobalContext extends a2l.runtime.DefaultGlobalContext {\n",
          "private Cache<Person, javaslang.collection.Set<Movie>> cache1_p2;\n",
          "\tprivate Cache<Person, javaslang.collection.Set<Movie>> cache0_p1;public FindCouplesIMDbGlobalContext() {\n",
          "cache1_p2 = com.google.common.cache.CacheBuilder.newBuilder().concurrencyLevel(Runtime.getRuntime().availableProcessors()).<Person, javaslang.collection.Set<Movie>>build();\n",
          "cache0_p1 = com.google.common.cache.CacheBuilder.newBuilder().concurrencyLevel(Runtime.getRuntime().availableProcessors()).<Person, javaslang.collection.Set<Movie>>build();\n",
          "allInstancesCache = com.google.common.cache.CacheBuilder.newBuilder().concurrencyLevel(12).build();; }public javaslang.collection.Set<Movie> getcache1_p2(Person key, java.util.concurrent.Callable<javaslang.collection.Set<Movie>> closure) { try { return cache1_p2.get(key, closure); } catch (java.util.concurrent.ExecutionException e) { throw new IllegalStateException(); } }\n",
          "public javaslang.collection.Set<Movie> getcache0_p1(Person key, java.util.concurrent.Callable<javaslang.collection.Set<Movie>> closure) { try { return cache0_p1.get(key, closure); } catch (java.util.concurrent.ExecutionException e) { throw new IllegalStateException(); } }\n",
          "private Cache<java.lang.Class<?>, javaslang.collection.List<?>> allInstancesCache; \n",
          "\t@SuppressWarnings(\"unchecked\")\tpublic <T> javaslang.collection.List<T> getFromAllInstancesCache(java.lang.Class<T> key, java.util.concurrent.Callable<javaslang.collection.List<T>> closure) {  try {   return (javaslang.collection.List<T>) allInstancesCache.get(key, closure);  } catch (java.util.concurrent.ExecutionException e) {    throw new IllegalStateException();  } }public void addAllInstancesObject(Object obj) {}\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": "https://github.com/raphw/guava-cache-overflow-extension/blob/befa47bb955ffa9f344b44e8621290d65e6592d2/src/main/java/com/blogspot/mydailyjava/guava/cache/overflow/FileSystemCacheBuilder.java\n",
        "code": [
          "    public static FileSystemCacheBuilder<Object, Object> from(String spec) {\n",
          "        return new FileSystemCacheBuilder<Object, Object>(CacheBuilder.from(spec));\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.cache.CacheBuilder#newBuilder()}\n",
          "     */\n",
          "    public static FileSystemCacheBuilder<Object, Object> newBuilder() {\n",
          "        return new FileSystemCacheBuilder<Object, Object>();\n",
          "    }\n",
          "\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/zqhxuyuan/tutorials/blob/72740ec130a15331b0b2428b9750099c47073052/zava/src/main/java/com/github/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          " * @author lanbo <br>\n",
          " * @version 1.0 <br>\n",
          " * @date 2012-8-29\n",
          " */\n",
          "public class LocalCacheBuilder<K, V> extends CacheBuilder<K, V> {\n",
          "\tcom.google.common.cache.CacheBuilder<Object, Object>\tbuilder\t= com.google.common.cache.CacheBuilder.newBuilder();\n",
          "\n",
          "\tprivate LocalCacheBuilder() {\n",
          "\t\tsuper();\n",
          "\t}\n",
          "\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "}https://github.com/gustavomel0/objectos-comuns-parent/blob/5e10fd95e04c42808e9d968756731db22da80237/objectos-comuns-base/src/main/java/br/com/objectos/comuns/base/cache/CacheBuilderGuice.java\n",
        "code": [
          "    Preconditions.checkArgument(gigabytes >= 1, \"Enter the expected JVM GBs available\");\n",
          "    this.gigabytes = gigabytes;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public com.google.common.cache.CacheBuilder<Object, Object> newBuilder() {\n",
          "    return com.google.common.cache.CacheBuilder.newBuilder();\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  protected double getMaximumSizeFactor() {\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/Gilded-Games/OrbisLib/blob/147af30f2d7ff854c7bdbb4cc47d4e55db24d728/src/main/java/com/gildedgames/orbis/lib/util/cache/FileSystemCacheBuilder.java\n",
        "code": [
          "\n",
          "\tprivate File persistenceDirectory;\n",
          "\n",
          "\tprivate FileSystemCacheBuilder()\n",
          "\t{\n",
          "\t\tthis.underlyingCacheBuilder = CacheBuilder.newBuilder();\n",
          "\t}\n",
          "\n",
          "\tprivate FileSystemCacheBuilder(CacheBuilder<Object, Object> cacheBuilder)\n",
          "\t{\n",
          "\t\tthis.underlyingCacheBuilder = cacheBuilder;\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "https://github.com/zqhxuyuan/zava/blob/707691039b7aff8f4129e2b25d08b374610990e5/src/main/java/com/github/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          " * @author lanbo <br>\n",
          " * @version 1.0 <br>\n",
          " * @date 2012-8-29\n",
          " */\n",
          "public class LocalCacheBuilder<K, V> extends CacheBuilder<K, V> {\n",
          "\tcom.google.common.cache.CacheBuilder<Object, Object>\tbuilder\t= com.google.common.cache.CacheBuilder.newBuilder();\n",
          "\n",
          "\tprivate LocalCacheBuilder() {\n",
          "\t\tsuper();\n",
          "\t}\n",
          "\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      }
    ],
    "org.mockito.Mockito.times": [
      {
        "link": "https://github.com/Dragonwrath/AndroidDemo/blob/bb7ffb4229097e01d6b50b0427f9b2d0dfa2721a/android-mock/src/test/java/com/joke/mock/offical_mock/OfficalTest_Part_1.java\n",
        "code": [
          "\n",
          "        mockedList.add(\"three times\");\n",
          "        mockedList.add(\"three times\");\n",
          "        mockedList.add(\"three times\");\n",
          "\n",
          "        //following two verifications work exactly the same - times(1) is used by default\n",
          "        verify(mockedList).add(\"once\");\n",
          "        verify(mockedList, times(1)).add(\"once\");\n",
          "\n",
          "        //exact number of invocations verification\n",
          "        verify(mockedList, times(2)).add(\"twice\");\n"
        ],
        "line_number": 162,
        "start_line": 158,
        "end_line": 168
      },
      {
        "link": "https://github.com/refi64/chromium-tar/blob/82ebd6a0473341fa75dd3bbb2f584da99f5ac92c/chrome/android/junit/src/org/chromium/chrome/browser/omnibox/suggestions/base/BaseSuggestionViewProcessorUnitTest.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void highlightTest_noClassifications() {\n",
          "        assertFalse(BaseSuggestionViewProcessor.applyHighlightToMatchRegions(mText, null));\n",
          "        verify(mText, times(0)).setSpan(anyObject(), anyInt(), anyInt(), anyInt());\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void highlightTest_noMatch() {\n",
          "        assertFalse(\n"
        ],
        "line_number": 57,
        "start_line": 53,
        "end_line": 63
      },
      {
        "link": "https://github.com/Loannb8733/conception_agile/blob/12f3a5da47120125d35e03c49288929ee4e25cdd/TP1/hellodoublure/src/test/java/fr/unilim/fr/TestDoublures.java\n",
        "code": [
          "\t\t when(user.getLogin()).thenReturn(\"alice\");\n",
          "\n",
          "\t\t System.out.println(user.getLogin());\n",
          "\t\t System.out.println(user.getLogin());\n",
          "\n",
          "\t\t verify(user, times(2)).getLogin(); //V\u00e9rification de l'affichage appel\u00e9 2 fois\n",
          "\t\t //verify(user).getLogin(); //verifier que la m\u00e9thode a \u00e9t\u00e9 appel\u00e9\n",
          "\t\t \n",
          "\t}\n",
          "\t \n",
          "\t@Test\n"
        ],
        "line_number": 43,
        "start_line": 39,
        "end_line": 49
      },
      {
        "link": "https://github.com/Uhbyxer/mockito/blob/d55739848bb4f419c48c00aced22dabc75b84f87/Glotok/glotok/src/test/java/com/mockito/glotok/CountTest.java\n",
        "code": [
          "\t}\n",
          "\t\n",
          "\t@Test\n",
          "\tpublic void testCount() {\n",
          "\t\t\n",
          "\t\t//\u00d0\u00bf\u00d0\u00be \u00d1\u0083\u00d0\u00bc\u00d0\u00be\u00d0\u00bb\u00d1\u0087\u00d0\u00b0\u00d0\u00bd\u00d0\u00b8\u00d1\u008e \u00d0\u00bf\u00d1\u0080\u00d0\u00be\u00d0\u00b2\u00d0\u00b5\u00d1\u0080\u00d0\u00ba\u00d0\u00b0, \u00d1\u0087\u00d1\u0082\u00d0\u00be \u00d0\u00b2\u00d1\u008b\u00d0\u00b7\u00d1\u008b\u00d0\u00b2\u00d0\u00b0\u00d0\u00bb\u00d1\u0081\u00d1\u008f 1 \u00d1\u0080\u00d0\u00b0\u00d0\u00b7 ~ times(1)\n",
          "\t\tverify(mockedList).add(\"once\");\n",
          "\t\tverify(mockedList, times(1)).add(\"once\");\n",
          "\t\t\n",
          "\t\tverify(mockedList, times(2)).add(\"twice\");\n",
          "\t\tverify(mockedList, times(3)).add(\"three times\");\n"
        ],
        "line_number": 41,
        "start_line": 37,
        "end_line": 47
      },
      {
        "link": "}https://github.com/haozhouhadoop/hzw/blob/b64262303aa1980ac64ead4bc2e8b7fd7bf1a834/half-sync-half-async/src/test/java/com/iluwatar/halfsynchalfasync/AsynchronousServiceTest.java\n",
        "code": [
          "    service.execute(task);\n",
          "\n",
          "    verify(task, timeout(2000)).onPostCall(eq(result));\n",
          "\n",
          "    final InOrder inOrder = inOrder(task);\n",
          "    inOrder.verify(task, times(1)).onPreCall();\n",
          "    inOrder.verify(task, times(1)).call();\n",
          "    inOrder.verify(task, times(1)).onPostCall(eq(result));\n",
          "\n",
          "    verifyNoMoreInteractions(task);\n",
          "  }\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 64
      },
      {
        "link": "}https://github.com/goldie-christo/cloudwatchcodebuild/blob/cda2675221555b04415e0e122039d5da61b48b45/half-sync-half-async/src/test/java/com/iluwatar/halfsynchalfasync/AsynchronousServiceTest.java\n",
        "code": [
          "    service.execute(task);\n",
          "\n",
          "    verify(task, timeout(2000)).onPostCall(eq(result));\n",
          "\n",
          "    final var inOrder = inOrder(task);\n",
          "    inOrder.verify(task, times(1)).onPreCall();\n",
          "    inOrder.verify(task, times(1)).call();\n",
          "    inOrder.verify(task, times(1)).onPostCall(eq(result));\n",
          "\n",
          "    verifyNoMoreInteractions(task);\n",
          "  }\n"
        ],
        "line_number": 66,
        "start_line": 62,
        "end_line": 72
      },
      {
        "link": "https://github.com/Dragonwrath/AndroidDemo/blob/bb7ffb4229097e01d6b50b0427f9b2d0dfa2721a/android-mock/src/test/java/com/joke/mock/offical_mock/OfficalTest_Part_4.java\n",
        "code": [
          "        ArrayList mock = mock(ArrayList.class);\n",
          "        // will print a custom message on verification failure\n",
          "        verify(mock, description(\"This will print on failure\")).clear();\n",
          "\n",
          "        // will work with any verification mode\n",
          "        verify(mock, times(2).description(\"someMethod should be called twice\")).size();\n",
          "    }\n",
          "\n",
          "    /*\n",
          "     * Java 8 Lambda Matcher Support (Since 2.1.0)\n",
          "     *\n"
        ],
        "line_number": 123,
        "start_line": 119,
        "end_line": 129
      },
      {
        "link": "https://github.com/kadrivaripuu/JavaTraining/blob/dc91bac386e6fb2f0d0ecf0019f610af7e9f32f9/Demo/Spring/Spring-000-MASTER/Spring-300-Advanced/Spring-370-UnitTests/src/test/java/com/knits/spring/utest/Test03MockitoAnnotations.java\n",
        "code": [
          "\t\t\n",
          "\t\t//1) verify that method was called\n",
          "\t\tverify(aMockedListOfString).indexOf(\"A Test\");\n",
          "\t\t\n",
          "\t\t//2) verify that method was called (times)\n",
          "\t\tverify(aMockedListOfString, times(1)).indexOf(\"A Test\");\n",
          "\t\t\n",
          "\t\t//3) verify no interaction with method\n",
          "\t\tverifyZeroInteractions(aListWhatIsNeverCalled);\n",
          "\t\t\n",
          "\t\t\n"
        ],
        "line_number": 54,
        "start_line": 50,
        "end_line": 60
      },
      {
        "link": "https://github.com/zainarbani/android_frameworks_opt_telephony/blob/d23dcbf9ddc9ae16b6185d9f90a29f6e4659f3d9/tests/telephonytests/src/com/android/internal/telephony/uicc/UiccStateChangedLauncherTest.java\n",
        "code": [
          "        }\n",
          "\n",
          "        UiccStateChangedLauncher uiccLauncher =\n",
          "                new UiccStateChangedLauncher(mContext, UiccController.getInstance());\n",
          "        ArgumentCaptor<Integer> integerArgumentCaptor = ArgumentCaptor.forClass(Integer.class);\n",
          "        verify(UiccController.getInstance(), times(1)).registerForIccChanged(eq(uiccLauncher),\n",
          "                integerArgumentCaptor.capture(),\n",
          "                anyObject());\n",
          "        Message msg = Message.obtain();\n",
          "        msg.what = integerArgumentCaptor.getValue();\n",
          "\n"
        ],
        "line_number": 95,
        "start_line": 91,
        "end_line": 101
      },
      {
        "link": "https://github.com/refi64/chromium-tar/blob/82ebd6a0473341fa75dd3bbb2f584da99f5ac92c/chrome/android/junit/src/org/chromium/chrome/browser/omnibox/suggestions/header/HeaderViewBinderUnitTest.java\n",
        "code": [
          "\n",
          "    @Test\n",
          "    public void actionIcon_iconReflectsExpandedState() {\n",
          "        // Expand.\n",
          "        mModel.set(HeaderViewProperties.IS_EXPANDED, true);\n",
          "        verify(mHeaderIcon, times(1)).setImageResource(R.drawable.ic_expand_less_black_24dp);\n",
          "\n",
          "        // Collapse.\n",
          "        mModel.set(HeaderViewProperties.IS_EXPANDED, false);\n",
          "        verify(mHeaderIcon, times(1)).setImageResource(R.drawable.ic_expand_more_black_24dp);\n",
          "    }\n"
        ],
        "line_number": 69,
        "start_line": 65,
        "end_line": 75
      }
    ],
    "com.google.common.collect.DiscreteDomain.integers": [
      {
        "link": "https://github.com/RussXia/java-study-notes/blob/d8c6fa4d52fa2e1085c531a891ef7811244df42b/src/main/java/com/xzy/guava/DiscreteDomainDemo.java\n",
        "code": [
          "public class DiscreteDomainDemo {\n",
          "\n",
          "    public static void main(String[] args) {\n",
          "        //set\u00e5\u008c\u0085",
          "\u00e5\u0090\u00ab[2, 3, 4]\n",
          "        ImmutableSortedSet<Integer> numSet = ContiguousSet.create(Range.open(1, 5), DiscreteDomain.integers());\n",
          "        for (Integer num : numSet) {\n",
          "            System.out.println(num);\n",
          "        }\n",
          "        System.out.println(\"========================================================\");\n",
          "        //set\u00e5\u008c\u0085"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      },
      {
        "link": "https://github.com/d1sant/research-and-dev/blob/eda2c58f7a7ec34832fa25580c16a152c2b53367/src/main/java/com/my/research/and/dev/ContiguousSetTest2.java\n",
        "code": [
          "\n",
          "public class ContiguousSetTest2 {\n",
          "\n",
          "    public static void main(String[] args) {\n",
          "\n",
          "        final Set<Integer> rangeOfIndexes = ContiguousSet.create(Range.closed(0, 19), DiscreteDomain.integers());\n",
          "        System.out.println(rangeOfIndexes.size());\n",
          "        for (final int index: rangeOfIndexes) {\n",
          "            System.out.println(index + \" - \" + (index / 4 + 1) + \" : \" + (index % 4 + 1));\n",
          "        }\n",
          "    }\n"
        ],
        "line_number": 12,
        "start_line": 8,
        "end_line": 18
      },
      {
        "link": "https://github.com/thinking-github/nbone/blob/e36195df74d8f798d1c325fe28d2d912dde96a8f/nbone/nbone-core/src/test/java/com/google/common/RangeTest.java\n",
        "code": [
          "\t\tSystem.out.println(Range.all());\n",
          "\t\t\n",
          "\t\t\n",
          "\t\t\n",
          "\t\t\n",
          "\t\tContiguousSet dd =  ContiguousSet.create(range, DiscreteDomain.integers());\n",
          "\t\t\n",
          "\t\tSystem.out.println(dd);\n",
          "\t\t\n",
          "\t\t\n",
          "\t\t\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "https://github.com/d1sant/research-and-dev/blob/eda2c58f7a7ec34832fa25580c16a152c2b53367/src/main/java/com/my/research/and/dev/ContiguousSetTest.java\n",
        "code": [
          "\n",
          "public class ContiguousSetTest {\n",
          "\n",
          "    public static void main(String[] args) {\n",
          "\n",
          "        final Set<Integer> rangeOfIndexes = ContiguousSet.create(Range.closed(1, 14), DiscreteDomain.integers());\n",
          "        System.out.println(rangeOfIndexes);\n",
          "\n",
          "        final Set<Integer> indexes = ImmutableSet.copyOf(rangeOfIndexes);\n",
          "        System.out.println(indexes);\n",
          "        final Sets.SetView<Integer> difference = Sets.difference(indexes, new HashSet<>(Arrays.asList(1, 2, 3, 4)));\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 22
      },
      {
        "link": "https://github.com/stronglab/java-otus/blob/36b203d461bcf2c68be69d46a11e2b573e137406/hw01-gradle/src/main/java/stud/stronglab/HelloOtus.java\n",
        "code": [
          "import com.google.common.collect.Range;\n",
          "\n",
          "public class HelloOtus {\n",
          "    public static void main(String[] args) {\n",
          "        Range<Integer> range = Range.closed(100, 120);\n",
          "        for (int grade : ContiguousSet.create(range, DiscreteDomain.integers())) {\n",
          "            System.out.print(grade + \"\\n\");\n",
          "        }\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 9,
        "start_line": 5,
        "end_line": 14
      },
      {
        "link": "https://github.com/d1sant/research-and-dev/blob/eda2c58f7a7ec34832fa25580c16a152c2b53367/src/main/java/com/my/research/and/dev/Tables.java\n",
        "code": [
          "        table.put(2, 4, 24);\n",
          "        System.out.println(table.column(1));\n",
          "        System.out.println(table.get(1, 0));\n",
          "\n",
          "        ImmutableMultimap.Builder<Integer, Integer> builder = ImmutableMultimap.builder();\n",
          "        builder.putAll(1, ContiguousSet.create(Range.closed(0, 5), DiscreteDomain.integers()));\n",
          "        builder.putAll(2, ContiguousSet.create(Range.closed(0, 0), DiscreteDomain.integers()));\n",
          "        final Multimap<Integer, Integer> multimap = builder.build();\n",
          "        System.out.println(multimap);\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "}https://github.com/apidae-tourisme/owsi-core-parent-apidae/blob/2b4ec1047e01751b94f08d2eb8c76e944c072525/owsi-core/owsi-core-components/owsi-core-component-jpa-more/src/main/java/fr/openwide/core/jpa/more/business/difference/differ/strategy/CollectionDifferIndexStrategy.java\n",
        "code": [
          "\t@Override\n",
          "\tpublic Iterable<Integer> difference(Collection<T> source, Collection<T> filter) {\n",
          "\t\tint sourceSize = source == null ? 0 : Iterables.size(source);\n",
          "\t\tint filterSize = filter == null ? 0 : Iterables.size(filter);\n",
          "\t\tif (sourceSize > filterSize) {\n",
          "\t\t\treturn ContiguousSet.create(Range.closedOpen(filterSize, sourceSize), DiscreteDomain.integers());\n",
          "\t\t} else {\n",
          "\t\t\treturn ImmutableList.of();\n",
          "\t\t}\n",
          "\t}\n",
          "\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "https://github.com/washizzle/DatabaseTechnology/blob/44213f6235f67fb50af12c08e02dc3685c77e238/src/main/java/nl/tue/win/dbt/util/IntegerRanges.java\n",
        "code": [
          "    private IntegerRanges() {\n",
          "        // Do not construct utility class.\n",
          "    }\n",
          "\n",
          "    public static ContiguousSet<Integer> toContiguousSet(Range<Integer> range) {\n",
          "        return ContiguousSet.create(range, DiscreteDomain.integers());\n",
          "    }\n",
          "\n",
          "    public static Range<Integer> closed(int lower, int upper) {\n",
          "        return Range.closed(lower, upper).canonical(DiscreteDomain.integers());\n",
          "    }\n"
        ],
        "line_number": 12,
        "start_line": 8,
        "end_line": 18
      },
      {
        "link": "https://github.com/threadstonesecure/javaStudy/blob/ff8c2cfeb78d1de6488b5fe9252a9027adbe90eb/baseStudy/src/test/java/dlt/study/guava/collection/ContiguousSetDemo.java\n",
        "code": [
          "    /**\n",
          "     * \u00e7\u00a6\u00bb\u00e6\u0095\u00a3\u00e5\u009f\u009f\n",
          "     */\n",
          "    @Test\n",
          "    public void discreteDomain(){\n",
          "        DiscreteDomain<Integer> integers = DiscreteDomain.integers();\n",
          "        integers.distance(12,50);\n",
          "\n",
          "\n",
          "        Range<Integer> canonical = Range.closed(1, 10).canonical(integers);// \u00e4\u00b8\u008d\u00e6\u0098\u008e\u00e7\u0099\u00bd\u00ef\u00bc\u009f\u00ef\u00bc\u009f\u00ef\u00bc\u009f\u00ef\u00bc\u009f\n",
          "        System.out.println(canonical);\n"
        ],
        "line_number": 15,
        "start_line": 11,
        "end_line": 21
      },
      {
        "link": "https://github.com/joshua-hw/mix/blob/cbabd0e8fd7a28fafb538e2c93d72dd9f997d9eb/Java/learn_java/src/main/java/test/testguava/RangeTest.java\n",
        "code": [
          "\n",
          "public class RangeTest {\n",
          "\n",
          "    public static void main(String[] args) {\n",
          "        Range<Integer> range = Range.openClosed(1, 10);\n",
          "        for (int i : ContiguousSet.create(range, DiscreteDomain.integers())) {\n",
          "            System.out.println(i);\n",
          "        }\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 10,
        "start_line": 6,
        "end_line": 15
      }
    ],
    "com.google.common.collect.Sets.newSetFromMap": [
      {
        "link": "https://github.com/shekharsvbhosale/exclusions/blob/e7278809be7f80dad3379d5b37c3a9bacedfa822/java/webporter/webporter-core/src/main/java/com/brianway/webporter/data/HashSetDuplicateRemover.java\n",
        "code": [
          " * Created by brian on 16/12/15.\n",
          " * TODO \u00e7\u009c\u008b\u00e8\u0083\u00bd\u00e4\u00b8\u008d\u00e8\u0083\u00bd\u00e5\u008e\u00bb\u00e6\u008e\u0089 guava \u00e4\u00be\u009d\u00e8\u00b5\u0096\n",
          " */\n",
          "public class HashSetDuplicateRemover<ID> implements DuplicateRemover<ID> {\n",
          "\n",
          "    private Set<ID> ids = Sets.newSetFromMap(new ConcurrentHashMap<>());\n",
          "\n",
          "    @Override\n",
          "    public boolean isDuplicate(ID id) {\n",
          "        return !ids.add(id);\n",
          "    }\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": "https://github.com/shengcanxu/spider/blob/24829919551bb74942e381636cd17a01e89c60c0/src/main/java/web/cano/spider/scheduler/component/HashSetDuplicateRemover.java\n",
        "code": [
          "/**\n",
          " * @author code4crafer@gmail.com\n",
          " */\n",
          "public class HashSetDuplicateRemover implements DuplicateRemover {\n",
          "\n",
          "    private Set<String> urls = Sets.newSetFromMap(new ConcurrentHashMap<String, Boolean>());\n",
          "\n",
          "    @Override\n",
          "    public boolean isDuplicate(Page page, Task task) {\n",
          "        return !urls.add(page.getUrl());\n",
          "    }\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      },
      {
        "link": "https://github.com/amikey/webmagic-new/blob/3a6e24635094443542d62163e39700b9a6371718/webmagic-core/src/main/java/us/codecraft/webmagic/scheduler/component/HashSetDuplicateRemover.java\n",
        "code": [
          "/**\n",
          " * @author code4crafer@gmail.com\n",
          " */\n",
          "public class HashSetDuplicateRemover implements DuplicateRemover {\n",
          "\n",
          "    private Set<String> urls = Sets.newSetFromMap(new ConcurrentHashMap<String, Boolean>());\n",
          "\n",
          "    @Override\n",
          "    public boolean isDuplicate(Request request, Task task) {\n",
          "        return !urls.add(getUrl(request));\n",
          "    }\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      },
      {
        "link": "https://github.com/hugo4715/SantaBox/blob/453538308b133d31c3b7966fee30dec704545ff1/src/main/java/tk/hugo4715/golema/santabox/util/EntityRegistry.java\n",
        "code": [
          "import org.bukkit.entity.Entity;\n",
          "\n",
          "import com.google.common.collect.Sets;\n",
          "\n",
          "public class EntityRegistry {\n",
          "\tprivate static Set<Entity> registry = Sets.newSetFromMap(new WeakHashMap<>());\n",
          "\t\n",
          "\tpublic static void add(Entity e){\n",
          "\t\tregistry.add(e);\n",
          "\t}\n",
          "\t\n"
        ],
        "line_number": 10,
        "start_line": 6,
        "end_line": 16
      },
      {
        "link": "https://github.com/Manouchehri/bindiff/blob/2a31859b4638404cdc915d7ed6be19937d762743/src_cfr/com/google/common/collect/Sets.java\n",
        "code": [
          "        Iterators.addAll(hashSet, iterator);\n",
          "        return hashSet;\n",
          "    }\n",
          "\n",
          "    public static Set newConcurrentHashSet() {\n",
          "        return Sets.newSetFromMap(new ConcurrentHashMap());\n",
          "    }\n",
          "\n",
          "    @GoogleInternal\n",
          "    public static /* varargs */ Set newConcurrentHashSet(Object ... arrobject) {\n",
          "        int n2 = Maps.capacity(arrobject.length);\n"
        ],
        "line_number": 123,
        "start_line": 119,
        "end_line": 129
      },
      {
        "link": "https://github.com/hequn/CTSpider/blob/cd565695456344a7ceec8cc35f392040fcc1c000/src/main/java/us/codecraft/webmagic/scheduler/component/HashSetDuplicateRemover.java\n",
        "code": [
          "/**\n",
          " * @author code4crafer@gmail.com\n",
          " */\n",
          "public class HashSetDuplicateRemover implements DuplicateRemover {\n",
          "\n",
          "    private Set<String> urls = Sets.newSetFromMap(new ConcurrentHashMap<String, Boolean>());\n",
          "\n",
          "    @Override\n",
          "    public boolean isDuplicate(Request request, Task task) {\n",
          "        return !urls.add(getUrl(request));\n",
          "    }\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      },
      {
        "link": "https://github.com/SWSStupidWhiteSweet/webporter/blob/0c7b42b4eb94de63a8a4c73d3314105b3cf7feca/webporter-parent/webporter-core/src/main/java/com/brianway/webporter/data/HashSetDuplicateRemover.java\n",
        "code": [
          "/**\n",
          " * Created by brian on 16/12/15.\n",
          " */\n",
          "public class HashSetDuplicateRemover<ID> implements DuplicateRemover<ID> {\n",
          "\n",
          "    private Set<ID> ids = Sets.newSetFromMap(new ConcurrentHashMap<>());\n",
          "\n",
          "    @Override\n",
          "    public boolean isDuplicate(ID id) {\n",
          "        return !ids.add(id);\n",
          "    }\n"
        ],
        "line_number": 12,
        "start_line": 8,
        "end_line": 18
      },
      {
        "link": "https://github.com/Manouchehri/bindiff/blob/2a31859b4638404cdc915d7ed6be19937d762743/src_fernflower/com/google/common/collect/Sets.java\n",
        "code": [
          "      Iterators.addAll(var1, var0);\n",
          "      return var1;\n",
          "   }\n",
          "\n",
          "   public static Set newConcurrentHashSet() {\n",
          "      return newSetFromMap(new ConcurrentHashMap());\n",
          "   }\n",
          "\n",
          "   @GoogleInternal\n",
          "   public static Set newConcurrentHashSet(Object... var0) {\n",
          "      int var1 = Maps.capacity(var0.length);\n"
        ],
        "line_number": 115,
        "start_line": 111,
        "end_line": 121
      },
      {
        "link": "https://github.com/AnandEmbold/biscuit_2/blob/f60b677540224ab1f295372e5eb640eec1b88c1b/java/goldenorb_java/webporter/webporter-core/src/main/java/com/brianway/webporter/data/HashSetDuplicateRemover.java\n",
        "code": [
          " * Created by brian on 16/12/15.\n",
          " * TODO \u00e7\u009c\u008b\u00e8\u0083\u00bd\u00e4\u00b8\u008d\u00e8\u0083\u00bd\u00e5\u008e\u00bb\u00e6\u008e\u0089 guava \u00e4\u00be\u009d\u00e8\u00b5\u0096\n",
          " */\n",
          "public class HashSetDuplicateRemover<ID> implements DuplicateRemover<ID> {\n",
          "\n",
          "    private Set<ID> ids = Sets.newSetFromMap(new ConcurrentHashMap<>());\n",
          "\n",
          "    @Override\n",
          "    public boolean isDuplicate(ID id) {\n",
          "        return !ids.add(id);\n",
          "    }\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/SetUtil.java\n",
        "code": [
          "*/ \n",
          "public static <E> java.util.Set<E> newIdentityHashSet(){\n",
          "\treturn org.apache.commons.collections4.SetUtils.newIdentityHashSet();\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.Sets#newSetFromMap(java.util.Map<E, java.lang.Boolean>)}\n",
          "*@see com.google.common.collect.Sets#newSetFromMap(java.util.Map<E, java.lang.Boolean>)\n",
          "*<code>public static <E> java.util.Set<E> com.google.common.collect.Sets.newSetFromMap(java.util.Map<E, java.lang.Boolean>)\n",
          "*newSetFromMap(java.util.Map<E, java.lang.Boolean> p0)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 326,
        "start_line": 322,
        "end_line": 332
      }
    ],
    "com.google.common.cache.CacheBuilder.refreshAfterWrite": [
      {
        "link": "https://github.com/geektcp/okhoxi-garden/blob/f810223204f0691779b7edf3112c7ce14b9d9b65/garden-service/garden-common/garden-common-core/src/main/java/com/geektcp/garden/core/cache/CacheFactory.java\n",
        "code": [
          "        return create(loader, TIME_OUT_MINUTES);\n",
          "    }\n",
          "\n",
          "    public static <K, V> LoadingCache<K, V> create(CacheLoader loader, long durationMins) {\n",
          "        return CacheBuilder.newBuilder()\n",
          "                .refreshAfterWrite(durationMins, TimeUnit.MINUTES)\n",
          "                .build(loader);\n",
          "    }\n",
          "\n",
          "    public static <K, V> LoadingCache<K, V> create(CacheLoader loader, RemovalListener removalListener,\n",
          "                                                   long durationMins) {\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      },
      {
        "link": "https://github.com/shansun123/sparrow/blob/5eae1d009717f8eb64f90a22ac9b54a440ff0771/src/main/java/com/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> expireAfterAccess(long duration, TimeUnit unit) {\n",
          "\t\treturn builder.expireAfterAccess(duration, unit);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> refreshAfterWrite(long duration, TimeUnit unit) {\n",
          "\t\treturn builder.refreshAfterWrite(duration, unit);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> ticker(Ticker ticker) {\n",
          "\t\treturn builder.ticker(ticker);\n"
        ],
        "line_number": 75,
        "start_line": 71,
        "end_line": 81
      },
      {
        "link": "https://github.com/Gilded-Games/OrbisLib/blob/147af30f2d7ff854c7bdbb4cc47d4e55db24d728/src/main/java/com/gildedgames/orbis/lib/util/cache/FileSystemCacheBuilder.java\n",
        "code": [
          "\t\tthis.underlyingCacheBuilder.expireAfterWrite(duration, unit);\n",
          "\t\treturn this;\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * {@link com.google.common.cache.CacheBuilder#refreshAfterWrite(long, java.util.concurrent.TimeUnit)}\n",
          "\t */\n",
          "\tpublic FileSystemCacheBuilder<K, V> refreshAfterWrite(long duration, TimeUnit unit)\n",
          "\t{\n",
          "\t\tthis.underlyingCacheBuilder.refreshAfterWrite(duration, unit);\n",
          "\t\treturn this;\n"
        ],
        "line_number": 98,
        "start_line": 94,
        "end_line": 104
      },
      {
        "link": "https://github.com/geektcp/okhoxi-garden/blob/f810223204f0691779b7edf3112c7ce14b9d9b65/garden-service/garden-common/garden-common-spring/src/main/java/com/geektcp/garden/spring/cache/CacheFactory.java\n",
        "code": [
          "        return create(loader, TIME_OUT_MINUTES);\n",
          "    }\n",
          "\n",
          "    public static <K, V> LoadingCache<K, V> create(CacheLoader loader, long durationMins) {\n",
          "        return CacheBuilder.newBuilder()\n",
          "                .refreshAfterWrite(durationMins, TimeUnit.MINUTES)\n",
          "                .build(loader);\n",
          "    }\n",
          "\n",
          "    public static <K, V> LoadingCache<K, V> create(CacheLoader loader, RemovalListener removalListener,\n",
          "                                                   long durationMins) {\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      },
      {
        "link": "https://github.com/raphw/guava-cache-overflow-extension/blob/befa47bb955ffa9f344b44e8621290d65e6592d2/src/main/java/com/blogspot/mydailyjava/guava/cache/overflow/FileSystemCacheBuilder.java\n",
        "code": [
          "        underlyingCacheBuilder.expireAfterWrite(duration, unit);\n",
          "        return this;\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.cache.CacheBuilder#refreshAfterWrite(long, java.util.concurrent.TimeUnit)}\n",
          "     */\n",
          "    public FileSystemCacheBuilder<K, V> refreshAfterWrite(long duration, TimeUnit unit) {\n",
          "        underlyingCacheBuilder.refreshAfterWrite(duration, unit);\n",
          "        return this;\n",
          "    }\n"
        ],
        "line_number": 75,
        "start_line": 71,
        "end_line": 81
      },
      {
        "link": "https://github.com/zqhxuyuan/zava/blob/707691039b7aff8f4129e2b25d08b374610990e5/src/main/java/com/github/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> expireAfterAccess(long duration, TimeUnit unit) {\n",
          "\t\treturn builder.expireAfterAccess(duration, unit);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> refreshAfterWrite(long duration, TimeUnit unit) {\n",
          "\t\treturn builder.refreshAfterWrite(duration, unit);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> ticker(Ticker ticker) {\n",
          "\t\treturn builder.ticker(ticker);\n"
        ],
        "line_number": 75,
        "start_line": 71,
        "end_line": 81
      },
      {
        "link": "https://github.com/One-Platform/cache/blob/858fabdd5d94af82d64d1b26585d8d2437a1f953/src/main/java/com/sinosoft/one/cache/guava/GuavaCacheBuilder.java\n",
        "code": [
          "\tpublic GuavaCacheBuilder<K, V> expireAfterAccess(long duration, TimeUnit unit){\r\n",
          "\t\tcacheBuilder.expireAfterAccess(duration, unit);\r\n",
          "\t\treturn this;\r\n",
          "\t}\r\n",
          "\r\n",
          "\tpublic GuavaCacheBuilder<K, V> refreshAfterWrite(long duration, TimeUnit unit){\r\n",
          "\t\tcacheBuilder.refreshAfterWrite(duration, unit);\r\n",
          "\t\treturn this;\r\n",
          "\t}\r\n",
          "\t\r\n",
          "\t@SuppressWarnings(\"unchecked\")\r\n"
        ],
        "line_number": 42,
        "start_line": 38,
        "end_line": 48
      },
      {
        "link": "https://github.com/zqhxuyuan/tutorials/blob/72740ec130a15331b0b2428b9750099c47073052/zava/src/main/java/com/github/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> expireAfterAccess(long duration, TimeUnit unit) {\n",
          "\t\treturn builder.expireAfterAccess(duration, unit);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> refreshAfterWrite(long duration, TimeUnit unit) {\n",
          "\t\treturn builder.refreshAfterWrite(duration, unit);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> ticker(Ticker ticker) {\n",
          "\t\treturn builder.ticker(ticker);\n"
        ],
        "line_number": 75,
        "start_line": 71,
        "end_line": 81
      },
      {
        "link": "https://github.com/geektcp/okhoxi-common/blob/5fe27e0045e052c423100fecaa3247b1a3416880/okhoxi-common-core/src/main/java/com/okhoxi/common/core/cache/CacheBuilder.java\n",
        "code": [
          "        return create(loader, TIME_OUT_MINUTES);\n",
          "    }\n",
          "\n",
          "    public static <K, V> LoadingCache<K, V> create(CacheLoader loader, long durationMins) {\n",
          "        return com.google.common.cache.CacheBuilder.newBuilder()\n",
          "                .refreshAfterWrite(durationMins, TimeUnit.MINUTES)\n",
          "                .build(loader);\n",
          "    }\n",
          "\n",
          "    public static <K, V> LoadingCache<K, V> create(CacheLoader loader, RemovalListener removalListener,\n",
          "                                                   long durationMins) {\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "https://github.com/Braj65/Sandbox/blob/ab7d5de63d65a120b264e3dc3219fbead1930a03/ScaleConcepts/src/main/java/designCache/guavaToDIsk/FileSystemCacheBuilder.java\n",
        "code": [
          "        underlyingCacheBuilder.expireAfterWrite(duration, unit);\n",
          "        return this;\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.cache.CacheBuilder#refreshAfterWrite(long, java.util.concurrent.TimeUnit)}\n",
          "     */\n",
          "    public FileSystemCacheBuilder<K, V> refreshAfterWrite(long duration, TimeUnit unit) {\n",
          "        underlyingCacheBuilder.refreshAfterWrite(duration, unit);\n",
          "        return this;\n",
          "    }\n"
        ],
        "line_number": 75,
        "start_line": 71,
        "end_line": 81
      }
    ],
    "org.mockito.Mockito.mock": [
      {
        "link": "https://github.com/nelsonandredias/Spring/blob/d5396a59f8807958f680bcf30e8bd8bbaff5d5cd/TestingSpring/udemy.unittesting.spring.boot.verification.basic/src/test/java/com/java/udemy/unittesting/spring/boot/verification/basic/ListMockVerifyTest.java\n",
        "code": [
          "\n",
          "\n",
          "public class ListMockVerifyTest {\n",
          "\n",
          "\t//mocking a list interface\n",
          "\tList<String> mock = Mockito.mock(List.class);\n",
          "\t\n",
          "\t@Test\n",
          "\tpublic void verification_basic() {\n",
          "\t\t\n",
          "\t\t//SUT (calling the method for testing purpose in the verify)\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "https://github.com/Dragonwrath/AndroidDemo/blob/bb7ffb4229097e01d6b50b0427f9b2d0dfa2721a/android-mock/src/test/java/com/joke/mock/offical_mock/OfficalTest_Part_3.java\n",
        "code": [
          "\n",
          "    /*\n",
          "     * One-liner stubs (Since 1.9.0)\n",
          "     * \u00e6\u0088\u0091\u00e4\u00bb\u00ac\u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e5\u008f\u00af\u00e7\u0094\u00a8\u00e4\u00b8\u0080\u00e8\u00a1\u008c\u00e4\u00bb\u00a3\u00e7\u00a0\u0081\u00e6\u009d\u00a5\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e7\u009b\u00b8\u00e5\u00ba\u0094\u00e7\u009a\u0084mock\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e4\u00bf\u009d\u00e8\u00af\u0081\u00e7\u00ae\u0080\u00e6\u00b4\u0081\u00e6\u0080\u00a7\u00ef\u00bc\u008c\u00e4\u00be\u008b\u00e5\u00a6\u0082\u00e4\u00b8\u008b\u00e9\u009d\u00a2\u00e7\u009a\u0084\u00e4\u00be\u008b\u00e5\u00ad\u0090\n",
          "     *  public class CarTest {\n",
          "     *   Car boringStubbedCar = when(mock(Car.class).shiftGear()).thenThrow(EngineNotStarted.class).getMock();\n",
          "     *      @Test public void should... {}\n",
          "     *  }\n",
          "     */\n",
          "    /**\n",
          "     * {@see Mockito\n"
        ],
        "line_number": 109,
        "start_line": 105,
        "end_line": 115
      },
      {
        "link": "https://github.com/KrishnaB10/idecore/blob/447d051f3a98b4b4bf5c0136b76bce718af3caca/com.salesforce.ide.ui.editors.test/src/com/salesforce/ide/ui/editors/apex/misc/ApexCodeScannerTest_unit.java\n",
        "code": [
          "\n",
          "    // See W-2298351\n",
          "    public void testApexCodeScannerDoesntCallBlockingSObjectRetrieve() throws Exception {\n",
          "        ApexCodeScanner apexCodeScanner = new ApexCodeScanner();\n",
          "        ApexCodeScanner spiedApexCodeScanner = spy(apexCodeScanner);\n",
          "        DescribeObjectRegistry mockDescribeObjectRegistry = mock(DescribeObjectRegistry.class);\n",
          "        IProject mockProject = mock(IProject.class);\n",
          "\n",
          "        spiedApexCodeScanner.init(mockProject);\n",
          "        when(mockProject.getName()).thenReturn(\"SampleProject\");\n",
          "        when(mockDescribeObjectRegistry.getCachedDescribeSObjectResultsIfAny(mockProject)).thenReturn(null);\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/atrink1978/q_frameworks_base/blob/db1c840c8c4f234e6ffbf5c764c34be0be0fe589/packages/SystemUI/tests/src/com/android/systemui/chooser/ChooserHelperTest.java\n",
        "code": [
          "    public void testOnChoose_CallsStartActivityAsCallerWithToken() {\n",
          "        final Intent intent = new Intent();\n",
          "        final Binder token = new Binder();\n",
          "        intent.putExtra(ActivityTaskManager.EXTRA_PERMISSION_TOKEN, token);\n",
          "\n",
          "        final Activity mockActivity = mock(Activity.class);\n",
          "        when(mockActivity.getIntent()).thenReturn(intent);\n",
          "\n",
          "        ChooserHelper.onChoose(mockActivity);\n",
          "        verify(mockActivity, times(1)).startActivityAsCaller(\n",
          "                any(), any(), eq(token), anyBoolean(), anyInt());\n"
        ],
        "line_number": 50,
        "start_line": 46,
        "end_line": 56
      },
      {
        "link": "https://github.com/Dragonwrath/AndroidDemo/blob/bb7ffb4229097e01d6b50b0427f9b2d0dfa2721a/android-mock/src/test/java/com/joke/mock/offical_mock/OfficalTest_Part_2.java\n",
        "code": [
          "     * https://static.javadoc.io/org.mockito/mockito-core/2.7.22/org/mockito/Mockito.html#11\n",
          "     * }\n",
          "     */\n",
          "    @Test\n",
          "    public void step_11() {\n",
          "        final LinkedList mockedLinkList = mock(LinkedList.class);\n",
          "        when(mockedLinkList.remove(anyInt())).thenAnswer(new Answer<String>() {\n",
          "            @Override\n",
          "            public String answer(InvocationOnMock invocation) throws Throwable {\n",
          "                Object[] arguments = invocation.getArguments();\n",
          "                Object mock = invocation.getMock();\n"
        ],
        "line_number": 43,
        "start_line": 39,
        "end_line": 49
      },
      {
        "link": "https://github.com/nelsonandredias/Spring/blob/d5396a59f8807958f680bcf30e8bd8bbaff5d5cd/TestingSpring/udemy.unittesting.spring.boot.argumentcapture.basic/src/test/java/com/java/udemy/unittesting/spring/boot/verification/basic/ListMockVerifyTest.java\n",
        "code": [
          "\n",
          "\n",
          "public class ListMockVerifyTest {\n",
          "\n",
          "\t//mocking a list interface\n",
          "\tList<String> mock = Mockito.mock(List.class);\n",
          "\t\n",
          "\t@Test\n",
          "\tpublic void verification_basic() {\n",
          "\t\t\n",
          "\t\t//SUT (calling the method for testing purpose in the verify)\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "https://github.com/Loannb8733/conception_agile/blob/12f3a5da47120125d35e03c49288929ee4e25cdd/TP1/hellodoublure/src/test/java/fr/unilim/fr/TestDoublures.java\n",
        "code": [
          "\n",
          "public class TestDoublures {\n",
          "\t@Test\n",
          "\tpublic void test_UnPremierStub() {\n",
          "\n",
          "\t\tUser user = mock(User.class); //cr\u00e9ation de la doublure\n",
          "\t\twhen(user.getLogin()).thenReturn(\"alice\"); //bouchonnage de la doublure\n",
          "\t\t\n",
          "\t\tSystem.out.println(user.getLogin());\n",
          "\t\t\n",
          "\t\tassertEquals(user.getLogin(), \"alice\");\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "https://github.com/Dragonwrath/AndroidDemo/blob/bb7ffb4229097e01d6b50b0427f9b2d0dfa2721a/android-mock/src/test/java/com/joke/mock/offical_mock/OfficalTest_Part_1.java\n",
        "code": [
          "     * https://static.javadoc.io/org.mockito/mockito-core/2.7.22/org/mockito/Mockito.html#2\n",
          "     * }\n",
          "     */\n",
          "    @Test\n",
          "    public void step_2() {\n",
          "        LinkedList mockedLinkList = mock(LinkedList.class);\n",
          "        when(mockedLinkList.get(0)).thenReturn(\"first value\");\n",
          "        when(mockedLinkList.get(1)).thenThrow(new RuntimeException());\n",
          "        //following prints \"first\"\n",
          "        System.out.println(mockedLinkList.get(0));\n",
          "        //following throws runtime exception\n"
        ],
        "line_number": 50,
        "start_line": 46,
        "end_line": 56
      },
      {
        "link": "https://github.com/Dragonwrath/AndroidDemo/blob/bb7ffb4229097e01d6b50b0427f9b2d0dfa2721a/android-mock/src/test/java/com/joke/mock/offical_mock/OfficalTest_Part_4.java\n",
        "code": [
          "     * }\n",
          "     */\n",
          "    @Test\n",
          "    public void step_31() {\n",
          "//        // use regular serialization\n",
          "//        mock(Book.class, withSettings().serializable());\n",
          "//\n",
          "//        // use serialization across classloaders\n",
          "//        mock(Book.class, withSettings().serializable(ACROSS_CLASSLOADERS));\n",
          "    }\n",
          "\n"
        ],
        "line_number": 33,
        "start_line": 29,
        "end_line": 39
      },
      {
        "link": "https://github.com/Arun1991/appleBench/blob/5565bf0d7bd7e608694fad8754da0ee8e788fbdb/unit-testing/src/test/java/com/example/demo/business/ListMockTest.java\n",
        "code": [
          "import org.mockito.ArgumentCaptor;\n",
          "import static  org.mockito.Mockito.mock;\n",
          "\n",
          "public class ListMockTest {\n",
          "\n",
          "\tList<String> mock =  mock(List.class);\n",
          "\t\n",
          "\t@Test\n",
          "\tpublic void size_basic() {\n",
          "\t\twhen(mock.size()).thenReturn(5);\n",
          "\t\tassertEquals(5, mock.size());\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      }
    ],
    "com.google.common.collect.Iterables.cycle": [
      {
        "link": "https://github.com/dovikn/inegotiate-android/blob/cea5e088b01ae4487d83cd1a84e6d2df78761a6e/src/com/google/common/collect/Iterables.java\n",
        "code": [
          "        C04601(Iterable iterable) {\n",
          "            this.val$iterable = iterable;\n",
          "        }\n",
          "\n",
          "        public Iterator<T> iterator() {\n",
          "            return Iterators.cycle(this.val$iterable);\n",
          "        }\n",
          "\n",
          "        public String toString() {\n",
          "            return this.val$iterable.toString() + \" (cycled)\";\n",
          "        }\n"
        ],
        "line_number": 151,
        "start_line": 147,
        "end_line": 157
      },
      {
        "link": "https://github.com/duyleekun/zycami-ded/blob/27686ca846de6d164692c81bac2ae7f85710361f/src/main/java/com/google/common/collect/Iterables.java\n",
        "code": [
          "            return Collections2.safeContains((Collection)iterable, object);\n",
          "        }\n",
          "        return Iterators.contains(iterable.iterator(), object);\n",
          "    }\n",
          "\n",
          "    public static Iterable cycle(Iterable iterable) {\n",
          "        Preconditions.checkNotNull(iterable);\n",
          "        Iterables$1 iterables$1 = new Iterables$1(iterable);\n",
          "        return iterables$1;\n",
          "    }\n",
          "\n"
        ],
        "line_number": 98,
        "start_line": 94,
        "end_line": 104
      },
      {
        "link": "https://github.com/hooj0/guava-example/blob/3c30cf3bcbd07310f8398eaffe6aefcc42da8435/src/java/main/com/cnblogs/hoojo/collections/utility_classes/IterablesTest.java\n",
        "code": [
          "\u0083\u00e7\u00b4\u00a0\r\n",
          "\t\tSystem.out.println(Iterables.limit(iter, 4)); //[2, 3, 5, 1]\r\n",
          "\t\t// \u00e5\u0088\u0086\u00e7\u00bb\u0084\r\n",
          "\t\tSystem.out.println(Iterables.partition(iter, 2)); //[[2, 3], [5, 1], [7, 4], [2]]\r\n",
          "\t\t\r\n",
          "\t\tIterable<Integer> temp = Iterables.cycle(3, 5, 22, 66);\r\n",
          "\t\t//temp.forEach(x -> System.out.println(\"cycle: \" + x));\r\n",
          "\t\t//temp.iterator().hasNext();\r\n",
          "\t\tSystem.out.println(temp); //[3, 5, 22, 66] (cycled)\r\n",
          "\t\t\r\n",
          "\t\t// \u00e5\u0085"
        ],
        "line_number": 106,
        "start_line": 102,
        "end_line": 112
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/collect/Iterables.java\n",
        "code": [
          "            return ((Set) iterable).contains(obj) ? 1 : 0;\n",
          "        }\n",
          "        return Iterators.frequency(iterable.iterator(), obj);\n",
          "    }\n",
          "\n",
          "    public static <T> Iterable<T> cycle(final Iterable<T> iterable) {\n",
          "        Preconditions.checkNotNull(iterable);\n",
          "        return new FluentIterable<T>() {\n",
          "            /* class com.google.common.collect.Iterables.AnonymousClass1 */\n",
          "\n",
          "            @Override // java.lang.Iterable\n"
        ],
        "line_number": 192,
        "start_line": 188,
        "end_line": 198
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/IterableUtil.java\n",
        "code": [
          "*/ \n",
          "public static <T> java.lang.Iterable<T> consumingIterable(java.lang.Iterable<T> p0){\n",
          "\treturn com.google.common.collect.Iterables.consumingIterable(p0);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.Iterables#cycle(java.lang.Iterable<T>)}\n",
          "*@see com.google.common.collect.Iterables#cycle(java.lang.Iterable<T>)\n",
          "*<code>public static <T> java.lang.Iterable<T> com.google.common.collect.Iterables.cycle(java.lang.Iterable<T>)\n",
          "*cycle(java.lang.Iterable<T> p0)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 209,
        "start_line": 205,
        "end_line": 215
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/collect/Iterables.java\n",
        "code": [
          "            return ((Set) iterable).contains(obj) ? 1 : 0;\n",
          "        }\n",
          "        return Iterators.frequency(iterable.iterator(), obj);\n",
          "    }\n",
          "\n",
          "    public static <T> Iterable<T> cycle(final Iterable<T> iterable) {\n",
          "        Preconditions.checkNotNull(iterable);\n",
          "        return new FluentIterable<T>() {\n",
          "            /* class com.google.common.collect.Iterables.AnonymousClass1 */\n",
          "\n",
          "            static /* synthetic */ Iterable lambda$spliterator$0(Iterable iterable) {\n"
        ],
        "line_number": 181,
        "start_line": 177,
        "end_line": 187
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/collect/Iterables.java\n",
        "code": [
          "            return ((Set) iterable).contains(obj) ? 1 : 0;\n",
          "        }\n",
          "        return Iterators.frequency(iterable.iterator(), obj);\n",
          "    }\n",
          "\n",
          "    public static <T> Iterable<T> cycle(final Iterable<T> iterable) {\n",
          "        Preconditions.checkNotNull(iterable);\n",
          "        return new FluentIterable<T>() {\n",
          "            /* class com.google.common.collect.Iterables.AnonymousClass1 */\n",
          "\n",
          "            @Override // java.lang.Iterable\n"
        ],
        "line_number": 205,
        "start_line": 201,
        "end_line": 211
      },
      {
        "link": "https://github.com/upclab/socrates-matcher-android/blob/81594ffd21e1714f86d5316eff43f73e7d00545b/com/google/common/collect/Iterables.java\n",
        "code": [
          "        C06751(Iterable iterable) {\n",
          "            this.val$iterable = iterable;\n",
          "        }\n",
          "\n",
          "        public Iterator<T> iterator() {\n",
          "            return Iterators.cycle(this.val$iterable);\n",
          "        }\n",
          "\n",
          "        public String toString() {\n",
          "            return this.val$iterable.toString() + \" (cycled)\";\n",
          "        }\n"
        ],
        "line_number": 130,
        "start_line": 126,
        "end_line": 136
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.deviceauthserver-DeviceAuthServer/sources/com/google/common/collect/Iterables.java\n",
        "code": [
          "            return ((Set) iterable).contains(element) ? 1 : 0;\n",
          "        }\n",
          "        return Iterators.frequency(iterable.iterator(), element);\n",
          "    }\n",
          "\n",
          "    public static <T> Iterable<T> cycle(final Iterable<T> iterable) {\n",
          "        Preconditions.checkNotNull(iterable);\n",
          "        return new FluentIterable<T>() {\n",
          "            /* class com.google.common.collect.Iterables.AnonymousClass1 */\n",
          "\n",
          "            @Override // java.lang.Iterable\n"
        ],
        "line_number": 196,
        "start_line": 192,
        "end_line": 202
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/collect/Iterables.java\n",
        "code": [
          "            return ((Set) iterable).contains(element) ? 1 : 0;\n",
          "        }\n",
          "        return Iterators.frequency(iterable.iterator(), element);\n",
          "    }\n",
          "\n",
          "    public static <T> Iterable<T> cycle(final Iterable<T> iterable) {\n",
          "        Preconditions.checkNotNull(iterable);\n",
          "        return new FluentIterable<T>() {\n",
          "            /* class com.google.common.collect.Iterables.AnonymousClass1 */\n",
          "\n",
          "            @Override // java.lang.Iterable\n"
        ],
        "line_number": 206,
        "start_line": 202,
        "end_line": 212
      }
    ],
    "com.google.common.util.concurrent.Futures.successfulAsList": [
      {
        "link": "}https://github.com/djh4230/Apache-Phoenix/blob/4d4e0dec09b85bf92112a67b237ab5ddf5757b4d/phoenix-core/src/main/java/org/apache/phoenix/hbase/index/parallel/WaitForCompletionTaskRunner.java\n",
        "code": [
          "    super(service);\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public <R> ListenableFuture<List<R>> submitTasks(List<ListenableFuture<R>> futures) {\n",
          "    return Futures.successfulAsList(futures);\n",
          "  }\n"
        ],
        "line_number": 48,
        "start_line": 44,
        "end_line": 50
      },
      {
        "link": "https://github.com/kimichengfeng/whiteHorse/blob/0535df55fc80d8b4b0f9cc5d79b8386e48265084/src/com/wecash/guava/CompletableFutures.java\n",
        "code": [
          " * Date: 2020-08-03\n",
          " * Time: 17:51\n",
          " */\n",
          "public class CompletableFutures {\n",
          "\n",
          "    public static <V> CompletableFuture<List<V>> successfulAsList(\n",
          "            CompletableFuture<? extends V>... futures) {\n",
          "\n",
          "        List<Present<V>> values =\n",
          "                futures.length == 0\n",
          "                        ? ImmutableList.of()\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "https://github.com/yynespoon/guava-test/blob/3e02216b7d0d65128346979cc6199d2234afb974/src/main/java/com/test/current/TestGetAllFuture.java\n",
        "code": [
          "                return 2;\n",
          "            }\n",
          "        });\n",
          "\n",
          "        //test successful as list \u00e4\u00b8\u008d\u00e4\u00bc\u009a\u00e6\u008a\u009b\u00e5\u0087\u00ba\u00e5\u00bc\u0082\u00e5\u00b8\u00b8, \u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e4\u00b8\u008d\u00e6\u0088\u0090\u00e5\u008a\u009f\u00e7\u009a\u0084\u00e4\u00bc\u009a\u00e8\u00bf\u0094\u00e5\u009b\u009e null \u00e6\u0094\u00be\u00e5\u0088\u00b0 list \u00e4\u00b8\u00ad\n",
          "        ListenableFuture<List<Integer>> successfulAsList = Futures.successfulAsList(Lists.newArrayList(submit, submit1));\n",
          "        System.out.println(successfulAsList.get());\n",
          "\n",
          "        //test all as list, \u00e8\u008b\u00a5\u00e5\u0085",
          "\u00b6\u00e4\u00b8\u00ad\u00e6\u009c\u0089\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e5\u00a4\u00b1\u00e8\u00b4\u00a5\u00e6\u0088\u0096\u00e8\u0080\u0085",
          "\u00e5\u008f\u0096\u00e6\u00b6\u0088\u00e5\u0088\u0099\u00e9\u0083\u00bd\u00e6\u00b2\u00a1\u00e6\u009c\u0089\u00e8\u00bf\u0094\u00e5\u009b\u009e, \u00e4\u00bd\u0086\u00e6\u0098\u00af\u00e6\u009c\u00aa\u00e5\u008f\u0096\u00e6\u00b6\u0088\u00e6\u0088\u0096\u00e5\u00a4\u00b1\u00e8\u00b4\u00a5\u00e7\u009a\u0084\u00e4\u00bc\u009a\u00e6\u00ad\u00a3\u00e5\u00b8\u00b8\u00e6\u0089\u00a7\u00e8\u00a1\u008c\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "https://github.com/jianglibo/apache-nutch-2.3.1/blob/82288b1cc4bc9c7b1836ff5b6f266289837c84a4/src/java/com/mymock/nutch/ConcurrentUtil.java\n",
        "code": [
          "\t\tList<ListenableFuture<T>> lfs = new ArrayList<>();\n",
          "\t\t\n",
          "\t\tfor(Callable<T> ca : cas) {\n",
          "\t\t\tlfs.add(service.submit(ca));\n",
          "\t\t}\n",
          "\t\treturn Futures.successfulAsList(lfs).get();\n",
          "\t}\n",
          "\n",
          "}\n"
        ],
        "line_number": 30,
        "start_line": 26,
        "end_line": 34
      },
      {
        "link": "https://github.com/airlift/airlift/blob/3546f4b12884828372d30a8ae821327ad87441e8/discovery/src/main/java/io/airlift/discovery/client/ServiceSelectorManager.java\n",
        "code": [
          "    }\n",
          "\n",
          "    public void attemptRefresh()\n",
          "    {\n",
          "        try {\n",
          "            Futures.successfulAsList(initiateRefresh()).get();\n",
          "        }\n",
          "        catch (InterruptedException e) {\n",
          "            Thread.currentThread().interrupt();\n",
          "        }\n",
          "        catch (ExecutionException ignored) {\n"
        ],
        "line_number": 41,
        "start_line": 37,
        "end_line": 47
      },
      {
        "link": "https://github.com/fakeNetflix/uber-repo-bazel-buildfarm/blob/d04619b35dedba13bcc601fc3cacc685ea13a74f/src/main/java/build/buildfarm/instance/shard/DispatchedMonitor.java\n",
        "code": [
          "    } catch (Exception e) {\n",
          "      if (!backplane.isStopped()) {\n",
          "        logger.log(SEVERE, \"error during dispatch evaluation\", e);\n",
          "      }\n",
          "    }\n",
          "    return successfulAsList(requeuedFutures.build());\n",
          "  }\n",
          "\n",
          "  static <T> T getOnlyInterruptibly(ListenableFuture<T> future) throws InterruptedException {\n",
          "    try {\n",
          "      return future.get();\n"
        ],
        "line_number": 95,
        "start_line": 91,
        "end_line": 101
      },
      {
        "link": "https://github.com/Ting007/airliftTest/blob/5dd7876df9f0155aa90c76c7650458654c954e5a/discovery/src/main/java/io/airlift/discovery/client/ServiceSelectorManager.java\n",
        "code": [
          "    }\n",
          "\n",
          "    public void attemptRefresh()\n",
          "    {\n",
          "        try {\n",
          "            Futures.successfulAsList(initiateRefresh()).get();\n",
          "        }\n",
          "        catch (InterruptedException e) {\n",
          "            Thread.currentThread().interrupt();\n",
          "        }\n",
          "        catch (ExecutionException ignored) {\n"
        ],
        "line_number": 43,
        "start_line": 39,
        "end_line": 49
      },
      {
        "link": "https://github.com/huchonglinw/java_examples/blob/3c2984ac06c373baf86cab6a9e117c91363a6591/guava_examples/src/main/java/FuturesDemo.java\n",
        "code": [
          "        // \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e7\u009a\u0084\u00e6\u0098\u00afTrustedListenableFutureTask\u00e3\u0080\u0082value\u00e4\u00b8\u00ba\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e5\u0080\u00bc\n",
          "        // \u00e9\u0082\u00a3\u00e4\u00b9\u0088\u00e6\u0098\u00af\u00e5\u00a6\u0082\u00e4\u00bd\u0095\u00e6\u008a\u008a\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e5\u0080\u00bc\u00e7\u00bb\u0091\u00e5\u00ae\u009a\u00e5\u009c\u00a8future\u00e4\u00b8\u008a\u00e7\u009a\u0084\u00e5\u0091\u00a2\u00ef\u00bc\u009f\n",
          "        ListenableFuture future1 = service.submit(new Callable1());\n",
          "        ListenableFuture future2 = service.submit(new Callable2());\n",
          "\n",
          "//        ListenableFuture listenableFuture = Futures.successfulAsList(future1, future2);\n",
          "        Futures.addCallback(future1, new FutureCallBack1(), service);\n",
          "        Futures.addCallback(future2, new FutureCallBack2(), service);\n",
          "\n",
          "//        Futures.addCallback(listenableFuture, new CallBackTask(), service);\n",
          "\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "https://github.com/zhengpc/asynctask/blob/788753ff98e22383180c811df50ae1e592c99d2f/src/main/java/com/alibaba/china/cntools/asynctask/base/util/FutureTaskHelper.java\n",
        "code": [
          "            });\n",
          "        });\n",
          "\n",
          "        // \u00e8\u00b0\u0083Futures\u00e7\u009a\u0084\u00e9\u009d\u0099\u00e6\u0080\u0081\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00ef\u00bc\u008c\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e4\u00b8\u0080\u00e4\u00b8\u00aaListenableFuture \u00ef\u00bc\u008c\u00e8\u00af\u00a5Future\u00e7\u009a\u0084\u00e7\u00bb\u0093\u00e6\u009e\u009c\u00e5\u008c\u0085",
          "\u00e5\u0090\u00ab\u00e6\u0089\u0080\u00e6\u009c\u0089\u00e6\u0088\u0090\u00e5\u008a\u009f\u00e7\u009a\u0084Future\n",
          "        ListenableFuture<List<R>> successfulAsList = Futures.successfulAsList(futureTaskList);\n",
          "\n",
          "        // \u00e7\u00ad\u0089\u00e5\u00be\u0085",
          "\u00e4\u00bb\u00bb\u00e5\u008a\u00a1\u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e7\u00bb\u0093\u00e6\u009e\u009c\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e8\u00b6\u0085",
          "\u00e6\u0097\u00b6\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e5\u008f\u0096\u00e6\u00b6\u0088\u00e4\u00bb\u00bb\u00e5\u008a\u00a1\u00e7\u009a\u0084\u00e6\u0089\u00a7\u00e8\u00a1\u008c\n",
          "        try {\n"
        ],
        "line_number": 78,
        "start_line": 74,
        "end_line": 84
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/ListenableFutureUtil.java\n",
        "code": [
          "*/ \n",
          "public static <O> com.google.common.util.concurrent.ListenableFuture<O> submitAsync(com.google.common.util.concurrent.AsyncCallable<O> p0,java.util.concurrent.Executor p1){\n",
          "\treturn com.google.common.util.concurrent.Futures.submitAsync(p0,p1);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.util.concurrent.Futures#successfulAsList(java.lang.Iterable<? extends com.google.common.util.concurrent.ListenableFuture<? extends V>>)}\n",
          "*@see com.google.common.util.concurrent.Futures#successfulAsList(java.lang.Iterable<? extends com.google.common.util.concurrent.ListenableFuture<? extends V>>)\n",
          "*<code>public static <V> com.google.common.util.concurrent.ListenableFuture<java.util.List<V>> com.google.common.util.concurrent.Futures.successfulAsList(java.lang.Iterable<? extends com.google.common.util.concurrent.ListenableFuture<? extends V>>)\n",
          "*successfulAsList(java.lang.Iterable<? extends com.google.common.util.concurrent.ListenableFuture<? extends V>> p0)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 209,
        "start_line": 205,
        "end_line": 215
      }
    ],
    "com.google.common.base.CharMatcher.is": [
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/base/CharMatcher.java\n",
        "code": [
          "    @Deprecated\n",
          "    public static CharMatcher singleWidth() {\n",
          "        return SingleWidth.INSTANCE;\n",
          "    }\n",
          "\n",
          "    public static CharMatcher is(char c) {\n",
          "        return new Is(c);\n",
          "    }\n",
          "\n",
          "    public static CharMatcher isNot(char c) {\n",
          "        return new IsNot(c);\n"
        ],
        "line_number": 127,
        "start_line": 123,
        "end_line": 133
      },
      {
        "link": "https://github.com/salesforce/omakase/blob/97e79c5cf0189ba5dc55144d9e7209133bc8507d/src/main/java/com/salesforce/omakase/parser/token/Tokens.java\n",
        "code": [
          "\n",
          "    /** hexidecimal number */\n",
          "    HEXIDECIMAL(inRange('0', '9').or(inRange('a', 'f').or(inRange('A', 'F'))), \"hexidecimal number [a-fA-F0-9]\"),\n",
          "\n",
          "    /** first allowed character in a css ident/name (ordered based on likelihood of occurrence) */\n",
          "    NMSTART(inRange('a', 'z').or(inRange('A', 'Z').or(is('_'))), \"valid first identifier character (no digits)\"),\n",
          "\n",
          "    /** subsequent allowed characters in a css ident/name (ordered based on likelihood of occurrence) */\n",
          "    NMCHAR(inRange('a', 'z').or(is('-')).or(inRange('A', 'Z')).or(is('_')).or(inRange('0', '9')),\n",
          "        \"valid identifier character\"),\n",
          "\n"
        ],
        "line_number": 142,
        "start_line": 138,
        "end_line": 148
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/base/CharMatcher.java\n",
        "code": [
          "    @Deprecated\n",
          "    public static CharMatcher singleWidth() {\n",
          "        return SingleWidth.INSTANCE;\n",
          "    }\n",
          "\n",
          "    public static CharMatcher is(char c) {\n",
          "        return new Is(c);\n",
          "    }\n",
          "\n",
          "    public static CharMatcher isNot(char c) {\n",
          "        return new IsNot(c);\n"
        ],
        "line_number": 79,
        "start_line": 75,
        "end_line": 85
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/CharMatcherUtil.java\n",
        "code": [
          "*/ \n",
          "public static com.google.common.base.CharMatcher invisible(){\n",
          "\treturn com.google.common.base.CharMatcher.invisible();\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.base.CharMatcher#is(char)}\n",
          "*@see com.google.common.base.CharMatcher#is(char)\n",
          "*<code>public static com.google.common.base.CharMatcher com.google.common.base.CharMatcher.is(char)\n",
          "*is(char p0)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 118,
        "start_line": 114,
        "end_line": 124
      },
      {
        "link": "https://github.com/kavikondala/jclouds/blob/6057d0423687eaa2bcd131facb42cfad133f7480/core/src/main/java/org/jclouds/predicates/validators/DnsNameValidator.java\n",
        "code": [
          "      if (!range.matchesAllOf(name))\n",
          "         throw exception(name, \"Should have lowercase ASCII letters, \" + \"numbers, or dashes\");\n",
          "   }\n",
          "\n",
          "   protected CharMatcher getAcceptableRange() {\n",
          "      return inRange('a', 'z').or(inRange('0', '9').or(is('-')));\n",
          "   }\n",
          "\n",
          "   protected IllegalArgumentException exception(String vAppName, String reason) {\n",
          "      return new IllegalArgumentException(String.format(\n",
          "               \"Object '%s' doesn't match dns naming constraints. \" + \"Reason: %s.\", vAppName,\n"
        ],
        "line_number": 69,
        "start_line": 65,
        "end_line": 75
      },
      {
        "link": "https://github.com/dovikn/inegotiate-android/blob/cea5e088b01ae4487d83cd1a84e6d2df78761a6e/src/com/google/common/base/CharMatcher.java\n",
        "code": [
          "        public CharMatcher or(CharMatcher other) {\n",
          "            return other.matches(this.val$match) ? ANY : this;\n",
          "        }\n",
          "\n",
          "        public CharMatcher negate() {\n",
          "            return CharMatcher.is(this.val$match);\n",
          "        }\n",
          "    }\n",
          "\n",
          "    private static class And extends CharMatcher {\n",
          "        List<CharMatcher> components;\n"
        ],
        "line_number": 464,
        "start_line": 460,
        "end_line": 470
      },
      {
        "link": "https://github.com/jclouds/legacy-jclouds/blob/b5b3c2c77e856c2015e7ce644e5fc916d4af90b2/core/src/main/java/org/jclouds/predicates/validators/DnsNameValidator.java\n",
        "code": [
          "      if (!range.matchesAllOf(name))\n",
          "         throw exception(name, \"Should have lowercase ASCII letters, \" + \"numbers, or dashes\");\n",
          "   }\n",
          "\n",
          "   protected CharMatcher getAcceptableRange() {\n",
          "      return inRange('a', 'z').or(inRange('0', '9').or(is('-')));\n",
          "   }\n",
          "\n",
          "   protected IllegalArgumentException exception(String vAppName, String reason) {\n",
          "      return new IllegalArgumentException(String.format(\n",
          "               \"Object '%s' doesn't match dns naming constraints. \" + \"Reason: %s.\", vAppName,\n"
        ],
        "line_number": 73,
        "start_line": 69,
        "end_line": 79
      },
      {
        "link": "https://github.com/nucoupons/Mobile_Applications/blob/62239dd0f17066c12a86d10d26bef350e6e9bd43/core/src/main/java/org/jclouds/predicates/validators/DnsNameValidator.java\n",
        "code": [
          "      if (!range.matchesAllOf(name))\n",
          "         throw exception(name, \"Should have lowercase ASCII letters, \" + \"numbers, or dashes\");\n",
          "   }\n",
          "\n",
          "   protected CharMatcher getAcceptableRange() {\n",
          "      return inRange('a', 'z').or(inRange('0', '9').or(is('-')));\n",
          "   }\n",
          "\n",
          "   protected IllegalArgumentException exception(String vAppName, String reason) {\n",
          "      return new IllegalArgumentException(String.format(\n",
          "               \"Object '%s' doesn't match dns naming constraints. \" + \"Reason: %s.\", vAppName,\n"
        ],
        "line_number": 69,
        "start_line": 65,
        "end_line": 75
      },
      {
        "link": "https://github.com/avibh/jclouds/blob/c595a3abcbaaa1b4f1175b4698dd47318bd60939/core/src/main/java/org/jclouds/predicates/validators/DnsNameValidator.java\n",
        "code": [
          "      if (!range.matchesAllOf(name))\n",
          "         throw exception(name, \"Should have lowercase ASCII letters, \" + \"numbers, or dashes\");\n",
          "   }\n",
          "\n",
          "   protected CharMatcher getAcceptableRange() {\n",
          "      return inRange('a', 'z').or(inRange('0', '9').or(is('-')));\n",
          "   }\n",
          "\n",
          "   protected IllegalArgumentException exception(String vAppName, String reason) {\n",
          "      return new IllegalArgumentException(String.format(\n",
          "               \"Object '%s' doesn't match dns naming constraints. \" + \"Reason: %s.\", vAppName,\n"
        ],
        "line_number": 69,
        "start_line": 65,
        "end_line": 75
      },
      {
        "link": "https://github.com/dimakuzminov/jclouds-vcloud-director-support/blob/de79b9af0e337457dc98b5e7cd9e346e942e5caf/core/src/main/java/org/jclouds/predicates/validators/DnsNameValidator.java\n",
        "code": [
          "      if (!range.matchesAllOf(name))\n",
          "         throw exception(name, \"Should have lowercase ASCII letters, \" + \"numbers, or dashes\");\n",
          "   }\n",
          "\n",
          "   protected CharMatcher getAcceptableRange() {\n",
          "      return inRange('a', 'z').or(inRange('0', '9').or(is('-')));\n",
          "   }\n",
          "\n",
          "   protected IllegalArgumentException exception(String vAppName, String reason) {\n",
          "      return new IllegalArgumentException(String.format(\n",
          "               \"Object '%s' doesn't match dns naming constraints. \" + \"Reason: %s.\", vAppName,\n"
        ],
        "line_number": 71,
        "start_line": 67,
        "end_line": 77
      }
    ],
    "com.alibaba.fastjson.JSON.toJSONString": [
      {
        "link": "https://github.com/aYIfseec/MyPoetry/blob/feb39ecd20537dd181c554226124911b42d89a6a/ZBLibrary/src/main/java/zuo/biao/library/util/JSON.java\n",
        "code": [
          "\t/**\n",
          "\t * @param s\n",
          "\t * @return\n",
          "\t */\n",
          "\tpublic static JSONObject parseObject(Object obj) {\n",
          "\t\treturn parseObject(toJSONString(obj));\n",
          "\t}\n",
          "\t/**json\u00e8\u00bd\u00acJSONObject\n",
          "\t * @param json\n",
          "\t * @return\n",
          "\t */\n"
        ],
        "line_number": 54,
        "start_line": 50,
        "end_line": 60
      },
      {
        "link": "https://github.com/jerrylususu/apijson_role_extend/blob/d7800122a59f0bdcfe0e630e834d268af12228cf/src/main/java/apijson/JSON.java\n",
        "code": [
          "\t */\n",
          "\tpublic static Object parse(Object obj) {\n",
          "\t\tint features = com.alibaba.fastjson.JSON.DEFAULT_PARSER_FEATURE;\n",
          "\t\tfeatures |= Feature.OrderedField.getMask();\n",
          "\t\ttry {\n",
          "\t\t\treturn com.alibaba.fastjson.JSON.parse(obj instanceof String ? (String) obj : toJSONString(obj), features);\n",
          "\t\t} catch (Exception e) {\n",
          "\t\t\tLog.i(TAG, \"parse  catch \\n\" + e.getMessage());\n",
          "\t\t}\n",
          "\t\treturn null;\n",
          "\t}\n"
        ],
        "line_number": 71,
        "start_line": 67,
        "end_line": 77
      },
      {
        "link": "https://github.com/keeponZhang/YiDongJiaGou/blob/2f299fad796dbb2ade9d22dff2ed5e4782d16a63/2018/LS32json2/app/src/main/java/com/dongnao/json/MainActivity.java\n",
        "code": [
          "         */\n",
          "        SerializeConfig.getGlobalInstance().registerIfNotExists(Child.class);\n",
          "        ParserConfig.getGlobalInstance().registerIfNotExists(Child.class);\n",
          "\n",
          "        Child child = new Child(\"name\", 100);\n",
          "        String json = com.alibaba.fastjson.JSON.toJSONString(child);\n",
          "        Log.e(TAG, json);\n",
          "        Log.e(TAG, com.alibaba.fastjson.JSON.parseObject(json, Child.class).toString());\n",
          "\n",
          "\n",
          "        String before = com.alibaba.fastjson.JSON.toJSONString(child, new BeforeFilter() {\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 64
      },
      {
        "link": "https://github.com/kehao-study/apijson_compile/blob/a758f7d8819ccd447ef09241e6d7b339d63eb56b/src/main/java/apijson/JSON.java\n",
        "code": [
          "\t */\n",
          "\tpublic static Object parse(Object obj) {\n",
          "\t\tint features = com.alibaba.fastjson.JSON.DEFAULT_PARSER_FEATURE;\n",
          "\t\tfeatures |= Feature.OrderedField.getMask();\n",
          "\t\ttry {\n",
          "\t\t\treturn com.alibaba.fastjson.JSON.parse(obj instanceof String ? (String) obj : toJSONString(obj), features);\n",
          "\t\t} catch (Exception e) {\n",
          "\t\t\tLog.i(TAG, \"parse  catch \\n\" + e.getMessage());\n",
          "\t\t}\n",
          "\t\treturn null;\n",
          "\t}\n"
        ],
        "line_number": 71,
        "start_line": 67,
        "end_line": 77
      },
      {
        "link": "https://github.com/rainboy-learn/apijson-learn/blob/c16f1ad6a4786e726fece2b155b8673b89f08091/src/main/java/apijson/JSON.java\n",
        "code": [
          "\t */\n",
          "\tpublic static Object parse(Object obj) {\n",
          "\t\tint features = com.alibaba.fastjson.JSON.DEFAULT_PARSER_FEATURE;\n",
          "\t\tfeatures |= Feature.OrderedField.getMask();\n",
          "\t\ttry {\n",
          "\t\t\treturn com.alibaba.fastjson.JSON.parse(obj instanceof String ? (String) obj : toJSONString(obj), features);\n",
          "\t\t} catch (Exception e) {\n",
          "\t\t\tLog.i(TAG, \"parse  catch \\n\" + e.getMessage());\n",
          "\t\t}\n",
          "\t\treturn null;\n",
          "\t}\n"
        ],
        "line_number": 71,
        "start_line": 67,
        "end_line": 77
      },
      {
        "link": "https://github.com/APIJSON/apijson-orm/blob/9f8b272138c807543a3532476bf4e1421bf46417/src/main/java/apijson/JSON.java\n",
        "code": [
          "\t */\n",
          "\tpublic static Object parse(Object obj) {\n",
          "\t\tint features = com.alibaba.fastjson.JSON.DEFAULT_PARSER_FEATURE;\n",
          "\t\tfeatures |= Feature.OrderedField.getMask();\n",
          "\t\ttry {\n",
          "\t\t\treturn com.alibaba.fastjson.JSON.parse(obj instanceof String ? (String) obj : toJSONString(obj), features);\n",
          "\t\t} catch (Exception e) {\n",
          "\t\t\tLog.i(TAG, \"parse  catch \\n\" + e.getMessage());\n",
          "\t\t}\n",
          "\t\treturn null;\n",
          "\t}\n"
        ],
        "line_number": 71,
        "start_line": 67,
        "end_line": 77
      },
      {
        "link": "https://github.com/allen218/JsonParserDemo/blob/6868bdcbb0287e92a1e0a213eb9540e9fdb8c304/app/src/main/java/com/dongnao/json/MainActivity.java\n",
        "code": [
          "         */\n",
          "        SerializeConfig.getGlobalInstance().registerIfNotExists(Child.class);\n",
          "        ParserConfig.getGlobalInstance().registerIfNotExists(Child.class);\n",
          "\n",
          "        Child child = new Child(\"name\", 100);\n",
          "        String json = com.alibaba.fastjson.JSON.toJSONString(child);\n",
          "        Log.e(TAG, json);\n",
          "        Log.e(TAG, com.alibaba.fastjson.JSON.parseObject(json, Child.class).toString());\n",
          "\n",
          "\n",
          "        String before = com.alibaba.fastjson.JSON.toJSONString(child, new BeforeFilter() {\n"
        ],
        "line_number": 57,
        "start_line": 53,
        "end_line": 63
      },
      {
        "link": "}https://github.com/jiangfei001/program/blob/e93aea1bf76a20fc6db2344d40f9c475d3557ac8/AndroidFine-master/app/src/main/java/com/sgs/businessmodule/taskModel/taskList/RUNDATA.java\n",
        "code": [
          "\n",
          "        LinkedList<MyTask> zhouqitask = (LinkedList<MyTask>) ProgramScheduledManager.getInstance().programTaskManager.getMyTaskTimeTask().getmTasks();\n",
          "\n",
          "        LinkedList<MyTask> duzhantask = (LinkedList<MyTask>) ProgramScheduledManager.getInstance().programTaskManager.getMyTaskTimeTask().getPriorsTasks();\n",
          "\n",
          "        hashMap.put(\"lunxuntask\", com.alibaba.fastjson.JSON.toJSONString(lunxuntask));\n",
          "        hashMap.put(\"zhouqitask\", com.alibaba.fastjson.JSON.toJSONString(zhouqitask));\n",
          "        hashMap.put(\"duzhantask\", com.alibaba.fastjson.JSON.toJSONString(duzhantask));\n",
          "\n",
          "        ZLog.e(\"RUNDATA\",com.alibaba.fastjson.JSON.toJSONString(hashMap));\n",
          "    }\n"
        ],
        "line_number": 57,
        "start_line": 53,
        "end_line": 63
      },
      {
        "link": "https://github.com/wujun728/jun_spring_plugin/blob/f2deb5889d76499c4535bb6664efa95a4402cf63/jun_ssh_api/apijson/src/main/java/apijson/JSON.java\n",
        "code": [
          "\t */\n",
          "\tpublic static Object parse(Object obj) {\n",
          "\t\tint features = com.alibaba.fastjson.JSON.DEFAULT_PARSER_FEATURE;\n",
          "\t\tfeatures |= Feature.OrderedField.getMask();\n",
          "\t\ttry {\n",
          "\t\t\treturn com.alibaba.fastjson.JSON.parse(obj instanceof String ? (String) obj : toJSONString(obj), features);\n",
          "\t\t} catch (Exception e) {\n",
          "\t\t\tLog.i(TAG, \"parse  catch \\n\" + e.getMessage());\n",
          "\t\t}\n",
          "\t\treturn null;\n",
          "\t}\n"
        ],
        "line_number": 71,
        "start_line": 67,
        "end_line": 77
      },
      {
        "link": "https://github.com/wujun728/jun_spring_plugin/blob/f2deb5889d76499c4535bb6664efa95a4402cf63/jun_ssh_api/apijson/APIJSON/APIJSONORM/src/main/java/apijson/JSON.java\n",
        "code": [
          "\t */\n",
          "\tpublic static Object parse(Object obj) {\n",
          "\t\tint features = com.alibaba.fastjson.JSON.DEFAULT_PARSER_FEATURE;\n",
          "\t\tfeatures |= Feature.OrderedField.getMask();\n",
          "\t\ttry {\n",
          "\t\t\treturn com.alibaba.fastjson.JSON.parse(obj instanceof String ? (String) obj : toJSONString(obj), features);\n",
          "\t\t} catch (Exception e) {\n",
          "\t\t\tLog.i(TAG, \"parse  catch \\n\" + e.getMessage());\n",
          "\t\t}\n",
          "\t\treturn null;\n",
          "\t}\n"
        ],
        "line_number": 71,
        "start_line": 67,
        "end_line": 77
      }
    ],
    "com.google.common.base.Predicates.compose": [
      {
        "link": "https://github.com/GourdErwa/MyNote/blob/a14bf56005e302a37a2a239316b5d10e1dfcb546/framework/src/main/java/guava/base/Predicates_.java\n",
        "code": [
          "                put(\"miss\", new Girl(16, \"ugly\"));\n",
          "            }\n",
          "        };\n",
          "        Predicate<Girl> predicate1 = Predicates.and(agePredicate, facePredicate);\n",
          "        Function<String, Girl> function1 = Functions.forMap(map);\n",
          "        Predicate<String> stringPredicate = Predicates.compose(predicate1, function1);\n",
          "        System.out.println(stringPredicate.apply(\"love\"));//true\n",
          "        System.out.println(stringPredicate.apply(\"miss\"));//false\n",
          "    }\n",
          "\n",
          "    /**\n"
        ],
        "line_number": 80,
        "start_line": 76,
        "end_line": 86
      },
      {
        "link": "https://github.com/pfichtner/jrunalyzer/blob/067c701f1f4de1950a14f5fa068eec60b7602d11/gpx-base/src/main/java/com/github/pfichtner/jrunalyser/base/datasource/DataSourceDatasourceFascadeAdapter.java\n",
        "code": [
          "\t}\n",
          "\n",
          "\t@Override\n",
          "\tpublic Optional<Statistics> loadBestSegment(Id id,\n",
          "\t\t\tSegmentationUnit segmentationUnit) throws IOException {\n",
          "\t\tFunction<Id, Track> loadSegmented = Functions.compose(\n",
          "\t\t\t\tcreateSegmentFunc(Segmenters\n",
          "\t\t\t\t\t\t.getFloatingSegmenter(segmentationUnit)),\n",
          "\t\t\t\tthis.loadTrack);\n",
          "\t\tOptional<HighlightableSegment> segment = getHlSegment(loadSegmented\n",
          "\t\t\t\t.apply(id));\n"
        ],
        "line_number": 112,
        "start_line": 108,
        "end_line": 118
      },
      {
        "link": "https://github.com/isi-vista/nlp-util/blob/cb65117b9a61bef2f4fffad9ee9a3c8ba5372650/common-core-open/src/main/java/edu/isi/nlp/parameters/ParameterAccessListener.java\n",
        "code": [
          "          return input.getClassName();\n",
          "        }\n",
          "      };\n",
          "\n",
          "  private static final Predicate<StackTraceElement> IS_THIS_CLASS =\n",
          "      compose(equalTo(\"edu.isi.nlp.parameters.ParameterAccessListener\"), CLASS_NAME);\n",
          "  private static final Predicate<StackTraceElement> IS_PARAMETERS_ITSELF =\n",
          "      compose(equalTo(\"edu.isi.nlp.parameters.Parameters\"), CLASS_NAME);\n",
          "  private static final Predicate<StackTraceElement> IS_THREAD_CLASS =\n",
          "      compose(equalTo(\"java.lang.Thread\"), CLASS_NAME);\n",
          "}\n"
        ],
        "line_number": 69,
        "start_line": 65,
        "end_line": 75
      },
      {
        "link": "https://github.com/BBN-E/bue-common-open/blob/d618652674d647867306e2e4b987a21b7c29c015/common-core-open/src/main/java/com/bbn/bue/common/parameters/ParameterAccessListener.java\n",
        "code": [
          "          return input.getClassName();\n",
          "        }\n",
          "      };\n",
          "\n",
          "  private static final Predicate<StackTraceElement> IS_THIS_CLASS =\n",
          "      compose(equalTo(\"com.bbn.bue.common.parameters.ParameterAccessListener\"), CLASS_NAME);\n",
          "  private static final Predicate<StackTraceElement> IS_PARAMETERS_ITSELF =\n",
          "      compose(equalTo(\"com.bbn.bue.common.parameters.Parameters\"), CLASS_NAME);\n",
          "  private static final Predicate<StackTraceElement> IS_THREAD_CLASS =\n",
          "      compose(equalTo(\"java.lang.Thread\"), CLASS_NAME);\n",
          "}\n"
        ],
        "line_number": 76,
        "start_line": 72,
        "end_line": 82
      },
      {
        "link": "https://github.com/WDsy/MyNote/blob/58a6ec542aa2138cdf77ba99ea4bbe0b694eb36f/MyNote-master/MyNote-master/framework/src/main/java/commons/google/base/Predicates_.java\n",
        "code": [
          "                put(\"miss\", new Girl(16, \"ugly\"));\n",
          "            }\n",
          "        };\n",
          "        Predicate<Girl> predicate1 = Predicates.and(agePredicate, facePredicate);\n",
          "        Function<String, Girl> function1 = Functions.forMap(map);\n",
          "        Predicate<String> stringPredicate = Predicates.compose(predicate1, function1);\n",
          "        System.out.println(stringPredicate.apply(\"love\"));//true\n",
          "        System.out.println(stringPredicate.apply(\"miss\"));//false\n",
          "    }\n",
          "\n",
          "    /**\n"
        ],
        "line_number": 80,
        "start_line": 76,
        "end_line": 86
      },
      {
        "link": "https://github.com/18965050/oasis/blob/e5f1cfa32b74fe37aaf0872c497f7c8502df052d/oasis-common-test/src/test/java/cn/xyz/chaos/guava/common/base/PredicateTest.java\n",
        "code": [
          " *\n",
          " */\n",
          "public class PredicateTest {\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.base.Predicates#compose(Predicate, Function)}\u00e6\u00b5\u008b\u00e8\u00af\u0095\n",
          "     */\n",
          "    @Test\n",
          "    public void testPredicateCompose() {\n",
          "        City city = new City(\"Austin,TX\", \"12345\", 250000, Climate.SUB_TROPICAL, 45.3);\n",
          "        State state = new State(\"Texas\", \"TX\", Sets.newHashSet(city), Region.SOUTHWEST);\n"
        ],
        "line_number": 40,
        "start_line": 36,
        "end_line": 46
      },
      {
        "link": "https://github.com/nuodb/migration-tools/blob/4a57cd0a77fb548073e63669af05fcdb7c6a36d4/core/src/main/java/com/nuodb/migrator/utils/Predicates.java\n",
        "code": [
          "\n",
          "    public static Predicate<Object> instanceOf(Class<?> clazz) {\n",
          "        return com.google.common.base.Predicates.instanceOf(clazz);\n",
          "    }\n",
          "\n",
          "    public static <A, B> Predicate<A> compose(Predicate<B> predicate, Function<A, ? extends B> function) {\n",
          "        return com.google.common.base.Predicates.compose(predicate, function);\n",
          "    }\n",
          "\n",
          "    public static <T> Predicate<T> and(Predicate<? super T>... components) {\n",
          "        return com.google.common.base.Predicates.and(components);\n"
        ],
        "line_number": 94,
        "start_line": 90,
        "end_line": 100
      },
      {
        "link": "https://github.com/arafat5549/SSFDemo/blob/5090e8897faf020d44fc1e3444d09f90cfdcb2ae/src/test/java/foo/GuavaDemo.java\n",
        "code": [
          "\t\tboolean result = and(not( in(list1_1) ), in(list2_1), in(list3_1)).apply(\"1\");\r\n",
          "\t\tSystem.out.println(result);  \r\n",
          "\t\t\r\n",
          "\t\t//4.\r\n",
          "\t\tList<String> list1_2 = Lists.newArrayList(\"A1\", \"A2\", \"A3\");\r\n",
          "\t\tboolean result2 = compose(in(list1_2), new Function<String, String>() {\r\n",
          "\t\t   public String apply(String from) {\r\n",
          "\t\t      return \"A\" + from;\r\n",
          "\t\t   }\r\n",
          "\t\t}).apply(\"1\");\r\n",
          "\t\tSystem.out.println(result2);  // true\r\n"
        ],
        "line_number": 131,
        "start_line": 127,
        "end_line": 137
      },
      {
        "link": "https://github.com/knoppiks/hap-java-client/blob/b07bcd1443eb35a4be188f8671a3a223f64ac120/src/main/java/de/knoppiks/hap/client/model/Operations.java\n",
        "code": [
          "        return OPERATIONS;\n",
          "    }\n",
          "\n",
          "    public static Optional<Operation> toOperation(Keyword keyword) {\n",
          "        return FluentIterable.from(OPERATIONS)\n",
          "                .filter(compose(equalTo(keyword), TO_KEYWORD))\n",
          "                .first();\n",
          "    }\n",
          "\n",
          "    private static class ToKeyword implements Function<Operation, Keyword> {\n",
          "        @Override\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      },
      {
        "link": "https://github.com/usc-isi-i2/nlp-util/blob/cb65117b9a61bef2f4fffad9ee9a3c8ba5372650/common-core-open/src/main/java/edu/isi/nlp/parameters/ParameterAccessListener.java\n",
        "code": [
          "          return input.getClassName();\n",
          "        }\n",
          "      };\n",
          "\n",
          "  private static final Predicate<StackTraceElement> IS_THIS_CLASS =\n",
          "      compose(equalTo(\"edu.isi.nlp.parameters.ParameterAccessListener\"), CLASS_NAME);\n",
          "  private static final Predicate<StackTraceElement> IS_PARAMETERS_ITSELF =\n",
          "      compose(equalTo(\"edu.isi.nlp.parameters.Parameters\"), CLASS_NAME);\n",
          "  private static final Predicate<StackTraceElement> IS_THREAD_CLASS =\n",
          "      compose(equalTo(\"java.lang.Thread\"), CLASS_NAME);\n",
          "}\n"
        ],
        "line_number": 69,
        "start_line": 65,
        "end_line": 75
      }
    ],
    "org.mockito.AdditionalAnswers.returnsSecondArg": [
      {
        "link": "https://github.com/senrigan/wnms/blob/267cbaf0a4bfcf2f66c121bcc5d8dd017d5a8ad3/mockito-master/mockito-master/test/org/mockitousage/stubbing/StubbingWithAdditionalAnswers.java\n",
        "code": [
          "    @Mock IMethods iMethods;\n",
          "\n",
          "    @Test\n",
          "    public void can_return_arguments_of_invocation() throws Exception {\n",
          "        given(iMethods.objectArgMethod(anyObject())).will(returnsFirstArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(0), anyObject(), anyString())).will(returnsSecondArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(1), anyObject(), anyString())).will(returnsLastArg());\n",
          "\n",
          "        assertThat(iMethods.objectArgMethod(\"first\")).isEqualTo(\"first\");\n",
          "        assertThat(iMethods.threeArgumentMethod(0, \"second\", \"whatever\")).isEqualTo(\"second\");\n",
          "        assertThat(iMethods.threeArgumentMethod(1, \"whatever\", \"last\")).isEqualTo(\"last\");\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      },
      {
        "link": "https://github.com/Tateology/java-corpus/blob/804cb203b0ffe57f22a1f5002a72fbadb38c3215/mockito/test/org/mockitousage/stubbing/StubbingWithAdditionalAnswers.java\n",
        "code": [
          "    @Mock IMethods iMethods;\n",
          "\n",
          "    @Test\n",
          "    public void can_return_arguments_of_invocation() throws Exception {\n",
          "        given(iMethods.objectArgMethod(anyObject())).will(returnsFirstArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(0), anyObject(), anyString())).will(returnsSecondArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(1), anyObject(), anyString())).will(returnsLastArg());\n",
          "\n",
          "        assertThat(iMethods.objectArgMethod(\"first\")).isEqualTo(\"first\");\n",
          "        assertThat(iMethods.threeArgumentMethod(0, \"second\", \"whatever\")).isEqualTo(\"second\");\n",
          "        assertThat(iMethods.threeArgumentMethod(1, \"whatever\", \"last\")).isEqualTo(\"last\");\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      },
      {
        "link": "https://github.com/logisticloon/MTP-defects4J/blob/781aad17d6b2b4a080a3c8fc65807fc63a3d5d8e/Source%20Code%20of%20Programs/Mockito/test/org/mockitousage/stubbing/StubbingWithAdditionalAnswers.java\n",
        "code": [
          "    @Mock IMethods iMethods;\n",
          "\n",
          "    @Test\n",
          "    public void can_return_arguments_of_invocation() throws Exception {\n",
          "        given(iMethods.objectArgMethod(anyObject())).will(returnsFirstArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(0), anyObject(), anyString())).will(returnsSecondArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(1), anyObject(), anyString())).will(returnsLastArg());\n",
          "\n",
          "        assertThat(iMethods.objectArgMethod(\"first\")).isEqualTo(\"first\");\n",
          "        assertThat(iMethods.threeArgumentMethod(0, \"second\", \"whatever\")).isEqualTo(\"second\");\n",
          "        assertThat(iMethods.threeArgumentMethod(1, \"whatever\", \"last\")).isEqualTo(\"last\");\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      },
      {
        "link": "https://github.com/sdogruyol/mockito/blob/220717f2923e84a6c0242e7880adaf527dd1fb45/test/org/mockitousage/stubbing/StubbingWithAdditionalAnswers.java\n",
        "code": [
          "    @Mock IMethods iMethods;\n",
          "\n",
          "    @Test\n",
          "    public void can_return_arguments_of_invocation() throws Exception {\n",
          "        given(iMethods.objectArgMethod(anyObject())).will(returnsFirstArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(0), anyObject(), anyString())).will(returnsSecondArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(1), anyObject(), anyString())).will(returnsLastArg());\n",
          "\n",
          "        assertThat(iMethods.objectArgMethod(\"first\")).isEqualTo(\"first\");\n",
          "        assertThat(iMethods.threeArgumentMethod(0, \"second\", \"whatever\")).isEqualTo(\"second\");\n",
          "        assertThat(iMethods.threeArgumentMethod(1, \"whatever\", \"last\")).isEqualTo(\"last\");\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      },
      {
        "link": "https://github.com/liudabingSjtu/MyMockito/blob/06eb23d3aa28c19066529762da4a92bd2f4f34cd/test/org/mockitousage/stubbing/StubbingWithAdditionalAnswers.java\n",
        "code": [
          "    @Mock IMethods iMethods;\n",
          "\n",
          "    @Test\n",
          "    public void can_return_arguments_of_invocation() throws Exception {\n",
          "        given(iMethods.objectArgMethod(anyObject())).will(returnsFirstArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(0), anyObject(), anyString())).will(returnsSecondArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(1), anyObject(), anyString())).will(returnsLastArg());\n",
          "\n",
          "        assertThat(iMethods.objectArgMethod(\"first\")).isEqualTo(\"first\");\n",
          "        assertThat(iMethods.threeArgumentMethod(0, \"second\", \"whatever\")).isEqualTo(\"second\");\n",
          "        assertThat(iMethods.threeArgumentMethod(1, \"whatever\", \"last\")).isEqualTo(\"last\");\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      },
      {
        "link": "https://github.com/xgdsmileboy/StateCoverLocator/blob/60ebef4726176058d0de92340eda1d172cb879d0/res/junitRes/mockito/mockito_1_buggy/test/org/mockitousage/stubbing/StubbingWithAdditionalAnswers.java\n",
        "code": [
          "    @Mock IMethods iMethods;\n",
          "\n",
          "    @Test\n",
          "    public void can_return_arguments_of_invocation() throws Exception {\n",
          "        given(iMethods.objectArgMethod(anyObject())).will(returnsFirstArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(0), anyObject(), anyString())).will(returnsSecondArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(1), anyObject(), anyString())).will(returnsLastArg());\n",
          "\n",
          "        assertThat(iMethods.objectArgMethod(\"first\")).isEqualTo(\"first\");\n",
          "        assertThat(iMethods.threeArgumentMethod(0, \"second\", \"whatever\")).isEqualTo(\"second\");\n",
          "        assertThat(iMethods.threeArgumentMethod(1, \"whatever\", \"last\")).isEqualTo(\"last\");\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      },
      {
        "link": "https://github.com/LineageOS/android_external_mockito/blob/660528bba08484360551da97a52069dc5562e7b0/test/org/mockitousage/stubbing/StubbingWithAdditionalAnswers.java\n",
        "code": [
          "    @Mock IMethods iMethods;\n",
          "\n",
          "    @Test\n",
          "    public void can_return_arguments_of_invocation() throws Exception {\n",
          "        given(iMethods.objectArgMethod(anyObject())).will(returnsFirstArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(0), anyObject(), anyString())).will(returnsSecondArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(1), anyObject(), anyString())).will(returnsLastArg());\n",
          "\n",
          "        assertThat(iMethods.objectArgMethod(\"first\")).isEqualTo(\"first\");\n",
          "        assertThat(iMethods.threeArgumentMethod(0, \"second\", \"whatever\")).isEqualTo(\"second\");\n",
          "        assertThat(iMethods.threeArgumentMethod(1, \"whatever\", \"last\")).isEqualTo(\"last\");\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      },
      {
        "link": "https://github.com/ITWOI/spoon-example/blob/450e59197ead3f9ba20527b801c48462a3f63b8d/test/Mockito-800012b/test/org/mockitousage/stubbing/StubbingWithAdditionalAnswers.java\n",
        "code": [
          "    @Mock IMethods iMethods;\n",
          "\n",
          "    @Test\n",
          "    public void can_return_arguments_of_invocation() throws Exception {\n",
          "        given(iMethods.objectArgMethod(anyObject())).will(returnsFirstArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(0), anyObject(), anyString())).will(returnsSecondArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(1), anyObject(), anyString())).will(returnsLastArg());\n",
          "\n",
          "        assertThat(iMethods.objectArgMethod(\"first\")).isEqualTo(\"first\");\n",
          "        assertThat(iMethods.threeArgumentMethod(0, \"second\", \"whatever\")).isEqualTo(\"second\");\n",
          "        assertThat(iMethods.threeArgumentMethod(1, \"whatever\", \"last\")).isEqualTo(\"last\");\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      },
      {
        "link": "https://github.com/peeracle/webrtc/blob/7db17c3b2bd7e42b23cc25a2fa574cd3d9e9f7ff/chromium/src/third_party/mockito/src/test/org/mockitousage/stubbing/StubbingWithAdditionalAnswers.java\n",
        "code": [
          "    @Mock IMethods iMethods;\n",
          "\n",
          "    @Test\n",
          "    public void can_return_arguments_of_invocation() throws Exception {\n",
          "        given(iMethods.objectArgMethod(anyObject())).will(returnsFirstArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(0), anyObject(), anyString())).will(returnsSecondArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(1), anyObject(), anyString())).will(returnsLastArg());\n",
          "\n",
          "        assertThat(iMethods.objectArgMethod(\"first\")).isEqualTo(\"first\");\n",
          "        assertThat(iMethods.threeArgumentMethod(0, \"second\", \"whatever\")).isEqualTo(\"second\");\n",
          "        assertThat(iMethods.threeArgumentMethod(1, \"whatever\", \"last\")).isEqualTo(\"last\");\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      },
      {
        "link": "https://github.com/kusumotolab/astor/blob/ccf255db50187594f69311076d31fc1f4da7cb1e/examples/mockito_22/test/org/mockitousage/stubbing/StubbingWithAdditionalAnswers.java\n",
        "code": [
          "    @Mock IMethods iMethods;\n",
          "\n",
          "    @Test\n",
          "    public void can_return_arguments_of_invocation() throws Exception {\n",
          "        given(iMethods.objectArgMethod(anyObject())).will(returnsFirstArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(0), anyObject(), anyString())).will(returnsSecondArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(1), anyObject(), anyString())).will(returnsLastArg());\n",
          "\n",
          "        assertThat(iMethods.objectArgMethod(\"first\")).isEqualTo(\"first\");\n",
          "        assertThat(iMethods.threeArgumentMethod(0, \"second\", \"whatever\")).isEqualTo(\"second\");\n",
          "        assertThat(iMethods.threeArgumentMethod(1, \"whatever\", \"last\")).isEqualTo(\"last\");\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      }
    ],
    "org.mockito.invocation.InvocationOnMock.getMethod": [
      {
        "link": "}https://github.com/sdogruyol/mockito/blob/220717f2923e84a6c0242e7880adaf527dd1fb45/src/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java\n",
        "code": [
          "        Object ret = delegate.answer(invocation);\n",
          "        if (ret != null) {\n",
          "            return ret;\n",
          "        }\n",
          "\n",
          "        Class<?> returnType = invocation.getMethod().getReturnType();\n",
          "        return returnValueFor(returnType);\n",
          "    }\n",
          "    \n",
          "    Object returnValueFor(Class<?> type) {\n",
          "        if (type == String.class) {\n"
        ],
        "line_number": 61,
        "start_line": 57,
        "end_line": 67
      },
      {
        "link": "https://github.com/wrvhage/Pig-Katta-basic-setup/blob/9a72dd0b0bdc99edf9d0e323f3c52d211ad0faee/katta/modules/katta-core/src/test/java/net/sf/katta/testutil/mockito/PrintStacktraceAnswer.java\n",
        "code": [
          " */\n",
          "public class PrintStacktraceAnswer implements Answer<Void> {\n",
          "\n",
          "  @Override\n",
          "  public Void answer(InvocationOnMock invocation) throws Throwable {\n",
          "    System.out.println(\"called \" + invocation.getMethod() + \" with arguments \"\n",
          "            + Arrays.asList(invocation.getArguments()));\n",
          "    StackTraceElement[] stackTrace = Thread.currentThread().getStackTrace();\n",
          "    for (StackTraceElement string : stackTrace) {\n",
          "      System.out.println(\"\\t\" + string.toString());\n",
          "    }\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      },
      {
        "link": "https://github.com/ISNing/TEMP/blob/b2c62861ee884196bd84d4e88c4a06bb976dcadc/Chromium/app/src/main/java/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n",
        "code": [
          "\n",
          "    /* (non-Javadoc)\n",
          "     * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)\n",
          "     */\n",
          "    public Object answer(InvocationOnMock invocation) {\n",
          "        if (isToStringMethod(invocation.getMethod())) {\n",
          "            Object mock = invocation.getMock();\n",
          "            MockName name = MockUtil.getMockName(mock);\n",
          "            if (name.isDefault()) {\n",
          "                return \"Mock for \" + MockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + \", hashCode: \" + mock.hashCode();\n",
          "            } else {\n"
        ],
        "line_number": 57,
        "start_line": 53,
        "end_line": 63
      },
      {
        "link": "https://github.com/Vimalraj1/platform_frameworks_base/blob/410e2aeaabb98092106983c02d3ebf8a182bf916/tests/utils/testutils/java/android/app/test/MockAnswerUtil.java\n",
        "code": [
          "     * exactly.\n",
          "     */\n",
          "    public static class AnswerWithArguments implements Answer<Object> {\n",
          "        @Override\n",
          "        public final Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "            Method method = invocation.getMethod();\n",
          "            try {\n",
          "                Method implementation = getClass().getMethod(\"answer\", method.getParameterTypes());\n",
          "                if (!implementation.getReturnType().equals(method.getReturnType())) {\n",
          "                    throw new RuntimeException(\"Found answer method does not have expected return \"\n",
          "                            + \"type. Expected: \" + method.getReturnType() + \", got \"\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "}https://github.com/brianwoo/cm11_grouper/blob/b23d9dd09915bf2c1a744113e507d3d7fc32f4bd/external/mockito/src/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java\n",
        "code": [
          "        Object ret = delegate.answer(invocation);\n",
          "        if (ret != null) {\n",
          "            return ret;\n",
          "        }\n",
          "\n",
          "        Class<?> returnType = invocation.getMethod().getReturnType();\n",
          "        return returnValueFor(returnType);\n",
          "    }\n",
          "    \n",
          "    Object returnValueFor(Class<?> type) {\n",
          "        if (type == String.class) {\n"
        ],
        "line_number": 61,
        "start_line": 57,
        "end_line": 67
      },
      {
        "link": "https://github.com/TeamAPR/tool/blob/b47ddbcaac1be30ef47a821c8f84744e58462032/astor/examples/mockito_22/src/org/mockito/internal/stubbing/defaultanswers/ReturnsMocks.java\n",
        "code": [
          "        Object ret = delegate.answer(invocation);\r\n",
          "        if (ret != null) {\r\n",
          "            return ret;\r\n",
          "        }\r\n",
          "            \r\n",
          "        return returnValueFor(invocation.getMethod().getReturnType());\r\n",
          "    }\r\n",
          "\r\n",
          "    Object returnValueFor(Class<?> clazz) {\r\n",
          "        if (!mockitoCore.isTypeMockable(clazz)) {\r\n",
          "            return null;\r\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "}https://github.com/LineageOS/android_external_mockito/blob/660528bba08484360551da97a52069dc5562e7b0/src/org/mockito/internal/stubbing/defaultanswers/ReturnsMocks.java\n",
        "code": [
          "        Object ret = delegate.answer(invocation);\r\n",
          "        if (ret != null) {\r\n",
          "            return ret;\r\n",
          "        }\r\n",
          "            \r\n",
          "        return returnValueFor(invocation.getMethod().getReturnType());\r\n",
          "    }\r\n",
          "\r\n",
          "    Object returnValueFor(Class<?> clazz) {\r\n",
          "        if (!ClassImposterizer.INSTANCE.canImposterise(clazz)) {\r\n",
          "            return null;\r\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      },
      {
        "link": "}https://github.com/DavidNovo/SampleServices/blob/d4c621a948ed5ad54fca7d8047547d94fb63d719/target/enunciate-scratch/enunciate64562666506286641078332/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java\n",
        "code": [
          "        Object ret = delegate.answer(invocation);\n",
          "        if (ret != null) {\n",
          "            return ret;\n",
          "        }\n",
          "\n",
          "        Class<?> returnType = invocation.getMethod().getReturnType();\n",
          "        return returnValueFor(returnType);\n",
          "    }\n",
          "    \n",
          "    Object returnValueFor(Class<?> type) {\n",
          "        if (type == String.class) {\n"
        ],
        "line_number": 61,
        "start_line": 57,
        "end_line": 67
      },
      {
        "link": "}https://github.com/hub-se/BugLoRD/blob/068db7d777dd09333694259f5a2c4a5bbe086007/spectra-generator/src/test/resources/Mockito12b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java\n",
        "code": [
          "        Object ret = delegate.answer(invocation);\n",
          "        if (ret != null) {\n",
          "            return ret;\n",
          "        }\n",
          "\n",
          "        Class<?> returnType = invocation.getMethod().getReturnType();\n",
          "        return returnValueFor(returnType);\n",
          "    }\n",
          "\n",
          "    Object returnValueFor(Class<?> type) {\n",
          "        if (type == String.class) {\n"
        ],
        "line_number": 57,
        "start_line": 53,
        "end_line": 63
      },
      {
        "link": "}https://github.com/brianwoo/cm11_grouper/blob/b23d9dd09915bf2c1a744113e507d3d7fc32f4bd/external/mockito/src/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java\n",
        "code": [
          "        Object ret = delegate.answer(invocation);\n",
          "        if (ret != null) {\n",
          "            return ret;\n",
          "        }\n",
          "\n",
          "        Class<?> returnType = invocation.getMethod().getReturnType();\n",
          "        return returnValueFor(returnType);\n",
          "    }\n",
          "    \n",
          "    Object returnValueFor(Class<?> type) {\n",
          "        if (type == String.class) {\n"
        ],
        "line_number": 61,
        "start_line": 57,
        "end_line": 67
      },
      {
        "link": "}https://github.com/gerfmarquez/DetroitLabsWeather/blob/74bd304ea400d613bc0ec68defa82c78935867e5/app/src/test/java/org/mockito/configuration/MockitoConfiguration.java\n",
        "code": [
          "public class MockitoConfiguration extends DefaultMockitoConfiguration {\n",
          "    public Answer<Object> getDefaultAnswer() {\n",
          "        return new ReturnsEmptyValues() {\n",
          "            @Override\n",
          "            public Object answer(InvocationOnMock inv) {\n",
          "                Class<?> type = inv.getMethod().getReturnType();\n",
          "                if (type.isAssignableFrom(Observable.class)) {\n",
          "                    return Observable.error(createException(inv));\n",
          "                } else if (type.isAssignableFrom(Single.class)) {\n",
          "                    return Single.error(createException(inv));\n",
          "                } else {\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      },
      {
        "link": "https://github.com/nans1899/Medscape-decompile/blob/26bbd3e603de315b31afcc64fe3f2503dc3de854/sources/org/mockito/internal/stubbing/defaultanswers/RetrieveGenericsForDefaultAnswers.java\n",
        "code": [
          "        r0 = findTypeFromGeneric(r4, (java.lang.reflect.TypeVariable) r1);\n",
          "     */\n",
          "    /* Code decompiled incorrectly, please refer to instructions dump. */\n",
          "    static java.lang.Object returnTypeForMockWithCorrectGenerics(org.mockito.invocation.InvocationOnMock r4, org.mockito.internal.stubbing.defaultanswers.RetrieveGenericsForDefaultAnswers.AnswerCallback r5) {\n",
          "        /*\n",
          "            java.lang.reflect.Method r0 = r4.getMethod()\n",
          "            java.lang.Class r0 = r0.getReturnType()\n",
          "            java.lang.reflect.Method r1 = r4.getMethod()\n",
          "            java.lang.reflect.Type r1 = r1.getGenericReturnType()\n",
          "            boolean r2 = r1 instanceof java.lang.reflect.TypeVariable\n",
          "            r3 = 0\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      },
      {
        "link": "https://github.com/Professor-Berni/android_frameworks_base/blob/83d44ada734d581f3ae308e43133ed09dbe431cb/tests/utils/testutils/java/android/app/test/MockAnswerUtil.java\n",
        "code": [
          "     * exactly.\n",
          "     */\n",
          "    public static class AnswerWithArguments implements Answer<Object> {\n",
          "        @Override\n",
          "        public final Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "            Method method = invocation.getMethod();\n",
          "            try {\n",
          "                Method implementation = getClass().getMethod(\"answer\", method.getParameterTypes());\n",
          "                if (!implementation.getReturnType().equals(method.getReturnType())) {\n",
          "                    throw new RuntimeException(\"Found answer method does not have expected return \"\n",
          "                            + \"type. Expected: \" + method.getReturnType() + \", got \"\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "https://github.com/SpoonLabs/astor/blob/bcc8463eeb00545f921f9216be694807014263ea/examples/mockito_22/src/org/mockito/internal/stubbing/defaultanswers/ReturnsMocks.java\n",
        "code": [
          "        Object ret = delegate.answer(invocation);\r\n",
          "        if (ret != null) {\r\n",
          "            return ret;\r\n",
          "        }\r\n",
          "            \r\n",
          "        return returnValueFor(invocation.getMethod().getReturnType());\r\n",
          "    }\r\n",
          "\r\n",
          "    Object returnValueFor(Class<?> clazz) {\r\n",
          "        if (!mockitoCore.isTypeMockable(clazz)) {\r\n",
          "            return null;\r\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "}https://github.com/hub-se/BugLoRD/blob/068db7d777dd09333694259f5a2c4a5bbe086007/spectra-generator/src/test/resources/Mockito12b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java\n",
        "code": [
          "        Object ret = delegate.answer(invocation);\n",
          "        if (ret != null) {\n",
          "            return ret;\n",
          "        }\n",
          "\n",
          "        Class<?> returnType = invocation.getMethod().getReturnType();\n",
          "        return returnValueFor(returnType);\n",
          "    }\n",
          "\n",
          "    Object returnValueFor(Class<?> type) {\n",
          "        if (type == String.class) {\n"
        ],
        "line_number": 57,
        "start_line": 53,
        "end_line": 63
      },
      {
        "link": "https://github.com/tusharjain95/rr_frameworks_base/blob/cd498d9faf13b4277653689b04a0f51327133874/tests/utils/testutils/java/android/app/test/MockAnswerUtil.java\n",
        "code": [
          "     * exactly.\n",
          "     */\n",
          "    public static class AnswerWithArguments implements Answer<Object> {\n",
          "        @Override\n",
          "        public final Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "            Method method = invocation.getMethod();\n",
          "            try {\n",
          "                Method implementation = getClass().getMethod(\"answer\", method.getParameterTypes());\n",
          "                if (!implementation.getReturnType().equals(method.getReturnType())) {\n",
          "                    throw new RuntimeException(\"Found answer method does not have expected return \"\n",
          "                            + \"type. Expected: \" + method.getReturnType() + \", got \"\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "https://github.com/Unknown-OS/frameworks_base/blob/019b74d56ac1ce5b99473d0449c2d6c8b4583e7d/tests/utils/testutils/java/android/app/test/MockAnswerUtil.java\n",
        "code": [
          "     * exactly.\n",
          "     */\n",
          "    public static class AnswerWithArguments implements Answer<Object> {\n",
          "        @Override\n",
          "        public final Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "            Method method = invocation.getMethod();\n",
          "            try {\n",
          "                Method implementation = getClass().getMethod(\"answer\", method.getParameterTypes());\n",
          "                if (!implementation.getReturnType().equals(method.getReturnType())) {\n",
          "                    throw new RuntimeException(\"Found answer method does not have expected return \"\n",
          "                            + \"type. Expected: \" + method.getReturnType() + \", got \"\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "}https://github.com/wanxiasijin/jianfei/blob/f33258a86419da47a808a7e5816a7bbed364007a/androidxjianfei/androidOne/build/intermediates/exploded-aar/e6a393973c4121d86d3d2956055a2de70eb7c8af/class/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java\n",
        "code": [
          "        Object ret = delegate.answer(invocation);\n",
          "        if (ret != null) {\n",
          "            return ret;\n",
          "        }\n",
          "\n",
          "        Class<?> returnType = invocation.getMethod().getReturnType();\n",
          "        return returnValueFor(returnType);\n",
          "    }\n",
          "    \n",
          "    Object returnValueFor(Class<?> type) {\n",
          "        if (type == String.class) {\n"
        ],
        "line_number": 61,
        "start_line": 57,
        "end_line": 67
      },
      {
        "link": "}https://github.com/alfonsodelavega/epsilonFork/blob/4101b0a3678674aee0b2764ed5b0c93954d016a8/tests/org.mockito_1.8.4/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java\n",
        "code": [
          "        Object ret = delegate.answer(invocation);\n",
          "        if (ret != null) {\n",
          "            return ret;\n",
          "        }\n",
          "\n",
          "        Class<?> returnType = invocation.getMethod().getReturnType();\n",
          "        return returnValueFor(returnType);\n",
          "    }\n",
          "    \n",
          "    Object returnValueFor(Class<?> type) {\n",
          "        if (type == String.class) {\n"
        ],
        "line_number": 57,
        "start_line": 53,
        "end_line": 63
      },
      {
        "link": "}https://github.com/yinquan529/platform-external-mockito/blob/34f80a94e45f7110ec3444c1d0ecfacc194d009a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java\n",
        "code": [
          "        Object ret = delegate.answer(invocation);\n",
          "        if (ret != null) {\n",
          "            return ret;\n",
          "        }\n",
          "\n",
          "        Class<?> returnType = invocation.getMethod().getReturnType();\n",
          "        return returnValueFor(returnType);\n",
          "    }\n",
          "    \n",
          "    Object returnValueFor(Class<?> type) {\n",
          "        if (type == String.class) {\n"
        ],
        "line_number": 61,
        "start_line": 57,
        "end_line": 67
      },
      {
        "link": "https://github.com/s1a2t3y4/mockito/blob/74e312b7a9236a43eb543bd3184607b75375bc40/src/main/java/org/mockito/internal/stubbing/defaultanswers/ForwardsInvocations.java\n",
        "code": [
          "    public ForwardsInvocations(Object delegatedObject) {\n",
          "        this.delegatedObject = delegatedObject ;\n",
          "    }\n",
          "\n",
          "    public Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "        Method mockMethod = invocation.getMethod();\n",
          "        \n",
          "        Object result = null;\n",
          "        \n",
          "        try {\n",
          "            Method delegateMethod = getDelegateMethod(mockMethod);\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "https://github.com/MobiDevOS/Android9.0/blob/1bef7c028b9ec8b777a021b61d92c6b268d3d258/tests/utils/testutils/java/android/app/test/MockAnswerUtil.java\n",
        "code": [
          "     * exactly.\n",
          "     */\n",
          "    public static class AnswerWithArguments implements Answer<Object> {\n",
          "        @Override\n",
          "        public final Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "            Method method = invocation.getMethod();\n",
          "            try {\n",
          "                Method implementation = getClass().getMethod(\"answer\", method.getParameterTypes());\n",
          "                if (!implementation.getReturnType().equals(method.getReturnType())) {\n",
          "                    throw new RuntimeException(\"Found answer method does not have expected return \"\n",
          "                            + \"type. Expected: \" + method.getReturnType() + \", got \"\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "}https://github.com/paulnunezm/BancaRemota/blob/541f8f2b4cff876d93800bfbad5f36395a48292d/app/src/androidTest/java/org/mockito/configuration/MockitoConfiguration.java\n",
        "code": [
          "        DefaultMockitoConfiguration {\n",
          "    public Answer<Object> getDefaultAnswer() {\n",
          "        return new ReturnsEmptyValues() {\n",
          "            @Override\n",
          "            public Object answer(InvocationOnMock inv) {\n",
          "                Class<?> type = inv.getMethod().getReturnType();\n",
          "                if (type.isAssignableFrom(Observable.class)) {\n",
          "                    return Observable.error(createException(inv));\n",
          "                } else if (type.isAssignableFrom(Single.class)) {\n",
          "                    return Single.error(createException(inv));\n",
          "                } else {\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 22
      },
      {
        "link": "}https://github.com/Hyacinth-Ali/epsilon-repo/blob/2c492152e30cbddaff74fe5143edbce43aa415b2/tests/org.mockito_1.8.4/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java\n",
        "code": [
          "        Object ret = delegate.answer(invocation);\n",
          "        if (ret != null) {\n",
          "            return ret;\n",
          "        }\n",
          "\n",
          "        Class<?> returnType = invocation.getMethod().getReturnType();\n",
          "        return returnValueFor(returnType);\n",
          "    }\n",
          "    \n",
          "    Object returnValueFor(Class<?> type) {\n",
          "        if (type == String.class) {\n"
        ],
        "line_number": 57,
        "start_line": 53,
        "end_line": 63
      },
      {
        "link": "}https://github.com/Hyacinth-Ali/epsilon-repo/blob/2c492152e30cbddaff74fe5143edbce43aa415b2/tests/org.mockito_1.8.4/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java\n",
        "code": [
          "        Object ret = delegate.answer(invocation);\n",
          "        if (ret != null) {\n",
          "            return ret;\n",
          "        }\n",
          "\n",
          "        Class<?> returnType = invocation.getMethod().getReturnType();\n",
          "        return returnValueFor(returnType);\n",
          "    }\n",
          "    \n",
          "    Object returnValueFor(Class<?> type) {\n",
          "        if (type == String.class) {\n"
        ],
        "line_number": 57,
        "start_line": 53,
        "end_line": 63
      },
      {
        "link": "}https://github.com/alfonsodelavega/epsilonFork/blob/4101b0a3678674aee0b2764ed5b0c93954d016a8/tests/org.mockito_1.8.4/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java\n",
        "code": [
          "        Object ret = delegate.answer(invocation);\n",
          "        if (ret != null) {\n",
          "            return ret;\n",
          "        }\n",
          "\n",
          "        Class<?> returnType = invocation.getMethod().getReturnType();\n",
          "        return returnValueFor(returnType);\n",
          "    }\n",
          "    \n",
          "    Object returnValueFor(Class<?> type) {\n",
          "        if (type == String.class) {\n"
        ],
        "line_number": 57,
        "start_line": 53,
        "end_line": 63
      },
      {
        "link": "https://github.com/mdhpuri355/Mockito/blob/fb5738f071ad516f628e78b4790684f19bba4ee3/src/main/java/org/mockito/internal/stubbing/defaultanswers/TriesToReturnSelf.java\n",
        "code": [
          "public class TriesToReturnSelf implements Answer<Object>, Serializable{\n",
          "\n",
          "    private final ReturnsEmptyValues defaultReturn = new ReturnsEmptyValues();\n",
          "\n",
          "    public Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "        Class<?> methodReturnType = invocation.getMethod().getReturnType();\n",
          "        Object mock = invocation.getMock();\n",
          "        Class<?> mockType = MockUtil.getMockHandler(mock).getMockSettings().getTypeToMock();\n",
          "\n",
          "        if (methodReturnType.isAssignableFrom(mockType)) {\n",
          "            return invocation.getMock();\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "}https://github.com/wanxiasijin/jianfei/blob/f33258a86419da47a808a7e5816a7bbed364007a/androidxjianfei/androidOne/build/intermediates/exploded-aar/e6a393973c4121d86d3d2956055a2de70eb7c8af/class/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java\n",
        "code": [
          "        Object ret = delegate.answer(invocation);\n",
          "        if (ret != null) {\n",
          "            return ret;\n",
          "        }\n",
          "\n",
          "        Class<?> returnType = invocation.getMethod().getReturnType();\n",
          "        return returnValueFor(returnType);\n",
          "    }\n",
          "    \n",
          "    Object returnValueFor(Class<?> type) {\n",
          "        if (type == String.class) {\n"
        ],
        "line_number": 61,
        "start_line": 57,
        "end_line": 67
      },
      {
        "link": "}https://github.com/DavidNovo/SampleServices/blob/d4c621a948ed5ad54fca7d8047547d94fb63d719/target/enunciate-scratch/enunciate64562666506286641078332/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java\n",
        "code": [
          "        Object ret = delegate.answer(invocation);\n",
          "        if (ret != null) {\n",
          "            return ret;\n",
          "        }\n",
          "\n",
          "        Class<?> returnType = invocation.getMethod().getReturnType();\n",
          "        return returnValueFor(returnType);\n",
          "    }\n",
          "    \n",
          "    Object returnValueFor(Class<?> type) {\n",
          "        if (type == String.class) {\n"
        ],
        "line_number": 61,
        "start_line": 57,
        "end_line": 67
      },
      {
        "link": "}https://github.com/Debug-2020/Answers-4112-46372-Mockito2/blob/b941501a5ff26ef0fb1b0074c65af10db8cb37b8/src/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java\n",
        "code": [
          "        Object ret = delegate.answer(invocation);\n",
          "        if (ret != null) {\n",
          "            return ret;\n",
          "        }\n",
          "\n",
          "        Class<?> returnType = invocation.getMethod().getReturnType();\n",
          "        return returnValueFor(returnType);\n",
          "    }\n",
          "    \n",
          "    Object returnValueFor(Class<?> type) {\n",
          "        if (type == String.class) {\n"
        ],
        "line_number": 60,
        "start_line": 56,
        "end_line": 66
      },
      {
        "link": "}https://github.com/brentvossler/javaprojects/blob/962f9af524e2eca1c3697c1b8f89dd7f3661605b/org/mockito/internal/stubbing/defaultanswers/ReturnsMocks.java\n",
        "code": [
          "        Object ret = delegate.answer(invocation);\n",
          "        if (ret != null) {\n",
          "            return ret;\n",
          "        }\n",
          "            \n",
          "        return returnValueFor(invocation.getMethod().getReturnType());\n",
          "    }\n",
          "\n",
          "    Object returnValueFor(Class<?> clazz) {\n",
          "        if (!ClassImposterizer.INSTANCE.canImposterise(clazz)) {\n",
          "            return null;\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      },
      {
        "link": "}https://github.com/yinquan529/platform-external-mockito/blob/34f80a94e45f7110ec3444c1d0ecfacc194d009a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java\n",
        "code": [
          "        Object ret = delegate.answer(invocation);\n",
          "        if (ret != null) {\n",
          "            return ret;\n",
          "        }\n",
          "\n",
          "        Class<?> returnType = invocation.getMethod().getReturnType();\n",
          "        return returnValueFor(returnType);\n",
          "    }\n",
          "    \n",
          "    Object returnValueFor(Class<?> type) {\n",
          "        if (type == String.class) {\n"
        ],
        "line_number": 61,
        "start_line": 57,
        "end_line": 67
      },
      {
        "link": "https://github.com/nans1899/Medscape-decompile/blob/26bbd3e603de315b31afcc64fe3f2503dc3de854/sources/org/mockito/internal/stubbing/defaultanswers/RetrieveGenericsForDefaultAnswers.java\n",
        "code": [
          "        r0 = findTypeFromGeneric(r4, (java.lang.reflect.TypeVariable) r1);\n",
          "     */\n",
          "    /* Code decompiled incorrectly, please refer to instructions dump. */\n",
          "    static java.lang.Object returnTypeForMockWithCorrectGenerics(org.mockito.invocation.InvocationOnMock r4, org.mockito.internal.stubbing.defaultanswers.RetrieveGenericsForDefaultAnswers.AnswerCallback r5) {\n",
          "        /*\n",
          "            java.lang.reflect.Method r0 = r4.getMethod()\n",
          "            java.lang.Class r0 = r0.getReturnType()\n",
          "            java.lang.reflect.Method r1 = r4.getMethod()\n",
          "            java.lang.reflect.Type r1 = r1.getGenericReturnType()\n",
          "            boolean r2 = r1 instanceof java.lang.reflect.TypeVariable\n",
          "            r3 = 0\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      },
      {
        "link": "https://github.com/lite-os/frameworks_base/blob/d05a0d63fcd21e44b7a0e51217b4455c15d956d5/tests/utils/testutils/java/android/app/test/MockAnswerUtil.java\n",
        "code": [
          "     * exactly.\n",
          "     */\n",
          "    public static class AnswerWithArguments implements Answer<Object> {\n",
          "        @Override\n",
          "        public final Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "            Method method = invocation.getMethod();\n",
          "            try {\n",
          "                Method implementation = getClass().getMethod(\"answer\", method.getParameterTypes());\n",
          "                if (!implementation.getReturnType().equals(method.getReturnType())) {\n",
          "                    throw new RuntimeException(\"Found answer method does not have expected return \"\n",
          "                            + \"type. Expected: \" + method.getReturnType() + \", got \"\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "}https://github.com/Debug-2020/Answers-4112-46372-Mockito2/blob/b941501a5ff26ef0fb1b0074c65af10db8cb37b8/src/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java\n",
        "code": [
          "        Object ret = delegate.answer(invocation);\n",
          "        if (ret != null) {\n",
          "            return ret;\n",
          "        }\n",
          "\n",
          "        Class<?> returnType = invocation.getMethod().getReturnType();\n",
          "        return returnValueFor(returnType);\n",
          "    }\n",
          "    \n",
          "    Object returnValueFor(Class<?> type) {\n",
          "        if (type == String.class) {\n"
        ],
        "line_number": 60,
        "start_line": 56,
        "end_line": 66
      },
      {
        "link": "https://github.com/garrykd/abc-n_frameworks_base/blob/31e76a1c299e7f969891de5e463e77026d99d3cb/tests/utils/testutils/java/android/app/test/MockAnswerUtil.java\n",
        "code": [
          "     * exactly.\n",
          "     */\n",
          "    public static class AnswerWithArguments implements Answer<Object> {\n",
          "        @Override\n",
          "        public final Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "            Method method = invocation.getMethod();\n",
          "            try {\n",
          "                Method implementation = getClass().getMethod(\"answer\", method.getParameterTypes());\n",
          "                if (!implementation.getReturnType().equals(method.getReturnType())) {\n",
          "                    throw new RuntimeException(\"Found answer method does not have expected return \"\n",
          "                            + \"type. Expected: \" + method.getReturnType() + \", got \"\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "}https://github.com/sdogruyol/mockito/blob/220717f2923e84a6c0242e7880adaf527dd1fb45/src/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java\n",
        "code": [
          "        Object ret = delegate.answer(invocation);\n",
          "        if (ret != null) {\n",
          "            return ret;\n",
          "        }\n",
          "\n",
          "        Class<?> returnType = invocation.getMethod().getReturnType();\n",
          "        return returnValueFor(returnType);\n",
          "    }\n",
          "    \n",
          "    Object returnValueFor(Class<?> type) {\n",
          "        if (type == String.class) {\n"
        ],
        "line_number": 61,
        "start_line": 57,
        "end_line": 67
      },
      {
        "link": "https://github.com/AOSP-CAF/platform_frameworks_base/blob/ad8cf0d19fdbbca339b6b22865ce0fbd61737431/tests/utils/testutils/java/android/app/test/MockAnswerUtil.java\n",
        "code": [
          "     * exactly.\n",
          "     */\n",
          "    public static class AnswerWithArguments implements Answer<Object> {\n",
          "        @Override\n",
          "        public final Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "            Method method = invocation.getMethod();\n",
          "            try {\n",
          "                Method implementation = getClass().getMethod(\"answer\", method.getParameterTypes());\n",
          "                if (!implementation.getReturnType().equals(method.getReturnType())) {\n",
          "                    throw new RuntimeException(\"Found answer method does not have expected return \"\n",
          "                            + \"type. Expected: \" + method.getReturnType() + \", got \"\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "https://github.com/AOSOP/frameworks_base/blob/4adcd2d6910e06613296b2f1e681158bbd764f55/tests/utils/testutils/java/android/app/test/MockAnswerUtil.java\n",
        "code": [
          "     * exactly.\n",
          "     */\n",
          "    public static class AnswerWithArguments implements Answer<Object> {\n",
          "        @Override\n",
          "        public final Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "            Method method = invocation.getMethod();\n",
          "            try {\n",
          "                Method implementation = getClass().getMethod(\"answer\", method.getParameterTypes());\n",
          "                if (!implementation.getReturnType().equals(method.getReturnType())) {\n",
          "                    throw new RuntimeException(\"Found answer method does not have expected return \"\n",
          "                            + \"type. Expected: \" + method.getReturnType() + \", got \"\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "https://github.com/snoblind/winterface/blob/e80f2919460c5bd7212b3b25212cbbf57703f832/winterface-rhino/src/test/java/com/github/snoblind/winterface/rhino/RhinoDocumentTest.java\n",
        "code": [
          "\n",
          "public class RhinoDocumentTest {\n",
          "\n",
          "\tprivate static final Answer<Object> ANSWER = new Answer<Object>() {\n",
          "\t\tpublic Object answer(InvocationOnMock invocation) throws Throwable {\n",
          "\t\t\tfinal Method method = invocation.getMethod();\n",
          "\t\t\tfinal Object[] arguments = invocation.getArguments();\n",
          "\t\t\tif (arguments.length == 0) {\n",
          "\t\t\t\tif (method.getName().equals(\"finalize\")) {\n",
          "\t\t\t\t\treturn null;\n",
          "\t\t\t\t}\n"
        ],
        "line_number": 24,
        "start_line": 20,
        "end_line": 30
      }
    ],
    "com.google.common.collect.FluentIterable.from": [
      {
        "link": "https://github.com/Eliminater74/com.google.android.tvlauncher/blob/e8284f9970d77a05042a57e9c2173856af7c4246/saved/sources/com/google/common/collect/FluentIterable.java\n",
        "code": [
          "\n",
          "    private Iterable<E> getDelegate() {\n",
          "        return this.iterableDelegate.mo22987or((PrimesBatteryConfigurations) this);\n",
          "    }\n",
          "\n",
          "    public static <E> FluentIterable<E> from(final Iterable<E> iterable) {\n",
          "        if (iterable instanceof FluentIterable) {\n",
          "            return (FluentIterable) iterable;\n",
          "        }\n",
          "        return new FluentIterable<E>(iterable) {\n",
          "            public Iterator<E> iterator() {\n"
        ],
        "line_number": 35,
        "start_line": 31,
        "end_line": 41
      },
      {
        "link": "https://github.com/petrubear/wiremock/blob/3826df7c08646af8a4fb4aaf9b293a02d7a5fae7/src/main/java/com/github/tomakehurst/wiremock/common/UniqueFilenameGenerator.java\n",
        "code": [
          "        URI uri = URI.create(request.getUrl());\n",
          "        Iterable<String> uriPathNodes = on(\"/\").omitEmptyStrings().split(uri.getPath());\n",
          "        int nodeCount = size(uriPathNodes);\n",
          "\n",
          "        String pathPart = nodeCount > 0 ?\n",
          "                Joiner.on(\"-\").join(from(uriPathNodes).skip(nodeCount - min(nodeCount, 2))) :\n",
          "                \"(root)\";\n",
          "\n",
          "\n",
          "        return new StringBuilder(prefix)\n",
          "                .append(\"-\")\n"
        ],
        "line_number": 37,
        "start_line": 33,
        "end_line": 43
      },
      {
        "link": "https://github.com/MontiCore/cd4analysis/blob/0f71349b70c3b7dffdac9c59e72fffb7524769c3/src/main/java/de/monticore/cdbasis/_symboltable/ICDBasisArtifactScope.java\n",
        "code": [
          "  }\n",
          "\n",
          "  default List<String> getRemainingNameForResolveDown(String symbolName) {\n",
          "    final String packageAS = this.getPackageName();\n",
          "    final com.google.common.collect.FluentIterable<String> packageASNameParts = com.google.common.collect.FluentIterable\n",
          "        .from(de.se_rwth.commons.Splitters.DOT.omitEmptyStrings().split(packageAS));\n",
          "    \n",
          "    final com.google.common.collect.FluentIterable<String> symbolNameParts = com.google.common.collect.FluentIterable\n",
          "        .from(de.se_rwth.commons.Splitters.DOT.split(symbolName));\n",
          "    String remainingSymbolName = symbolName;\n",
          "    \n"
        ],
        "line_number": 24,
        "start_line": 20,
        "end_line": 30
      },
      {
        "link": "https://github.com/Eliminater74/com.google.android.tvlauncher/blob/e8284f9970d77a05042a57e9c2173856af7c4246/src/main/java/com/google/common/collect/FluentIterable.java\n",
        "code": [
          "\n",
          "    private Iterable<E> getDelegate() {\n",
          "        return this.iterableDelegate.mo22987or((PrimesBatteryConfigurations) this);\n",
          "    }\n",
          "\n",
          "    public static <E> FluentIterable<E> from(final Iterable<E> iterable) {\n",
          "        if (iterable instanceof FluentIterable) {\n",
          "            return (FluentIterable) iterable;\n",
          "        }\n",
          "        return new FluentIterable<E>(iterable) {\n",
          "            public Iterator<E> iterator() {\n"
        ],
        "line_number": 35,
        "start_line": 31,
        "end_line": 41
      },
      {
        "link": "https://github.com/18965050/oasis/blob/e5f1cfa32b74fe37aaf0872c497f7c8502df052d/oasis-common-test/src/test/java/cn/xyz/chaos/guava/common/collection/FluentIterablesTest.java\n",
        "code": [
          "     *\n",
          "     * @throws Exception\n",
          "     */\n",
          "    @Test\n",
          "    public void testFilter() throws Exception {\n",
          "        Iterable<Person> personsFilteredByAge = FluentIterable.from(personList).filter(new Predicate<Person>() {\n",
          "            @Override\n",
          "            public boolean apply(Person input) {\n",
          "                return input.getAge() > 31;\n",
          "            }\n",
          "        });\n"
        ],
        "line_number": 52,
        "start_line": 48,
        "end_line": 58
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/FluentIterableUtil.java\n",
        "code": [
          "*/ \n",
          "public static <T> org.apache.commons.collections4.FluentIterable<T> empty(){\n",
          "\treturn org.apache.commons.collections4.FluentIterable.empty();\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.FluentIterable#from(com.google.common.collect.FluentIterable<E>)}\n",
          "*@see com.google.common.collect.FluentIterable#from(com.google.common.collect.FluentIterable<E>)\n",
          "*<code>public static <E> com.google.common.collect.FluentIterable<E> com.google.common.collect.FluentIterable.from(com.google.common.collect.FluentIterable<E>)\n",
          "*from(com.google.common.collect.FluentIterable<E> p0)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 92,
        "start_line": 88,
        "end_line": 98
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/EArrayUtil.java\n",
        "code": [
          "*/ \n",
          "public static <E extends java.lang.Comparable<? super E> > com.google.common.collect.ImmutableSortedSet<E> copyOf(E... p0){\n",
          "\treturn com.google.common.collect.ImmutableSortedSet.copyOf(p0);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.FluentIterable#from(E...)}\n",
          "*@see com.google.common.collect.FluentIterable#from(E...)\n",
          "*<code>public static <E> com.google.common.collect.FluentIterable<E> com.google.common.collect.FluentIterable.from(E[])\n",
          "*from(E... p0)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 131,
        "start_line": 127,
        "end_line": 137
      },
      {
        "link": "https://github.com/skwayne/Wiremock/blob/c1e3a7d2d0c11579c8f05092a738155e96bb3128/src/main/java/com/github/tomakehurst/wiremock/common/UniqueFilenameGenerator.java\n",
        "code": [
          "        URI uri = URI.create(request.getUrl());\n",
          "        Iterable<String> uriPathNodes = on(\"/\").omitEmptyStrings().split(uri.getPath());\n",
          "        int nodeCount = size(uriPathNodes);\n",
          "\n",
          "        String pathPart = nodeCount > 0 ?\n",
          "                Joiner.on(\"-\").join(from(uriPathNodes).skip(nodeCount - min(nodeCount, 2))) :\n",
          "                \"(root)\";\n",
          "\n",
          "\n",
          "        return new StringBuilder(prefix)\n",
          "                .append(\"-\")\n"
        ],
        "line_number": 37,
        "start_line": 33,
        "end_line": 43
      },
      {
        "link": "https://github.com/dansimpson/chronos/blob/9cd0b92a36355536838cd3ae571338149a2dda70/chronos-api/src/main/java/org/ds/chronos/timeline/stream/DataStream.java\n",
        "code": [
          "public class DataStream<O> {\n",
          "\n",
          "\tprivate final FluentIterable<O> source;\n",
          "\n",
          "\tpublic DataStream(Iterable<O> source) {\n",
          "\t\tthis.source = FluentIterable.from(source);\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * Apply a filter condition\n",
          "\t * \n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      },
      {
        "link": "https://github.com/MontiCore/cd4analysis/blob/0f71349b70c3b7dffdac9c59e72fffb7524769c3/src/test/java/de/monticore/testtypeimporter/_symboltable/ITestTypeImporterArtifactScope.java\n",
        "code": [
          "public interface ITestTypeImporterArtifactScope extends ITestTypeImporterArtifactScopeTOP {\n",
          "  \n",
          "  default public List<String> getRemainingNameForResolveDown(String symbolName) {\n",
          "    final String packageAS = this.getPackageName();\n",
          "    final com.google.common.collect.FluentIterable<String> packageASNameParts = com.google.common.collect.FluentIterable\n",
          "        .from(de.se_rwth.commons.Splitters.DOT.omitEmptyStrings().split(packageAS));\n",
          "    \n",
          "    final com.google.common.collect.FluentIterable<String> symbolNameParts = com.google.common.collect.FluentIterable\n",
          "        .from(de.se_rwth.commons.Splitters.DOT.split(symbolName));\n",
          "    String remainingSymbolName = symbolName;\n",
          "    \n"
        ],
        "line_number": 12,
        "start_line": 8,
        "end_line": 18
      }
    ],
    "com.google.common.collect.Ordering.from": [
      {
        "link": "https://github.com/yxxcoder/Guava-Learning/blob/3bb3294a44c5b0d7d51fe1aceff4bf60af3b1ae4/src/main/java/ch01_basic/ordering/OrderingExplained.java\n",
        "code": [
          "        // usingToStringOrdering:[eva, jerry, jerry, john, peter]\n",
          "        System.out.println(\"usingToStringOrdering:\"+ usingToStringOrdering.sortedCopy(list));\n",
          "\n",
          "\n",
          "        // \u00e6\u008a\u008a\u00e7\u00bb\u0099\u00e5\u00ae\u009a\u00e7\u009a\u0084Comparator\u00e8\u00bd\u00ac\u00e5\u008c\u0096\u00e4\u00b8\u00ba\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e5\u0099\u00a8\n",
          "        Ordering<String> fromOrdering = Ordering.from(new Comparator<String>() {\n",
          "            public int compare(String o1, String o2) {\n",
          "                return o1.hashCode() - o2.hashCode() ;\n",
          "            }\n",
          "        });\n",
          "        // fromOrdering:[eva, john, jerry, jerry, peter]\n"
        ],
        "line_number": 71,
        "start_line": 67,
        "end_line": 77
      },
      {
        "link": "https://github.com/xuminwlt/j360-dubbo-app-all/blob/fc32b0b074177a30d558ae8f0714ae4c05a7e47f/j360-dubbo-modules/src/main/java/me/j360/dubbo/modules/util/collection/CollectionUtil.java\n",
        "code": [
          "\n",
          "\t/**\n",
          "\t * \u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e6\u009c\u0080\u00e9\u00ab\u0098\u00e7\u009a\u0084N\u00e4\u00b8\u00aa\u00e5\u00af\u00b9\u00e8\u00b1\u00a1, guava\u00e5\u00b7\u00b2\u00e4\u00bc\u0098\u00e5\u008c\u0096.\n",
          "\t */\n",
          "\tpublic static <T extends Comparable> List<T> topN(Iterable<T> coll, int n, Comparator<? super T> comp) {\n",
          "\t\treturn Ordering.from(comp).greatestOf(coll, n);\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * \u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e6\u009c\u0080\u00e4\u00bd\u008e\u00e7\u009a\u0084N\u00e4\u00b8\u00aa\u00e5\u00af\u00b9\u00e8\u00b1\u00a1, guava\u00e5\u00b7\u00b2\u00e4\u00bc\u0098\u00e5\u008c\u0096.\n",
          "\t */\n"
        ],
        "line_number": 168,
        "start_line": 164,
        "end_line": 174
      },
      {
        "link": "https://github.com/AppSecAI-TEST/tent/blob/e1149ca6a56b565dddbf9ace05eeaa97b937770e/common/utils/src/main/java/me/chongfeng/common/utils/collection/CollectionUtil.java\n",
        "code": [
          "\n",
          "\t/**\n",
          "\t * \u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e6\u009c\u0080\u00e9\u00ab\u0098\u00e7\u009a\u0084N\u00e4\u00b8\u00aa\u00e5\u00af\u00b9\u00e8\u00b1\u00a1, guava\u00e5\u00b7\u00b2\u00e4\u00bc\u0098\u00e5\u008c\u0096.\n",
          "\t */\n",
          "\tpublic static <T extends Comparable> List<T> topN(Iterable<T> coll, int n, Comparator<? super T> comp) {\n",
          "\t\treturn Ordering.from(comp).greatestOf(coll, n);\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * \u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e6\u009c\u0080\u00e4\u00bd\u008e\u00e7\u009a\u0084N\u00e4\u00b8\u00aa\u00e5\u00af\u00b9\u00e8\u00b1\u00a1, guava\u00e5\u00b7\u00b2\u00e4\u00bc\u0098\u00e5\u008c\u0096.\n",
          "\t */\n"
        ],
        "line_number": 173,
        "start_line": 169,
        "end_line": 179
      },
      {
        "link": "https://github.com/taiwan902/bp-src/blob/341a34ebf43ab71bea0becf343795e241641ef6a/source/Class_47441.java\n",
        "code": [
          "\n",
          "public class Class_47441\n",
          "implements Class_14683,\n",
          "Class_40184 {\n",
          "    private final List Field_47442 = Lists.newArrayList();\n",
          "    private static final Ordering Field_47443 = Ordering.from((Comparator)new Class_12131());\n",
          "\n",
          "    public List Method_47444() {\n",
          "        return this.Field_47442;\n",
          "    }\n",
          "\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "https://github.com/huoyanyan/mycollect/blob/806b56a84d324d1c040b964089113467b80283e1/samplepro/mixdemo/src/main/java/util/j360/dubbo/modules/collection/CollectionUtil.java\n",
        "code": [
          "\n",
          "\t/**\n",
          "\t * \u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e6\u009c\u0080\u00e9\u00ab\u0098\u00e7\u009a\u0084N\u00e4\u00b8\u00aa\u00e5\u00af\u00b9\u00e8\u00b1\u00a1, guava\u00e5\u00b7\u00b2\u00e4\u00bc\u0098\u00e5\u008c\u0096.\n",
          "\t */\n",
          "\tpublic static <T extends Comparable> List<T> topN(Iterable<T> coll, int n, Comparator<? super T> comp) {\n",
          "\t\treturn Ordering.from(comp).greatestOf(coll, n);\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * \u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e6\u009c\u0080\u00e4\u00bd\u008e\u00e7\u009a\u0084N\u00e4\u00b8\u00aa\u00e5\u00af\u00b9\u00e8\u00b1\u00a1, guava\u00e5\u00b7\u00b2\u00e4\u00bc\u0098\u00e5\u008c\u0096.\n",
          "\t */\n"
        ],
        "line_number": 168,
        "start_line": 164,
        "end_line": 174
      },
      {
        "link": "https://github.com/tguduru/guava/blob/1d9c02fc065133625f59627e12349ab200482c2a/src/main/java/org/tguduru/guava/collections/OrderingDemo.java\n",
        "code": [
          "        System.out.println(naturalOrdering.immutableSortedCopy(states)); // this prints the same order as the order is\n",
          "                                                                         // natural.\n",
          "        final Ordering<Object> arbitraryOrdering = Ordering.arbitrary();\n",
          "        System.out.println(arbitraryOrdering.immutableSortedCopy(states));// thia one order arbitrarily.\n",
          "\n",
          "        final Ordering<String> customOrdering = Ordering.from(new Comparator<String>() {\n",
          "            @Override\n",
          "            public int compare(final String o1, final String o2) {\n",
          "                return o1.hashCode() > o2.hashCode() == true ? 1 : 0;\n",
          "            }\n",
          "        });\n"
        ],
        "line_number": 23,
        "start_line": 19,
        "end_line": 29
      },
      {
        "link": "https://github.com/zqhxuyuan/tutorials/blob/72740ec130a15331b0b2428b9750099c47073052/middleware/src/main/java/org/tguduru/guava/collections/OrderingDemo.java\n",
        "code": [
          "        System.out.println(naturalOrdering.immutableSortedCopy(states)); // this prints the same order as the order is\n",
          "                                                                         // natural.\n",
          "        final Ordering<Object> arbitraryOrdering = Ordering.arbitrary();\n",
          "        System.out.println(arbitraryOrdering.immutableSortedCopy(states));// thia one order arbitrarily.\n",
          "\n",
          "        final Ordering<String> customOrdering = Ordering.from(new Comparator<String>() {\n",
          "            @Override\n",
          "            public int compare(final String o1, final String o2) {\n",
          "                return o1.hashCode() > o2.hashCode() == true ? 1 : 0;\n",
          "            }\n",
          "        });\n"
        ],
        "line_number": 23,
        "start_line": 19,
        "end_line": 29
      },
      {
        "link": "https://github.com/AsukiLiu/Java-Common/blob/b17f23e956e2e635f27d3b46dec9bc597779fd11/tool/src/test/java/org/asuki/tool/guava/OrderingTest.java\n",
        "code": [
          "        assertThat(expectedOrder.isOrdered(toSort), is(false));\n",
          "        assertThat(expectedOrder.isOrdered(sortedCopy), is(true));\n",
          "\n",
          "        List<Double> numbers = newArrayList(0.2, 0.3, 0.1);\n",
          "\n",
          "        assertThat(orderByLength.from(comparator).isOrdered(numbers), is(false));\n",
          "\n",
          "        assertThat(digitOrdering.sortedCopy(numbers),\n",
          "                equalTo(newArrayList(0.1, 0.2, 0.3)));\n",
          "        assertThat(digitOrdering.reverse().sortedCopy(numbers),\n",
          "                equalTo(newArrayList(0.3, 0.2, 0.1)));\n"
        ],
        "line_number": 95,
        "start_line": 91,
        "end_line": 101
      },
      {
        "link": "https://github.com/18965050/oasis/blob/e5f1cfa32b74fe37aaf0872c497f7c8502df052d/oasis-common-test/src/test/java/cn/xyz/chaos/guava/common/collection/OrderingTest.java\n",
        "code": [
          "    public void testReverseSort() {\n",
          "        City city1 = cityBuilder.population(100000).build();\n",
          "        City city2 = cityBuilder.population(250000).build();\n",
          "        City city3 = cityBuilder.population(350000).build();\n",
          "        List<City> cities = Lists.newArrayList(city3, city2, city1);\n",
          "        Ordering<City> cityOrdering = Ordering.from(cityByPopulation);\n",
          "        Collections.sort(cities, cityOrdering);\n",
          "        // In natural sorting order\n",
          "        assertThat(cities.get(0), is(city1));\n",
          "        Collections.sort(cities, cityOrdering.reverse());\n",
          "        assertThat(cities.get(0), is(city3));\n"
        ],
        "line_number": 86,
        "start_line": 82,
        "end_line": 92
      },
      {
        "link": "https://github.com/hooj0/guava-example/blob/3c30cf3bcbd07310f8398eaffe6aefcc42da8435/src/java/main/com/cnblogs/hoojo/ordering/OrderingTest.java\n",
        "code": [
          "<td width=\"199\"><a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Ordering.html#usingToString()\"><tt>usingToString()</tt></a></td>\r\n",
          "<td width=\"419\">\u00e6\u008c\u0089\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e5\u00bd\u00a2\u00e5\u00bc\u008f\u00e5\u0081\u009a\u00e5\u00ad\u0097\u00e5\u0085",
          "\u00b8\u00e6\u008e\u0092\u00e5\u00ba\u008f[lexicographical ordering]</td>\r\n",
          "</tr>\r\n",
          "<tr>\r\n",
          "<td width=\"199\"><a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Ordering.html#from(java.util.Comparator)\"><tt>from(Comparator)</tt></a></td>\r\n",
          "<td width=\"419\">\u00e6\u008a\u008a\u00e7\u00bb\u0099\u00e5\u00ae\u009a\u00e7\u009a\u0084Comparator\u00e8\u00bd\u00ac\u00e5\u008c\u0096\u00e4\u00b8\u00ba\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e5\u0099\u00a8</td>\r\n",
          "</tr>\r\n",
          "</tbody>\r\n",
          "</table>\r\n",
          "\r\n"
        ],
        "line_number": 33,
        "start_line": 29,
        "end_line": 39
      }
    ],
    "com.google.common.collect.Ordering.arbitrary": [
      {
        "link": "https://github.com/tguduru/guava/blob/1d9c02fc065133625f59627e12349ab200482c2a/src/main/java/org/tguduru/guava/collections/OrderingDemo.java\n",
        "code": [
          "    public static void main(final String[] args) {\n",
          "        final Ordering<String> naturalOrdering = Ordering.natural();\n",
          "        final List<String> states = Lists.newArrayList(\"KS\", \"MO\", \"OH\", \"NY\", \"SC\");\n",
          "        System.out.println(naturalOrdering.immutableSortedCopy(states)); // this prints the same order as the order is\n",
          "                                                                         // natural.\n",
          "        final Ordering<Object> arbitraryOrdering = Ordering.arbitrary();\n",
          "        System.out.println(arbitraryOrdering.immutableSortedCopy(states));// thia one order arbitrarily.\n",
          "\n",
          "        final Ordering<String> customOrdering = Ordering.from(new Comparator<String>() {\n",
          "            @Override\n",
          "            public int compare(final String o1, final String o2) {\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/mawenlong1/java-demo/blob/e6e57b2bd46587f8bfdde1226161eb3f210b597c/springboot/src/main/java/com/mwl/guava/OrderingTest.java\n",
        "code": [
          "                                                      \"neron\");\n",
          "        System.out.println(list);\n",
          "\n",
          "        Ordering<String> naturalOrdering = Ordering.natural();\n",
          "        Ordering<Object> usingToStringOrdering = Ordering.usingToString();\n",
          "        Ordering<Object> arbitraryOrdering = Ordering.arbitrary();\n",
          "\n",
          "        System.out.println(\"naturalOrdering:\" + naturalOrdering.sortedCopy(list));\n",
          "        System.out.println(\"usingToStringOrdering:\" + usingToStringOrdering.sortedCopy(list));\n",
          "        System.out.println(\"arbitraryOrdering:\" + arbitraryOrdering.sortedCopy(list));\n",
          "    }\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "https://github.com/zhaobohao/workspace/blob/8528d0fae03e74a94d447212d328d3dd8579acc6/guava-study/src/test/java/com/guava/baseutils/OrderingTest.java\n",
        "code": [
          "\n",
          "        System.out.println(\"list:\"+ list);\n",
          "\n",
          "        Ordering<String> naturalOrdering = Ordering.natural();\n",
          "        Ordering<Object> usingToStringOrdering = Ordering.usingToString();\n",
          "        Ordering<Object> arbitraryOrdering = Ordering.arbitrary();\n",
          "\n",
          "        log.info(\"naturalOrdering:\"+ naturalOrdering.sortedCopy(list));\n",
          "        log.info(\"usingToStringOrdering:\"+ usingToStringOrdering.sortedCopy(list));\n",
          "        log.info(\"arbitraryOrdering:\"+ arbitraryOrdering.sortedCopy(list));\n",
          "\n"
        ],
        "line_number": 24,
        "start_line": 20,
        "end_line": 30
      },
      {
        "link": "https://github.com/hooj0/guava-example/blob/3c30cf3bcbd07310f8398eaffe6aefcc42da8435/src/java/main/com/cnblogs/hoojo/ordering/OrderingTest.java\n",
        "code": [
          "\t\tlist.sort(Ordering.allEqual());\r\n",
          "\t\tSystem.out.println(list); // [1, 3, 2, 7, null, 5, 4, 9, null, 6, 3, 7, 1]\r\n",
          "\t\t\r\n",
          "\t\t// \u00e7\u009b\u00b8\u00e5\u0090\u008c\u00e7\u009a\u0084\u00e5\u0085",
          "\u0083\u00e7\u00b4\u00a0\u00e6\u008e\u0092\u00e4\u00b8\u0080\u00e8\u00b5\u00b7\r\n",
          "\t\tlist.sort(Ordering.arbitrary());\r\n",
          "\t\tSystem.out.println(list); // [null, null, 9, 1, 1, 6, 7, 7, 4, 5, 2, 3, 3]\r\n",
          "\t\t\r\n",
          "\t\t// \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e5\u0085",
          "\u0083\u00e7\u00b4\u00a0\u00e7\u009a\u0084\u00e9\u00a1\u00ba\u00e5\u00ba\u008f\u00e8\u00bf\u009b\u00e6\u008e\u0092\u00e5\u00ba\u008f\r\n",
          "\t\tlist = Lists.newArrayList(1, 3, 2, 7, 5, 4, 9, 6, 3, 7, 1, 8);\r\n"
        ],
        "line_number": 275,
        "start_line": 271,
        "end_line": 281
      },
      {
        "link": "https://github.com/stevens515/ExerciseSuite/blob/00ab002736311f2487a917827617028b918441b3/GuavaStudy/src/main/java/com/cenrise/GuavaOrdering.java\n",
        "code": [
          "\n",
          "        System.out.println(\"list:\"+ list);\n",
          "\n",
          "        Ordering<String> naturalOrdering = Ordering.natural().reverse();\n",
          "        Ordering<Object> usingToStringOrdering = Ordering.usingToString();\n",
          "        Ordering<Object> arbitraryOrdering = Ordering.arbitrary();\n",
          "\n",
          "        System.out.println(\"naturalOrdering:\"+ naturalOrdering.sortedCopy(list));\n",
          "        System.out.println(\"usingToStringOrdering:\"+ usingToStringOrdering.sortedCopy(list));\n",
          "        System.out.println(\"arbitraryOrdering:\"+ arbitraryOrdering.sortedCopy(list));\n",
          "\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "https://github.com/zqhxuyuan/tutorials/blob/72740ec130a15331b0b2428b9750099c47073052/middleware/src/main/java/org/tguduru/guava/collections/OrderingDemo.java\n",
        "code": [
          "    public static void main(final String[] args) {\n",
          "        final Ordering<String> naturalOrdering = Ordering.natural();\n",
          "        final List<String> states = Lists.newArrayList(\"KS\", \"MO\", \"OH\", \"NY\", \"SC\");\n",
          "        System.out.println(naturalOrdering.immutableSortedCopy(states)); // this prints the same order as the order is\n",
          "                                                                         // natural.\n",
          "        final Ordering<Object> arbitraryOrdering = Ordering.arbitrary();\n",
          "        System.out.println(arbitraryOrdering.immutableSortedCopy(states));// thia one order arbitrarily.\n",
          "\n",
          "        final Ordering<String> customOrdering = Ordering.from(new Comparator<String>() {\n",
          "            @Override\n",
          "            public int compare(final String o1, final String o2) {\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/OpenMods/OpenModsLib/blob/239bb8ad9421837cecebe77479b5acfd1583ceda/src/main/java/openmods/inventory/comparator/ComparatorComponents.java\n",
        "code": [
          "import net.minecraft.item.ItemStack;\n",
          "\n",
          "public class ComparatorComponents {\n",
          "\n",
          "\t@SuppressWarnings(\"unchecked\")\n",
          "\tprivate static <T> Ordering<T> arbitrary() {\n",
          "\t\treturn (Ordering<T>)Ordering.arbitrary();\n",
          "\t}\n",
          "\n",
          "\tpublic static final Ordering<ItemStack> ITEM_COMPARATOR = arbitrary().onResultOf(ItemStack::getItem).nullsLast();\n",
          "\n"
        ],
        "line_number": 9,
        "start_line": 5,
        "end_line": 15
      },
      {
        "link": "https://github.com/suxiaoxu/guavastudy/blob/545adfa25a7ef5bf4e0736e00eb435bb7c33e69e/toolstudy/src/main/java/com/googel/common/OrderIngTest.java\n",
        "code": [
          "\n",
          "        System.out.println(\"list:\"+ list);\n",
          "\n",
          "        Ordering<String> naturalOrdering = Ordering.natural();\n",
          "        Ordering<Object> usingToStringOrdering = Ordering.usingToString();\n",
          "        Ordering<Object> arbitraryOrdering = Ordering.arbitrary();\n",
          "\n",
          "        System.out.println(\"naturalOrdering:\"+ naturalOrdering.sortedCopy(list));\n",
          "        System.out.println(\"usingToStringOrdering:\"+ usingToStringOrdering.sortedCopy(list));\n",
          "        System.out.println(\"arbitraryOrdering:\"+ arbitraryOrdering.sortedCopy(list));\n",
          "\n"
        ],
        "line_number": 27,
        "start_line": 23,
        "end_line": 33
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/OrderingUtil.java\n",
        "code": [
          "*/ \n",
          "public static com.google.common.collect.Ordering<java.lang.Object> allEqual(){\n",
          "\treturn com.google.common.collect.Ordering.allEqual();\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.Ordering#arbitrary()}\n",
          "*@see com.google.common.collect.Ordering#arbitrary()\n",
          "*<code>public static com.google.common.collect.Ordering<java.lang.Object> com.google.common.collect.Ordering.arbitrary()\n",
          "*arbitrary()</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 27,
        "start_line": 23,
        "end_line": 33
      },
      {
        "link": "https://github.com/Jorch72/OpenModsLib/blob/a8c86f66238c828e21b16d60aa3a3ceb75c6deb7/src/main/java/openmods/inventory/comparator/ComparatorComponents.java\n",
        "code": [
          "import net.minecraft.item.ItemStack;\n",
          "\n",
          "public class ComparatorComponents {\n",
          "\n",
          "\t@SuppressWarnings(\"unchecked\")\n",
          "\tprivate static <T> Ordering<T> arbitrary() {\n",
          "\t\treturn (Ordering<T>)Ordering.arbitrary();\n",
          "\t}\n",
          "\n",
          "\tpublic static final Ordering<ItemStack> ITEM_COMPARATOR = arbitrary().onResultOf(ItemStack::getItem).nullsLast();\n",
          "\n"
        ],
        "line_number": 9,
        "start_line": 5,
        "end_line": 15
      }
    ],
    "org.assertj.core.internal.Objects.assertNotNull": [
      {
        "link": "https://github.com/HubSpot/algebra/blob/653440de598c2648589579536f3f308ffede11bb/algebra-testing/src/main/java/com/hubspot/assertj/algebra/api/ResultAssert.java\n",
        "code": [
          "  ResultAssert(final Result<T, E> actual) {\n",
          "    super(actual, ResultAssert.class);\n",
          "  }\n",
          "\n",
          "  public ResultAssert<T, E> isOk() {\n",
          "    Objects.instance().assertNotNull(info, actual);\n",
          "    if (!actual.isOk()) {\n",
          "      throw failures.failure(info, ResultShouldBeOk.shouldBeOk(actual));\n",
          "    }\n",
          "    return this;\n",
          "  }\n"
        ],
        "line_number": 23,
        "start_line": 19,
        "end_line": 29
      },
      {
        "link": "https://github.com/dherges/ok-testing-reloaded/blob/28977f96ff02d6a02a684c9dccc77ccc19507e02/src/test/java/ext/assertj/RecordedRequestAssert.java\n",
        "code": [
          "  public RecordedRequestAssert(RecordedRequest actual) {\n",
          "    super(actual, RecordedRequestAssert.class);\n",
          "  }\n",
          "\n",
          "  public RecordedRequestAssert isHttp(String verb, String path) {\n",
          "    objects.assertNotNull(info, actual);\n",
          "    strings.assertEqualsIgnoringCase(info, actual.getMethod(), verb);\n",
          "    strings.assertEqualsIgnoringCase(info, actual.getPath(), path);\n",
          "\n",
          "    return this;\n",
          "  }\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "https://github.com/peter-tackage/github-client-demo/blob/bd9cd5c7461ed59f2536b8f9fcfbddefefc9fd13/app/src/androidTest/java/com/moac/android/mvpgithubclient/test/asserts/Subscribers.java\n",
        "code": [
          "    public static Subscribers instance() {\n",
          "        return INSTANCE;\n",
          "    }\n",
          "\n",
          "    public <T> void assertObservedOnMainThread(AssertionInfo info, TestEventSubscriber<T> actual) {\n",
          "        assertNotNull(info, actual);\n",
          "\n",
          "        if (actual.getLastSeenThread() == AndroidUtils.getAndroidMainThread()) {\n",
          "            return;\n",
          "        }\n",
          "        throw failures.failure(info, shouldBeSame(actual.getLastSeenThread(), AndroidUtils.getAndroidMainThread()));\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "https://github.com/almondtools/assertj-extensions/blob/3794e78d5366d5b0cbdf9ceec6ac4029701380ba/src/main/java/net/amygdalum/extensions/assertj/strings/Strings.java\n",
        "code": [
          "\t\treturn INSTANCE;\n",
          "\t}\n",
          "\n",
          "\tpublic void assertContainsWildcardPattern(AssertionInfo info, CharSequence actual, CharSequence wildcardstring) {\n",
          "\t\tcheckPatternIsNotNull(wildcardstring);\n",
          "\t\tassertNotNull(info, actual);\n",
          "\n",
          "\t\tif (!containsWildcardPattern(actual, wildcardstring)) {\n",
          "\t\t\tthrow failures.failure(info, shouldContainPattern(actual, wildcardstring));\n",
          "\t\t}\n",
          "\t}\n"
        ],
        "line_number": 37,
        "start_line": 33,
        "end_line": 43
      },
      {
        "link": "https://github.com/dherges/ok-testing-reloaded/blob/28977f96ff02d6a02a684c9dccc77ccc19507e02/src/test/java/ext/assertj/ResponseAssert.java\n",
        "code": [
          "  public ResponseAssert(Response<?> actual) {\n",
          "    super(actual, ResponseAssert.class);\n",
          "  }\n",
          "\n",
          "  public ResponseAssert isStatusCode(int statusCode) {\n",
          "    objects.assertNotNull(info, actual);\n",
          "    integers.assertEqual(info, actual.code(), statusCode);\n",
          "\n",
          "    return this;\n",
          "  }\n",
          "\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      },
      {
        "link": "https://github.com/nivertius/introspectable/blob/60e1ad29bed6ef43c37074f9465254ee730eb882/src/test/java/org/perfectable/introspection/bean/PropertyAssert.java\n",
        "code": [
          "\tpublic static <VALUE> PropertyAssert<VALUE> assertThat(Property<?, VALUE> actual) {\n",
          "\t\treturn new PropertyAssert<>(actual);\n",
          "\t}\n",
          "\n",
          "\tpublic PropertyAssert<VALUE> hasName(String expectedName) {\n",
          "\t\tobjects.assertNotNull(info, actual);\n",
          "\t\tobjects.assertEqual(info, actual.name(), expectedName);\n",
          "\t\treturn this;\n",
          "\t}\n",
          "\n",
          "\tpublic PropertyAssert<VALUE> hasTypeExactly(Class<?> expectedType) {\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/invesdwin/invesdwin-util/blob/526206b574970d9191a509a4de7c26c3ceac1cd4/invesdwin-util-parent/invesdwin-util/src/main/java/de/invesdwin/util/assertions/type/StringAssert.java\n",
        "code": [
          "        }\n",
          "        throw failures.failure(info, ShouldBeNullOrBlank.shouldBeNullOrBlank(actual));\n",
          "    }\n",
          "\n",
          "    private void assertBlank(final AssertionInfo info, final CharSequence actual) {\n",
          "        assertNotNull(info, actual);\n",
          "        if (Strings.isBlank(actual)) {\n",
          "            return;\n",
          "        }\n",
          "        throw failures.failure(info, ShouldBeBlank.shouldBeBlank(actual));\n",
          "    }\n"
        ],
        "line_number": 46,
        "start_line": 42,
        "end_line": 52
      },
      {
        "link": "https://github.com/bjones993/denominator/blob/c565e3b8c6043051252e0947029511f9ac5d306f/model/src/test/java/denominator/assertj/ResourceRecordSetAssert.java\n",
        "code": [
          "    return this;\n",
          "  }\n",
          "\n",
          "  public ResourceRecordSetAssert hasWeight(int expected) {\n",
          "    isNotNull();\n",
          "    objects.assertNotNull(info, actual.weighted());\n",
          "    integers.assertEqual(info, actual.weighted().weight(), expected);\n",
          "    return this;\n",
          "  }\n",
          "\n",
          "  public ResourceRecordSetAssert isValid() {\n"
        ],
        "line_number": 83,
        "start_line": 79,
        "end_line": 89
      },
      {
        "link": "https://github.com/trickl/assertj-json/blob/bc2fc27b919e8d430ed71e88441df6854e236bd1/src/main/java/com/trickl/assertj/core/internal/Json.java\n",
        "code": [
          "      AssertionInfo info,\n",
          "      JsonContainer actual,\n",
          "      JsonContainer expected,\n",
          "      JSONComparator comparator,\n",
          "      PostComparisonAction postComparisonAction) {\n",
          "    assertNotNull(info, actual);\n",
          "    assertNotNull(info, actual);\n",
          "    try {\n",
          "      List<Delta<String>> diffs = jsonDiff.diff(actual, expected, comparator);\n",
          "      if (diffs.isEmpty()) {\n",
          "        return;\n"
        ],
        "line_number": 59,
        "start_line": 55,
        "end_line": 65
      },
      {
        "link": "https://github.com/HNygard/election-eva-admin/blob/662d7ff2a20f1587eaee4ca1c63036a2308bbefd/admin/admin-backend-testtools/src/main/java/no/valg/eva/admin/test/VersionedEntityAssert.java\n",
        "code": [
          "\t\treturn new VersionedEntityAssert(actual);\n",
          "\t}\n",
          "\n",
          "\tpublic VersionedEntityAssert hasPk() {\n",
          "\t\tLong pk = actual.getPk();\n",
          "\t\tinstance().assertNotNull(info, pk);\n",
          "\t\treturn this;\n",
          "\t}\n",
          "\n",
          "\tpublic VersionedEntityAssert hasAuditTimestamp() {\n",
          "\t\tDateTime auditTimestamp = actual.getAuditTimestamp();\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      }
    ],
    "com.google.common.collect.Sets.newConcurrentHashSet": [
      {
        "link": "https://github.com/jts8257/Spring-Security/blob/50b4c9164516efdcf808bb2450d92f5b46d18b90/src/main/java/com/example/security/security/ApplicationUserRole.java\n",
        "code": [
          "import java.util.Set;\n",
          "\n",
          "import static com.example.security.security.ApplicationUserPermission.*;\n",
          "\n",
          "public enum ApplicationUserRole {\n",
          "    STUDENT(Sets.newConcurrentHashSet()),\n",
          "    ADMIN(Sets.newHashSet(COURSE_READ, COURSE_WRITE, STUDENT_READ, STUDENT_WRITE));\n",
          "\n",
          "    private final Set<ApplicationUserPermission> permissions;\n",
          "\n",
          "    ApplicationUserRole(Set<ApplicationUserPermission> permissions) {\n"
        ],
        "line_number": 9,
        "start_line": 5,
        "end_line": 15
      },
      {
        "link": "https://github.com/nikosnikolaidis/jackrabbit-oak/blob/0e9e4ff42fedcead8a923059b477bb08282c448a/oak-core-spi/src/main/java/org/apache/jackrabbit/oak/spi/gc/DelegatingGCMonitor.java\n",
        "code": [
          "    /**\n",
          "     * New instance with an initial set of delegates (which cannot be unregistered).\n",
          "     * @param gcMonitors\n",
          "     */\n",
          "    public DelegatingGCMonitor(@NotNull Collection<? extends GCMonitor> gcMonitors) {\n",
          "        this.gcMonitors = newConcurrentHashSet();\n",
          "        this.gcMonitors.addAll(gcMonitors);\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * New instance without any delegate.\n"
        ],
        "line_number": 43,
        "start_line": 39,
        "end_line": 49
      },
      {
        "link": "https://github.com/carloscaldas/jackrabbit-oak/blob/e877da9de05d2cebe2a3f539cf575d862ea0d466/testingJackRabit/oak-core-spi/src/main/java/org/apache/jackrabbit/oak/spi/gc/DelegatingGCMonitor.java\n",
        "code": [
          "    /**\n",
          "     * New instance with an initial set of delegates (which cannot be unregistered).\n",
          "     * @param gcMonitors\n",
          "     */\n",
          "    public DelegatingGCMonitor(@NotNull Collection<? extends GCMonitor> gcMonitors) {\n",
          "        this.gcMonitors = newConcurrentHashSet();\n",
          "        this.gcMonitors.addAll(gcMonitors);\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * New instance without any delegate.\n"
        ],
        "line_number": 43,
        "start_line": 39,
        "end_line": 49
      },
      {
        "link": "https://github.com/KrOySi/ArchWare-Source/blob/a9f9287b76d2469ae422506a1fdc8dca89d6ed2c/com/viaversion/viaversion/protocols/protocol1_9to1_8/storage/ClientChunks.java\n",
        "code": [
          "import com.viaversion.viaversion.api.connection.UserConnection;\n",
          "import java.util.Set;\n",
          "\n",
          "public class ClientChunks\n",
          "extends StoredObject {\n",
          "    private final Set<Long> loadedChunks = Sets.newConcurrentHashSet();\n",
          "    private final Set<Long> bulkChunks = Sets.newConcurrentHashSet();\n",
          "\n",
          "    public ClientChunks(UserConnection connection) {\n",
          "        super(connection);\n",
          "    }\n"
        ],
        "line_number": 15,
        "start_line": 11,
        "end_line": 21
      },
      {
        "link": "https://github.com/JetBrains/adt-tools-base/blob/e5faa7ab0f000cee3de4673250585d277c6ec929/build-system/gradle-core/src/main/java/com/android/build/gradle/shrinker/PostProcessingData.java\n",
        "code": [
          " * <p>Many edges can only be added to the graph, once the whole class structure is known. That's why\n",
          " * we record nodes that need \"additional attention\" for later, when reading input classes.\n",
          " */\n",
          "class PostProcessingData<T> {\n",
          "    @NonNull\n",
          "    private final Set<T> virtualMethods = Sets.newConcurrentHashSet();\n",
          "    @NonNull\n",
          "    private final Set<T> multipleInheritance = Sets.newConcurrentHashSet();\n",
          "    @NonNull\n",
          "    private final Set<T> interfaceInheritance = Sets.newConcurrentHashSet();\n",
          "    @NonNull\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      },
      {
        "link": "https://github.com/dearworld/learnDemo/blob/8de18fd4e096d42c63ef4fcde70945d8911a3665/src/main/java/com/example/demo/collection/Test6.java\n",
        "code": [
          "import com.google.common.collect.Sets;\n",
          "\n",
          "public class Test6 {\n",
          "\tpublic static void main(String[] args) {\n",
          "\t\t\n",
          "\t\tSet<String> sets = Sets.newConcurrentHashSet();\n",
          "\t\tsets.add(\"java\");\n",
          "\t\tsets.add(\"python\");\n",
          "\t\tsets.add(\"go\");\n",
          "\t\tSystem.out.println(sets);\n",
          "\t\t\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": " */https://github.com/ytempest/gradle-source-3.2.1/blob/2957cc9a46826f8f72851c7e1c88caffc677df7c/gradle-core-3.1.0.jar_dir/gradle-core-3.1.0/52bded9389c25f568914b1ebf31a5d18/com/android/build/gradle/shrinker/PostProcessingData.java\n",
        "code": [
          "/*    */   private final Set<T> multipleInheritance;\n",
          "/*    */   private final Set<T> interfaceInheritance;\n",
          "/*    */   \n",
          "/*    */   PostProcessingData()\n",
          "/*    */   {\n",
          "/* 31 */     virtualMethods = Sets.newConcurrentHashSet();\n",
          "/* 32 */     multipleInheritance = Sets.newConcurrentHashSet();\n",
          "/* 33 */     interfaceInheritance = Sets.newConcurrentHashSet();\n",
          "/*    */   }\n",
          "/*    */   \n",
          "/* 36 */   private final Set<UnresolvedReference<T>> unresolvedReferences = Sets.newConcurrentHashSet();\n"
        ],
        "line_number": 15,
        "start_line": 11,
        "end_line": 21
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/SetUtil.java\n",
        "code": [
          "*/ \n",
          "public static <K,V> java.util.Set<V> getValuesAsSet(org.apache.commons.collections4.MultiValuedMap<K, V> p0,K p1){\n",
          "\treturn org.apache.commons.collections4.MultiMapUtils.getValuesAsSet(p0,p1);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.Sets#newConcurrentHashSet(java.lang.Iterable<? extends E>)}\n",
          "*@see com.google.common.collect.Sets#newConcurrentHashSet(java.lang.Iterable<? extends E>)\n",
          "*<code>public static <E> java.util.Set<E> com.google.common.collect.Sets.newConcurrentHashSet(java.lang.Iterable<? extends E>)\n",
          "*newConcurrentHashSet(java.lang.Iterable<? extends E> p0)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 287,
        "start_line": 283,
        "end_line": 293
      },
      {
        "link": "https://github.com/godlockin/searchHandler/blob/4c35c2e7f72bec91fb6a88405ee92a6414981617/src/main/java/searchhandler/common/EnterpriseQueue.java\n",
        "code": [
          "import java.util.Set;\n",
          "import java.util.concurrent.ConcurrentLinkedDeque;\n",
          "\n",
          "@Component\n",
          "public class EnterpriseQueue {\n",
          "    private static Set<String> baseSet = Sets.newConcurrentHashSet();\n",
          "    private static Set<String> cacheSet = Sets.newConcurrentHashSet();\n",
          "    private static Set<String> allEnterprise = Sets.newConcurrentHashSet();\n",
          "    private static ConcurrentLinkedDeque<String> queue = new ConcurrentLinkedDeque<>();\n",
          "\n",
          "    public static boolean recordBaseNames(String name) {\n"
        ],
        "line_number": 11,
        "start_line": 7,
        "end_line": 17
      },
      {
        "link": "https://github.com/oryjk/camunda_flow/blob/256125f6c624c297f84c2805074d54637849547d/src/main/java/com/betalpha/fosun/model/Ballot.java\n",
        "code": [
          "\n",
          "@Data\n",
          "public class Ballot implements Serializable {\n",
          "\n",
          "    private static final long serialVersionUID = -2549330207692318924L;\n",
          "    private Set<String> approve = Sets.newConcurrentHashSet();\n",
          "    private Set<String> reject = Sets.newConcurrentHashSet();\n",
          "    private Set<String> continues = Sets.newConcurrentHashSet();\n",
          "\n",
          "}\n"
        ],
        "line_number": 12,
        "start_line": 8,
        "end_line": 17
      }
    ],
    "org.mockito.plugins.MockMaker.resetMock": [
      {
        "link": "https://github.com/aosp-caf-upstream/platform_external_mockito/blob/dd85ed517bd4ea380b918fc68c925a65c697cf05/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "        }\n",
          "\n",
          "        return mock;\n",
          "    }\n",
          "\n",
          "    public static <T> void resetMock(T mock) {\n",
          "        MockHandler oldHandler = getMockHandler(mock);\n",
          "        MockCreationSettings settings = oldHandler.getMockSettings();\n",
          "        MockHandler newHandler = createMockHandler(settings);\n",
          "\n",
          "        mockMaker.resetMock(mock, newHandler, settings);\n"
        ],
        "line_number": 44,
        "start_line": 40,
        "end_line": 50
      },
      {
        "link": "https://github.com/Jebry/DataField/blob/b980202c24093d8c2725bdcfe27ac42e80f1d945/powermock-api/powermock-api-mockito2/src/main/java/org/powermock/api/mockito/mockmaker/PowerMockMaker.java\n",
        "code": [
          "            return mockMaker.getHandler(mock);\n",
          "        }\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public void resetMock(Object mock, MockHandler newHandler, MockCreationSettings settings) {\n",
          "        mockMaker.resetMock(mock, newHandler, settings);\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public TypeMockability isTypeMockable(Class<?> type) {\n"
        ],
        "line_number": 63,
        "start_line": 59,
        "end_line": 69
      },
      {
        "link": "https://github.com/subhanshuja/ofa/blob/84e319101d4a1200657337dcdf9ed3857fc59e03/chromium/src/third_party/mockito/src/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "        }\n",
          "\n",
          "        return mock;\n",
          "    }\n",
          "\n",
          "    public static <T> void resetMock(T mock) {\n",
          "        InternalMockHandler oldHandler = (InternalMockHandler) getMockHandler(mock);\n",
          "        MockCreationSettings settings = oldHandler.getMockSettings();\n",
          "        MockHandler newHandler = createMockHandler(settings);\n",
          "\n",
          "        mockMaker.resetMock(mock, newHandler, settings);\n"
        ],
        "line_number": 44,
        "start_line": 40,
        "end_line": 50
      },
      {
        "link": "https://github.com/MacianYuan/rp3288-21-5inch/blob/1b42bd9dd61e2cecc64443ce3073d838676e40af/external/mockito/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "        }\n",
          "\n",
          "        return mock;\n",
          "    }\n",
          "\n",
          "    public static <T> void resetMock(T mock) {\n",
          "        InternalMockHandler oldHandler = (InternalMockHandler) getMockHandler(mock);\n",
          "        MockCreationSettings settings = oldHandler.getMockSettings();\n",
          "        MockHandler newHandler = createMockHandler(settings);\n",
          "\n",
          "        mockMaker.resetMock(mock, newHandler, settings);\n"
        ],
        "line_number": 44,
        "start_line": 40,
        "end_line": 50
      },
      {
        "link": "https://github.com/haidaros/defects4j-mockito/blob/a2bfe90f3d8115210f1306b521099f593d32e180/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "        }\n",
          "\n",
          "        return mock;\n",
          "    }\n",
          "\n",
          "    public static <T> void resetMock(T mock) {\n",
          "        InternalMockHandler oldHandler = (InternalMockHandler) getMockHandler(mock);\n",
          "        MockCreationSettings settings = oldHandler.getMockSettings();\n",
          "        MockHandler newHandler = createMockHandler(settings);\n",
          "\n",
          "        mockMaker.resetMock(mock, newHandler, settings);\n"
        ],
        "line_number": 44,
        "start_line": 40,
        "end_line": 50
      },
      {
        "link": "https://github.com/s1a2t3y4/mockito/blob/74e312b7a9236a43eb543bd3184607b75375bc40/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "        }\n",
          "\n",
          "        return mock;\n",
          "    }\n",
          "\n",
          "    public <T> void resetMock(T mock) {\n",
          "        InternalMockHandler oldHandler = (InternalMockHandler) getMockHandler(mock);\n",
          "        MockCreationSettings settings = oldHandler.getMockSettings();\n",
          "        MockHandler newHandler = new MockHandlerFactory().create(settings);\n",
          "\n",
          "        mockMaker.resetMock(mock, newHandler, settings);\n"
        ],
        "line_number": 41,
        "start_line": 37,
        "end_line": 47
      },
      {
        "link": "https://github.com/Jebry/DataField/blob/b980202c24093d8c2725bdcfe27ac42e80f1d945/powermock-api/powermock-api-mockito/src/main/java/org/powermock/api/mockito/internal/mockmaker/PowerMockMaker.java\n",
        "code": [
          "            return cglibMockMaker.getHandler(mock);\n",
          "        }\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public void resetMock(Object mock, MockHandler newHandler, MockCreationSettings settings) {\n",
          "        cglibMockMaker.resetMock(mock, newHandler, settings);\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * It needs to extend InternalMockHandler because Mockito requires the type to be of InternalMockHandler and not MockHandler\n"
        ],
        "line_number": 67,
        "start_line": 63,
        "end_line": 73
      },
      {
        "link": "https://github.com/soundarya0493/Mockito-Java9/blob/1c85f5662ccf04387efa8e2ad25dcc390b0fd59d/base/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "        }\n",
          "\n",
          "        return mock;\n",
          "    }\n",
          "\n",
          "    public static <T> void resetMock(T mock) {\n",
          "        MockHandler oldHandler = getMockHandler(mock);\n",
          "        MockCreationSettings settings = oldHandler.getMockSettings();\n",
          "        MockHandler newHandler = createMockHandler(settings);\n",
          "\n",
          "        mockMaker.resetMock(mock, newHandler, settings);\n"
        ],
        "line_number": 44,
        "start_line": 40,
        "end_line": 50
      },
      {
        "link": "https://github.com/uqam22/mockito/blob/2b2f41b8d5baf3377137c015944be1ad5713046c/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "        }\n",
          "\n",
          "        return mock;\n",
          "    }\n",
          "\n",
          "    public static <T> void resetMock(T mock) {\n",
          "        MockHandler oldHandler = getMockHandler(mock);\n",
          "        MockCreationSettings settings = oldHandler.getMockSettings();\n",
          "        MockHandler newHandler = createMockHandler(settings);\n",
          "\n",
          "        mockMaker.resetMock(mock, newHandler, settings);\n"
        ],
        "line_number": 44,
        "start_line": 40,
        "end_line": 50
      },
      {
        "link": "https://github.com/kiwibrowser/src/blob/ad4fdb6d6e87d5587e4d9b54c6f159ffa055b67d/third_party/mockito/src/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "        }\n",
          "\n",
          "        return mock;\n",
          "    }\n",
          "\n",
          "    public static <T> void resetMock(T mock) {\n",
          "        InternalMockHandler oldHandler = (InternalMockHandler) getMockHandler(mock);\n",
          "        MockCreationSettings settings = oldHandler.getMockSettings();\n",
          "        MockHandler newHandler = createMockHandler(settings);\n",
          "\n",
          "        mockMaker.resetMock(mock, newHandler, settings);\n"
        ],
        "line_number": 44,
        "start_line": 40,
        "end_line": 50
      }
    ],
    "com.google.common.collect.ComparisonChain.start": [
      {
        "link": "https://github.com/dstoianov/examples/blob/03bce674a0c12e33d33f643b0b01d6032f8b8e57/examples/src/test/java/compare/Attribute.java\n",
        "code": [
          "    }\n",
          "\n",
          "\n",
          "    @Override\n",
          "    public int compareTo(Attribute that) {\n",
          "        return ComparisonChain.start()\n",
          "                .compare(this.type, that.type)\n",
          "                .compare(this.value, that.value)\n",
          "                .result();\n",
          "    }\n",
          "\n"
        ],
        "line_number": 65,
        "start_line": 61,
        "end_line": 71
      },
      {
        "link": "https://github.com/taiwan902/bp-src/blob/341a34ebf43ab71bea0becf343795e241641ef6a/source/Class_6753.java\n",
        "code": [
          "    }\n",
          "\n",
          "    public int Method_6756(Class_9738 class_9738, Class_9738 class_97382) {\n",
          "        Class_22057 class_22057 = class_9738.Method_9755();\n",
          "        Class_22057 class_220572 = class_97382.Method_9755();\n",
          "        return ComparisonChain.start().compareTrueFirst((class_9738.Method_9754() != Class_35650.Field_35654 ? 4717 & 19473 : 25634 & 2072) != 0, (class_97382.Method_9754() != Class_35650.Field_35654 ? 17189 & 1041 : -16064 & 7184) != 0).compare((Comparable)((Object)(class_22057 != null ? class_22057.Method_22075() : \"\")), (Comparable)((Object)(class_220572 != null ? class_220572.Method_22075() : \"\"))).compare((Comparable)((Object)class_9738.Method_9758().getName()), (Comparable)((Object)class_97382.Method_9758().getName())).result();\n",
          "    }\n",
          "}\n",
          "\n"
        ],
        "line_number": 33,
        "start_line": 29,
        "end_line": 37
      },
      {
        "link": "https://github.com/HammerSMP/YarnSource/blob/42762edb4d65ca049e792360b2db7d04f9e3c2dc/net/minecraft/client/gui/hud/spectator/TeleportSpectatorMenu.java\n",
        "code": [
          "\n",
          "@Environment(value=EnvType.CLIENT)\n",
          "public class TeleportSpectatorMenu\n",
          "implements SpectatorMenuCommandGroup,\n",
          "SpectatorMenuCommand {\n",
          "    private static final Ordering<PlayerListEntry> ORDERING = Ordering.from((arg, arg2) -> ComparisonChain.start().compare((Comparable)arg.getProfile().getId(), (Comparable)arg2.getProfile().getId()).result());\n",
          "    private final List<SpectatorMenuCommand> elements = Lists.newArrayList();\n",
          "\n",
          "    public TeleportSpectatorMenu() {\n",
          "        this(ORDERING.sortedCopy(MinecraftClient.getInstance().getNetworkHandler().getPlayerList()));\n",
          "    }\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/zqhxuyuan/tutorials/blob/72740ec130a15331b0b2428b9750099c47073052/middleware/src/main/java/org/tguduru/guava/compare/ComparisonChainDemo.java\n",
        "code": [
          "            return Objects.hashCode(name, id);\n",
          "        }\n",
          "\n",
          "        public int compareTo(final Person o) {\n",
          "            // this eliminates lot of boiler plate code with comparison\n",
          "            return ComparisonChain.start().compare(getId(), o.getId()).compare(getName(), o.getName()).result();\n",
          "        }\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 63,
        "start_line": 59,
        "end_line": 67
      },
      {
        "link": "https://github.com/tguduru/guava/blob/1d9c02fc065133625f59627e12349ab200482c2a/src/main/java/org/tguduru/guava/compare/ComparisonChainDemo.java\n",
        "code": [
          "            return Objects.hashCode(name, id);\n",
          "        }\n",
          "\n",
          "        public int compareTo(final Person o) {\n",
          "            // this eliminates lot of boiler plate code with comparison\n",
          "            return ComparisonChain.start().compare(getId(), o.getId()).compare(getName(), o.getName()).result();\n",
          "        }\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 63,
        "start_line": 59,
        "end_line": 67
      },
      {
        "link": "}https://github.com/unnmdplyr/testrike/blob/1c37e8befc3732e0b09186258169e2904dc2ad56/testData/afterSimple.java\n",
        "code": [
          "class Simple implements Comparable<Simple> {\n",
          "    private String foo;\n",
          "\n",
          "    public int compareTo(Simple that) {\n",
          "        return com.google.common.collect.ComparisonChain.start()\n",
          "                .compare(this.foo, that.foo)\n",
          "                .result();\n",
          "    }\n"
        ],
        "line_number": 4,
        "start_line": 1,
        "end_line": 8
      },
      {
        "link": "https://github.com/UniPoker/Backend/blob/835c1f08f44413d9e65fecadd2919e49ab910bc2/src/main/java/cards/Card.java\n",
        "code": [
          "     * @param card\n",
          "     * @return Returns a negative integer, zero, or a positive integer as this Card is less than, equal to, or greater than the specified Card\n",
          "     */\n",
          "    @Override\n",
          "    public int compareTo(Card card) {\n",
          "        return ComparisonChain.start()\n",
          "                .compare(value, card.value)\n",
          "//                .compare(symbol, card.symbol)\n",
          "                .result();\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 65,
        "start_line": 61,
        "end_line": 71
      },
      {
        "link": "https://github.com/taiwan902/bp-src/blob/341a34ebf43ab71bea0becf343795e241641ef6a/source/Class_12131.java\n",
        "code": [
          "implements Comparator {\n",
          "    Class_12131() {\n",
          "    }\n",
          "\n",
          "    public int Method_12132(Class_9738 class_9738, Class_9738 class_97382) {\n",
          "        return ComparisonChain.start().compare((Comparable)class_9738.Method_9758().getId(), (Comparable)class_97382.Method_9758().getId()).result();\n",
          "    }\n",
          "\n",
          "    private void Method_12133() {\n",
          "        MethodHandle methodHandle = MethodHandles.constant(String.class, \"MC|BlazingPack\");\n",
          "    }\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/taiwan902/bp-src/blob/341a34ebf43ab71bea0becf343795e241641ef6a/source/Class_8179.java\n",
        "code": [
          "public final class Class_8179\n",
          "implements Comparator {\n",
          "    final Class_4751 Field_8180;\n",
          "\n",
          "    public int Method_8181(Class_1061 class_1061, Class_1061 class_10612) {\n",
          "        return ComparisonChain.start().compare(class_1061.Method_1172(this.Field_8180), class_10612.Method_1172(this.Field_8180)).result();\n",
          "    }\n",
          "\n",
          "    Class_8179(Class_4751 class_4751) {\n",
          "        this.Field_8180 = class_4751;\n",
          "    }\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 22
      },
      {
        "link": "https://github.com/aspanfilov/otus_java_pro/blob/0ac90e3f81e734bd109adc05721e44ab91220483/hw01-gradle/src/main/java/ru/otus/HelloOtus.java\n",
        "code": [
          "\n",
          "import com.google.common.collect.ComparisonChain;\n",
          "\n",
          "public class HelloOtus {\n",
          "    public static void main(String[] args) {\n",
          "        int result =  ComparisonChain.start().compare(\"sameWord\", \"sameWord\").compare(1,1).compare(1,134).result();\n",
          "        System.out.println(result);\n",
          "        System.out.println(\"Done\");\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 6,
        "start_line": 2,
        "end_line": 11
      }
    ],
    "com.google.common.cache.LoadingCache.get": [
      {
        "link": "}https://github.com/github/codeql/blob/9dc28eb9b55d712b737fc53c04814cb8a991b65a/java/ql/test/library-tests/frameworks/guava/generated/cache/Test.java\n",
        "code": [
          "\t\t}\n",
          "\t\t{\n",
          "\t\t\t// \"com.google.common.cache;Cache;true;get;(Object,Callable);;MapValue of Argument[-1];ReturnValue;value\"\n",
          "\t\t\tObject out = null;\n",
          "\t\t\tCache in = newCacheWithMapValue(source());\n",
          "\t\t\tout = in.get(null, null);\n",
          "\t\t\tsink(out); // $ hasValueFlow\n",
          "\t\t}\n",
          "\t\t{\n",
          "\t\t\t// \"com.google.common.cache;Cache;true;getAllPresent;(Iterable);;Element of Argument[0];MapKey of ReturnValue;value\"\n",
          "\t\t\tImmutableMap out = null;\n"
        ],
        "line_number": 81,
        "start_line": 77,
        "end_line": 87
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/cache/ForwardingLoadingCache.java\n",
        "code": [
          "\n",
          "    protected ForwardingLoadingCache() {\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache\n",
          "    public V get(K key) throws ExecutionException {\n",
          "        return delegate().get(key);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache\n",
          "    public V getUnchecked(K key) {\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/tclan126/glassdoorapk/blob/858772b5f2caa20a9370c52d8dbda83da4ee1d69/sources/com/google/common/cache/ForwardingLoadingCache.java\n",
        "code": [
          "\n",
          "    @Override // com.google.common.cache.ForwardingCache, com.google.common.cache.ForwardingCache, f.k.d.b.g\n",
          "    public abstract com.google.common.cache.LoadingCache<K, V> delegate();\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache\n",
          "    public V get(K k2) throws java.util.concurrent.ExecutionException {\n",
          "        return delegate().get(k2);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache\n",
          "    public com.google.common.collect.ImmutableMap<K, V> getAll(java.lang.Iterable<? extends K> iterable) throws java.util.concurrent.ExecutionException {\n"
        ],
        "line_number": 12,
        "start_line": 8,
        "end_line": 18
      },
      {
        "link": "}https://github.com/potar-vietcombank/https-github.com/blob/2096c0aab11213a5414c7c56ea9ba47c00d843e3/java/ql/test/library-tests/frameworks/guava/generated/cache/Test.java\n",
        "code": [
          "\t\t}\n",
          "\t\t{\n",
          "\t\t\t// \"com.google.common.cache;Cache;true;get;(Object,Callable);;MapValue of Argument[-1];ReturnValue;value\"\n",
          "\t\t\tObject out = null;\n",
          "\t\t\tCache in = newCacheWithMapValue(source());\n",
          "\t\t\tout = in.get(null, null);\n",
          "\t\t\tsink(out); // $ hasValueFlow\n",
          "\t\t}\n",
          "\t\t{\n",
          "\t\t\t// \"com.google.common.cache;Cache;true;getAllPresent;(Iterable);;Element of Argument[0];MapKey of ReturnValue;value\"\n",
          "\t\t\tImmutableMap out = null;\n"
        ],
        "line_number": 81,
        "start_line": 77,
        "end_line": 87
      },
      {
        "link": "https://github.com/tclan126/glassdoorapk/blob/858772b5f2caa20a9370c52d8dbda83da4ee1d69/sources/com/google/common/cache/AbstractLoadingCache.java\n",
        "code": [
          "    public com.google.common.collect.ImmutableMap<K, V> getAll(java.lang.Iterable<? extends K> iterable) throws java.util.concurrent.ExecutionException {\n",
          "        f.k.d.a.e.a aVar = com.google.common.collect.Maps.a;\n",
          "        java.util.LinkedHashMap linkedHashMap = new java.util.LinkedHashMap();\n",
          "        for (java.lang.Object obj : iterable) {\n",
          "            if (!linkedHashMap.containsKey(obj)) {\n",
          "                linkedHashMap.put(obj, get(obj));\n",
          "            }\n",
          "        }\n",
          "        return com.google.common.collect.ImmutableMap.c(linkedHashMap);\n",
          "    }\n",
          "\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/cache/AbstractLoadingCache.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache\n",
          "    public V getUnchecked(K k) {\n",
          "        try {\n",
          "            return get(k);\n",
          "        } catch (ExecutionException e) {\n",
          "            throw new UncheckedExecutionException(e.getCause());\n",
          "        }\n",
          "    }\n",
          "\n"
        ],
        "line_number": 15,
        "start_line": 11,
        "end_line": 21
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/cache/ForwardingLoadingCache.java\n",
        "code": [
          "\n",
          "    protected ForwardingLoadingCache() {\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache\n",
          "    public V get(K k) throws ExecutionException {\n",
          "        return delegate().get(k);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache\n",
          "    public V getUnchecked(K k) {\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/cache/ForwardingLoadingCache.java\n",
        "code": [
          "\n",
          "    protected ForwardingLoadingCache() {\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache\n",
          "    public V get(K k) throws ExecutionException {\n",
          "        return delegate().get(k);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache\n",
          "    public V getUnchecked(K k) {\n"
        ],
        "line_number": 15,
        "start_line": 11,
        "end_line": 21
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/cache/ForwardingLoadingCache.java\n",
        "code": [
          "\n",
          "    protected ForwardingLoadingCache() {\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache\n",
          "    public V get(K k) throws ExecutionException {\n",
          "        return delegate().get(k);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache\n",
          "    public V getUnchecked(K k) {\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.deviceauthserver-DeviceAuthServer/sources/com/google/common/cache/ForwardingLoadingCache.java\n",
        "code": [
          "\n",
          "    protected ForwardingLoadingCache() {\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache\n",
          "    public V get(K key) throws ExecutionException {\n",
          "        return delegate().get(key);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache\n",
          "    public V getUnchecked(K key) {\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      }
    ],
    "com.google.common.collect.SetMultimap.get": [
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.deviceauthserver-DeviceAuthServer/sources/com/google/common/collect/ForwardingSetMultimap.java\n",
        "code": [
          "    public Set<Map.Entry<K, V>> entries() {\n",
          "        return delegate().entries();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.ForwardingMultimap, com.google.common.collect.Multimap, com.google.common.collect.SetMultimap\n",
          "    public Set<V> get(@Nullable K key) {\n",
          "        return delegate().get((Object) key);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.ForwardingMultimap, com.google.common.collect.Multimap, com.google.common.collect.SetMultimap\n",
          "    public Set<V> removeAll(@Nullable Object key) {\n"
        ],
        "line_number": 19,
        "start_line": 15,
        "end_line": 25
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/collect/ForwardingSetMultimap.java\n",
        "code": [
          "    public Set<Map.Entry<K, V>> entries() {\n",
          "        return delegate().entries();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.ForwardingMultimap, com.google.common.collect.Multimap, com.google.common.collect.SetMultimap, com.google.common.collect.SetMultimap\n",
          "    public Set<V> get(@NullableDecl K k) {\n",
          "        return delegate().get((Object) k);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.ForwardingMultimap, com.google.common.collect.Multimap, com.google.common.collect.SetMultimap, com.google.common.collect.SetMultimap\n",
          "    @CanIgnoreReturnValue\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/collect/ForwardingSetMultimap.java\n",
        "code": [
          "    public Set<Map.Entry<K, V>> entries() {\n",
          "        return delegate().entries();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.ForwardingMultimap, com.google.common.collect.Multimap, com.google.common.collect.SetMultimap\n",
          "    public Set<V> get(@NullableDecl K k) {\n",
          "        return delegate().get((Object) k);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.ForwardingMultimap, com.google.common.collect.Multimap, com.google.common.collect.SetMultimap\n",
          "    @CanIgnoreReturnValue\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/Eliminater74/com.google.android.tvlauncher/blob/e8284f9970d77a05042a57e9c2173856af7c4246/saved/sources/com/google/common/collect/Multimaps.java\n",
        "code": [
          "            return createMaybeNavigableAsMap();\n",
          "        }\n",
          "\n",
          "        /* access modifiers changed from: protected */\n",
          "        public Collection<V> createCollection() {\n",
          "            return (Collection) this.factory.get();\n",
          "        }\n",
          "\n",
          "        /* JADX WARN: Type inference failed for: r2v0, types: [java.util.Collection<E>, java.util.Collection] */\n",
          "        /* access modifiers changed from: package-private */\n",
          "        /* JADX WARNING: Unknown variable types count: 1 */\n"
        ],
        "line_number": 68,
        "start_line": 64,
        "end_line": 74
      },
      {
        "link": "https://github.com/Eliminater74/com.google.android.tvlauncher/blob/e8284f9970d77a05042a57e9c2173856af7c4246/saved/sources/com/google/common/collect/ForwardingSetMultimap.java\n",
        "code": [
          "\n",
          "    public Set<Map.Entry<K, V>> entries() {\n",
          "        return delegate().entries();\n",
          "    }\n",
          "\n",
          "    public Set<V> get(@NullableDecl K key) {\n",
          "        return delegate().get((Object) key);\n",
          "    }\n",
          "\n",
          "    @CanIgnoreReturnValue\n",
          "    public Set<V> removeAll(@NullableDecl Object key) {\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/Eliminater74/com.google.android.tvlauncher/blob/e8284f9970d77a05042a57e9c2173856af7c4246/src/main/java/com/google/common/collect/ForwardingSetMultimap.java\n",
        "code": [
          "\n",
          "    public Set<Map.Entry<K, V>> entries() {\n",
          "        return delegate().entries();\n",
          "    }\n",
          "\n",
          "    public Set<V> get(@NullableDecl K key) {\n",
          "        return delegate().get((Object) key);\n",
          "    }\n",
          "\n",
          "    @CanIgnoreReturnValue\n",
          "    public Set<V> removeAll(@NullableDecl Object key) {\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/collect/Multimaps.java\n",
        "code": [
          "            }\n",
          "        }, $$Lambda$Multimaps$EGqBcBjNFW4VPyKfp3wZs77_0A.INSTANCE, new Collector.Characteristics[0]);\n",
          "    }\n",
          "\n",
          "    static /* synthetic */ void lambda$flatteningToMultimap$2(Function function, Function function2, Multimap multimap, Object obj) {\n",
          "        Collection collection = multimap.get(function.apply(obj));\n",
          "        collection.getClass();\n",
          "        ((Stream) function2.apply(obj)).forEachOrdered(new Consumer(collection) {\n",
          "            /* class com.google.common.collect.$$Lambda$CMyQKLwBy0EAPqyDBUlb1AohkGk */\n",
          "            private final /* synthetic */ Collection f$0;\n",
          "\n"
        ],
        "line_number": 93,
        "start_line": 89,
        "end_line": 99
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/collect/ForwardingSetMultimap.java\n",
        "code": [
          "    public Set<Map.Entry<K, V>> entries() {\n",
          "        return delegate().entries();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.ForwardingMultimap, com.google.common.collect.Multimap, com.google.common.collect.SetMultimap\n",
          "    public Set<V> get(@NullableDecl K key) {\n",
          "        return delegate().get((Object) key);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.ForwardingMultimap, com.google.common.collect.Multimap, com.google.common.collect.SetMultimap\n",
          "    @CanIgnoreReturnValue\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/Eliminater74/com.google.android.tvlauncher/blob/e8284f9970d77a05042a57e9c2173856af7c4246/src/main/java/com/google/common/collect/Multimaps.java\n",
        "code": [
          "            return createMaybeNavigableAsMap();\n",
          "        }\n",
          "\n",
          "        /* access modifiers changed from: protected */\n",
          "        public Collection<V> createCollection() {\n",
          "            return (Collection) this.factory.get();\n",
          "        }\n",
          "\n",
          "        /* JADX WARN: Type inference failed for: r2v0, types: [java.util.Collection<E>, java.util.Collection] */\n",
          "        /* access modifiers changed from: package-private */\n",
          "        /* JADX WARNING: Unknown variable types count: 1 */\n"
        ],
        "line_number": 68,
        "start_line": 64,
        "end_line": 74
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/collect/Multimaps.java\n",
        "code": [
          "            }\n",
          "        }, $$Lambda$Multimaps$EGqBcBjNFW4VPyKfp3wZs77_0A.INSTANCE, new Collector.Characteristics[0]);\n",
          "    }\n",
          "\n",
          "    static /* synthetic */ void lambda$flatteningToMultimap$2(Function function, Function function2, Multimap multimap, Object obj) {\n",
          "        Collection collection = multimap.get(function.apply(obj));\n",
          "        collection.getClass();\n",
          "        ((Stream) function2.apply(obj)).forEachOrdered(new Consumer(collection) {\n",
          "            /* class com.google.common.collect.$$Lambda$CMyQKLwBy0EAPqyDBUlb1AohkGk */\n",
          "            private final /* synthetic */ Collection f$0;\n",
          "\n"
        ],
        "line_number": 93,
        "start_line": 89,
        "end_line": 99
      }
    ],
    "com.google.common.collect.Table.get": [
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/collect/Tables.java\n",
        "code": [
          "        public boolean containsValue(@NullableDecl Object obj) {\n",
          "            return this.original.containsValue(obj);\n",
          "        }\n",
          "\n",
          "        @Override // com.google.common.collect.AbstractTable, com.google.common.collect.Table\n",
          "        public V get(@NullableDecl Object obj, @NullableDecl Object obj2) {\n",
          "            return this.original.get(obj2, obj);\n",
          "        }\n",
          "\n",
          "        @Override // com.google.common.collect.AbstractTable, com.google.common.collect.Table\n",
          "        public V put(C c, R r, V v) {\n"
        ],
        "line_number": 153,
        "start_line": 149,
        "end_line": 159
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/collect/ForwardingTable.java\n",
        "code": [
          "    public boolean containsValue(Object obj) {\n",
          "        return delegate().containsValue(obj);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Table\n",
          "    public V get(Object obj, Object obj2) {\n",
          "        return delegate().get(obj, obj2);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Table\n",
          "    public boolean isEmpty() {\n"
        ],
        "line_number": 64,
        "start_line": 60,
        "end_line": 70
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.deviceauthserver-DeviceAuthServer/sources/com/google/common/collect/ForwardingTable.java\n",
        "code": [
          "    public boolean containsValue(Object value) {\n",
          "        return delegate().containsValue(value);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Table\n",
          "    public V get(Object rowKey, Object columnKey) {\n",
          "        return delegate().get(rowKey, columnKey);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Table\n",
          "    public boolean isEmpty() {\n"
        ],
        "line_number": 63,
        "start_line": 59,
        "end_line": 69
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/1b7f61aa43c14f6785bee90a1315d08a150dc11d/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/collect/ImmutableTable.java\n",
        "code": [
          "    public /* bridge */ /* synthetic */ boolean equals(@NullableDecl Object obj) {\n",
          "        return super.equals(obj);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.AbstractTable, com.google.common.collect.Table\n",
          "    public /* bridge */ /* synthetic */ Object get(@NullableDecl Object obj, @NullableDecl Object obj2) {\n",
          "        return super.get(obj, obj2);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.AbstractTable, com.google.common.collect.Table\n",
          "    public /* bridge */ /* synthetic */ int hashCode() {\n"
        ],
        "line_number": 60,
        "start_line": 56,
        "end_line": 66
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/collect/ForwardingTable.java\n",
        "code": [
          "    public boolean containsValue(Object obj) {\n",
          "        return delegate().containsValue(obj);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Table\n",
          "    public V get(Object obj, Object obj2) {\n",
          "        return delegate().get(obj, obj2);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Table\n",
          "    public boolean isEmpty() {\n"
        ],
        "line_number": 61,
        "start_line": 57,
        "end_line": 67
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/collect/ForwardingTable.java\n",
        "code": [
          "    public boolean containsValue(Object value) {\n",
          "        return delegate().containsValue(value);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Table\n",
          "    public V get(Object rowKey, Object columnKey) {\n",
          "        return delegate().get(rowKey, columnKey);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Table\n",
          "    public boolean isEmpty() {\n"
        ],
        "line_number": 64,
        "start_line": 60,
        "end_line": 70
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/collect/ForwardingTable.java\n",
        "code": [
          "    public boolean containsValue(Object obj) {\n",
          "        return delegate().containsValue(obj);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Table\n",
          "    public V get(Object obj, Object obj2) {\n",
          "        return delegate().get(obj, obj2);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Table\n",
          "    public boolean isEmpty() {\n"
        ],
        "line_number": 64,
        "start_line": 60,
        "end_line": 70
      },
      {
        "link": "}https://github.com/github/codeql/blob/93daaf5b5bf61750a04d69d3e0152a78166b7b5f/java/ql/test/library-tests/frameworks/guava/generated/collect/Test.java\n",
        "code": [
          "\t<T> T getArrayElement(T[] array) { return array[0]; }\n",
          "\t<T> T getElement(Enumeration<T> it) { return it.nextElement(); }\n",
          "\t<T> T getElement(ImmutableCollection.Builder<T> b) { return getElement(b.build()); }\n",
          "\t<T> T getElement(Iterable<T> it) { return it.iterator().next(); }\n",
          "\t<T> T getElement(Iterator<T> it) { return it.next(); }\n",
          "\t<T> T getElement(Optional<T> o) { return o.get(); }\n",
          "\t<V> Map.Entry<?,V> newEntryWithMapValue(V value) { return Map.of(null, value).entrySet().iterator().next(); }\n",
          "\t<V> MapDifference.ValueDifference newMapValueDifference(V l, V r) { return Maps.difference(Map.of(null, l), Map.of(null, r)).entriesDiffering().get(null); }\n",
          "\t<V> V getMapValue(ImmutableMap.Builder<?,V> b) { return getMapValue(b.build()); }\n",
          "\t<V> V getMapValue(ImmutableMultimap.Builder<?,V> b) { return getMapValue(b.build()); }\n",
          "\t<V> V getMapValue(ImmutableTable.Builder<?,?,V> b) { return getMapValue(b.build()); }\n"
        ],
        "line_number": 111,
        "start_line": 107,
        "end_line": 117
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/collect/Tables.java\n",
        "code": [
          "    /* JADX DEBUG: Multi-variable search result rejected for r1v0, resolved type: com.google.common.collect.Table<R, C, V> */\n",
          "    /* JADX WARN: Multi-variable type inference failed */\n",
          "    /* access modifiers changed from: private */\n",
          "    public static <R, C, V> void merge(Table<R, C, V> table, R r, C c, V v, BinaryOperator<V> binaryOperator) {\n",
          "        Preconditions.checkNotNull(v);\n",
          "        V v2 = table.get(r, c);\n",
          "        if (v2 == null) {\n",
          "            table.put(r, c, v);\n",
          "            return;\n",
          "        }\n",
          "        Object apply = binaryOperator.apply(v2, v);\n"
        ],
        "line_number": 97,
        "start_line": 93,
        "end_line": 103
      },
      {
        "link": "https://github.com/khotyn/learning-guava/blob/e8241b981cb461023fa89edf7c2d366ce2700f98/src/test/java/com/khotyn/learning/guava/LearningTable.java\n",
        "code": [
          "        Table<String, String, String> persons = HashBasedTable.create();\n",
          "        persons.put(\"khotyn\", \"huang\", \"khotynhuang\");\n",
          "        persons.put(\"khotyn\", \"tian\", \"khotyntian\");\n",
          "        persons.put(\"vivian\", \"huang\", \"vivianhuang\");\n",
          "        persons.put(\"vivian\", \"tian\", \"viviantian\");\n",
          "        String desc = persons.get(\"khotyn\", \"tian\");\n",
          "        Assert.assertEquals(\"khotyntian\", desc);\n",
          "        Set<Cell<String, String, String>> cellSet = persons.cellSet();\n",
          "        for (Cell<String, String, String> cell : cellSet) {\n",
          "            Assert.assertEquals(cell.getRowKey() + cell.getColumnKey(), cell.getValue());\n",
          "        }\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      }
    ],
    "com.google.common.cache.Cache.get": [
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/cache/ForwardingCache.java\n",
        "code": [
          "    public V getIfPresent(Object obj) {\n",
          "        return delegate().getIfPresent(obj);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public V get(K k, Callable<? extends V> callable) throws ExecutionException {\n",
          "        return delegate().get(k, callable);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public ImmutableMap<K, V> getAllPresent(Iterable<?> iterable) {\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "https://github.com/ssy-githup/spring-framework-4.3.x/blob/d07a8e4d5dbb0722dbfb45088cb10fb3e3211a95/spring-context-support/src/main/java/org/springframework/cache/guava/GuavaCache.java\n",
        "code": [
          "\tpublic final com.google.common.cache.Cache<Object, Object> getNativeCache() {\n",
          "\t\treturn this.cache;\n",
          "\t}\n",
          "\n",
          "\t@Override\n",
          "\tpublic ValueWrapper get(Object key) {\n",
          "\t\tif (this.cache instanceof LoadingCache) {\n",
          "\t\t\ttry {\n",
          "\t\t\t\tObject value = ((LoadingCache<Object, Object>) this.cache).get(key);\n",
          "\t\t\t\treturn toValueWrapper(value);\n",
          "\t\t\t}\n"
        ],
        "line_number": 82,
        "start_line": 78,
        "end_line": 88
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/cache/ForwardingCache.java\n",
        "code": [
          "    public V getIfPresent(Object obj) {\n",
          "        return delegate().getIfPresent(obj);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public V get(K k, Callable<? extends V> callable) throws ExecutionException {\n",
          "        return delegate().get(k, callable);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public ImmutableMap<K, V> getAllPresent(Iterable<?> iterable) {\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      },
      {
        "link": "https://github.com/lanlandetuzila/spring-framework-ctest/blob/3fb58cda8e9b5a36ce241f32f3578344328e240b/spring-context-support/src/main/java/org/springframework/cache/guava/GuavaCache.java\n",
        "code": [
          "\tpublic final com.google.common.cache.Cache<Object, Object> getNativeCache() {\n",
          "\t\treturn this.cache;\n",
          "\t}\n",
          "\n",
          "\t@Override\n",
          "\tpublic ValueWrapper get(Object key) {\n",
          "\t\tif (this.cache instanceof LoadingCache) {\n",
          "\t\t\ttry {\n",
          "\t\t\t\tObject value = ((LoadingCache<Object, Object>) this.cache).get(key);\n",
          "\t\t\t\treturn toValueWrapper(value);\n",
          "\t\t\t}\n"
        ],
        "line_number": 82,
        "start_line": 78,
        "end_line": 88
      },
      {
        "link": "}https://github.com/github/codeql/blob/9dc28eb9b55d712b737fc53c04814cb8a991b65a/java/ql/test/library-tests/frameworks/guava/generated/cache/Test.java\n",
        "code": [
          "\t\t}\n",
          "\t\t{\n",
          "\t\t\t// \"com.google.common.cache;Cache;true;get;(Object,Callable);;MapValue of Argument[-1];ReturnValue;value\"\n",
          "\t\t\tObject out = null;\n",
          "\t\t\tCache in = newCacheWithMapValue(source());\n",
          "\t\t\tout = in.get(null, null);\n",
          "\t\t\tsink(out); // $ hasValueFlow\n",
          "\t\t}\n",
          "\t\t{\n",
          "\t\t\t// \"com.google.common.cache;Cache;true;getAllPresent;(Iterable);;Element of Argument[0];MapKey of ReturnValue;value\"\n",
          "\t\t\tImmutableMap out = null;\n"
        ],
        "line_number": 81,
        "start_line": 77,
        "end_line": 87
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/cache/ForwardingCache.java\n",
        "code": [
          "    public V getIfPresent(Object obj) {\n",
          "        return delegate().getIfPresent(obj);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public V get(K k, Callable<? extends V> callable) throws ExecutionException {\n",
          "        return delegate().get(k, callable);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public ImmutableMap<K, V> getAllPresent(Iterable<?> iterable) {\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/cache/ForwardingCache.java\n",
        "code": [
          "    public V getIfPresent(Object key) {\n",
          "        return delegate().getIfPresent(key);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public V get(K key, Callable<? extends V> valueLoader) throws ExecutionException {\n",
          "        return delegate().get(key, valueLoader);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public ImmutableMap<K, V> getAllPresent(Iterable<?> keys) {\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.deviceauthserver-DeviceAuthServer/sources/com/google/common/cache/ForwardingCache.java\n",
        "code": [
          "    public V getIfPresent(Object key) {\n",
          "        return delegate().getIfPresent(key);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public V get(K key, Callable<? extends V> valueLoader) throws ExecutionException {\n",
          "        return delegate().get(key, valueLoader);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public ImmutableMap<K, V> getAllPresent(Iterable<?> keys) {\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "https://github.com/NighterCoder/spring_project/blob/911804a6a67a217aa04c8411502ab890529b1bb6/spring-context-support/src/main/java/org/springframework/cache/guava/GuavaCache.java\n",
        "code": [
          "\tpublic final com.google.common.cache.Cache<Object, Object> getNativeCache() {\n",
          "\t\treturn this.cache;\n",
          "\t}\n",
          "\n",
          "\t@Override\n",
          "\tpublic ValueWrapper get(Object key) {\n",
          "\t\tif (this.cache instanceof LoadingCache) {\n",
          "\t\t\ttry {\n",
          "\t\t\t\tObject value = ((LoadingCache<Object, Object>) this.cache).get(key);\n",
          "\t\t\t\treturn toValueWrapper(value);\n",
          "\t\t\t}\n"
        ],
        "line_number": 82,
        "start_line": 78,
        "end_line": 88
      },
      {
        "link": "https://github.com/penn2011/reloading-spring/blob/b369f335f68e5aa0d77cc691e677d05cdff91a66/spring-context-support/src/main/java/org/springframework/cache/guava/GuavaCache.java\n",
        "code": [
          "\tpublic final com.google.common.cache.Cache<Object, Object> getNativeCache() {\n",
          "\t\treturn this.cache;\n",
          "\t}\n",
          "\n",
          "\t@Override\n",
          "\tpublic ValueWrapper get(Object key) {\n",
          "\t\tif (this.cache instanceof LoadingCache) {\n",
          "\t\t\ttry {\n",
          "\t\t\t\tObject value = ((LoadingCache<Object, Object>) this.cache).get(key);\n",
          "\t\t\t\treturn toValueWrapper(value);\n",
          "\t\t\t}\n"
        ],
        "line_number": 82,
        "start_line": 78,
        "end_line": 88
      }
    ],
    "com.google.common.collect.Multimaps.newSetMultimap": [
      {
        "link": "https://github.com/viatra/viatra-dse-swarm/blob/5352eb0e6b865df41acd1eaafcae7abdbba9bb09/plugins/incqueryd/hu.bme.mit.incqueryd.core/hu.bme.mit.incqueryd.cache.redis/src/main/java/hu/bme/mit/incqueryd/cache/hazelcast/RedisMultiMap.java\n",
        "code": [
          "public class RedisMultiMap<K, V> implements DistributedMultiMap<K, V> {\n",
          "\n",
          "\tprivate final Multimap<K, V> multiMap;\n",
          "\n",
          "\tpublic RedisMultiMap(final RMap<K, Collection<V>> rMap) {\n",
          "\t\tthis.multiMap = Multimaps.newSetMultimap(rMap, new Supplier<Set<V>>() {\n",
          "\t\t\tpublic Set<V> get() {\n",
          "\t\t\t\treturn Sets.newHashSet();\n",
          "\t\t\t}\n",
          "\t\t});\n",
          "\t}\n"
        ],
        "line_number": 19,
        "start_line": 15,
        "end_line": 25
      },
      {
        "link": "https://github.com/woschmid/webprotege_debugger_mirror/blob/f2f4ff11a7132ee6b545de0340654228bbe00fd0/webprotege-server-core/src/main/java/edu/stanford/bmir/protege/web/server/index/impl/IndexedSetMultimaps.java\n",
        "code": [
          " */\n",
          "public class IndexedSetMultimaps {\n",
          "\n",
          "    public static <K, V> Multimap<Key<K>, V> create() {\n",
          "        var backingMap = new HashMap<Key<K>, Collection<V>>();\n",
          "        return Multimaps.newSetMultimap(backingMap, IndexedSet::new);\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 20
      },
      {
        "link": "https://github.com/KarenPan/gggg/blob/079d13ce62aee9a85f6871384a53356bd25735a8/Util/core/src/main/java/tc/oc/commons/core/util/LinkedHashMultimap.java\n",
        "code": [
          "/**\n",
          " * {@link SetMultimap} that preserves the insertion order of values\n",
          " */\n",
          "public class LinkedHashMultimap<K, V> extends ForwardingSetMultimap<K, V> {\n",
          "\n",
          "    private final SetMultimap<K, V> delegate = Multimaps.newSetMultimap(\n",
          "        new HashMap<K, Collection<V>>(),\n",
          "        new Supplier<Set<V>>() {\n",
          "            @Override\n",
          "            public Set<V> get() {\n",
          "                return new LinkedHashSet<V>();\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/ionar2/summit/blob/def2200cecea7281e846be57a1c091644359a30e/src/main/java/com/salhack/summit/events/bus/EventManager.java\n",
        "code": [
          "import java.util.Arrays;\n",
          "import java.util.concurrent.ConcurrentHashMap;\n",
          "\n",
          "@SuppressWarnings({\"rawtypes\", \"unchecked\"})\n",
          "public class EventManager implements EventBus {\n",
          "    private final Multimap<Class<?>, Listener> listenerMultimap = Multimaps.newSetMultimap(new ConcurrentHashMap<>(), ConcurrentHashMap::newKeySet);\n",
          "    private final Multimap<EventListener, Listener> parentListeners = Multimaps.newSetMultimap(new ConcurrentHashMap<>(), ConcurrentHashMap::newKeySet);\n",
          "\n",
          "    @Override\n",
          "    public void post(Object event) {\n",
          "        try\n"
        ],
        "line_number": 12,
        "start_line": 8,
        "end_line": 18
      },
      {
        "link": "https://github.com/princesspancubit/webprotege/blob/46c3c643569169ac9f98e9108eceba2078cb30e1/webprotege-server-core/src/main/java/edu/stanford/bmir/protege/web/server/index/impl/IndexedSetMultimaps.java\n",
        "code": [
          " */\n",
          "public class IndexedSetMultimaps {\n",
          "\n",
          "    public static <K, V> Multimap<Key<K>, V> create() {\n",
          "        var backingMap = new HashMap<Key<K>, Collection<V>>();\n",
          "        return Multimaps.newSetMultimap(backingMap, IndexedSet::new);\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 20
      },
      {
        "link": "https://github.com/whiskeysierra/switchboard/blob/c45578acdb0cfe2b07dc3bdcd9153e5ea1f5f988/src/main/java/switchboard/ConcurrentMultimaps.java\n",
        "code": [
          "    private ConcurrentMultimaps() {\n",
          "        // nothing to do\n",
          "    }\n",
          "\n",
          "    static <K, V> SetMultimap<K, V> newConcurrentMultiMap() {\n",
          "        return newSetMultimap(\n",
          "                new ConcurrentHashMap<>(), ConcurrentHashMap::newKeySet);\n",
          "    }\n",
          "\n",
          "    static <K, V> SetMultimap<K, V> newConcurrentMultiMap(\n",
          "            final UnaryOperator<CacheBuilder<Object, Object>> operator) {\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      },
      {
        "link": "https://github.com/bowerta/webprotege-keycloak/blob/c1421c02c5162f4ca4fcfc958fcd5dd7d16c3735/webprotege-server-core/src/main/java/edu/stanford/bmir/protege/web/server/index/impl/IndexedSetMultimaps.java\n",
        "code": [
          " */\n",
          "public class IndexedSetMultimaps {\n",
          "\n",
          "    public static <K, V> Multimap<Key<K>, V> create() {\n",
          "        var backingMap = new HashMap<Key<K>, Collection<V>>();\n",
          "        return Multimaps.newSetMultimap(backingMap, IndexedSet::new);\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 20
      },
      {
        "link": "https://github.com/spring-open-source/projects/blob/2558dd7211d3eaf94826d8fcd3e48f71f1c22a0b/tutorials/testing-modules/testing/src/test/java/com/baeldung/testing/assertj/AssertJGuavaUnitTest.java\n",
        "code": [
          "        mmap1.put(1, \"one\");\n",
          "        mmap1.put(1, \"1\");\n",
          "        mmap1.put(2, \"two\");\n",
          "        mmap1.put(2, \"2\");\n",
          "\n",
          "        final Multimap<Integer, String> mmap1_clone = Multimaps.newSetMultimap(new HashMap<>(), HashSet::new);\n",
          "        mmap1_clone.put(1, \"one\");\n",
          "        mmap1_clone.put(1, \"1\");\n",
          "        mmap1_clone.put(2, \"two\");\n",
          "        mmap1_clone.put(2, \"2\");\n",
          "\n"
        ],
        "line_number": 48,
        "start_line": 44,
        "end_line": 54
      },
      {
        "link": "https://github.com/protegeproject/webprotege-backend-service/blob/9f882572f059437c21208b63f9e727ce2a1d8bcd/src/main/java/edu/stanford/protege/webprotege/index/impl/IndexedSetMultimaps.java\n",
        "code": [
          " */\n",
          "public class IndexedSetMultimaps {\n",
          "\n",
          "    public static <K, V> Multimap<Key<K>, V> create() {\n",
          "        var backingMap = new HashMap<Key<K>, Collection<V>>();\n",
          "        return Multimaps.newSetMultimap(backingMap, IndexedSet::new);\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 20
      },
      {
        "link": "https://github.com/protegeproject/webprotege/blob/80f3f077c7cb88b388850adf82d4785c2ef0be27/webprotege-server-core/src/main/java/edu/stanford/bmir/protege/web/server/index/impl/IndexedSetMultimaps.java\n",
        "code": [
          " */\n",
          "public class IndexedSetMultimaps {\n",
          "\n",
          "    public static <K, V> Multimap<Key<K>, V> create() {\n",
          "        var backingMap = new HashMap<Key<K>, Collection<V>>();\n",
          "        return Multimaps.newSetMultimap(backingMap, IndexedSet::new);\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 20
      }
    ],
    "com.google.common.base.CharMatcher.matches": [
      {
        "link": "https://github.com/AshutoshSundresh/OnePlusSettings-Java/blob/8015f4badc24494c3931ea99fb834bc2b264919f/sources/com/google/common/base/CharMatcher.java\n",
        "code": [
          "package com.google.common.base;\n",
          "\n",
          "public abstract class CharMatcher {\n",
          "    public abstract boolean matches(char c);\n",
          "\n",
          "    public static CharMatcher none() {\n",
          "        return None.INSTANCE;\n",
          "    }\n",
          "\n"
        ],
        "line_number": 3,
        "start_line": 1,
        "end_line": 9
      },
      {
        "link": "https://github.com/GenomicParisCentre/eoulsan/blob/2fb75cb431bf8cebd2f371ec99903fef5fcdf3a7/src/main/java/fr/ens/biologie/genomique/eoulsan/core/Naming.java\n",
        "code": [
          "    StringBuilder sb = new StringBuilder();\n",
          "\n",
          "    for (int i = 0; i < name.length(); i++) {\n",
          "\n",
          "      final char c = name.charAt(i);\n",
          "      if (ASCII_LETTER_OR_DIGIT.matches(c)) {\n",
          "        sb.append(c);\n",
          "      }\n",
          "    }\n",
          "\n",
          "    return sb.toString();\n"
        ],
        "line_number": 33,
        "start_line": 29,
        "end_line": 39
      },
      {
        "link": "https://github.com/steveash/syngen/blob/7be1778a5364b54201506ccfe1f0aac6e783f205/synthrec-core/src/main/java/com/github/steveash/synthrec/canonical/Graphemes.java\n",
        "code": [
          "    private static final CharMatcher other = CharMatcher.any().and(vowels.or(consonants).negate()).precomputed();\n",
          "    private static final CharMatcher digits = CharMatcher.digit().precomputed();\n",
          "\n",
          "    public static boolean isVowelOrConsonant(String graph) {\n",
          "        Preconditions.checkArgument(graph.length() == 1);\n",
          "        return !other.matches(graph.toUpperCase().charAt(0));\n",
          "    }\n",
          "\n",
          "    public static boolean isVowel(String graph) {\n",
          "        Preconditions.checkArgument(graph.length() == 1);\n",
          "        return vowels.matches(graph.toUpperCase().charAt(0));\n"
        ],
        "line_number": 42,
        "start_line": 38,
        "end_line": 48
      },
      {
        "link": "https://github.com/steveash/jg2p/blob/9ef911031f2762b15f5b731c33dd968f523e181f/jg2p-core/src/main/java/com/github/steveash/jg2p/phoseq/Graphemes.java\n",
        "code": [
          "      (inRange('A', 'Z').or(inRange('a', 'z'))).and(vowels.negate()).precomputed();\n",
          "  private static final CharMatcher other = CharMatcher.ANY.and(vowels.or(consonants).negate()).precomputed();\n",
          "\n",
          "  public static boolean isVowelOrConsonant(String graph) {\n",
          "    Preconditions.checkArgument(graph.length() == 1);\n",
          "    return !other.matches(graph.toUpperCase().charAt(0));\n",
          "  }\n",
          "\n",
          "  public static boolean isVowel(String graph) {\n",
          "    Preconditions.checkArgument(graph.length() == 1);\n",
          "    return vowels.matches(graph.toUpperCase().charAt(0));\n"
        ],
        "line_number": 41,
        "start_line": 37,
        "end_line": 47
      },
      {
        "link": "https://github.com/dovikn/inegotiate-android/blob/cea5e088b01ae4487d83cd1a84e6d2df78761a6e/src/com/google/common/base/CharMatcher.java\n",
        "code": [
          "\n",
          "        public /* bridge */ /* synthetic */ boolean apply(Object x0) {\n",
          "            return super.apply((Character) x0);\n",
          "        }\n",
          "\n",
          "        public boolean matches(char c) {\n",
          "            return c == this.val$match1 || c == this.val$match2;\n",
          "        }\n",
          "\n",
          "        void setBits(LookupTable table) {\n",
          "            table.set(this.val$match1);\n"
        ],
        "line_number": 47,
        "start_line": 43,
        "end_line": 53
      },
      {
        "link": "https://github.com/milanqiu/mimas/blob/6e20536fa19766be298be971922207a0f84d330d/mimas-tpl-ext/src/main/java/net/milanqiu/mimas/guava/CharMatcherExt.java\n",
        "code": [
          "     */\n",
          "    public static Set<Character> toSet(CharMatcher chm) {\n",
          "        final CharMatcher pchm = chm.precomputed();\n",
          "        Set<Character> result = Sets.newHashSet();\n",
          "        TypeUtils.traverseCharValues((ch) -> {\n",
          "            if (pchm.matches(ch))\n",
          "                result.add(ch);\n",
          "        });\n",
          "        return result;\n",
          "    }\n",
          "\n"
        ],
        "line_number": 30,
        "start_line": 26,
        "end_line": 36
      },
      {
        "link": "https://github.com/dubu/guava-libraries/blob/47b7717473d269db4a5af25678bccce73c736c66/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/CharMatcherTest.java\n",
        "code": [
          " */\n",
          "@GwtCompatible(emulated = true)\n",
          "public class CharMatcherTest extends TestCase {\n",
          "\n",
          "  private static final CharMatcher WHATEVER = new CharMatcher() {\n",
          "    @Override public boolean matches(char c) {\n",
          "      throw new AssertionFailedError(\n",
          "          \"You weren't supposed to actually invoke me!\");\n",
          "    }\n",
          "  };\n",
          "\n"
        ],
        "line_number": 47,
        "start_line": 43,
        "end_line": 53
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/base/CharMatcher.java\n",
        "code": [
          "\n",
          "    private static boolean isSmall(int i, int i2) {\n",
          "        return i <= 1023 && i2 > (i * 4) * 16;\n",
          "    }\n",
          "\n",
          "    public abstract boolean matches(char c);\n",
          "\n",
          "    public static CharMatcher any() {\n",
          "        return Any.INSTANCE;\n",
          "    }\n",
          "\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": " */https://github.com/Dwayne75/Wu/blob/5f7daebc2fb430411ddb76a179005eeecde9802b/com/google/common/base/CharMatcher.java\n",
        "code": [
          "public abstract class CharMatcher\n",
          "  implements Predicate<Character>\n",
          "{\n",
          "  public static final CharMatcher BREAKING_WHITESPACE = new CharMatcher()\n",
          "  {\n",
          "    public boolean matches(char c)\n",
          "    {\n",
          "      switch (c)\n",
          "      {\n",
          "      case '\\t': \n",
          "      case '\\n': \n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 22
      },
      {
        "link": "https://github.com/ExpediaGroup/data-highway/blob/9c4b837314a99f56c5cb12a45a9f2961114e5d6d/common/partition/src/main/java/com/hotels/road/partition/KeyPathParser.java\n",
        "code": [
          "\n",
          "    private State(CharMatcher charMatcher) {\n",
          "      this.charMatcher = charMatcher;\n",
          "    }\n",
          "\n",
          "    private boolean matches(char c) {\n",
          "      return charMatcher.matches(c);\n",
          "    }\n",
          "\n",
          "    private State next(char c, int i, List<Element> e, StringBuilder v) {\n",
          "      return nextState.next(c, i, e, v);\n"
        ],
        "line_number": 81,
        "start_line": 77,
        "end_line": 87
      }
    ],
    "org.mockito.Mockito.inOrder": [
      {
        "link": "https://github.com/Dragonwrath/AndroidDemo/blob/bb7ffb4229097e01d6b50b0427f9b2d0dfa2721a/android-mock/src/test/java/com/joke/mock/offical_mock/OfficalTest_Part_1.java\n",
        "code": [
          "        //using a single mock\n",
          "        singleMock.add(\"was added first\");\n",
          "        singleMock.add(\"was added second\");\n",
          "\n",
          "        //create an inOrder verifier for a single mock\n",
          "        InOrder inOrder = inOrder(singleMock);\n",
          "\n",
          "        //following will make sure that add is first called with \"was added first, then with \"was added second\"\n",
          "        inOrder.verify(singleMock).add(\"was added first\");\n",
          "        inOrder.verify(singleMock).add(\"was added second\");\n",
          "\n"
        ],
        "line_number": 218,
        "start_line": 214,
        "end_line": 224
      },
      {
        "link": "https://github.com/SmartToolFactory/Unit-Test-Tutorials/blob/82fc0357c27d7075c3d59e2bc870111c82f85310/External-Tutorial-JournalDev-MockitoExamples-JUnit5/src/test/java/com/journaldev/mockitoexamples/verify/MockitoVerifyExamples.java\n",
        "code": [
          "\t\tmockMap.isEmpty();\n",
          "\t\tverify(mockMap, only()).isEmpty();\n",
          "\n",
          "\t\t// testing order of mock method calls\n",
          "\t\t// can skip methods but order should be followed\n",
          "\t\tInOrder inOrder = inOrder(mockList, mockMap);\n",
          "\t\tinOrder.verify(mockList).add(\"Pankaj\");\n",
          "\t\tinOrder.verify(mockList, calls(1)).size();\n",
          "\t\tinOrder.verify(mockList).isEmpty();\n",
          "\t\tinOrder.verify(mockMap).isEmpty();\n",
          "\n"
        ],
        "line_number": 60,
        "start_line": 56,
        "end_line": 66
      },
      {
        "link": "https://github.com/paullee29/Randoms/blob/d57f4b6afe368ff2fe829b25974bc871bfc569ad/junit5-r5.3.2/platform-tests/src/test/java/org/junit/platform/engine/support/hierarchical/CompositeLockTests.java\n",
        "code": [
          "\t\tReentrantLock lock1 = spy(new ReentrantLock());\n",
          "\t\tReentrantLock lock2 = spy(new ReentrantLock());\n",
          "\n",
          "\t\tnew CompositeLock(asList(lock1, lock2)).acquire();\n",
          "\n",
          "\t\tInOrder inOrder = inOrder(lock1, lock2);\n",
          "\t\tinOrder.verify(lock1).lockInterruptibly();\n",
          "\t\tinOrder.verify(lock2).lockInterruptibly();\n",
          "\t\tassertTrue(lock1.isLocked());\n",
          "\t\tassertTrue(lock2.isLocked());\n",
          "\t}\n"
        ],
        "line_number": 42,
        "start_line": 38,
        "end_line": 48
      },
      {
        "link": "https://github.com/przodownikR1/mockitoKata/blob/209a27b4fdf656e2bb7f05f747d05704d0adff3d/src/test/java/pl/java/scalatech/simple/SimpleTest.java\n",
        "code": [
          "\t//using a single mock\n",
          "\t\tsingleMock.add(\"was added first\");\n",
          "\t\tsingleMock.add(\"was added second\");\n",
          "\n",
          "\t\t//create an inOrder verifier for a single mock\n",
          "\t\tInOrder inOrder = inOrder(singleMock);\n",
          "\n",
          "\t\t//following will make sure that add is first called with \"was added first, then with \"was added second\"\n",
          "\t\tinOrder.verify(singleMock).add(\"was added first\");\n",
          "\t\tinOrder.verify(singleMock).add(\"was added second\");\n",
          "\n"
        ],
        "line_number": 142,
        "start_line": 138,
        "end_line": 148
      },
      {
        "link": "https://github.com/ypoluektovich/service-directory/blob/663731eef457ff88512fd3539667c5f39fa95789/src/test/java/org/shoushitsu/servicedirectory/DependencyTest.java\n",
        "code": [
          "\t}\n",
          "\n",
          "\t@Test\n",
          "\tvoid diamond() {\n",
          "\t\tassertEquals(5, env.five());\n",
          "\t\tInOrder inOrder = inOrder(mock);\n",
          "\t\tinOrder.verify(mock).five();\n",
          "\t\tinOrder.verify(mock).two();\n",
          "\t\tinOrder.verify(mock).one();\n",
          "\t\tinOrder.verify(mock).three();\n",
          "\t\tinOrder.verifyNoMoreInteractions();\n"
        ],
        "line_number": 89,
        "start_line": 85,
        "end_line": 95
      },
      {
        "link": "https://github.com/aliantony/springboot-plus-demo/blob/54619bc57741716e798d8c2df458ddc5f607c1a3/src/test/java/com/example/mockito/VerifyCallCount.java\n",
        "code": [
          "        list2.add(\"hello\");\n",
          "        list.add(2);\n",
          "        list2.add(\"world\");\n",
          "        //\u00e5\u00b0\u0086\u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e7\u009a\u0084mock\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e6\u0094\u00be\u00e5\u0085",
          "\u00a5InOrder\n",
          "        InOrder inOrder = inOrder(list,list2);\n",
          "        //\u00e4\u00b8\u008b\u00e9\u009d\u00a2\u00e7\u009a\u0084\u00e4\u00bb\u00a3\u00e7\u00a0\u0081\u00e4\u00b8\u008d\u00e8\u0083\u00bd\u00e9\u00a2\u00a0\u00e5\u0080\u0092\u00e9\u00a1\u00ba\u00e5\u00ba\u008f\u00ef\u00bc\u008c\u00e9\u00aa\u008c\u00e8\u00af\u0081\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e9\u00a1\u00ba\u00e5\u00ba\u008f\n",
          "        inOrder.verify(list).add(1);\n",
          "        inOrder.verify(list2).add(\"hello\");\n",
          "        inOrder.verify(list).add(2);\n",
          "        inOrder.verify(list2).add(\"world\");\n"
        ],
        "line_number": 100,
        "start_line": 96,
        "end_line": 106
      },
      {
        "link": "https://github.com/SmartToolFactory/Unit-Test-Tutorials/blob/82fc0357c27d7075c3d59e2bc870111c82f85310/Tutorial2-1Mockito/src/test/java/com/smarttoolfactory/tutorial2_1mockito/MockitoVerifyExamples.java\n",
        "code": [
          "        mockMap.isEmpty();\n",
          "        verify(mockMap, only()).isEmpty();\n",
          "\n",
          "        // testing order of mock method calls\n",
          "        // can skip methods but order should be followed\n",
          "        InOrder inOrder = inOrder(mockList, mockMap);\n",
          "        inOrder.verify(mockList).add(\"Pankaj\");\n",
          "        inOrder.verify(mockList, calls(1)).size();\n",
          "        inOrder.verify(mockList).isEmpty();\n",
          "        inOrder.verify(mockMap).isEmpty();\n",
          "\n"
        ],
        "line_number": 62,
        "start_line": 58,
        "end_line": 68
      },
      {
        "link": "https://github.com/c9n/hadoop/blob/a315107901aebc8d0c2b9f530d191673d27922a2/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/test/java/org/apache/hadoop/mapreduce/task/reduce/TestEventFetcher.java\n",
        "code": [
          "        new EventFetcherForTest<String,String>(tid, umbilical, scheduler,\n",
          "            reporter, MAX_EVENTS_TO_FETCH);\n",
          "    ef.getMapCompletionEvents();\n",
          "\n",
          "    verify(reporter, never()).reportException(any(Throwable.class));\n",
          "    InOrder inOrder = inOrder(umbilical);\n",
          "    inOrder.verify(umbilical).getMapCompletionEvents(any(JobID.class),\n",
          "        eq(0), eq(MAX_EVENTS_TO_FETCH), eq(tid));\n",
          "    inOrder.verify(umbilical).getMapCompletionEvents(any(JobID.class),\n",
          "        eq(MAX_EVENTS_TO_FETCH), eq(MAX_EVENTS_TO_FETCH), eq(tid));\n",
          "    inOrder.verify(umbilical).getMapCompletionEvents(any(JobID.class),\n"
        ],
        "line_number": 76,
        "start_line": 72,
        "end_line": 82
      },
      {
        "link": "https://github.com/kadrivaripuu/JavaTraining/blob/dc91bac386e6fb2f0d0ecf0019f610af7e9f32f9/Demo/Spring/Spring-000-MASTER/Spring-300-Advanced/Spring-370-UnitTests/src/test/java/com/knits/spring/utest/Test03MockitoAnnotations.java\n",
        "code": [
          "\t\taMockedListOfString.add(\"A Test\");\n",
          "\t\taMockedListOfString.remove(0);\n",
          "\t\taMockedListOfString.clear();\n",
          "\t\t\n",
          "\t\t//4) Verify order of calls\n",
          "\t\tInOrder inOrder = inOrder(aMockedListOfString);\n",
          "\t\tinOrder.verify(aMockedListOfString).indexOf(\"A Test\");\n",
          "\t\tinOrder.verify(aMockedListOfString).size();\n",
          "\t\tinOrder.verify(aMockedListOfString).add(\"A Test\");\n",
          "\t\tinOrder.verify(aMockedListOfString).remove(0);\n",
          "\t\tinOrder.verify(aMockedListOfString).clear();\n"
        ],
        "line_number": 67,
        "start_line": 63,
        "end_line": 73
      },
      {
        "link": "https://github.com/Dragonwrath/AndroidDemo/blob/bb7ffb4229097e01d6b50b0427f9b2d0dfa2721a/android-mock/src/test/java/com/joke/mock/offical_mock/OfficalTest_Part_3.java\n",
        "code": [
          "    }\n",
          "\n",
          "    /*\n",
          "     * Verification ignoring stubs (Since 1.9.0)\n",
          "     *  verifyNoMoreInteractions() \u00e6\u0088\u0096\u00e8\u0080\u0085",
          "verification inOrder() \u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e5\u00b8\u00ae\u00e5\u008a\u00a9\u00e6\u0088\u0091\u00e4\u00bb\u00ac\u00e5\u0087\u008f\u00e5\u00b0\u0091\u00e7\u009b\u00b8\u00e5\u00ba\u0094\u00e7\u009a\u0084\u00e5\u0086\u0097\u00e4\u00bd\u0099\u00e9\u00aa\u008c\u00e8\u00af\u0081\n",
          "     * \u00e8\u00ad\u00a6\u00e5\u0091\u008a\u00ef\u00bc\u009a\n",
          "     *  \u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e6\u00b3\u00a8\u00e6\u0084\u008f\u00e7\u009a\u0084\u00e6\u0098\u00afignoreStubs() \u00e5\u00b0\u0086\u00e4\u00bc\u009a\u00e5\u00af\u00bc\u00e8\u0087\u00b4\u00e8\u00bf\u0087\u00e5\u00ba\u00a6\u00e7\u009a\u0084\u00e4\u00bd\u00bf\u00e7\u0094\u00a8verifyNoMoreInteractions(ignoreStubs(...))\u00e6\u0096\u00b9\u00e6\u00b3\u0095\n",
          "     *  \u00e6\u0088\u0091\u00e4\u00bb\u00ac\u00e5\u00b9\u00b6\u00e4\u00b8\u008d\u00e5\u00ba\u0094\u00e8\u00af\u00a5\u00e5\u009c\u00a8\u00e6\u00af\u008f\u00e6\u00ac\u00a1test\u00e6\u00b5\u008b\u00e8\u00af\u0095\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e5\u0080\u0099\u00e9\u0083\u00bd\u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00e8\u00af\u00a5verify\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00ef\u00bc\u008c\u00e5\u009b\u00a0\u00e4\u00b8\u00ba\u00e5\u00ae\u0083\u00e5\u008f\u00aa\u00e6\u0098\u00af\u00e5\u009c\u00a8\u00e6\u00b5\u008b\u00e8\u00af\u0095\u00e5\u00b7\u00a5\u00e5\u0085",
          "\u00b7\u00e4\u00b8\u00ad\u00e4\u00bd\u009c\u00e4\u00b8\u00ba\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e7\u00ae\u0080\u00e5\u008d\u0095\u00e7\u009a\u0084\u00e3\u0080\u0081\u00e6\u0096\u00b9\u00e4\u00be\u00bf\u00e7\u009a\u0084\u00e6\u0096\u00ad\u00e8\u00a8\u0080\n",
          "     *  \u00e5\u00ba\u0094\u00e5\u00bd\u0093\u00e5\u009c\u00a8\u00e9\u0082\u00a3\u00e4\u00ba\u009b\u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e8\u00af\u00a5\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e5\u0080\u0099\u00e5\u0086\u008d\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e3\u0080\u0082\n"
        ],
        "line_number": 129,
        "start_line": 125,
        "end_line": 135
      }
    ],
    "com.google.common.collect.SetMultimap.asMap": [
      {
        "link": "https://github.com/chandlersong/TestCase/blob/0b02c0386ed734936c16af671ad077f536861b87/guava/src/test/java/me/study/java/guava/collections/MultiCollectionsExamples.java\n",
        "code": [
          "        map.put(\"b\", \"123\");\r\n",
          "\r\n",
          "        Assert.assertEquals(3, map.size());\r\n",
          "        Assert.assertEquals(2, map.keySet().size());\r\n",
          "\r\n",
          "        map.asMap().forEach((key, collection) -> {\r\n",
          "            Assert.assertTrue(((collection instanceof Set)));\r\n",
          "            logger.info(\"asMap:key is {}, collection is {}\", key, collection);\r\n",
          "        });\r\n",
          "\r\n",
          "        map.entries().forEach(entry -> {\r\n"
        ],
        "line_number": 45,
        "start_line": 41,
        "end_line": 51
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/collect/Multimaps.java\n",
        "code": [
          "        public void clear() {\n",
          "            throw new UnsupportedOperationException();\n",
          "        }\n",
          "\n",
          "        @Override // com.google.common.collect.ForwardingMultimap, com.google.common.collect.Multimap\n",
          "        public Map<K, Collection<V>> asMap() {\n",
          "            Map<K, Collection<V>> map2 = this.map;\n",
          "            if (map2 != null) {\n",
          "                return map2;\n",
          "            }\n",
          "            Map<K, Collection<V>> unmodifiableMap = Collections.unmodifiableMap(Maps.transformValues(this.delegate.asMap(), new Function<Collection<V>, Collection<V>>() {\n"
        ],
        "line_number": 336,
        "start_line": 332,
        "end_line": 342
      },
      {
        "link": "https://github.com/gridgentoo/kairosDB/blob/a0f28f8a8575a4c8b2d9a6601f63364885753cbf/src/main/java/org/kairosdb/core/http/rest/json/SetMultimapSerializer.java\n",
        "code": [
          "public class SetMultimapSerializer implements JsonSerializer<SetMultimap>\n",
          "{\n",
          "\t@Override\n",
          "\tpublic JsonElement serialize(SetMultimap src, Type typeOfSrc, JsonSerializationContext context)\n",
          "\t{\n",
          "\t\treturn context.serialize(src.asMap());\n",
          "\t}\n",
          "}\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 17
      },
      {
        "link": "}https://github.com/SmartDataAnalytics/aksw-commons/blob/41f635d2350d10f031977cb83906e084ef699ac3/aksw-commons-collections/src/main/java/org/aksw/commons/collections/multimaps/ISetMultimap.java\n",
        "code": [
          "\n",
          "import com.google.common.collect.SetMultimap;\n",
          "\n",
          "public interface ISetMultimap<K, V>\n",
          "{\n",
          "\t//Map<K, Collection<V>> asMap();\n",
          "    SetMultimap<K, V> asMultimap();\n",
          "    \t\n",
          "\tboolean put(K key, V value);\n",
          "\n",
          "\tvoid putAll(K key, Collection<V> values);\n"
        ],
        "line_number": 11,
        "start_line": 7,
        "end_line": 17
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/collect/Multimaps.java\n",
        "code": [
          "        public void clear() {\n",
          "            throw new UnsupportedOperationException();\n",
          "        }\n",
          "\n",
          "        @Override // com.google.common.collect.ForwardingMultimap, com.google.common.collect.Multimap\n",
          "        public Map<K, Collection<V>> asMap() {\n",
          "            Map<K, Collection<V>> map2 = this.map;\n",
          "            if (map2 != null) {\n",
          "                return map2;\n",
          "            }\n",
          "            Map<K, Collection<V>> unmodifiableMap = Collections.unmodifiableMap(Maps.transformValues(this.delegate.asMap(), new com.google.common.base.Function<Collection<V>, Collection<V>>() {\n"
        ],
        "line_number": 421,
        "start_line": 417,
        "end_line": 427
      },
      {
        "link": "https://github.com/mchochlov/CoRA/blob/43a1ce77cbb7c50e887cf18935627aa5e57d2616/src/main/java/com/woodplc/cora/storage/gson/adapters/GsonSetMultimapAdapter.java\n",
        "code": [
          "        }\r\n",
          "    }\r\n",
          "\r\n",
          "    @Override\r\n",
          "    public JsonElement serialize(SetMultimap<K, V> src, Type typeOfSrc, JsonSerializationContext context) {\r\n",
          "        return context.serialize(src.asMap(), asMapType(typeOfSrc));\r\n",
          "    }\r\n",
          "    @Override\r\n",
          "    public SetMultimap<K, V> deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)\r\n",
          "            throws JsonParseException {\r\n",
          "        Map<K, Collection<V>> asMap = context.deserialize(json, asMapType(typeOfT));\r\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "https://github.com/InscopeMetrics/kairosdb/blob/6c1c17c4291bfdf7f3e2cb2d6ca06ea5774ebcc1/src/main/java/org/kairosdb/core/http/rest/json/SetMultimapSerializer.java\n",
        "code": [
          "import java.lang.reflect.Type;\n",
          "\n",
          "public class SetMultimapSerializer implements JsonSerializer<SetMultimap<?, ?>> {\n",
          "    @Override\n",
          "    public JsonElement serialize(final SetMultimap<?, ?> src, final Type typeOfSrc, final JsonSerializationContext context) {\n",
          "        return context.serialize(src.asMap());\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 12,
        "start_line": 8,
        "end_line": 15
      },
      {
        "link": "https://github.com/waterystone/adu-test/blob/ce65ccce187ff99e8912e00301b0800acb8a025a/src/test/java/com/adu/google/common/collect/multimap/SetMultimapTest.java\n",
        "code": [
          "\t\tint res = multimap.size();\n",
          "\t\tlogger.debug(\"res={}\", res);\n",
          "\t}\n",
          "\n",
          "\t@Test\n",
          "\tpublic void asMap() {\n",
          "\t\tMap<String, Collection<String>> res = multimap.asMap();\n",
          "\t\tlogger.debug(\"res={}\", res);\n",
          "\t}\n",
          "\n",
          "\t@Test\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "https://github.com/UESTC-DSCLab/anaDB/blob/fe36595b688426ef0964f4f617df7e7bb4848a2c/src/main/java/org/kairosdb/core/http/rest/json/SetMultimapSerializer.java\n",
        "code": [
          "public class SetMultimapSerializer implements JsonSerializer<SetMultimap>\n",
          "{\n",
          "\t@Override\n",
          "\tpublic JsonElement serialize(SetMultimap src, Type typeOfSrc, JsonSerializationContext context)\n",
          "\t{\n",
          "\t\treturn context.serialize(src.asMap());\n",
          "\t}\n",
          "}\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 17
      },
      {
        "link": "https://github.com/markdeutel/SmaliAnalyzer/blob/8ab12cb3bc59651fb18fb7dac4c2482a2d797d31/src/main/java/de/fau/fuzzing/smalianalyzer/serialize/JsonSetMultimapSerializer.java\n",
        "code": [
          "public class JsonSetMultimapSerializer implements JsonSerializer<SetMultimap>\n",
          "{\n",
          "    @Override\n",
          "    public JsonElement serialize(SetMultimap setMultimap, Type type, JsonSerializationContext context)\n",
          "    {\n",
          "        return context.serialize(setMultimap.asMap());\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 20
      }
    ],
    "com.google.common.collect.Range.closed": [
      {
        "link": "https://github.com/jiusazai/guavaDemo/blob/87619c27b21bd1a1d29dfec8358f4438067be65d/src/main/java/Collect/_008_guavaRangeSet.java\n",
        "code": [
          "\n",
          "    }\n",
          "\n",
          "    private static void initRangeMap() {\n",
          "        RangeMap<Integer, String> rangeMap = TreeRangeMap.create();\n",
          "        rangeMap.put(Range.closed(1, 10), \"foo\"); //{[1,10] => \"foo\"}\n",
          "        rangeMap.put(Range.open(3, 6), \"bar\"); //{[1,3] => \"foo\", (3,6) => \"bar\", [6,10] => \"foo\"}\n",
          "        rangeMap.put(Range.open(10, 20), \"foo\"); //{[1,3] => \"foo\", (3,6) => \"bar\", [6,10] => \"foo\", (10,20) => \"foo\"}\n",
          "        rangeMap.remove(Range.closed(5, 11)); //{[1,3] => \"foo\", (3,5) => \"bar\", (11,20) => \"foo\"}\n",
          "    }\n",
          "\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      },
      {
        "link": "https://github.com/18965050/oasis/blob/e5f1cfa32b74fe37aaf0872c497f7c8502df052d/oasis-common-test/src/test/java/cn/xyz/chaos/guava/common/collection/RangeTest.java\n",
        "code": [
          "    @Test\n",
          "    public void testPersonAgeRange() {\n",
          "        Person person = new Person(\"Art\", \"Vandelay\", 37, \"M\");\n",
          "        Person person1 = new Person(\"Johnny\", \"Quest\", 14, \"M\");\n",
          "        Person person2 = new Person(\"Fred\", \"Flinstone\", 50, \"M\");\n",
          "        Range<Integer> ageRange = Range.closed(35, 50);\n",
          "\n",
          "        Function<Person, Integer> ageFunction = new Function<Person, Integer>() {\n",
          "            @Override\n",
          "            public Integer apply(Person person) {\n",
          "                return person.getAge();\n"
        ],
        "line_number": 42,
        "start_line": 38,
        "end_line": 48
      },
      {
        "link": "https://github.com/khotyn/learning-guava/blob/e8241b981cb461023fa89edf7c2d366ce2700f98/src/test/java/com/khotyn/learning/guava/LearningRangeSet.java\n",
        "code": [
          "public class LearningRangeSet {\n",
          "\n",
          "    @Test\n",
          "    public void testRangeSet() {\n",
          "        RangeSet<Integer> rangeSet = TreeRangeSet.create();\n",
          "        rangeSet.add(Range.closed(1, 10));\n",
          "        Assert.assertEquals(1, rangeSet.asRanges().size());\n",
          "        rangeSet.add(Range.openClosed(11, 15));\n",
          "        Assert.assertEquals(2, rangeSet.asRanges().size());\n",
          "        rangeSet.add(Range.open(15, 20));\n",
          "        Assert.assertEquals(2, rangeSet.asRanges().size());\n"
        ],
        "line_number": 19,
        "start_line": 15,
        "end_line": 25
      },
      {
        "link": "https://github.com/d1sant/research-and-dev/blob/eda2c58f7a7ec34832fa25580c16a152c2b53367/src/main/java/com/my/research/and/dev/Ranges.java\n",
        "code": [
          "        System.out.println(rm.get(199));\n",
          "        System.out.println(rm.get(1990));\n",
          "        System.out.println(rm.subRangeMap(Range.open(2, 12)));\n",
          "\n",
          "        RangeSet<Integer> rangeSet = TreeRangeSet.create();\n",
          "        rangeSet.add(Range.closed(1, 10)); // {[1, 10]}\n",
          "        rangeSet.add(Range.closedOpen(11, 15)); // disconnected range: {[1, 10], [11, 15)}\n",
          "        rangeSet.add(Range.closedOpen(15, 20)); // connected range; {[1, 10], [11, 20)}\n",
          "        rangeSet.add(Range.openClosed(0, 0)); // empty range; {[1, 10], [11, 20)}\n",
          "        System.out.println(rangeSet);\n",
          "\n"
        ],
        "line_number": 52,
        "start_line": 48,
        "end_line": 58
      },
      {
        "link": "https://github.com/hardforkio/secret-conquery/blob/f4c6dd028d5d082a240697ef6c63eaecd370c423/backend/src/main/java/com/bakdata/conquery/models/common/IRange.java\n",
        "code": [
          "\t\t\treturn com.google.common.collect.Range.atMost(getMax());\n",
          "\t\t}\n",
          "\t\tif(isAll()) {\n",
          "\t\t\treturn com.google.common.collect.Range.all();\n",
          "\t\t}\n",
          "\t\treturn com.google.common.collect.Range.closed(getMin(), getMax());\n",
          "\t}\n",
          "\n",
          "\tdefault boolean intersects(CLASS other) {\n",
          "\t\tif(other == null) {\n",
          "\t\t\treturn false;\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      },
      {
        "link": "https://github.com/zhangdiandian2016/study/blob/69895766c844b419b6d0bd5073b95b3d4fd2bdad/src/main/java/study/guava/collect/MultiCollectionsTest.java\n",
        "code": [
          "\n",
          "        /** 6. RangeSet \u00e5\u008c\u00ba\u00e9\u0097\u00b4\u00e8\u00bf\u0090\u00e7\u00ae\u0097; RangeMap \u00e5\u008c\u00ba\u00e9\u0097\u00b4\u00e6\u0098\u00a0\u00e5\u00b0\u0084*/\n",
          "        System.out.println(\"====6.RangeSet\u00e3\u0080\u0081RangeMap=======\");\n",
          "        RangeSet<Integer> rangeSet = TreeRangeSet.create();\n",
          "        // [1,10]\n",
          "        rangeSet.add(Range.closed(1,10));\n",
          "        // \u00e4\u00b8\u008d\u00e7\u009b\u00b8\u00e8\u00bf\u009e\u00e5\u008c\u00ba\u00e9\u0097\u00b4  [1,10] [11,15)\n",
          "        rangeSet.add(Range.closedOpen(11,15));\n",
          "        // \u00e7\u009b\u00b8\u00e8\u00bf\u009e\u00e5\u0090\u0088\u00e5\u00b9\u00b6[11,15\u00ef\u00bc\u0089+[15,20)=[11\u00ef\u00bc\u008c20\u00ef\u00bc\u0089\u00ef\u00bc\u008c\u00e6\u009c\u0080\u00e7\u00bb\u0088\u00e7\u00bb\u0093\u00e6\u009e\u009c\u00ef\u00bc\u009a[1,10] [11,20)\n",
          "        rangeSet.add(Range.closedOpen(15,20));\n",
          "        // [1,10]-(5,10)=[1,5][10,10] ,\u00e6\u009c\u0080\u00e7\u00bb\u0088\u00e7\u00bb\u0093\u00e6\u009e\u009c\u00ef\u00bc\u009a[1,5][10,10][11,20]\n"
        ],
        "line_number": 84,
        "start_line": 80,
        "end_line": 90
      },
      {
        "link": "https://github.com/opendata-euskadi/java-utils/blob/6f66dc26c2bd0dc136742e27a2214f2f2b43d938/r01f/r01fBase/r01fBaseClasses/src/main/java/r01f/types/Range.java\n",
        "code": [
          " * \t\t<li>\"[\" or \"]\" represents a lower or upper bound where the bound itself is included in the range</li>\n",
          " * \t\t<li>\"(\" or \")\" represents a lower or upper bound where the bound itself is EXCLUDED from the range</li>\n",
          " * <li>\n",
          " * <pre>\n",
          " * \t\t(a..b)\t\topen(C, C)\n",
          " * \t\t[a..b]\t\tclosed(C, C)\n",
          " * \t\t[a..b)\t\tclosedOpen(C, C)\n",
          " * \t\t(a..b]\t\topenClosed(C, C)\n",
          " * \t\t(a..+oo)\tgreaterThan(C)\n",
          " * \t\t[a..+oo)\tatLeast(C)\n",
          " * \t\t(-oo..b)\tlessThan(C)\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/RangeUtil.java\n",
        "code": [
          "*/ \n",
          "public static <T> org.apache.commons.lang3.Range<T> between(T p0,T p1,java.util.Comparator<T> p2){\n",
          "\treturn org.apache.commons.lang3.Range.between(p0,p1,p2);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.Range#closed(C,C)}\n",
          "*@see com.google.common.collect.Range#closed(C,C)\n",
          "*<code>public static <C> com.google.common.collect.Range<C> com.google.common.collect.Range.closed(C,C)\n",
          "*closed(C p0,C p1)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 79,
        "start_line": 75,
        "end_line": 85
      },
      {
        "link": "}https://github.com/ByDSA/datils4j/blob/b872fe0f45f2eefa1fbd9aa496671770d0a423da/src/main/java/es/danisales/utils/Range.java\n",
        "code": [
          "import com.google.common.base.Predicate;\n",
          "\n",
          "import java.io.Serializable;\n",
          "\n",
          "public interface Range<T extends Comparable<T>> extends Predicate<T>, Serializable {\n",
          "    static <T extends Comparable<T>> Range<T> closed(T ini, T end) {\n",
          "        if (ini.compareTo(end) <= 0)\n",
          "            return new RangeSimple<>(com.google.common.collect.Range.closed(ini, end));\n",
          "        else\n",
          "            return new RangeComposite<>(\n",
          "                    com.google.common.collect.Range.atMost(end),\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "https://github.com/kentative/academic/blob/d5e156e3569e947aaaa924f1bbf67e89f1bf0c81/src/main/java/ksl/academic/structure/GuavaRangeSet.java\n",
        "code": [
          "public class GuavaRangeSet {\n",
          "\n",
          "    public static void main(String[] args) {\n",
          "        RangeSet<Integer> rs = TreeRangeSet.create();\n",
          "\n",
          "        rs.add(Range.closed(0, 9));\n",
          "\n",
          "        System.out.println(rs.contains(3));\n",
          "        System.out.println(rs.rangeContaining(3));\n",
          "\n",
          "\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      }
    ],
    "com.google.common.collect.Maps.newTreeMap": [
      {
        "link": "https://github.com/Gopro336/GlowClient-leak/blob/9083aeb55d744b212380156585f6ea7788f81930/SRC/src/main/java/com/client/glowclient/utils/classes/tasks/IProcess.java\n",
        "code": [
          "\n",
          "public interface IProcess {\n",
          "    public void process(DataEntry var1);\n",
          "\n",
          "    public static class DataEntry {\n",
          "        private final Map<String, Object> data = Maps.newTreeMap((Comparator)String.CASE_INSENSITIVE_ORDER);\n",
          "\n",
          "        public <T> T getOrDefault(String o, T defaultValue) {\n",
          "            try {\n",
          "                return (T)this.data.get(o);\n",
          "            }\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 22
      },
      {
        "link": "https://github.com/qazzcl/jssp/blob/60c3118e74392c7a006bdc8eba1dc45eb518f1a6/service/src/main/java/jssp/util/MapsUtils.java\n",
        "code": [
          "        }\n",
          "        return result;\n",
          "    }\n",
          "\n",
          "    public static <K extends Comparable<K>, V> TreeMap<K, V> treeMapOf (K key, V value) {\n",
          "        TreeMap<K, V> result = Maps.newTreeMap();\n",
          "        result.put(key, value);\n",
          "        return result;\n",
          "    }\n",
          "\n",
          "    public static <K extends Comparable<K>, V> TreeMap<K, V> treeMapOf (K key1, V value1, K key2, V value2) {\n"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      },
      {
        "link": "https://github.com/bigblue311/zhaile/blob/747ad916f4588fb03ed6e6914b03e6c6cf540fa9/zhaile.app.framework/src/com/victor/framework/search/basic/ResultAttribute.java\n",
        "code": [
          "import java.util.Map;\n",
          "\n",
          "import com.google.common.collect.Maps;\n",
          "\n",
          "public class ResultAttribute {\t\n",
          "\tprivate Map<Long,Integer> priceRange = Maps.newTreeMap(new ElementsComparable());\n",
          "\tprivate Map<Long,Integer> shopId = Maps.newTreeMap(new ElementsComparable());\n",
          "\tprivate Map<Long,Integer> categoryId = Maps.newTreeMap(new ElementsComparable());\n",
          "\t\n",
          "\tpublic Map<Long, Integer> getPriceRange() {\n",
          "\t\treturn priceRange;\n"
        ],
        "line_number": 8,
        "start_line": 4,
        "end_line": 14
      },
      {
        "link": "https://github.com/hp1982/hp-framework/blob/1343036d2809ff84ffb0e39afb241486f872f731/utils/src/main/java/com/huipeng1982/utils/collection/MapUtil.java\n",
        "code": [
          "    }\n",
          "\n",
          "    /**\n",
          "     * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e7\u00ad\u0089\u00e5\u008f\u00b7\u00e5\u00b7\u00a6\u00e8\u00be\u00b9\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00ef\u00bc\u008c\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e6\u00ad\u00a3\u00e7\u00a1\u00ae\u00e7\u009a\u0084TreeMap.\n",
          "     *\n",
          "     * @see com.google.common.collect.Maps#newTreeMap()\n",
          "     */\n",
          "    @SuppressWarnings(\"rawtypes\")\n",
          "    public static <K extends Comparable, V> TreeMap<K, V> newSortedMap() {\n",
          "        return new TreeMap<K, V>();\n",
          "    }\n"
        ],
        "line_number": 159,
        "start_line": 155,
        "end_line": 165
      },
      {
        "link": "https://github.com/joseph1506/practice/blob/866930306e8a8ebd35dfc552a58ad3e44cf671ac/collections/TestMapObject.java\n",
        "code": [
          "        Map<MapKeyObject,String> hashMap= newHashMap();\n",
          "        hashMap.put(key3,\"22\");\n",
          "        hashMap.put(key1,\"20\");\n",
          "        hashMap.put(key2,\"21\");\n",
          "\n",
          "        Map<MapKeyObject,String> hashMapTree= newTreeMap();\n",
          "        hashMapTree.put(key3,\"22\");\n",
          "        hashMapTree.put(key1,\"20\");\n",
          "        hashMapTree.put(key2,\"21\");\n",
          "        System.out.println(\"Just For check\");\n",
          "\n"
        ],
        "line_number": 27,
        "start_line": 23,
        "end_line": 33
      },
      {
        "link": "https://github.com/Texasjake95/texasjake95-commons/blob/662a4c2be83d63f4510506f4f6bcaf9825e42825/src/main/java/com/texasjake95/commons/util/LanguageMap.java\n",
        "code": [
          "import com.google.common.collect.Maps;\n",
          "import com.texasjake95.commons.file.FileInput;\n",
          "\n",
          "public class LanguageMap {\n",
          "\t\n",
          "\tprivate Map<String, Map<String, String>> map = Maps.newTreeMap();\n",
          "\t\n",
          "\tpublic String translate(String string)\n",
          "\t{\n",
          "\t\treturn getString(string);\n",
          "\t}\n"
        ],
        "line_number": 11,
        "start_line": 7,
        "end_line": 17
      },
      {
        "link": "https://github.com/duyleekun/zycami-ded/blob/27686ca846de6d164692c81bac2ae7f85710361f/src/main/java/com/google/common/collect/Maps.java\n",
        "code": [
          "\n",
          "    public static SortedMapDifference difference(SortedMap object, Map map) {\n",
          "        Preconditions.checkNotNull(object);\n",
          "        Preconditions.checkNotNull(map);\n",
          "        Object object2 = Maps.orNaturalOrder(object.comparator());\n",
          "        TreeMap treeMap = Maps.newTreeMap((Comparator)object2);\n",
          "        TreeMap treeMap2 = Maps.newTreeMap((Comparator)object2);\n",
          "        treeMap2.putAll(map);\n",
          "        TreeMap treeMap3 = Maps.newTreeMap((Comparator)object2);\n",
          "        object2 = Maps.newTreeMap((Comparator)object2);\n",
          "        Equivalence equivalence = Equivalence.equals();\n"
        ],
        "line_number": 208,
        "start_line": 204,
        "end_line": 214
      },
      {
        "link": "https://github.com/fxleyu/cu-cafes/blob/629f2e08c0cbb63e6d5004b76e6cd94cf7205d7f/hello-java/src/test/java/fx/leyu/jdk/util/TreeMapTest.java\n",
        "code": [
          "public class TreeMapTest {\n",
          "    private static final String NULL_KEY = null;\n",
          "\n",
          "    @Test(expected = NullPointerException.class)\n",
          "    public void testGetByNullKey() {\n",
          "        TreeMap<String, String> treeMap = Maps.newTreeMap();\n",
          "        treeMap.get(null);\n",
          "    }\n",
          "\n",
          "    @Test(expected = NullPointerException.class)\n",
          "    public void testGetByNullKeyWithMapUtils() {\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": "https://github.com/paranoidq/qtill/blob/c0ceae4a78d80f298a416a36c9ce2ade93a1e0bd/qtill-commons/src/main/java/me/qtill/commons/collection/MapUtil.java\n",
        "code": [
          "    }\n",
          "\n",
          "    /**\n",
          "     * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e7\u00ad\u0089\u00e5\u008f\u00b7\u00e5\u00b7\u00a6\u00e8\u00be\u00b9\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00ef\u00bc\u008c\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e6\u00ad\u00a3\u00e7\u00a1\u00ae\u00e7\u009a\u0084TreeMap.\n",
          "     *\n",
          "     * @see com.google.common.collect.Maps#newTreeMap()\n",
          "     */\n",
          "    @SuppressWarnings(\"rawtypes\")\n",
          "    public static <K extends Comparable, V> TreeMap<K, V> newSortedMap() {\n",
          "        return new TreeMap<K, V>();\n",
          "    }\n"
        ],
        "line_number": 171,
        "start_line": 167,
        "end_line": 177
      },
      {
        "link": "https://github.com/guanzhenxing/webfuse/blob/cb7394a61f170d5c073c8240453217b80adaf089/webfuse-core/src/main/java/cn/webfuse/core/kit/collection/MapKits.java\n",
        "code": [
          "     * copy from vjtools\n",
          "     *\n",
          "     * @param <K>\n",
          "     * @param <V>\n",
          "     * @return\n",
          "     * @see com.google.common.collect.Maps#newTreeMap()\n",
          "     */\n",
          "    public static <K extends Comparable, V> TreeMap<K, V> newSortedMap() {\n",
          "        return new TreeMap<K, V>();\n",
          "    }\n",
          "\n"
        ],
        "line_number": 181,
        "start_line": 177,
        "end_line": 187
      }
    ],
    "com.google.common.io.FileBackedOutputStream.asByteSource": [
      {
        "link": "https://github.com/ggaier/android_platform_tools_base/blob/85c6b73c22cd23c069d94eb19c824d4fb74a5ec9/sdk-common/src/main/java/com/android/ide/common/process/BaseProcessOutputHandler.java\n",
        "code": [
          "                LineProcessor<T> lineProcessor) throws ProcessException {\n",
          "            if (!mClosed.get()) {\n",
          "                throw new ProcessException(\"Output and Error streams not closed\");\n",
          "            }\n",
          "            try {\n",
          "                return outputStream.asByteSource()\n",
          "                        .asCharSource(Charsets.UTF_8).readLines(lineProcessor);\n",
          "            } catch (IOException e) {\n",
          "                throw new ProcessException(e);\n",
          "            }\n",
          "        }\n"
        ],
        "line_number": 102,
        "start_line": 98,
        "end_line": 108
      },
      {
        "link": "https://github.com/EHRI/ehri-search-tools/blob/b11f875c629e0b048b6f28991b594735f8e54b4c/index-data-converter/src/main/java/eu/ehri/project/indexing/sink/impl/IndexJsonSink.java\n",
        "code": [
          "        }.start();\n",
          "\n",
          "        try {\n",
          "            try {\n",
          "                if (writeCount > 0) {\n",
          "                    index.update(out.asByteSource().openStream(), true);\n",
          "                    writeCount = 0;\n",
          "                }\n",
          "            } catch (Exception e) {\n",
          "                throw new SinkException(\"Error updating Solr\", e);\n",
          "            }\n"
        ],
        "line_number": 73,
        "start_line": 69,
        "end_line": 79
      },
      {
        "link": "}https://github.com/jixingrui/java/blob/347680e37a363ebf3b5d79e38718416de5f787f0/Fractale3/old/CopyOfZintDecoder.java\n",
        "code": [
          "\t\t\t} else {\r\n",
          "\t\t\t\tbyte[] data = new byte[leftLength];\r\n",
          "\t\t\t\tin.readBytes(data);\r\n",
          "\t\t\t\tbuffer.write(data);\r\n",
          "\t\t\t\tcheckpoint(DecoderState.READ_LENGTH);\r\n",
          "\t\t\t\tout.add(buffer.asByteSource().read());\r\n",
          "\t\t\t\tbuffer.reset();\r\n",
          "\t\t\t}\r\n",
          "\r\n",
          "\t\t\t// Trace.trace(\"zint receive data: \" + length);\r\n",
          "\t\t\tbreak;\r\n"
        ],
        "line_number": 57,
        "start_line": 53,
        "end_line": 63
      },
      {
        "link": "https://github.com/qiangxu1996/vmtrace/blob/3411c5436d0d34e6e2b84cbf0e9395ac8c55c9d4/base/sdk-common/src/main/java/com/android/ide/common/process/BaseProcessOutputHandler.java\n",
        "code": [
          "                LineProcessor<T> lineProcessor) throws ProcessException {\n",
          "            if (!mClosed.get()) {\n",
          "                throw new ProcessException(\"Output and Error streams not closed\");\n",
          "            }\n",
          "            try {\n",
          "                return outputStream.asByteSource()\n",
          "                        .asCharSource(Charsets.UTF_8).readLines(lineProcessor);\n",
          "            } catch (IOException e) {\n",
          "                throw new ProcessException(e);\n",
          "            }\n",
          "        }\n"
        ],
        "line_number": 102,
        "start_line": 98,
        "end_line": 108
      },
      {
        "link": "https://github.com/pliskowski/ECJ-2015/blob/836708501b8beea14c4e318f680e1620b28c3c70/cevo-framework/src/main/java/put/ci/cevo/framework/algorithms/history/FileBackedEvolutionHistory.java\n",
        "code": [
          "\t\t}\n",
          "\t}\n",
          "\n",
          "\t@Override\n",
          "\tpublic List<EvolutionState> getEvolutionHistory() {\n",
          "\t\ttry (BinarySerializationInput input = new BinarySerializationInput(historyStream.asByteSource()\n",
          "\t\t\t.openBufferedStream())) {\n",
          "\t\t\treturn manager.<EvolutionState> deserializeStream(input).toList();\n",
          "\t\t} catch (IOException e) {\n",
          "\t\t\tthrow new RuntimeException(e);\n",
          "\t\t}\n"
        ],
        "line_number": 50,
        "start_line": 46,
        "end_line": 56
      },
      {
        "link": "https://github.com/otto-de/hmac-auth/blob/0a2ed6035c3b3d8286b024025c6486667029e5e7/hmac-auth-common/src/main/java/de/otto/hmac/authentication/WrappedOutputStream.java\n",
        "code": [
          "        tmpOut.write(b);\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public void close() throws IOException {\n",
          "        addHmacHttpRequestHeaders(cr, user, secretKey, Instant.now(clock), tmpOut.asByteSource());\n",
          "\n",
          "        if (tmpOut.asByteSource().isEmpty()) {\n",
          "            // workaround for bug in jersey: without writing a single byte to the\n",
          "            // underlying CommittingOutputStream, its method commit/commitStream will not be executed.\n",
          "            // This is responsible to write lately added headers either via\n"
        ],
        "line_number": 49,
        "start_line": 45,
        "end_line": 55
      },
      {
        "link": "https://github.com/anjackson/warc-proxy/blob/9a98578eb64ae5a8d24b73f033b4d7c98d27f989/src/main/java/net/anjackson/warc/proxy/RecordingChannelOutboundHandlerAdapter.java\n",
        "code": [
          "\t\tLOG.info(\"Recorded-out-read:\\n\" + new String(getRecordedBytes()));\n",
          "\t\tctx.read();\n",
          "\t}\n",
          "\n",
          "\tpublic InputStream getRecordedInputStream() throws IOException {\n",
          "\t\treturn this.fbos.asByteSource().openBufferedStream();\n",
          "\t}\n",
          "\n",
          "\tpublic byte[] getRecordedSha1Digest() {\n",
          "\t\treturn \"Test\".getBytes();\n",
          "\t\t// return this.recordingOutputStream.getDigestValue();\n"
        ],
        "line_number": 64,
        "start_line": 60,
        "end_line": 70
      },
      {
        "link": "https://github.com/wjaskowski/TCIAIG-2015-Co-CMA-ES/blob/08bc9282ecb80327a2496861e762bdd974f6b2ec/cevo-framework/src/main/java/put/ci/cevo/framework/algorithms/history/FileBackedEvolutionHistory.java\n",
        "code": [
          "\t\t}\n",
          "\t}\n",
          "\n",
          "\t@Override\n",
          "\tpublic List<EvolutionState> getEvolutionHistory() {\n",
          "\t\ttry (BinarySerializationInput input = new BinarySerializationInput(historyStream.asByteSource()\n",
          "\t\t\t.openBufferedStream())) {\n",
          "\t\t\treturn manager.<EvolutionState> deserializeStream(input).toList();\n",
          "\t\t} catch (IOException e) {\n",
          "\t\t\tthrow new RuntimeException(e);\n",
          "\t\t}\n"
        ],
        "line_number": 50,
        "start_line": 46,
        "end_line": 56
      },
      {
        "link": "https://github.com/ethanfan/EMMS/blob/85e9dc1ead4a586c00985641aafd4ae61303e2f5/datastore_android_sdk/src/main/java/com/datastore_android_sdk/representation/JsonDataRepresentation.java\n",
        "code": [
          "\t@Override\n",
          "\tpublic long getAvailableSize() {\n",
          "\t\ttry {\n",
          "\t\t\tif (getSize() == Representation.UNKNOWN_SIZE) {\t\t\t\t\n",
          "\t\t\t\twrite(getBuffer());\n",
          "\t\t\t\tsetSize(getBuffer().asByteSource().size());\n",
          "\t\t\t}\n",
          "\t\t\treturn getSize();\n",
          "\t\t} catch (Exception e) {\n",
          "\t\t\t// Ignored\n",
          "\t\t}\n"
        ],
        "line_number": 95,
        "start_line": 91,
        "end_line": 101
      },
      {
        "link": "https://github.com/koo-inc/calico/blob/c7bb9bf8a0f87283f8b1a65098d9106afcca1e69/calico-util/src/main/java/jp/co/freemind/calico/core/util/FileBackedInputStream.java\n",
        "code": [
          "  public FileBackedInputStream(InputStream is, int threshold) {\n",
          "    this.threshold = threshold;\n",
          "    try (FileBackedOutputStream fbos = new FileBackedOutputStream(threshold)) {\n",
          "      ByteStreams.copy(is, fbos);\n",
          "      is.close();\n",
          "      this.byteSource = fbos.asByteSource();\n",
          "      this.is = byteSource.openBufferedStream();\n",
          "    } catch (IOException e) {\n",
          "      this.byteSource = ByteSource.empty();\n",
          "      this.is = new ByteArrayInputStream(new byte[0]);\n",
          "    }\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      }
    ],
    "org.mockito.stubbing.OngoingStubbing.thenCallRealMethod": [
      {
        "link": "https://github.com/chembohuang/powermock/blob/09cf76fa37d85d303c76ceba099ff34dd0b5108b/api/mockito/src/main/java/org/powermock/api/mockito/internal/expectation/DelegatingToConstructorsOngoingStubbing.java\n",
        "code": [
          "                when.thenThrow(throwableClasses);\n",
          "            }\n",
          "        }.invoke();\n",
          "    }\n",
          "\n",
          "    public OngoingStubbing<T> thenCallRealMethod() {\n",
          "        stubbing.thenCallRealMethod();\n",
          "        return new InvokeStubMethod() {\n",
          "            @Override\n",
          "            public void performStubbing(OngoingStubbing<T> when) {\n",
          "                when.thenCallRealMethod();\n"
        ],
        "line_number": 83,
        "start_line": 79,
        "end_line": 89
      },
      {
        "link": "https://github.com/nkxiaochuan/powermock/blob/64925fadeba2432358a89cd466576fd9e4e3c640/api/mockito/src/main/java/org/powermock/api/mockito/internal/expectation/DelegatingToConstructorsOngoingStubbing.java\n",
        "code": [
          "                when.thenThrow(throwableClasses);\n",
          "            }\n",
          "        }.invoke();\n",
          "    }\n",
          "\n",
          "    public OngoingStubbing<T> thenCallRealMethod() {\n",
          "        stubbing.thenCallRealMethod();\n",
          "        return new InvokeStubMethod() {\n",
          "            @Override\n",
          "            public void performStubbing(OngoingStubbing<T> when) {\n",
          "                when.thenCallRealMethod();\n"
        ],
        "line_number": 83,
        "start_line": 79,
        "end_line": 89
      },
      {
        "link": "https://github.com/chiffchaff/powermock/blob/09cf76fa37d85d303c76ceba099ff34dd0b5108b/api/mockito/src/main/java/org/powermock/api/mockito/internal/expectation/DelegatingToConstructorsOngoingStubbing.java\n",
        "code": [
          "                when.thenThrow(throwableClasses);\n",
          "            }\n",
          "        }.invoke();\n",
          "    }\n",
          "\n",
          "    public OngoingStubbing<T> thenCallRealMethod() {\n",
          "        stubbing.thenCallRealMethod();\n",
          "        return new InvokeStubMethod() {\n",
          "            @Override\n",
          "            public void performStubbing(OngoingStubbing<T> when) {\n",
          "                when.thenCallRealMethod();\n"
        ],
        "line_number": 83,
        "start_line": 79,
        "end_line": 89
      },
      {
        "link": "https://github.com/noushadali/powermock/blob/64925fadeba2432358a89cd466576fd9e4e3c640/api/mockito/src/main/java/org/powermock/api/mockito/internal/expectation/DelegatingToConstructorsOngoingStubbing.java\n",
        "code": [
          "                when.thenThrow(throwableClasses);\n",
          "            }\n",
          "        }.invoke();\n",
          "    }\n",
          "\n",
          "    public OngoingStubbing<T> thenCallRealMethod() {\n",
          "        stubbing.thenCallRealMethod();\n",
          "        return new InvokeStubMethod() {\n",
          "            @Override\n",
          "            public void performStubbing(OngoingStubbing<T> when) {\n",
          "                when.thenCallRealMethod();\n"
        ],
        "line_number": 83,
        "start_line": 79,
        "end_line": 89
      },
      {
        "link": "https://github.com/documents4j/documents4j/blob/96b764537eb6916a2014a9a973d897d60dc87453/documents4j-util-conversion/src/test/java/com/documents4j/job/OutputStreamToInputStreamConsumerTest.java\n",
        "code": [
          "        OngoingStubbing<Integer> inputStreamStubbing = when(inputStream.read());\n",
          "        for (int value : PSEUDO_VALUES) {\n",
          "            inputStreamStubbing = inputStreamStubbing.thenReturn(value);\n",
          "        }\n",
          "        inputStreamStubbing.thenReturn(-1);\n",
          "        when(inputStream.read(any(byte[].class))).thenCallRealMethod();\n",
          "        when(inputStream.read(any(byte[].class), anyInt(), anyInt())).thenCallRealMethod();\n",
          "\n",
          "        OutputStream outputStream = mock(OutputStream.class);\n",
          "        doCallRealMethod().when(outputStream).write(any(byte[].class));\n",
          "        doCallRealMethod().when(outputStream).write(any(byte[].class), anyInt(), anyInt());\n"
        ],
        "line_number": 23,
        "start_line": 19,
        "end_line": 29
      },
      {
        "link": "https://github.com/Willam2004/powermock/blob/09cf76fa37d85d303c76ceba099ff34dd0b5108b/api/mockito/src/main/java/org/powermock/api/mockito/internal/expectation/DelegatingToConstructorsOngoingStubbing.java\n",
        "code": [
          "                when.thenThrow(throwableClasses);\n",
          "            }\n",
          "        }.invoke();\n",
          "    }\n",
          "\n",
          "    public OngoingStubbing<T> thenCallRealMethod() {\n",
          "        stubbing.thenCallRealMethod();\n",
          "        return new InvokeStubMethod() {\n",
          "            @Override\n",
          "            public void performStubbing(OngoingStubbing<T> when) {\n",
          "                when.thenCallRealMethod();\n"
        ],
        "line_number": 83,
        "start_line": 79,
        "end_line": 89
      },
      {
        "link": "https://github.com/riccardo-felipe/powermock/blob/09cf76fa37d85d303c76ceba099ff34dd0b5108b/api/mockito/src/main/java/org/powermock/api/mockito/internal/expectation/DelegatingToConstructorsOngoingStubbing.java\n",
        "code": [
          "                when.thenThrow(throwableClasses);\n",
          "            }\n",
          "        }.invoke();\n",
          "    }\n",
          "\n",
          "    public OngoingStubbing<T> thenCallRealMethod() {\n",
          "        stubbing.thenCallRealMethod();\n",
          "        return new InvokeStubMethod() {\n",
          "            @Override\n",
          "            public void performStubbing(OngoingStubbing<T> when) {\n",
          "                when.thenCallRealMethod();\n"
        ],
        "line_number": 83,
        "start_line": 79,
        "end_line": 89
      },
      {
        "link": "}https://github.com/xiaoxue0901/java-base/blob/866eecbf42021c46d6c6ef1a005a58ab164ea240/src/test/java/com/autumn/mockito/CustomerServiceTest.java\n",
        "code": [
          "            // 2.1 \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e5\u0093\u008d\u00e5\u00ba\u0094\u00e5\u0080\u00bc\n",
          "            stub.thenReturn(true);\n",
          "             // 2.2 \u00e6\u008a\u009b\u00e5\u0087\u00ba\u00e5\u00bc\u0082\u00e5\u00b8\u00b8\n",
          "            stub.thenThrow(new NullPointerException());\n",
          "            // 2.3 \u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00e7\u009c\u009f\u00e6\u00ad\u00a3\u00e7\u009a\u0084\u00e6\u0096\u00b9\u00e6\u00b3\u0095\n",
          "            stub.thenCallRealMethod();\n",
          "            // 2.4 \u00e5\u00bb\u00ba\u00e7\u00ab\u008b\u00e6\u009b\u00b4\u00e6\u0099\u00ba\u00e8\u0083\u00bd\u00e7\u009a\u0084stub, \u00e4\u00b9\u009f\u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e6\u00a8\u00a1\u00e6\u008b\u009fvoid\u00e6\u0096\u00b9\u00e6\u00b3\u0095\n",
          "            stub.thenAnswer(null);\n",
          "\n",
          "        // 3.\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e5\u008c\u00b9\u00e9\u0085",
          "\u008d\u00e5\u0099\u00a8: \u00e4\u00bd\u00bf\u00e7\u0094\u00a8any(Customer.class)\u00e4\u00bb\u00a3\u00e6\u009b\u00bfnew Customer()\n"
        ],
        "line_number": 47,
        "start_line": 43,
        "end_line": 53
      },
      {
        "link": "https://github.com/farmerjohngit/powermock/blob/09cf76fa37d85d303c76ceba099ff34dd0b5108b/api/mockito/src/main/java/org/powermock/api/mockito/internal/expectation/DelegatingToConstructorsOngoingStubbing.java\n",
        "code": [
          "                when.thenThrow(throwableClasses);\n",
          "            }\n",
          "        }.invoke();\n",
          "    }\n",
          "\n",
          "    public OngoingStubbing<T> thenCallRealMethod() {\n",
          "        stubbing.thenCallRealMethod();\n",
          "        return new InvokeStubMethod() {\n",
          "            @Override\n",
          "            public void performStubbing(OngoingStubbing<T> when) {\n",
          "                when.thenCallRealMethod();\n"
        ],
        "line_number": 83,
        "start_line": 79,
        "end_line": 89
      },
      {
        "link": "https://github.com/vijayjcp/powermock/blob/09cf76fa37d85d303c76ceba099ff34dd0b5108b/api/mockito/src/main/java/org/powermock/api/mockito/internal/expectation/DelegatingToConstructorsOngoingStubbing.java\n",
        "code": [
          "                when.thenThrow(throwableClasses);\n",
          "            }\n",
          "        }.invoke();\n",
          "    }\n",
          "\n",
          "    public OngoingStubbing<T> thenCallRealMethod() {\n",
          "        stubbing.thenCallRealMethod();\n",
          "        return new InvokeStubMethod() {\n",
          "            @Override\n",
          "            public void performStubbing(OngoingStubbing<T> when) {\n",
          "                when.thenCallRealMethod();\n"
        ],
        "line_number": 83,
        "start_line": 79,
        "end_line": 89
      }
    ],
    "org.mockito.plugins.MockMaker.createMock": [
      {
        "link": "https://github.com/ADVAN-ELAA-8QM-PRC1/platform-external-mockito/blob/001caa8a484560370da2401c0b709a560e4bfec5/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "\n",
          "    public static TypeMockability typeMockabilityOf(Class<?> type) {\n",
          "      return mockMaker.isTypeMockable(type);\n",
          "    }\n",
          "\n",
          "    public static <T> T createMock(MockCreationSettings<T> settings) {\n",
          "        MockHandler mockHandler =  createMockHandler(settings);\n",
          "\n",
          "        T mock = mockMaker.createMock(settings, mockHandler);\n",
          "\n",
          "        Object spiedInstance = settings.getSpiedInstance();\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/xdtianyu/android-8.0.0_r4/blob/7b2a348b53815c068a960fe7243b9dc9ba144fa6/external/mockito/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "\n",
          "    public static TypeMockability typeMockabilityOf(Class<?> type) {\n",
          "      return mockMaker.isTypeMockable(type);\n",
          "    }\n",
          "\n",
          "    public static <T> T createMock(MockCreationSettings<T> settings) {\n",
          "        MockHandler mockHandler =  createMockHandler(settings);\n",
          "\n",
          "        T mock = mockMaker.createMock(settings, mockHandler);\n",
          "\n",
          "        Object spiedInstance = settings.getSpiedInstance();\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/haidaros/defects4j-mockito/blob/a2bfe90f3d8115210f1306b521099f593d32e180/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "\n",
          "    public static TypeMockability typeMockabilityOf(Class<?> type) {\n",
          "      return mockMaker.isTypeMockable(type);\n",
          "    }\n",
          "\n",
          "    public static <T> T createMock(MockCreationSettings<T> settings) {\n",
          "        MockHandler mockHandler =  createMockHandler(settings);\n",
          "\n",
          "        T mock = mockMaker.createMock(settings, mockHandler);\n",
          "\n",
          "        Object spiedInstance = settings.getSpiedInstance();\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/kakaeklamp/kakek2/blob/2b2f41b8d5baf3377137c015944be1ad5713046c/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "\n",
          "    public static TypeMockability typeMockabilityOf(Class<?> type) {\n",
          "      return mockMaker.isTypeMockable(type);\n",
          "    }\n",
          "\n",
          "    public static <T> T createMock(MockCreationSettings<T> settings) {\n",
          "        MockHandler mockHandler =  createMockHandler(settings);\n",
          "\n",
          "        T mock = mockMaker.createMock(settings, mockHandler);\n",
          "\n",
          "        Object spiedInstance = settings.getSpiedInstance();\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/kiwibrowser/src/blob/ad4fdb6d6e87d5587e4d9b54c6f159ffa055b67d/third_party/mockito/src/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "\n",
          "    public static TypeMockability typeMockabilityOf(Class<?> type) {\n",
          "      return mockMaker.isTypeMockable(type);\n",
          "    }\n",
          "\n",
          "    public static <T> T createMock(MockCreationSettings<T> settings) {\n",
          "        MockHandler mockHandler =  createMockHandler(settings);\n",
          "\n",
          "        T mock = mockMaker.createMock(settings, mockHandler);\n",
          "\n",
          "        Object spiedInstance = settings.getSpiedInstance();\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/AOSP8146/external/blob/18fd5a1a31da36a4bc8000e3addef04ef005d9d8/mockito/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "\n",
          "    public static TypeMockability typeMockabilityOf(Class<?> type) {\n",
          "      return mockMaker.isTypeMockable(type);\n",
          "    }\n",
          "\n",
          "    public static <T> T createMock(MockCreationSettings<T> settings) {\n",
          "        MockHandler mockHandler =  createMockHandler(settings);\n",
          "\n",
          "        T mock = mockMaker.createMock(settings, mockHandler);\n",
          "\n",
          "        Object spiedInstance = settings.getSpiedInstance();\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/s1a2t3y4/mockito/blob/74e312b7a9236a43eb543bd3184607b75375bc40/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "\n",
          "    public TypeMockability typeMockabilityOf(Class<?> type) {\n",
          "      return mockMaker.isTypeMockable(type);\n",
          "    }\n",
          "\n",
          "    public <T> T createMock(MockCreationSettings<T> settings) {\n",
          "        MockHandler mockHandler = new MockHandlerFactory().create(settings);\n",
          "\n",
          "        T mock = mockMaker.createMock(settings, mockHandler);\n",
          "\n",
          "        Object spiedInstance = settings.getSpiedInstance();\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "https://github.com/Jebry/DataField/blob/b980202c24093d8c2725bdcfe27ac42e80f1d945/powermock-api/powermock-api-mockito2/src/main/java/org/powermock/api/mockito/mockmaker/PowerMockMaker.java\n",
        "code": [
          "    public PowerMockMaker() {\n",
          "        mockMaker = new MockMakerLoader().load(GlobalConfiguration.mockitoConfiguration());\n",
          "    }\n",
          "    \n",
          "    @Override\n",
          "    public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {\n",
          "        return mockMaker.createMock(settings, handler);\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public MockHandler getHandler(Object mock) {\n"
        ],
        "line_number": 48,
        "start_line": 44,
        "end_line": 54
      },
      {
        "link": "https://github.com/subhanshuja/ofa/blob/84e319101d4a1200657337dcdf9ed3857fc59e03/chromium/src/third_party/mockito/src/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "\n",
          "    public static TypeMockability typeMockabilityOf(Class<?> type) {\n",
          "      return mockMaker.isTypeMockable(type);\n",
          "    }\n",
          "\n",
          "    public static <T> T createMock(MockCreationSettings<T> settings) {\n",
          "        MockHandler mockHandler =  createMockHandler(settings);\n",
          "\n",
          "        T mock = mockMaker.createMock(settings, mockHandler);\n",
          "\n",
          "        Object spiedInstance = settings.getSpiedInstance();\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/Jebry/DataField/blob/b980202c24093d8c2725bdcfe27ac42e80f1d945/powermock-api/powermock-api-mockito/src/main/java/org/powermock/api/mockito/internal/mockmaker/PowerMockMaker.java\n",
        "code": [
          " */\n",
          "public class PowerMockMaker implements MockMaker {\n",
          "    private final MockMaker cglibMockMaker = new CglibMockMaker();\n",
          "\n",
          "    @Override\n",
          "    public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {\n",
          "        T mock = cglibMockMaker.createMock(settings, handler);\n",
          "        ClassLoader classLoader = cglibMockMaker.getClass().getClassLoader();\n",
          "        if (classLoader instanceof MockClassLoader) {\n",
          "            MockClassLoader mcl = (MockClassLoader) classLoader;\n",
          "            // The generated class is not picked up by PowerMock so we cache it here\n"
        ],
        "line_number": 45,
        "start_line": 41,
        "end_line": 51
      }
    ],
    "com.google.common.collect.Range.intersection": [
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/collect/TreeRangeMap.java\n",
        "code": [
          "        public Map.Entry<Range<K>, V> getEntry(K k) {\n",
          "            Map.Entry<Range<K>, V> entry;\n",
          "            if (!this.subRange.contains(k) || (entry = TreeRangeMap.this.getEntry(k)) == null) {\n",
          "                return null;\n",
          "            }\n",
          "            return Maps.immutableEntry(entry.getKey().intersection((Range<K>) this.subRange), entry.getValue());\n",
          "        }\n",
          "\n",
          "        /* JADX DEBUG: Type inference failed for r3v1. Raw type applied. Possible types: com.google.common.collect.Cut<C extends java.lang.Comparable>, com.google.common.collect.Cut<K extends java.lang.Comparable> */\n",
          "        /* JADX DEBUG: Type inference failed for r1v17. Raw type applied. Possible types: com.google.common.collect.Cut<C extends java.lang.Comparable>, com.google.common.collect.Cut<K extends java.lang.Comparable> */\n",
          "        @Override // com.google.common.collect.RangeMap\n"
        ],
        "line_number": 328,
        "start_line": 324,
        "end_line": 334
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/collect/ImmutableRangeMap.java\n",
        "code": [
          "            ImmutableList.Builder<V> valuesBuilder = new ImmutableList.Builder<>(this.entries.size());\n",
          "            for (int i = 0; i < this.entries.size(); i++) {\n",
          "                Range<K> range = this.entries.get(i).getKey();\n",
          "                if (i > 0) {\n",
          "                    Range<K> prevRange = this.entries.get(i - 1).getKey();\n",
          "                    if (range.isConnected(prevRange) && !range.intersection(prevRange).isEmpty()) {\n",
          "                        throw new IllegalArgumentException(\"Overlapping ranges: range \" + prevRange + \" overlaps with entry \" + range);\n",
          "                    }\n",
          "                }\n",
          "                rangesBuilder.add(range);\n",
          "                valuesBuilder.add(this.entries.get(i).getValue());\n"
        ],
        "line_number": 80,
        "start_line": 76,
        "end_line": 86
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.deviceauthserver-DeviceAuthServer/sources/com/google/common/collect/ImmutableRangeMap.java\n",
        "code": [
          "            Preconditions.checkNotNull(value);\n",
          "            Preconditions.checkArgument(!range.isEmpty(), \"Range must not be empty, but was %s\", range);\n",
          "            if (!this.keyRanges.complement().encloses(range)) {\n",
          "                for (Map.Entry<Range<K>, V> entry : this.rangeMap.asMapOfRanges().entrySet()) {\n",
          "                    Range<K> key = entry.getKey();\n",
          "                    if (key.isConnected(range) && !key.intersection(range).isEmpty()) {\n",
          "                        throw new IllegalArgumentException(\"Overlapping ranges: range \" + range + \" overlaps with entry \" + entry);\n",
          "                    }\n",
          "                }\n",
          "            }\n",
          "            this.keyRanges.add(range);\n"
        ],
        "line_number": 56,
        "start_line": 52,
        "end_line": 62
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/collect/TreeRangeSet.java\n",
        "code": [
          "\n",
          "    @Override // com.google.common.collect.RangeSet, com.google.common.collect.AbstractRangeSet\n",
          "    public boolean intersects(Range<C> range) {\n",
          "        Preconditions.checkNotNull(range);\n",
          "        Map.Entry<Cut<C>, Range<C>> ceilingEntry = this.rangesByLowerBound.ceilingEntry(range.lowerBound);\n",
          "        if (ceilingEntry != null && ceilingEntry.getValue().isConnected(range) && !ceilingEntry.getValue().intersection(range).isEmpty()) {\n",
          "            return true;\n",
          "        }\n",
          "        Map.Entry<Cut<C>, Range<C>> lowerEntry = this.rangesByLowerBound.lowerEntry(range.lowerBound);\n",
          "        if (lowerEntry == null || !lowerEntry.getValue().isConnected(range) || lowerEntry.getValue().intersection(range).isEmpty()) {\n",
          "            return false;\n"
        ],
        "line_number": 162,
        "start_line": 158,
        "end_line": 168
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/collect/ImmutableRangeMap.java\n",
        "code": [
          "            ImmutableList.Builder builder2 = new ImmutableList.Builder(this.entries.size());\n",
          "            for (int i = 0; i < this.entries.size(); i++) {\n",
          "                Range<K> key = this.entries.get(i).getKey();\n",
          "                if (i > 0) {\n",
          "                    Range<K> key2 = this.entries.get(i - 1).getKey();\n",
          "                    if (key.isConnected(key2) && !key.intersection(key2).isEmpty()) {\n",
          "                        throw new IllegalArgumentException(\"Overlapping ranges: range \" + key2 + \" overlaps with entry \" + key);\n",
          "                    }\n",
          "                }\n",
          "                builder.add((Object) key);\n",
          "                builder2.add((Object) this.entries.get(i).getValue());\n"
        ],
        "line_number": 80,
        "start_line": 76,
        "end_line": 86
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/collect/TreeRangeSet.java\n",
        "code": [
          "\n",
          "    @Override // com.google.common.collect.RangeSet, com.google.common.collect.AbstractRangeSet\n",
          "    public boolean intersects(Range<C> range) {\n",
          "        Preconditions.checkNotNull(range);\n",
          "        Map.Entry<Cut<C>, Range<C>> ceilingEntry = this.rangesByLowerBound.ceilingEntry(range.lowerBound);\n",
          "        if (ceilingEntry != null && ceilingEntry.getValue().isConnected(range) && !ceilingEntry.getValue().intersection(range).isEmpty()) {\n",
          "            return true;\n",
          "        }\n",
          "        Map.Entry<Cut<C>, Range<C>> priorEntry = this.rangesByLowerBound.lowerEntry(range.lowerBound);\n",
          "        return priorEntry != null && priorEntry.getValue().isConnected(range) && !priorEntry.getValue().intersection(range).isEmpty();\n",
          "    }\n"
        ],
        "line_number": 162,
        "start_line": 158,
        "end_line": 168
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/collect/TreeRangeMap.java\n",
        "code": [
          "        public Map.Entry<Range<K>, V> getEntry(K key) {\n",
          "            Map.Entry<Range<K>, V> entry;\n",
          "            if (!this.subRange.contains(key) || (entry = TreeRangeMap.this.getEntry(key)) == null) {\n",
          "                return null;\n",
          "            }\n",
          "            return Maps.immutableEntry(entry.getKey().intersection((Range<K>) this.subRange), entry.getValue());\n",
          "        }\n",
          "\n",
          "        /* JADX DEBUG: Type inference failed for r5v7. Raw type applied. Possible types: com.google.common.collect.Cut<C extends java.lang.Comparable>, com.google.common.collect.Cut<K extends java.lang.Comparable> */\n",
          "        /* JADX DEBUG: Type inference failed for r5v9. Raw type applied. Possible types: com.google.common.collect.Cut<C extends java.lang.Comparable>, com.google.common.collect.Cut<K extends java.lang.Comparable> */\n",
          "        @Override // com.google.common.collect.RangeMap\n"
        ],
        "line_number": 327,
        "start_line": 323,
        "end_line": 333
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/collect/TreeRangeMap.java\n",
        "code": [
          "        public Map.Entry<Range<K>, V> getEntry(K k) {\n",
          "            Map.Entry<Range<K>, V> entry;\n",
          "            if (!this.subRange.contains(k) || (entry = TreeRangeMap.this.getEntry(k)) == null) {\n",
          "                return null;\n",
          "            }\n",
          "            return Maps.immutableEntry(entry.getKey().intersection((Range<K>) this.subRange), entry.getValue());\n",
          "        }\n",
          "\n",
          "        /* JADX DEBUG: Type inference failed for r3v1. Raw type applied. Possible types: com.google.common.collect.Cut<C extends java.lang.Comparable>, com.google.common.collect.Cut<K extends java.lang.Comparable> */\n",
          "        /* JADX DEBUG: Type inference failed for r1v17. Raw type applied. Possible types: com.google.common.collect.Cut<C extends java.lang.Comparable>, com.google.common.collect.Cut<K extends java.lang.Comparable> */\n",
          "        @Override // com.google.common.collect.RangeMap\n"
        ],
        "line_number": 328,
        "start_line": 324,
        "end_line": 334
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/collect/TreeRangeSet.java\n",
        "code": [
          "\n",
          "    @Override // com.google.common.collect.RangeSet, com.google.common.collect.AbstractRangeSet\n",
          "    public boolean intersects(Range<C> range) {\n",
          "        Preconditions.checkNotNull(range);\n",
          "        Map.Entry<Cut<C>, Range<C>> ceilingEntry = this.rangesByLowerBound.ceilingEntry(range.lowerBound);\n",
          "        if (ceilingEntry != null && ceilingEntry.getValue().isConnected(range) && !ceilingEntry.getValue().intersection(range).isEmpty()) {\n",
          "            return true;\n",
          "        }\n",
          "        Map.Entry<Cut<C>, Range<C>> lowerEntry = this.rangesByLowerBound.lowerEntry(range.lowerBound);\n",
          "        if (lowerEntry == null || !lowerEntry.getValue().isConnected(range) || lowerEntry.getValue().intersection(range).isEmpty()) {\n",
          "            return false;\n"
        ],
        "line_number": 147,
        "start_line": 143,
        "end_line": 153
      },
      {
        "link": "https://github.com/lcrcastor/curso-mobile-2019/blob/7585fccb6437a17c841772c1d9fb0701d6c68042/material/apks/banco/sources/com/google/common/collect/ImmutableRangeSet.java\n",
        "code": [
          "                sb.append(\"range must not be empty, but was \");\n",
          "                sb.append(range);\n",
          "                throw new IllegalArgumentException(sb.toString());\n",
          "            } else if (!this.a.complement().encloses(range)) {\n",
          "                for (Range range2 : this.a.asRanges()) {\n",
          "                    Preconditions.checkArgument(!range2.isConnected(range) || range2.intersection(range).isEmpty(), \"Ranges may not overlap, but received %s and %s\", (Object) range2, (Object) range);\n",
          "                }\n",
          "                throw new AssertionError(\"should have thrown an IAE above\");\n",
          "            } else {\n",
          "                this.a.add(range);\n",
          "                return this;\n"
        ],
        "line_number": 195,
        "start_line": 191,
        "end_line": 201
      }
    ],
    "org.assertj.core.api.Assertions.assertThat": [
      {
        "link": "https://github.com/bhegmanns/training-junit/blob/30a82ba74b87980d1c97f700beee682fa9f6f179/junit5/junit5-practicesolutions/src/test/java/de/hegmanns/training/junit5/extension/training/junit5/practice/task11/CounterAssertJTest.java\n",
        "code": [
          "\n",
          "    @Test\n",
          "    public void oneTimeIncrementResultInOneOperation() {\n",
          "        counter.increment();\n",
          "\n",
          "        org.assertj.core.api.Assertions.assertThat(counter)\n",
          "                .hasFieldOrPropertyWithValue(\"countOperations\", 1);\n",
          "//        Assertions.assertEquals(1, counter.getCountOperations());\n",
          "    }\n",
          "\n",
          "    @Test\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      },
      {
        "link": "https://github.com/joansmith/sonar-java/blob/836dfb3599cedba52c9101f168b3b5d4d7d67b78/java-checks/src/test/files/checks/AssertionsCompletenessCheck.java\n",
        "code": [
          "class AssertionsCompleteness {\n",
          "\n",
          "  @Test\n",
          "  public void noncompliant() {\n",
          "    // Fest\n",
          "    org.fest.assertions.Assertions.assertThat(false).as(\"foo\"); // Noncompliant [[sc=5;ec=46]] {{Complete the assertion.}}\n",
          "    org.fest.assertions.Assertions.assertThat(false); // Noncompliant\n",
          "    Assertions.assertThat(false); // Noncompliant\n",
          "\n",
          "    // Mockito\n",
          "    List mockedList = Mockito.mock(List.class);\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/chrisly42/cajon-plugin/blob/146465328cf995ab3a0f8836f605985d54330005/src/test/resources/inspections/GuavaOptional/GuavaOptionalBefore.java\n",
        "code": [
          "public class GuavaOptional {\n",
          "\n",
          "    private void guavaOptional() {\n",
          "        Optional<String> opt = Optional.absent();\n",
          "\n",
          "        assertThat(opt.isPresent()).as(\"foo\").isEqualTo(true);\n",
          "        assertThat(opt.isPresent()).isEqualTo(Boolean.TRUE);\n",
          "        assertThat(opt.isPresent()).isNotEqualTo(false);\n",
          "        assertThat(opt.isPresent()).isNotEqualTo(Boolean.FALSE);\n",
          "        assertThat(opt.isPresent()).isTrue();\n",
          "\n"
        ],
        "line_number": 11,
        "start_line": 7,
        "end_line": 17
      },
      {
        "link": "https://github.com/hyc2613/sonar-java-3.13.1/blob/7ba97c93476415e88b4e7b3ee0a2429e588debc7/java-checks/src/test/files/checks/AssertionsCompletenessCheck.java\n",
        "code": [
          "class AssertionsCompleteness {\n",
          "\n",
          "  @Test\n",
          "  public void noncompliant() {\n",
          "    // Fest\n",
          "    org.fest.assertions.Assertions.assertThat(false).as(\"foo\"); // Noncompliant [[sc=5;ec=46]] {{Complete the assertion.}}\n",
          "    org.fest.assertions.Assertions.assertThat(false); // Noncompliant\n",
          "    Assertions.assertThat(false); // Noncompliant\n",
          "\n",
          "    // Mockito\n",
          "    List mockedList = Mockito.mock(List.class);\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/marciogaleno/gerenciador-financas-api/blob/ca32a4acce0d4e743fb4939dbf77144fe9dc1fb3/src/test/java/com/marcio/financas/service/LancamentoServiceTest.java\n",
        "code": [
          "\t\t\n",
          "\t\t//Execu\u00c3\u00a7\u00c3\u00a3o\n",
          "\t\tList<Lancamento> resultado = this.service.buscar(lancamento);\n",
          "\t\t\n",
          "\t\t//Verifica\u00c3\u00a7\u00c3\u00a3o\n",
          "\t\torg.assertj.core.api.Assertions.assertThat(resultado)\n",
          "\t\t\t.isNotEmpty()\n",
          "\t\t\t.hasSize(1)\n",
          "\t\t\t.contains(lancamento);\n",
          "\t}\n",
          "\t\n"
        ],
        "line_number": 138,
        "start_line": 134,
        "end_line": 144
      },
      {
        "link": "https://github.com/totalkyos/sonar-source/blob/bffb84b0bf225e83de16b7c8892fe37ffc29795b/java-checks/src/test/files/checks/AssertionsCompletenessCheck.java\n",
        "code": [
          "class AssertionsCompleteness {\n",
          "\n",
          "  @Test\n",
          "  public void noncompliant() {\n",
          "    // Fest\n",
          "    org.fest.assertions.Assertions.assertThat(false).as(\"foo\"); // Noncompliant [[sc=5;ec=46]] {{Complete the assertion.}}\n",
          "    org.fest.assertions.Assertions.assertThat(false); // Noncompliant\n",
          "    Assertions.assertThat(false); // Noncompliant\n",
          "\n",
          "    // Mockito\n",
          "    List mockedList = Mockito.mock(List.class);\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/leandrotdealmeida/springboot-react-tests/blob/dbb6ec250b4db9b6a1c388280841c3f6161be3ad/backend/src/test/java/com/devjapa/minhasfinancas/services/UsuarioServiceTest.java\n",
        "code": [
          "\n",
          "\t\t// a\u00c3\u00a7\u00c3\u00a3o\n",
          "\t\tUsuario usuarioSalvo = service.salvarUsuario(usuario);\n",
          "\n",
          "\t\t// Verifica\u00c3\u00a7\u00c3\u00a3o\n",
          "\t\torg.assertj.core.api.Assertions.assertThat(usuarioSalvo).isNotNull();\n",
          "\t\torg.assertj.core.api.Assertions.assertThat(usuarioSalvo.getId()).isEqualTo(1L);\n",
          "\t\torg.assertj.core.api.Assertions.assertThat(usuarioSalvo.getNome()).isEqualTo(\"nome\");\n",
          "\t\torg.assertj.core.api.Assertions.assertThat(usuarioSalvo.getEmail()).isEqualTo(\"email@email.com\");\n",
          "\t\torg.assertj.core.api.Assertions.assertThat(usuarioSalvo.getSenha()).isEqualTo(\"senha\");\n",
          "\n"
        ],
        "line_number": 41,
        "start_line": 37,
        "end_line": 47
      },
      {
        "link": "https://github.com/leofuxiaohui/sonar-java-full/blob/184f31f83611fe879c39fc3cee5aeb3d7d1dbd18/java-checks-test-sources/src/main/java/checks/AssertionsWithoutMessageCheck.java\n",
        "code": [
          "\n",
          "import static checks.MyAbstractIsEqualTo.isEqualTo;\n",
          "\n",
          "class AssertionsWithoutMessageCheck {\n",
          "  void foo() {\n",
          "    org.assertj.core.api.Assertions.assertThat(\"\").usingComparator(null).as(\"a\").isEqualTo(222); // Compliant\n",
          "    org.junit.Assert.assertTrue(true); // Noncompliant [[sc=22;ec=32]] {{Add a message to this assertion.}}\n",
          "    org.junit.Assert.assertTrue(\"message\", true);\n",
          "    org.junit.Assert.assertTrue(1 > 2); // Noncompliant {{Add a message to this assertion.}}\n",
          "    org.junit.Assert.assertFalse(false); // Noncompliant\n",
          "    org.junit.Assert.assertFalse(\"message\", false);\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 22
      },
      {
        "link": "https://github.com/leofuxiaohui/sonar-java-full/blob/184f31f83611fe879c39fc3cee5aeb3d7d1dbd18/java-checks-test-sources/src/main/java/checks/AssertionsCompletenessCheck.java\n",
        "code": [
          "  @Rule\n",
          "  public final org.assertj.core.api.JUnitSoftAssertions junit_soft_assertions = new org.assertj.core.api.JUnitSoftAssertions();\n",
          "\n",
          "  @Test\n",
          "  public void fest_assertions() {\n",
          "    org.fest.assertions.Assertions.assertThat(true); // Noncompliant {{Complete the assertion.}}\n",
          "    org.fest.assertions.Assertions.assertThat(true).as(\"foo\"); // Noncompliant\n",
          "    org.fest.assertions.Assertions.assertThat(true).describedAs(\"foo\");  // Noncompliant\n",
          "    org.fest.assertions.Assertions.assertThat(true).overridingErrorMessage(\"foo\");  // Noncompliant\n",
          "\n",
          "    org.fest.assertions.Assertions.assertThat(true).isTrue(); // Compliant\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      },
      {
        "link": "https://github.com/kanderson1/test/blob/fb4a1441adcdc2c491382b72d779ccdd13e5f18d/java-checks/src/test/files/checks/AssertionsCompletenessCheck.java\n",
        "code": [
          "  @Rule\n",
          "  public final org.assertj.core.api.JUnitSoftAssertions junit_soft_assertions = new org.assertj.core.api.JUnitSoftAssertions();\n",
          "\n",
          "  @Test\n",
          "  public void fest_assertions() {\n",
          "    org.fest.assertions.Assertions.assertThat(true); // Noncompliant {{Complete the assertion.}}\n",
          "    org.fest.assertions.Assertions.assertThat(true).as(\"foo\"); // Noncompliant\n",
          "    org.fest.assertions.Assertions.assertThat(true).describedAs(\"foo\");  // Noncompliant\n",
          "    org.fest.assertions.Assertions.assertThat(true).overridingErrorMessage(\"foo\");  // Noncompliant\n",
          "\n",
          "    org.fest.assertions.Assertions.assertThat(true).isTrue(); // Compliant\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 22
      }
    ],
    "com.google.common.base.Predicates.containsPattern": [
      {
        "link": "https://github.com/nuodb/migration-tools/blob/4a57cd0a77fb548073e63669af05fcdb7c6a36d4/core/src/main/java/com/nuodb/migrator/utils/Predicates.java\n",
        "code": [
          "\n",
          "    public static <T> Predicate<T> not(Predicate<T> predicate) {\n",
          "        return com.google.common.base.Predicates.not(predicate);\n",
          "    }\n",
          "\n",
          "    public static Predicate<CharSequence> containsPattern(String pattern) {\n",
          "        return com.google.common.base.Predicates.containsPattern(pattern);\n",
          "    }\n",
          "\n",
          "    public static <T> Predicate<T> in(Collection<? extends T> target) {\n",
          "        return com.google.common.base.Predicates.in(target);\n"
        ],
        "line_number": 78,
        "start_line": 74,
        "end_line": 84
      },
      {
        "link": "https://github.com/dormaayan/Corpus/blob/7186ac8dab669b6791cf8b5373f3e4fbbe152838/GL/jclouds/Current/apis/cloudsigma/src/main/java/org/jclouds/cloudsigma/compute/functions/ParseOsFamilyVersion64BitFromImageName.java\n",
        "code": [
          "   // ex. Centos-5.6-20110917 pub\n",
          "   public static final Pattern PATTERN = Pattern.compile(\"([^ -]+)[^0-9]([0-9.]+)[ -].*\");\n",
          "\n",
          "   @Override\n",
          "   public OsFamilyVersion64Bit apply(String input) {\n",
          "      boolean is64Bit = and(not(containsPattern(\"32bit\")),\n",
          "               or(containsPattern(\"64bit\"), not(containsPattern(\"Windows\")))).apply(input);\n",
          "      if (input.contains(\"Windows\")) {\n",
          "         String version = null;\n",
          "         Matcher matcher = Pattern.compile(\".*(20[01][0-9] R[1-9]).*\").matcher(input);\n",
          "         if (matcher.find()) {\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 64
      },
      {
        "link": "https://github.com/jclouds/legacy-jclouds/blob/b5b3c2c77e856c2015e7ce644e5fc916d4af90b2/apis/cloudsigma/src/main/java/org/jclouds/cloudsigma/compute/functions/ParseOsFamilyVersion64BitFromImageName.java\n",
        "code": [
          "   // ex. Centos-5.6-20110917 pub\n",
          "   public static final Pattern PATTERN = Pattern.compile(\"([^ -]+)[^0-9]([0-9.]+)[ -].*\");\n",
          "\n",
          "   @Override\n",
          "   public OsFamilyVersion64Bit apply(String input) {\n",
          "      boolean is64Bit = and(not(containsPattern(\"32bit\")),\n",
          "               or(containsPattern(\"64bit\"), not(containsPattern(\"Windows\")))).apply(input);\n",
          "      if (input.contains(\"Windows\")) {\n",
          "         String version = null;\n",
          "         Matcher matcher = Pattern.compile(\".*(20[01][0-9] R[1-9]).*\").matcher(input);\n",
          "         if (matcher.find()) {\n"
        ],
        "line_number": 60,
        "start_line": 56,
        "end_line": 66
      },
      {
        "link": "https://github.com/KualiCo/jute/blob/44b6d2bb2d74a9ac65a1ef4f0e78adc56f0d5687/src/main/java/org/kuali/common/jute/base/Predicates.java\n",
        "code": [
          "     */\n",
          "    public static Predicate<CharSequence> containsAny(Iterable<String> patterns) {\n",
          "        checkNotNull(patterns, \"patterns\");\n",
          "        List<Predicate<CharSequence>> predicates = newArrayList();\n",
          "        for (String pattern : patterns) {\n",
          "            Predicate<CharSequence> predicate = containsPattern(pattern);\n",
          "            predicates.add(predicate);\n",
          "        }\n",
          "        return or(predicates);\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 45,
        "start_line": 41,
        "end_line": 51
      },
      {
        "link": "https://github.com/dimakuzminov/jclouds-vcloud-director-support/blob/de79b9af0e337457dc98b5e7cd9e346e942e5caf/apis/cloudsigma/src/main/java/org/jclouds/cloudsigma/compute/functions/ParseOsFamilyVersion64BitFromImageName.java\n",
        "code": [
          "   // ex. Centos-5.6-20110917 pub\n",
          "   public static final Pattern PATTERN = Pattern.compile(\"([^ -]+)[^0-9]([0-9.]+)[ -].*\");\n",
          "\n",
          "   @Override\n",
          "   public OsFamilyVersion64Bit apply(String input) {\n",
          "      boolean is64Bit = and(not(containsPattern(\"32bit\")),\n",
          "               or(containsPattern(\"64bit\"), not(containsPattern(\"Windows\")))).apply(input);\n",
          "      if (input.contains(\"Windows\")) {\n",
          "         String version = null;\n",
          "         Matcher matcher = Pattern.compile(\".*(20[01][0-9] R[1-9]).*\").matcher(input);\n",
          "         if (matcher.find()) {\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 64
      },
      {
        "link": "https://github.com/steveloughran/whirr/blob/247cf534ab0095d2eeb0c00fe5b67e0a48745fdf/services/hadoop/src/test/java/org/apache/whirr/service/hadoop/HadoopDryRunTest.java\n",
        "code": [
          "  }\n",
          "\n",
          "  @Override\n",
          "  protected Predicate<CharSequence> configurePredicate() {\n",
          "    return and(\n",
          "        containsPattern(\"dfs.class=org.apache.hadoop.metrics.ganglia.GangliaContext31\"),\n",
          "        containsPattern(\"dfs.servers=10.1.1.1\")\n",
          "    );\n",
          "  }\n",
          "\n",
          "  @Override\n"
        ],
        "line_number": 40,
        "start_line": 36,
        "end_line": 46
      },
      {
        "link": "https://github.com/nirmal070125/jclouds-nirmal/blob/4ae3a6fc8f98f43b9c49b426ade5a2fa4a1646de/apis/cloudsigma/src/main/java/org/jclouds/cloudsigma/compute/functions/ParseOsFamilyVersion64BitFromImageName.java\n",
        "code": [
          "   // ex. Centos-5.6-20110917 pub\n",
          "   public static final Pattern PATTERN = Pattern.compile(\"([^ -]+)[^0-9]([0-9.]+)[ -].*\");\n",
          "\n",
          "   @Override\n",
          "   public OsFamilyVersion64Bit apply(String input) {\n",
          "      boolean is64Bit = and(not(containsPattern(\"32bit\")),\n",
          "               or(containsPattern(\"64bit\"), not(containsPattern(\"Windows\")))).apply(input);\n",
          "      if (input.contains(\"Windows\")) {\n",
          "         String version = null;\n",
          "         Matcher matcher = Pattern.compile(\".*(20[01][0-9] R[1-9]).*\").matcher(input);\n",
          "         if (matcher.find()) {\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 64
      },
      {
        "link": "https://github.com/ahgittin/whirr/blob/e002ebfd9f736ff5bb363917bb7da90463277720/services/hadoop/src/test/java/org/apache/whirr/service/hadoop/HadoopDryRunTest.java\n",
        "code": [
          "  }\n",
          "\n",
          "  @Override\n",
          "  protected Predicate<CharSequence> configurePredicate() {\n",
          "    return and(\n",
          "        containsPattern(\"dfs.class=org.apache.hadoop.metrics.ganglia.GangliaContext31\"),\n",
          "        containsPattern(\"dfs.servers=10.1.1.1\")\n",
          "    );\n",
          "  }\n",
          "\n",
          "  @Override\n"
        ],
        "line_number": 40,
        "start_line": 36,
        "end_line": 46
      },
      {
        "link": "https://github.com/angryziber/slides/blob/055d336ac9c0fbf985fb150a3ba158b725f1b840/java7/src/GuavaDemo.java\n",
        "code": [
          "\n",
          "public class GuavaDemo {\n",
          "  public static void main(String[] args) {\n",
          "    List<String> list = asList(\"a1\", \"b2\", \"c3\");\n",
          "    out.println(\n",
          "        filter(list, Predicates.or(Predicates.containsPattern(\"b\"), Predicates.containsPattern(\"3\")))\n",
          "    );\n",
          "\n",
          "    out.println(filter(list, new Predicate<String>() {\n",
          "      @Override public boolean apply(String s) {\n",
          "        return s.startsWith(\"b\");\n"
        ],
        "line_number": 23,
        "start_line": 19,
        "end_line": 29
      },
      {
        "link": "}https://github.com/nterry/jclouds/blob/4f1065dbb1860ae99cde561604c4886acc12f638/providers/cloudsigma-zrh/src/main/java/org/jclouds/cloudsigma/compute/functions/ParseOsFamilyVersion64BitFromImageName.java\n",
        "code": [
          "   // ex CentOS 5.5 Linux 64bit Preinstalled System with AppFirst Monitoring\n",
          "   public static final Pattern PATTERN = Pattern.compile(\"([^ ]+)[^0-9]([0-9.]+) .*\");\n",
          "\n",
          "   @Override\n",
          "   public OsFamilyVersion64Bit apply(String input) {\n",
          "      boolean is64Bit = and(not(containsPattern(\"32bit\")),\n",
          "               or(containsPattern(\"64bit\"), not(containsPattern(\"Windows\")))).apply(input);\n",
          "      if (input.contains(\"Windows\")) {\n",
          "         String version = null;\n",
          "         Matcher matcher = Pattern.compile(\".*(20[01][0-9] R[1-9]).*\").matcher(input);\n",
          "         if (matcher.find()) {\n"
        ],
        "line_number": 59,
        "start_line": 55,
        "end_line": 65
      }
    ],
    "com.google.common.collect.Ordering.onResultOf": [
      {
        "link": "https://github.com/Bblackbird/microstream/blob/0b3956b554841c053f3d8093df19232d2d9debbf/src/main/java/com/bblackbird/spi/Violation.java\n",
        "code": [
          "        }\n",
          "    };\n",
          "\n",
          "    /** Default Comparator */\n",
          "    Comparator<Violation> DEFAULT_COMPARATOR = //\n",
          "            Ordering.natural().nullsFirst().onResultOf(SEVERITY).\n",
          "                    compound(Ordering.natural().nullsFirst().onResultOf(SOURCE).//\n",
          "                    compound(Ordering.natural().nullsFirst().onResultOf(KEY).//\n",
          "                    compound(Ordering.natural().nullsFirst().onResultOf(MESSAGE))));\n",
          "\n",
          "\n"
        ],
        "line_number": 96,
        "start_line": 92,
        "end_line": 102
      },
      {
        "link": "https://github.com/intel/intelRSD/blob/2cac56a0b338c45b62042c50e920dcb9d8c03cc3/PODM/SW/node-composer/src/main/java/com/intel/rsd/nodecomposer/composition/allocation/mappers/Sorter.java\n",
        "code": [
          "\n",
          "        return ordering.sortedCopy(toBeSorted);\n",
          "    }\n",
          "\n",
          "    public static <T, U extends Comparable> Ordering<T> ascendingWhereNullsFirst(Function<T, U> comparingFunction) {\n",
          "        return natural().nullsFirst().onResultOf(comparingFunction);\n",
          "    }\n",
          "\n",
          "    public static <T, U extends Comparable> Ordering<T> ascendingWhereNullsLast(Function<T, U> comparingFunction) {\n",
          "        return natural().nullsLast().onResultOf(comparingFunction);\n",
          "    }\n"
        ],
        "line_number": 45,
        "start_line": 41,
        "end_line": 51
      },
      {
        "link": "https://github.com/abrother94/IntelRSD2.3/blob/76c5bca8020220ca9cc0fd0d511ed4f95fa32f65/PODM/SW/pod-manager/podm-business-services/src/main/java/com/intel/podm/business/redfish/services/allocation/mappers/Sorter.java\n",
        "code": [
          "\n",
          "        return ordering.sortedCopy(toBeSorted);\n",
          "    }\n",
          "\n",
          "    public static <T, U extends Comparable> Ordering<T> ascendingWhereNullsFirst(Function<T, U> comparingFunction) {\n",
          "        return natural().nullsFirst().onResultOf(comparingFunction);\n",
          "    }\n",
          "\n",
          "    public static <T, U extends Comparable> Ordering<T> ascendingWhereNullsLast(Function<T, U> comparingFunction) {\n",
          "        return natural().nullsLast().onResultOf(comparingFunction);\n",
          "    }\n"
        ],
        "line_number": 45,
        "start_line": 41,
        "end_line": 51
      },
      {
        "link": "https://github.com/hooj0/guava-example/blob/3c30cf3bcbd07310f8398eaffe6aefcc42da8435/src/java/main/com/cnblogs/hoojo/ordering/OrderingTest.java\n",
        "code": [
          "<tr>\r\n",
          "<td width=\"199\"><a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Ordering.html#lexicographical()\"><tt>lexicographical()</tt></a></td>\r\n",
          "<td width=\"419\">\u00e5\u009f\u00ba\u00e4\u00ba\u008e\u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e7\u00b1\u00bb\u00e5\u009e\u008bT\u00e7\u009a\u0084\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e5\u0099\u00a8\u00ef\u00bc\u008c\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e8\u00af\u00a5\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e7\u009a\u0084\u00e5\u008f\u00af\u00e8\u00bf\u00ad\u00e4\u00bb\u00a3\u00e5\u00af\u00b9\u00e8\u00b1\u00a1Iterable&lt;T&gt;\u00e7\u009a\u0084\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e5\u0099\u00a8\u00e3\u0080\u0082</td>\r\n",
          "</tr>\r\n",
          "<tr>\r\n",
          "<td width=\"199\"><a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Ordering.html#onResultOf(com.google.common.base.Function)\"><tt>onResultOf(Function)</tt></a></td>\r\n",
          "<td width=\"419\">\u00e5\u00af\u00b9\u00e9\u009b\u0086\u00e5\u0090\u0088\u00e4\u00b8\u00ad\u00e5\u0085",
          "\u0083\u00e7\u00b4\u00a0\u00e8\u00b0\u0083\u00e7\u0094\u00a8Function\u00ef\u00bc\u008c\u00e5\u0086\u008d\u00e6\u008c\u0089\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e5\u0080\u00bc\u00e7\u0094\u00a8\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e5\u0099\u00a8\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e3\u0080\u0082</td>\r\n",
          "</tr>\r\n",
          "</tbody>\r\n",
          "</table>\r\n"
        ],
        "line_number": 67,
        "start_line": 63,
        "end_line": 73
      },
      {
        "link": "https://github.com/JetBrains/teamcity-rest/blob/7a8bcdd5bbad328deef6ace4c1394f428f576641/src/jetbrains/buildServer/server/rest/model/server/LicenseKeyEntities.java\n",
        "code": [
          "    count = ValueWithDefault.decideIncludeByDefault(fields.isIncluded(\"count\"), licenseKeys.size());\r\n",
          "  }\r\n",
          "\r\n",
          "  private List<LicenseKeyEntity> getLicenseKeys(final @NotNull Collection<LicenseKey> licenseKeys, final @Nullable Collection<LicenseKey> activeLicenseKeys, final @NotNull Fields fields) {\r\n",
          "    Ordering<LicenseKeyData> licenseKeyDataComparator = Ordering\r\n",
          "      .natural().reverse().nullsFirst().onResultOf((LicenseKeyData input) -> input == null ? null : input.getExpirationDate())\r\n",
          "      .compound(Ordering.natural().reverse().nullsFirst().onResultOf((LicenseKeyData input) -> input == null ? null : input.getMaintenanceDueDate()));\r\n",
          "    Ordering<LicenseKey> ordering = Ordering\r\n",
          "      .natural().reverse().nullsLast().onResultOf((LicenseKey input) -> activeLicenseKeys == null || input == null ? null : activeLicenseKeys.contains(input))\r\n",
          "      .compound(natural().reverse().onResultOf((LicenseKey item) -> item == null ? null : item.isValid()))\r\n",
          "      .compound(licenseKeyDataComparator.onResultOf(item -> item == null ? null : item.getLicenseKeyData()));\r\n"
        ],
        "line_number": 69,
        "start_line": 65,
        "end_line": 75
      },
      {
        "link": "https://github.com/moca-etri/psme/blob/8de35b999028988447e7cdc9aa0f230da5870e88/PODM/SW/node-composer/src/main/java/com/intel/rsd/nodecomposer/composition/allocation/mappers/Sorter.java\n",
        "code": [
          "\n",
          "        return ordering.sortedCopy(toBeSorted);\n",
          "    }\n",
          "\n",
          "    public static <T, U extends Comparable> Ordering<T> ascendingWhereNullsFirst(Function<T, U> comparingFunction) {\n",
          "        return natural().nullsFirst().onResultOf(comparingFunction);\n",
          "    }\n",
          "\n",
          "    public static <T, U extends Comparable> Ordering<T> ascendingWhereNullsLast(Function<T, U> comparingFunction) {\n",
          "        return natural().nullsLast().onResultOf(comparingFunction);\n",
          "    }\n"
        ],
        "line_number": 45,
        "start_line": 41,
        "end_line": 51
      },
      {
        "link": "https://github.com/ayellowdog/LzPodm/blob/d5890b4e95007b0e1d13cae878e8c6f8f7d31b20/ipodm/ipodm-service/src/main/java/com/intel/podm/business/redfish/services/allocation/mappers/Sorter.java\n",
        "code": [
          "\n",
          "        return ordering.sortedCopy(toBeSorted);\n",
          "    }\n",
          "\n",
          "    public static <T, U extends Comparable> Ordering<T> ascendingWhereNullsFirst(Function<T, U> comparingFunction) {\n",
          "        return natural().nullsFirst().onResultOf(comparingFunction);\n",
          "    }\n",
          "\n",
          "    public static <T, U extends Comparable> Ordering<T> ascendingWhereNullsLast(Function<T, U> comparingFunction) {\n",
          "        return natural().nullsLast().onResultOf(comparingFunction);\n",
          "    }\n"
        ],
        "line_number": 45,
        "start_line": 41,
        "end_line": 51
      },
      {
        "link": "https://github.com/abrother94/IntelRSD2.4/blob/4be407d8828c2b400e354b516580dcac023e9d09/PODM/SW/node-composer/src/main/java/com/intel/rsd/nodecomposer/composition/allocation/mappers/Sorter.java\n",
        "code": [
          "\n",
          "        return ordering.sortedCopy(toBeSorted);\n",
          "    }\n",
          "\n",
          "    public static <T, U extends Comparable> Ordering<T> ascendingWhereNullsFirst(Function<T, U> comparingFunction) {\n",
          "        return natural().nullsFirst().onResultOf(comparingFunction);\n",
          "    }\n",
          "\n",
          "    public static <T, U extends Comparable> Ordering<T> ascendingWhereNullsLast(Function<T, U> comparingFunction) {\n",
          "        return natural().nullsLast().onResultOf(comparingFunction);\n",
          "    }\n"
        ],
        "line_number": 45,
        "start_line": 41,
        "end_line": 51
      },
      {
        "link": "https://github.com/abrother94/IntelRSD2.5/blob/785e3350094cacf19fc5bfc28182227b9bf4ce3d/PODM/SW/node-composer/src/main/java/com/intel/rsd/nodecomposer/composition/allocation/mappers/Sorter.java\n",
        "code": [
          "\n",
          "        return ordering.sortedCopy(toBeSorted);\n",
          "    }\n",
          "\n",
          "    public static <T, U extends Comparable> Ordering<T> ascendingWhereNullsFirst(Function<T, U> comparingFunction) {\n",
          "        return natural().nullsFirst().onResultOf(comparingFunction);\n",
          "    }\n",
          "\n",
          "    public static <T, U extends Comparable> Ordering<T> ascendingWhereNullsLast(Function<T, U> comparingFunction) {\n",
          "        return natural().nullsLast().onResultOf(comparingFunction);\n",
          "    }\n"
        ],
        "line_number": 45,
        "start_line": 41,
        "end_line": 51
      },
      {
        "link": "https://github.com/Alfred1991/javaDemo/blob/3a490e457a906d823e176f4ab6609d401096f0a7/guawaDemo/src/main/java/org/xiaofengcanyue/basicutilities/Ordering.java\n",
        "code": [
          "            public int compare(Object o1, Object o2) {\n",
          "                return 0;\n",
          "            }\n",
          "        });\n",
          "        order.lexicographical();\n",
          "        order.onResultOf(new Function() {\n",
          "            @Nullable\n",
          "            public Object apply(@Nullable Object input) {\n",
          "                return null;\n",
          "            }\n",
          "        });\n"
        ],
        "line_number": 49,
        "start_line": 45,
        "end_line": 55
      }
    ],
    "com.google.common.collect.Maps.transformValues": [
      {
        "link": "https://github.com/18965050/oasis/blob/e5f1cfa32b74fe37aaf0872c497f7c8502df052d/oasis-common-test/src/test/java/cn/xyz/chaos/guava/common/collection/MapsTest.java\n",
        "code": [
          "        assertThat(bookToIsbn.get(book2), is(\"ISBN456\"));\n",
          "        assertThat(bookToIsbn.get(book3), is(\"ISBN789\"));\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.collect.Maps#transformValues(Map, Function)}\u00e6\u00b5\u008b\u00e8\u00af\u0095\n",
          "     */\n",
          "    @Test\n",
          "    public void transformValuesTest() {\n",
          "        Map<String, Book> bookMap = Maps.uniqueIndex(books, new Function<Book, String>() {\n",
          "            @Override\n"
        ],
        "line_number": 65,
        "start_line": 61,
        "end_line": 71
      },
      {
        "link": "https://github.com/xebialabs-community/xld-mustachifier-importer-plugin/blob/b26e3849ac0b10e296e3e14c9916804b99d0ccb5/src/main/java/ext/deployit/community/cli/mustachify/collect/Maps2.java\n",
        "code": [
          "    public static @Nonnull <K1, K2, V> Map<K2, V> transformKeys(@Nonnull Map<K1, V> fromMap,\n",
          "            Function<? super K1, K2> function) {\n",
          "        // will catch dups\n",
          "        Map<K2, K1> newKeys = Maps.uniqueIndex(fromMap.keySet(), function);\n",
          "        // replace each old key with its value using a lookup in the input map\n",
          "        return transformValues(newKeys, forMap(fromMap));\n",
          "    }\n",
          "    \n",
          "    /**\n",
          "     * Constructs a map that contains all unique, non-<code>null</code> values\n",
          "     * from the input map as keys. The value for each key in the returned map is\n"
        ],
        "line_number": 66,
        "start_line": 62,
        "end_line": 72
      },
      {
        "link": "https://github.com/xebialabs-community/xld-mustachifier-importer-plugin/blob/b26e3849ac0b10e296e3e14c9916804b99d0ccb5/src/main/java/ext/deployit/community/cli/mustachify/config/ConfigParser.java\n",
        "code": [
          "        }\n",
          "\n",
          "        @Override\n",
          "        public Map<K2, V> apply(Map<K1, V> input) {\n",
          "            Map<K2, K1> newKeys = Maps.uniqueIndex(input.keySet(), keyTransform);\n",
          "            return transformValues(newKeys, forMap(input));\n",
          "        }\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public @Nonnull List<DarEntryTransformer> get() {\n"
        ],
        "line_number": 96,
        "start_line": 92,
        "end_line": 102
      },
      {
        "link": "https://github.com/18965050/oasis/blob/e5f1cfa32b74fe37aaf0872c497f7c8502df052d/oasis-common-test/src/test/java/cn/xyz/chaos/guava/common/collection/MapsTest.java\n",
        "code": [
          "        assertThat(bookToIsbn.get(book2), is(\"ISBN456\"));\n",
          "        assertThat(bookToIsbn.get(book3), is(\"ISBN789\"));\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.collect.Maps#transformValues(Map, Function)}\u00e6\u00b5\u008b\u00e8\u00af\u0095\n",
          "     */\n",
          "    @Test\n",
          "    public void transformValuesTest() {\n",
          "        Map<String, Book> bookMap = Maps.uniqueIndex(books, new Function<Book, String>() {\n",
          "            @Override\n"
        ],
        "line_number": 65,
        "start_line": 61,
        "end_line": 71
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/NavigableMapUtil.java\n",
        "code": [
          "*/ \n",
          "public static <K,V1,V2> java.util.NavigableMap<K, V2> transformEntries(java.util.NavigableMap<K, V1> p0,com.google.common.collect.Maps.EntryTransformer<? super K, ? super V1, V2> p1){\n",
          "\treturn com.google.common.collect.Maps.transformEntries(p0,p1);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.Maps#transformValues(java.util.NavigableMap<K, V1>,com.google.common.base.Function<? super V1, V2>)}\n",
          "*@see com.google.common.collect.Maps#transformValues(java.util.NavigableMap<K, V1>,com.google.common.base.Function<? super V1, V2>)\n",
          "*<code>public static <K,V1,V2> java.util.NavigableMap<K, V2> com.google.common.collect.Maps.transformValues(java.util.NavigableMap<K, V1>,com.google.common.base.Function<? super V1, V2>)\n",
          "*transformValues(java.util.NavigableMap<K, V1> p0,com.google.common.base.Function<? super V1, V2> p1)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 105,
        "start_line": 101,
        "end_line": 111
      },
      {
        "link": "https://github.com/hardfish/justTest/blob/2e693ceae5b39cd8b717087c2e4729e8e9a40454/joyent-cloudapi/src/main/java/org/jclouds/joyent/cloudapi/v6_5/suppliers/ZoneIdToURIFromDatacentersApi.java\n",
        "code": [
          "      this.filter = filter;\n",
          "   }\n",
          "\n",
          "   @Override\n",
          "   public Map<String, Supplier<URI>> get() {\n",
          "      return filterKeys(transformValues(api.getDatacenters(), Suppliers2.<URI> ofInstanceFunction()), filter);\n",
          "   }\n",
          "\n",
          "   @Override\n",
          "   public String toString() {\n",
          "      return \"getDatacenters()\";\n"
        ],
        "line_number": 48,
        "start_line": 44,
        "end_line": 54
      },
      {
        "link": "}https://github.com/paul-sadler-ext/javasizzle/blob/96686ba14c493fe2630fdcc9e95d764cb9f9d157/JSizzle/src/org/jsizzle/Delta.java\n",
        "code": [
          "                                                                 Function<? super T, U> uniqueness)\r\n",
          "            throws IllegalArgumentException\r\n",
          "    {\r\n",
          "        final Map<? extends T, U> beforeToKey = domainRestrict(uniqueness, befores);\r\n",
          "        final Map<U, ? extends T> keyToAfter = uniqueIndex(afters, uniqueness);\r\n",
          "        final Map<? extends T, ? extends T> deltas = transformValues(filterValues(beforeToKey, in(keyToAfter.keySet())), forMap(keyToAfter));\r\n",
          "        return transform(deltas.entrySet(), new Function<Entry<? extends T, ? extends T>, Delta<T>>()\r\n",
          "        {\r\n",
          "            @Override\r\n",
          "            public Delta<T> apply(Entry<? extends T, ? extends T> from)\r\n",
          "            {\r\n"
        ],
        "line_number": 94,
        "start_line": 90,
        "end_line": 100
      },
      {
        "link": "https://github.com/frankpengpeng/cmdbbuild-unzip/blob/81cf832b5164139e527ce437c21f7638d41e263f/utils/io/src/main/java/org/cmdbuild/utils/html/HtmlSanitizerUtils.java\n",
        "code": [
          "            return sanitized;\n",
          "        }\n",
          "    }\n",
          "\n",
          "    public static <K, V> Map<K, V> sanitizeHtmlInMapValues(Map<K, V> map) {\n",
          "        return newLinkedHashMap(transformValues(map, (V o) -> o instanceof String ? (V) sanitizeHtmlInString((String) o) : o));\n",
          "    }\n",
          "\n",
          "}\n"
        ],
        "line_number": 41,
        "start_line": 37,
        "end_line": 45
      },
      {
        "link": "https://github.com/ssaarela/javersion/blob/f4145880a7b350c65608dc9b10d40b6d8daa2e29/javersion-core/src/main/java/org/javersion/core/Version.java\n",
        "code": [
          "            throw new IllegalArgumentException(\"parentRevisions should not contain own revision\");\n",
          "        }\n",
          "    }\n",
          "\n",
          "    public Map<K, VersionProperty<V>> getVersionProperties() {\n",
          "        return transformValues(changeset, toVersionProperties);\n",
          "    }\n",
          "\n",
          "    public int hashCode() {\n",
          "        int hashCode = revision.hashCode();\n",
          "        hashCode = 31*hashCode + branch.hashCode();\n"
        ],
        "line_number": 81,
        "start_line": 77,
        "end_line": 87
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/NavigableMapUtil.java\n",
        "code": [
          "*/ \n",
          "public static <K,V1,V2> java.util.NavigableMap<K, V2> transformEntries(java.util.NavigableMap<K, V1> p0,com.google.common.collect.Maps.EntryTransformer<? super K, ? super V1, V2> p1){\n",
          "\treturn com.google.common.collect.Maps.transformEntries(p0,p1);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.Maps#transformValues(java.util.NavigableMap<K, V1>,com.google.common.base.Function<? super V1, V2>)}\n",
          "*@see com.google.common.collect.Maps#transformValues(java.util.NavigableMap<K, V1>,com.google.common.base.Function<? super V1, V2>)\n",
          "*<code>public static <K,V1,V2> java.util.NavigableMap<K, V2> com.google.common.collect.Maps.transformValues(java.util.NavigableMap<K, V1>,com.google.common.base.Function<? super V1, V2>)\n",
          "*transformValues(java.util.NavigableMap<K, V1> p0,com.google.common.base.Function<? super V1, V2> p1)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 105,
        "start_line": 101,
        "end_line": 111
      },
      {
        "link": "https://github.com/ssaarela/javersion/blob/f4145880a7b350c65608dc9b10d40b6d8daa2e29/javersion-core/src/main/java/org/javersion/core/Version.java\n",
        "code": [
          "            throw new IllegalArgumentException(\"parentRevisions should not contain own revision\");\n",
          "        }\n",
          "    }\n",
          "\n",
          "    public Map<K, VersionProperty<V>> getVersionProperties() {\n",
          "        return transformValues(changeset, toVersionProperties);\n",
          "    }\n",
          "\n",
          "    public int hashCode() {\n",
          "        int hashCode = revision.hashCode();\n",
          "        hashCode = 31*hashCode + branch.hashCode();\n"
        ],
        "line_number": 81,
        "start_line": 77,
        "end_line": 87
      },
      {
        "link": "https://github.com/leo3877/thyme/blob/6cfde48d576d79cf075fbe3f067c895aed70894c/thyme-core/src/main/java/org/yixi/thyme/core/util/Maps.java\n",
        "code": [
          "  public static <K, V> MapDifference<K, V> difference(Map<? extends K, ? extends V> left,\n",
          "    Map<? extends K, ? extends V> right) {\n",
          "    return com.google.common.collect.Maps.difference(left, right);\n",
          "  }\n",
          "\n",
          "  public static <K, V1, V2> Map<K, V2> transformValues(Map<K, V1> fromMap,\n",
          "    com.google.common.base.Function<? super V1, V2> function) {\n",
          "    return com.google.common.collect.Maps.transformValues(fromMap, function);\n",
          "  }\n",
          "\n",
          "  public static <O, K, V> Map<K, V> toHashMap(Collection<O> values,\n"
        ],
        "line_number": 71,
        "start_line": 67,
        "end_line": 77
      },
      {
        "link": "https://github.com/rags/playground/blob/29284721b47b542d73fbb951101fd73519803582/Java/fp/src/main/java/fp/Department.java\n",
        "code": [
          "    }\n",
          "\n",
          "    public static void main(String[] args) {\n",
          "        //map of department name and total salary\n",
          "        final ArrayList<Department> departments = new ArrayList<>();\n",
          "        final Map<String, Double> departmentTotalSalMap = transformValues(\n",
          "                uniqueIndex(departments, new Function<Department, String>() {\n",
          "                    @Override\n",
          "                    public String apply(Department department) {\n",
          "                        return department.name;\n",
          "                    }\n"
        ],
        "line_number": 37,
        "start_line": 33,
        "end_line": 43
      },
      {
        "link": "https://github.com/rags/playground/blob/29284721b47b542d73fbb951101fd73519803582/Java/fp/src/main/java/fp/Department.java\n",
        "code": [
          "    }\n",
          "\n",
          "    public static void main(String[] args) {\n",
          "        //map of department name and total salary\n",
          "        final ArrayList<Department> departments = new ArrayList<>();\n",
          "        final Map<String, Double> departmentTotalSalMap = transformValues(\n",
          "                uniqueIndex(departments, new Function<Department, String>() {\n",
          "                    @Override\n",
          "                    public String apply(Department department) {\n",
          "                        return department.name;\n",
          "                    }\n"
        ],
        "line_number": 37,
        "start_line": 33,
        "end_line": 43
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/SortedMapUtil.java\n",
        "code": [
          "*/ \n",
          "public static <K,V1,V2> java.util.SortedMap<K, V2> transformEntries(java.util.SortedMap<K, V1> p0,com.google.common.collect.Maps.EntryTransformer<? super K, ? super V1, V2> p1){\n",
          "\treturn com.google.common.collect.Maps.transformEntries(p0,p1);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.Maps#transformValues(java.util.SortedMap<K, V1>,com.google.common.base.Function<? super V1, V2>)}\n",
          "*@see com.google.common.collect.Maps#transformValues(java.util.SortedMap<K, V1>,com.google.common.base.Function<? super V1, V2>)\n",
          "*<code>public static <K,V1,V2> java.util.SortedMap<K, V2> com.google.common.collect.Maps.transformValues(java.util.SortedMap<K, V1>,com.google.common.base.Function<? super V1, V2>)\n",
          "*transformValues(java.util.SortedMap<K, V1> p0,com.google.common.base.Function<? super V1, V2> p1)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 313,
        "start_line": 309,
        "end_line": 319
      },
      {
        "link": "https://github.com/hardfish/justTest/blob/2e693ceae5b39cd8b717087c2e4729e8e9a40454/joyent-cloudapi/src/main/java/org/jclouds/joyent/cloudapi/v6_5/suppliers/ZoneIdToURIFromDatacentersApi.java\n",
        "code": [
          "      this.filter = filter;\n",
          "   }\n",
          "\n",
          "   @Override\n",
          "   public Map<String, Supplier<URI>> get() {\n",
          "      return filterKeys(transformValues(api.getDatacenters(), Suppliers2.<URI> ofInstanceFunction()), filter);\n",
          "   }\n",
          "\n",
          "   @Override\n",
          "   public String toString() {\n",
          "      return \"getDatacenters()\";\n"
        ],
        "line_number": 48,
        "start_line": 44,
        "end_line": 54
      },
      {
        "link": "https://github.com/frankpengpeng/cmdbbuild-unzip/blob/81cf832b5164139e527ce437c21f7638d41e263f/utils/io/src/main/java/org/cmdbuild/utils/html/HtmlSanitizerUtils.java\n",
        "code": [
          "            return sanitized;\n",
          "        }\n",
          "    }\n",
          "\n",
          "    public static <K, V> Map<K, V> sanitizeHtmlInMapValues(Map<K, V> map) {\n",
          "        return newLinkedHashMap(transformValues(map, (V o) -> o instanceof String ? (V) sanitizeHtmlInString((String) o) : o));\n",
          "    }\n",
          "\n",
          "}\n"
        ],
        "line_number": 41,
        "start_line": 37,
        "end_line": 45
      },
      {
        "link": "https://github.com/xebialabs-community/xld-mustachifier-importer-plugin/blob/b26e3849ac0b10e296e3e14c9916804b99d0ccb5/src/main/java/ext/deployit/community/cli/mustachify/config/ConfigParser.java\n",
        "code": [
          "        }\n",
          "\n",
          "        @Override\n",
          "        public Map<K2, V> apply(Map<K1, V> input) {\n",
          "            Map<K2, K1> newKeys = Maps.uniqueIndex(input.keySet(), keyTransform);\n",
          "            return transformValues(newKeys, forMap(input));\n",
          "        }\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public @Nonnull List<DarEntryTransformer> get() {\n"
        ],
        "line_number": 96,
        "start_line": 92,
        "end_line": 102
      },
      {
        "link": "}https://github.com/paul-sadler-ext/javasizzle/blob/96686ba14c493fe2630fdcc9e95d764cb9f9d157/JSizzle/src/org/jsizzle/Delta.java\n",
        "code": [
          "                                                                 Function<? super T, U> uniqueness)\r\n",
          "            throws IllegalArgumentException\r\n",
          "    {\r\n",
          "        final Map<? extends T, U> beforeToKey = domainRestrict(uniqueness, befores);\r\n",
          "        final Map<U, ? extends T> keyToAfter = uniqueIndex(afters, uniqueness);\r\n",
          "        final Map<? extends T, ? extends T> deltas = transformValues(filterValues(beforeToKey, in(keyToAfter.keySet())), forMap(keyToAfter));\r\n",
          "        return transform(deltas.entrySet(), new Function<Entry<? extends T, ? extends T>, Delta<T>>()\r\n",
          "        {\r\n",
          "            @Override\r\n",
          "            public Delta<T> apply(Entry<? extends T, ? extends T> from)\r\n",
          "            {\r\n"
        ],
        "line_number": 94,
        "start_line": 90,
        "end_line": 100
      },
      {
        "link": "https://github.com/xebialabs-community/xld-mustachifier-importer-plugin/blob/b26e3849ac0b10e296e3e14c9916804b99d0ccb5/src/main/java/ext/deployit/community/cli/mustachify/collect/Maps2.java\n",
        "code": [
          "    public static @Nonnull <K1, K2, V> Map<K2, V> transformKeys(@Nonnull Map<K1, V> fromMap,\n",
          "            Function<? super K1, K2> function) {\n",
          "        // will catch dups\n",
          "        Map<K2, K1> newKeys = Maps.uniqueIndex(fromMap.keySet(), function);\n",
          "        // replace each old key with its value using a lookup in the input map\n",
          "        return transformValues(newKeys, forMap(fromMap));\n",
          "    }\n",
          "    \n",
          "    /**\n",
          "     * Constructs a map that contains all unique, non-<code>null</code> values\n",
          "     * from the input map as keys. The value for each key in the returned map is\n"
        ],
        "line_number": 66,
        "start_line": 62,
        "end_line": 72
      }
    ],
    "com.google.common.collect.Multimaps.transformValues": [
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/MultimapUtil.java\n",
        "code": [
          "*/ \n",
          "public static <K,V1,V2> com.google.common.collect.Multimap<K, V2> transformEntries(com.google.common.collect.Multimap<K, V1> p0,com.google.common.collect.Maps.EntryTransformer<? super K, ? super V1, V2> p1){\n",
          "\treturn com.google.common.collect.Multimaps.transformEntries(p0,p1);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.Multimaps#transformValues(com.google.common.collect.Multimap<K, V1>,com.google.common.base.Function<? super V1, V2>)}\n",
          "*@see com.google.common.collect.Multimaps#transformValues(com.google.common.collect.Multimap<K, V1>,com.google.common.base.Function<? super V1, V2>)\n",
          "*<code>public static <K,V1,V2> com.google.common.collect.Multimap<K, V2> com.google.common.collect.Multimaps.transformValues(com.google.common.collect.Multimap<K, V1>,com.google.common.base.Function<? super V1, V2>)\n",
          "*transformValues(com.google.common.collect.Multimap<K, V1> p0,com.google.common.base.Function<? super V1, V2> p1)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 105,
        "start_line": 101,
        "end_line": 111
      },
      {
        "link": "https://github.com/nikosnikolaidis/jclouds/blob/17fd80cd5a10ed2ab6886ad436f51b62ad0a826d/apis/ec2/src/main/java/org/jclouds/ec2/compute/strategy/EC2ListNodesStrategy.java\n",
        "code": [
          "   }\n",
          "\n",
          "   @Override\n",
          "   public Set<? extends NodeMetadata> listNodesByIds(Iterable<String> ids) {\n",
          "      Multimap<String, String> idsByHandles = index(ids, splitHandle(1));\n",
          "      Multimap<String, String> idsByRegions = transformValues(idsByHandles, splitHandle(0));\n",
          "      Multimap<String, String> idsByConfiguredRegions = filterKeys(idsByRegions, in(regions.get()));\n",
          "\n",
          "      if (idsByConfiguredRegions.isEmpty()) {\n",
          "         return ImmutableSet.of();\n",
          "      }\n"
        ],
        "line_number": 91,
        "start_line": 87,
        "end_line": 97
      },
      {
        "link": "https://github.com/nirmal070125/jclouds-nirmal/blob/4ae3a6fc8f98f43b9c49b426ade5a2fa4a1646de/apis/ec2/src/main/java/org/jclouds/ec2/compute/strategy/EC2ListNodesStrategy.java\n",
        "code": [
          "   }\n",
          "\n",
          "   @Override\n",
          "   public Set<? extends NodeMetadata> listNodesByIds(Iterable<String> ids) {\n",
          "      Multimap<String, String> idsByHandles = index(ids, splitHandle(1));\n",
          "      Multimap<String, String> idsByRegions = transformValues(idsByHandles, splitHandle(0));\n",
          "      Multimap<String, String> idsByConfiguredRegions = filterKeys(idsByRegions, in(regions.get()));\n",
          "\n",
          "      if (idsByConfiguredRegions.isEmpty()) {\n",
          "         return ImmutableSet.of();\n",
          "      }\n"
        ],
        "line_number": 98,
        "start_line": 94,
        "end_line": 104
      },
      {
        "link": "https://github.com/avaranovich/megal-xtext/blob/fbb1c69760e71d045b8c4c164fa7bb7d6a312345/org.softlang.megal/src/org/softlang/megal/util/SetOperations.java\n",
        "code": [
          "\t *            The entries to translate\n",
          "\t * @return Returns a multimap\n",
          "\t */\n",
          "\tpublic static <K, V> Multimap<K, V> translate(Collection<Entry<K, V>> entries) {\n",
          "\t\t// Index by map entry key and map the value by entry value\n",
          "\t\treturn transformValues(index(entries, Entry::getKey), Entry::getValue);\n",
          "\t}\n",
          "\n",
          "\tpublic static <T, U> Set<U> transform(final Set<T> set, final Class<U> type, final Bijection<T, U> bijection) {\n",
          "\t\treturn new AbstractSet<U>() {\n",
          "\t\t\t@Override\n"
        ],
        "line_number": 71,
        "start_line": 67,
        "end_line": 77
      },
      {
        "link": "https://github.com/jmanhnv/java-tricks/blob/5f76271a0494cf8eab9dfe5de903d97eec92f0fa/src/main/java/collections/grouping/GroupUtil.java\n",
        "code": [
          "\t\t};\n",
          "\t\tMultimap<String, String> transformed = Multimaps.transformEntries(multimap, transformer);\n",
          "\t\tSystem.out.println(transformed);\n",
          "\t}\n",
          "\n",
          "\tpublic static void transformValues() {\n",
          "\t\tListMultimap<String, Integer> multimap = ImmutableListMultimap.of(\"a\", 4, \"a\", 16, \"b\", 9);\n",
          "\t\tFunction<Integer, Double> sqrt = new Function<Integer, Double>() {\n",
          "\t\t\tpublic Double apply(Integer in) {\n",
          "\t\t\t\treturn Math.sqrt((int) in);\n",
          "\t\t\t}\n"
        ],
        "line_number": 79,
        "start_line": 75,
        "end_line": 85
      },
      {
        "link": "https://github.com/jclouds/legacy-jclouds/blob/b5b3c2c77e856c2015e7ce644e5fc916d4af90b2/apis/ec2/src/main/java/org/jclouds/ec2/compute/strategy/EC2ListNodesStrategy.java\n",
        "code": [
          "   }\n",
          "\n",
          "   @Override\n",
          "   public Set<? extends NodeMetadata> listNodesByIds(Iterable<String> ids) {\n",
          "      Multimap<String, String> idsByHandles = index(ids, splitHandle(1));\n",
          "      Multimap<String, String> idsByRegions = transformValues(idsByHandles, splitHandle(0));\n",
          "      Multimap<String, String> idsByConfiguredRegions = filterKeys(idsByRegions, in(regions.get()));\n",
          "\n",
          "      if (idsByConfiguredRegions.isEmpty()) {\n",
          "         return ImmutableSet.of();\n",
          "      }\n"
        ],
        "line_number": 100,
        "start_line": 96,
        "end_line": 106
      },
      {
        "link": "https://github.com/nucoupons/Mobile_Applications/blob/62239dd0f17066c12a86d10d26bef350e6e9bd43/apis/ec2/src/main/java/org/jclouds/ec2/compute/strategy/EC2ListNodesStrategy.java\n",
        "code": [
          "   }\n",
          "\n",
          "   @Override\n",
          "   public Set<? extends NodeMetadata> listNodesByIds(Iterable<String> ids) {\n",
          "      Multimap<String, String> idsByHandles = index(ids, splitHandle(1));\n",
          "      Multimap<String, String> idsByRegions = transformValues(idsByHandles, splitHandle(0));\n",
          "      Multimap<String, String> idsByConfiguredRegions = filterKeys(idsByRegions, in(regions.get()));\n",
          "\n",
          "      if (idsByConfiguredRegions.isEmpty()) {\n",
          "         return ImmutableSet.of();\n",
          "      }\n"
        ],
        "line_number": 91,
        "start_line": 87,
        "end_line": 97
      },
      {
        "link": "https://github.com/maxmeffert/BScThesis/blob/448b2eaff997ca126a9bbd49912b07cb540f7a15/code/megal-xtext/org.softlang.megal/src/org/softlang/megal/util/SetOperations.java\n",
        "code": [
          "\t *            The entries to translate\n",
          "\t * @return Returns a multimap\n",
          "\t */\n",
          "\tpublic static <K, V> Multimap<K, V> translate(Collection<Entry<K, V>> entries) {\n",
          "\t\t// Index by map entry key and map the value by entry value\n",
          "\t\treturn transformValues(index(entries, Entry::getKey), Entry::getValue);\n",
          "\t}\n",
          "\n",
          "\tpublic static <T, U> Set<U> transform(final Set<T> set, final Class<U> type, final Bijection<T, U> bijection) {\n",
          "\t\treturn new AbstractSet<U>() {\n",
          "\t\t\t@Override\n"
        ],
        "line_number": 71,
        "start_line": 67,
        "end_line": 77
      },
      {
        "link": "https://github.com/jclouds/jclouds/blob/9f468644e0bb3ecafcadfd28e2798c29c36a8814/apis/ec2/src/main/java/org/jclouds/ec2/compute/strategy/EC2ListNodesStrategy.java\n",
        "code": [
          "   }\n",
          "\n",
          "   @Override\n",
          "   public Set<? extends NodeMetadata> listNodesByIds(Iterable<String> ids) {\n",
          "      Multimap<String, String> idsByHandles = index(ids, splitHandle(1));\n",
          "      Multimap<String, String> idsByRegions = transformValues(idsByHandles, splitHandle(0));\n",
          "      Multimap<String, String> idsByConfiguredRegions = filterKeys(idsByRegions, in(regions.get()));\n",
          "\n",
          "      if (idsByConfiguredRegions.isEmpty()) {\n",
          "         return ImmutableSet.of();\n",
          "      }\n"
        ],
        "line_number": 91,
        "start_line": 87,
        "end_line": 97
      },
      {
        "link": "https://github.com/avibh/jclouds/blob/c595a3abcbaaa1b4f1175b4698dd47318bd60939/apis/ec2/src/main/java/org/jclouds/ec2/compute/strategy/EC2ListNodesStrategy.java\n",
        "code": [
          "   }\n",
          "\n",
          "   @Override\n",
          "   public Set<? extends NodeMetadata> listNodesByIds(Iterable<String> ids) {\n",
          "      Multimap<String, String> idsByHandles = index(ids, splitHandle(1));\n",
          "      Multimap<String, String> idsByRegions = transformValues(idsByHandles, splitHandle(0));\n",
          "      Multimap<String, String> idsByConfiguredRegions = filterKeys(idsByRegions, in(regions.get()));\n",
          "\n",
          "      if (idsByConfiguredRegions.isEmpty()) {\n",
          "         return ImmutableSet.of();\n",
          "      }\n"
        ],
        "line_number": 91,
        "start_line": 87,
        "end_line": 97
      }
    ],
    "com.google.common.collect.Maps.difference": [
      {
        "link": "https://github.com/Manouchehri/bindiff/blob/2a31859b4638404cdc915d7ed6be19937d762743/src_fernflower/com/google/common/collect/Maps.java\n",
        "code": [
          "\n",
          "   public static IdentityHashMap newIdentityHashMap() {\n",
          "      return new IdentityHashMap();\n",
          "   }\n",
          "\n",
          "   public static MapDifference difference(Map var0, Map var1) {\n",
          "      if(var0 instanceof SortedMap) {\n",
          "         SortedMap var2 = (SortedMap)var0;\n",
          "         SortedMapDifference var3 = difference(var2, var1);\n",
          "         return var3;\n",
          "      } else {\n"
        ],
        "line_number": 187,
        "start_line": 183,
        "end_line": 193
      },
      {
        "link": "https://github.com/dovikn/inegotiate-android/blob/cea5e088b01ae4487d83cd1a84e6d2df78761a6e/src/com/google/common/collect/Maps.java\n",
        "code": [
          "\n",
          "    public static <K, V> BiMap<K, V> synchronizedBiMap(BiMap<K, V> bimap) {\n",
          "        return Synchronized.biMap(bimap, null);\n",
          "    }\n",
          "\n",
          "    public static <K, V> MapDifference<K, V> difference(Map<? extends K, ? extends V> left, Map<? extends K, ? extends V> right) {\n",
          "        if (left instanceof SortedMap) {\n",
          "            return difference((SortedMap) left, (Map) right);\n",
          "        }\n",
          "        return difference(left, right, Equivalences.equals());\n",
          "    }\n"
        ],
        "line_number": 1233,
        "start_line": 1229,
        "end_line": 1239
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/collect/Maps.java\n",
        "code": [
          "\n",
          "    public static <K, V> IdentityHashMap<K, V> newIdentityHashMap() {\n",
          "        return new IdentityHashMap<>();\n",
          "    }\n",
          "\n",
          "    public static <K, V> MapDifference<K, V> difference(Map<? extends K, ? extends V> left, Map<? extends K, ? extends V> right) {\n",
          "        if (left instanceof SortedMap) {\n",
          "            return difference((SortedMap) ((SortedMap) left), (Map) right);\n",
          "        }\n",
          "        return difference(left, right, Equivalence.equals());\n",
          "    }\n"
        ],
        "line_number": 191,
        "start_line": 187,
        "end_line": 197
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/collect/Maps.java\n",
        "code": [
          "\n",
          "    public static <K, V> IdentityHashMap<K, V> newIdentityHashMap() {\n",
          "        return new IdentityHashMap<>();\n",
          "    }\n",
          "\n",
          "    public static <K, V> MapDifference<K, V> difference(Map<? extends K, ? extends V> map, Map<? extends K, ? extends V> map2) {\n",
          "        if (map instanceof SortedMap) {\n",
          "            return difference((SortedMap) map, (Map) map2);\n",
          "        }\n",
          "        return difference(map, map2, Equivalence.equals());\n",
          "    }\n"
        ],
        "line_number": 183,
        "start_line": 179,
        "end_line": 189
      },
      {
        "link": "https://github.com/Manouchehri/bindiff/blob/2a31859b4638404cdc915d7ed6be19937d762743/src_cfr/com/google/common/collect/Maps.java\n",
        "code": [
          "\n",
          "    public static IdentityHashMap newIdentityHashMap() {\n",
          "        return new IdentityHashMap();\n",
          "    }\n",
          "\n",
          "    public static MapDifference difference(Map map, Map map2) {\n",
          "        if (!(map instanceof SortedMap)) return Maps.difference(map, map2, Equivalence.equals());\n",
          "        SortedMap sortedMap = (SortedMap)map;\n",
          "        return Maps.difference(sortedMap, map2);\n",
          "    }\n",
          "\n"
        ],
        "line_number": 191,
        "start_line": 187,
        "end_line": 197
      },
      {
        "link": "https://github.com/duyleekun/zycami-ded/blob/27686ca846de6d164692c81bac2ae7f85710361f/src/main/java/com/google/common/collect/Maps.java\n",
        "code": [
          "\n",
          "    public static boolean containsValueImpl(Map map, Object object) {\n",
          "        return Iterators.contains(Maps.valueIterator(map.entrySet().iterator()), object);\n",
          "    }\n",
          "\n",
          "    public static MapDifference difference(Map map, Map map2) {\n",
          "        boolean bl2 = map instanceof SortedMap;\n",
          "        if (bl2) {\n",
          "            return Maps.difference((SortedMap)map, map2);\n",
          "        }\n",
          "        Equivalence equivalence = Equivalence.equals();\n"
        ],
        "line_number": 184,
        "start_line": 180,
        "end_line": 190
      },
      {
        "link": "https://github.com/Eliminater74/com.google.android.tvlauncher/blob/e8284f9970d77a05042a57e9c2173856af7c4246/saved/sources/com/google/common/collect/Maps.java\n",
        "code": [
          "    public static <K, V> IdentityHashMap<K, V> newIdentityHashMap() {\n",
          "        return new IdentityHashMap<>();\n",
          "    }\n",
          "\n",
          "    /* JADX DEBUG: Failed to find minimal casts for resolve overloaded methods, cast all args instead\n",
          "     method: com.google.common.collect.Maps.difference(java.util.SortedMap, java.util.Map):com.google.common.collect.SortedMapDifference<K, V>\n",
          "     arg types: [java.util.SortedMap<K, ? extends V>, java.util.Map<? extends K, ? extends V>]\n",
          "     candidates:\n",
          "      com.google.common.collect.Maps.difference(java.util.Map, java.util.Map):com.google.common.collect.MapDifference<K, V>\n",
          "      com.google.common.collect.Maps.difference(java.util.SortedMap, java.util.Map):com.google.common.collect.SortedMapDifference<K, V> */\n",
          "    public static <K, V> MapDifference<K, V> difference(Map<? extends K, ? extends V> left, Map<? extends K, ? extends V> right) {\n"
        ],
        "line_number": 201,
        "start_line": 197,
        "end_line": 207
      },
      {
        "link": "https://github.com/Eliminater74/com.google.android.tvlauncher/blob/e8284f9970d77a05042a57e9c2173856af7c4246/src/main/java/com/google/common/collect/Maps.java\n",
        "code": [
          "    public static <K, V> IdentityHashMap<K, V> newIdentityHashMap() {\n",
          "        return new IdentityHashMap<>();\n",
          "    }\n",
          "\n",
          "    /* JADX DEBUG: Failed to find minimal casts for resolve overloaded methods, cast all args instead\n",
          "     method: com.google.common.collect.Maps.difference(java.util.SortedMap, java.util.Map):com.google.common.collect.SortedMapDifference<K, V>\n",
          "     arg types: [java.util.SortedMap<K, ? extends V>, java.util.Map<? extends K, ? extends V>]\n",
          "     candidates:\n",
          "      com.google.common.collect.Maps.difference(java.util.Map, java.util.Map):com.google.common.collect.MapDifference<K, V>\n",
          "      com.google.common.collect.Maps.difference(java.util.SortedMap, java.util.Map):com.google.common.collect.SortedMapDifference<K, V> */\n",
          "    public static <K, V> MapDifference<K, V> difference(Map<? extends K, ? extends V> left, Map<? extends K, ? extends V> right) {\n"
        ],
        "line_number": 201,
        "start_line": 197,
        "end_line": 207
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/collect/Maps.java\n",
        "code": [
          "\n",
          "    public static <K, V> IdentityHashMap<K, V> newIdentityHashMap() {\n",
          "        return new IdentityHashMap<>();\n",
          "    }\n",
          "\n",
          "    public static <K, V> MapDifference<K, V> difference(Map<? extends K, ? extends V> map, Map<? extends K, ? extends V> map2) {\n",
          "        if (map instanceof SortedMap) {\n",
          "            return difference((SortedMap) map, (Map) map2);\n",
          "        }\n",
          "        return difference(map, map2, Equivalence.equals());\n",
          "    }\n"
        ],
        "line_number": 191,
        "start_line": 187,
        "end_line": 197
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/1b7f61aa43c14f6785bee90a1315d08a150dc11d/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/collect/Maps.java\n",
        "code": [
          "\n",
          "    public static <K, V> IdentityHashMap<K, V> newIdentityHashMap() {\n",
          "        return new IdentityHashMap<>();\n",
          "    }\n",
          "\n",
          "    public static <K, V> MapDifference<K, V> difference(Map<? extends K, ? extends V> map, Map<? extends K, ? extends V> map2) {\n",
          "        if (map instanceof SortedMap) {\n",
          "            return difference((SortedMap) map, (Map) map2);\n",
          "        }\n",
          "        return difference(map, map2, Equivalence.equals());\n",
          "    }\n"
        ],
        "line_number": 312,
        "start_line": 308,
        "end_line": 318
      }
    ],
    "com.google.common.collect.Sets.difference": [
      {
        "link": "https://github.com/Guojiandonggithub/springsidedemo/blob/e7975eda199031abd03db595bb62df15d6b651a2/springside4/modules/utils/src/main/java/org/springside/modules/utils/collection/SetUtil.java\n",
        "code": [
          "\t * \n",
          "\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00b0\u009d\u00e8\u00af\u0095\u00e5\u0086\u0099\u00e5\u0085",
          "\u00a5\u00e8\u00af\u00a5View\u00e4\u00bc\u009a\u00e6\u008a\u009b\u00e5\u0087\u00baUnsupportedOperationException\n",
          "\t */\n",
          "\tpublic static <E> Set<E> differenceView(final Set<E> set1, final Set<?> set2) {\n",
          "\t\treturn Sets.difference(set1, set2);\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * set1, set2\u00e7\u009a\u0084\u00e8\u00a1\u00a5\u00e9\u009b\u0086\u00ef\u00bc\u0088\u00e5\u009c\u00a8set1\u00e6\u0088\u0096set2\u00e4\u00b8\u00ad\u00ef\u00bc\u008c\u00e4\u00bd\u0086\u00e4\u00b8\u008d\u00e5\u009c\u00a8\u00e4\u00ba\u00a4\u00e9\u009b\u0086\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e5\u008f\u0088\u00e5\u008f\u00ab\u00e5\u008f\u008d\u00e4\u00ba\u00a4\u00e9\u009b\u0086\u00ef\u00bc\u0089\u00e7\u009a\u0084\u00e5\u008f\u00aa\u00e8\u00af\u00bbview\u00ef\u00bc\u008c\u00e4\u00b8\u008d\u00e5\u00a4\u008d\u00e5\u0088\u00b6\u00e4\u00ba\u00a7\u00e7\u0094\u009f\u00e6\u0096\u00b0\u00e7\u009a\u0084Set\u00e5\u00af\u00b9\u00e8\u00b1\u00a1.\n",
          "\t * \n"
        ],
        "line_number": 184,
        "start_line": 180,
        "end_line": 190
      },
      {
        "link": "https://github.com/AppSecAI-TEST/tent/blob/e1149ca6a56b565dddbf9ace05eeaa97b937770e/common/utils/src/main/java/me/chongfeng/common/utils/collection/SetUtil.java\n",
        "code": [
          "\t *\n",
          "\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00b0\u009d\u00e8\u00af\u0095\u00e5\u0086\u0099\u00e5\u0085",
          "\u00a5\u00e8\u00af\u00a5View\u00e4\u00bc\u009a\u00e6\u008a\u009b\u00e5\u0087\u00baUnsupportedOperationException\n",
          "\t */\n",
          "\tpublic static <E> Set<E> differenceView(final Set<E> set1, final Set<?> set2) {\n",
          "\t\treturn Sets.difference(set1, set2);\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * set1, set2\u00e7\u009a\u0084\u00e8\u00a1\u00a5\u00e9\u009b\u0086\u00ef\u00bc\u0088\u00e5\u009c\u00a8set1\u00e6\u0088\u0096set2\u00e4\u00b8\u00ad\u00ef\u00bc\u008c\u00e4\u00bd\u0086\u00e4\u00b8\u008d\u00e5\u009c\u00a8\u00e4\u00ba\u00a4\u00e9\u009b\u0086\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e5\u008f\u0088\u00e5\u008f\u00ab\u00e5\u008f\u008d\u00e4\u00ba\u00a4\u00e9\u009b\u0086\u00ef\u00bc\u0089\u00e7\u009a\u0084\u00e5\u008f\u00aa\u00e8\u00af\u00bbview\u00ef\u00bc\u008c\u00e4\u00b8\u008d\u00e5\u00a4\u008d\u00e5\u0088\u00b6\u00e4\u00ba\u00a7\u00e7\u0094\u009f\u00e6\u0096\u00b0\u00e7\u009a\u0084Set\u00e5\u00af\u00b9\u00e8\u00b1\u00a1.\n",
          "\t *\n"
        ],
        "line_number": 184,
        "start_line": 180,
        "end_line": 190
      },
      {
        "link": "}https://github.com/wumin123150/wumin/blob/c67cb96f5a17fafc953b4ee644c3b59013038610/wumin-common/src/main/java/com/wumin/common/collection/SetUtil.java\n",
        "code": [
          "\t * \n",
          "\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00b0\u009d\u00e8\u00af\u0095\u00e5\u0086\u0099\u00e5\u0085",
          "\u00a5\u00e8\u00af\u00a5View\u00e4\u00bc\u009a\u00e6\u008a\u009b\u00e5\u0087\u00baUnsupportedOperationException\n",
          "\t */\n",
          "\tpublic static <E> Set<E> differenceView(final Set<E> set1, final Set<?> set2) {\n",
          "\t\treturn Sets.difference(set1, set2);\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * set1, set2\u00e7\u009a\u0084\u00e8\u00a1\u00a5\u00e9\u009b\u0086\u00ef\u00bc\u0088\u00e5\u009c\u00a8set1\u00e6\u0088\u0096set2\u00e4\u00b8\u00ad\u00ef\u00bc\u008c\u00e4\u00bd\u0086\u00e4\u00b8\u008d\u00e5\u009c\u00a8\u00e4\u00ba\u00a4\u00e9\u009b\u0086\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e5\u008f\u0088\u00e5\u008f\u00ab\u00e5\u008f\u008d\u00e4\u00ba\u00a4\u00e9\u009b\u0086\u00ef\u00bc\u0089\u00e7\u009a\u0084\u00e5\u008f\u00aa\u00e8\u00af\u00bbview\u00ef\u00bc\u008c\u00e4\u00b8\u008d\u00e5\u00a4\u008d\u00e5\u0088\u00b6\u00e4\u00ba\u00a7\u00e7\u0094\u009f\u00e6\u0096\u00b0\u00e7\u009a\u0084Set\u00e5\u00af\u00b9\u00e8\u00b1\u00a1.\n",
          "\t * \n"
        ],
        "line_number": 181,
        "start_line": 177,
        "end_line": 187
      },
      {
        "link": "https://github.com/yxy2018/test/blob/8ac0ade8b85cb44f517e0d82c0b1f56edf1bca27/modules/utils/src/main/java/org/springside/modules/utils/collection/SetUtil.java\n",
        "code": [
          "\t * \n",
          "\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00b0\u009d\u00e8\u00af\u0095\u00e5\u0086\u0099\u00e5\u0085",
          "\u00a5\u00e8\u00af\u00a5View\u00e4\u00bc\u009a\u00e6\u008a\u009b\u00e5\u0087\u00baUnsupportedOperationException\n",
          "\t */\n",
          "\tpublic static <E> Set<E> differenceView(final Set<E> set1, final Set<?> set2) {\n",
          "\t\treturn Sets.difference(set1, set2);\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * set1, set2\u00e7\u009a\u0084\u00e8\u00a1\u00a5\u00e9\u009b\u0086\u00ef\u00bc\u0088\u00e5\u009c\u00a8set1\u00e6\u0088\u0096set2\u00e4\u00b8\u00ad\u00ef\u00bc\u008c\u00e4\u00bd\u0086\u00e4\u00b8\u008d\u00e5\u009c\u00a8\u00e4\u00ba\u00a4\u00e9\u009b\u0086\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e5\u008f\u0088\u00e5\u008f\u00ab\u00e5\u008f\u008d\u00e4\u00ba\u00a4\u00e9\u009b\u0086\u00ef\u00bc\u0089\u00e7\u009a\u0084\u00e5\u008f\u00aa\u00e8\u00af\u00bbview\u00ef\u00bc\u008c\u00e4\u00b8\u008d\u00e5\u00a4\u008d\u00e5\u0088\u00b6\u00e4\u00ba\u00a7\u00e7\u0094\u009f\u00e6\u0096\u00b0\u00e7\u009a\u0084Set\u00e5\u00af\u00b9\u00e8\u00b1\u00a1.\n",
          "\t * \n"
        ],
        "line_number": 184,
        "start_line": 180,
        "end_line": 190
      },
      {
        "link": "https://github.com/xuminwlt/j360-dubbo-app-all/blob/fc32b0b074177a30d558ae8f0714ae4c05a7e47f/j360-dubbo-modules/src/main/java/me/j360/dubbo/modules/util/collection/SetUtil.java\n",
        "code": [
          "\t * \n",
          "\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00b0\u009d\u00e8\u00af\u0095\u00e5\u0086\u0099\u00e5\u0085",
          "\u00a5\u00e8\u00af\u00a5View\u00e4\u00bc\u009a\u00e6\u008a\u009b\u00e5\u0087\u00baUnsupportedOperationException\n",
          "\t */\n",
          "\tpublic static <E> Set<E> differenceView(final Set<E> set1, final Set<?> set2) {\n",
          "\t\treturn Sets.difference(set1, set2);\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * set1, set2\u00e7\u009a\u0084\u00e8\u00a1\u00a5\u00e9\u009b\u0086\u00ef\u00bc\u0088\u00e5\u009c\u00a8set1\u00e6\u0088\u0096set2\u00e4\u00b8\u00ad\u00ef\u00bc\u008c\u00e4\u00bd\u0086\u00e4\u00b8\u008d\u00e5\u009c\u00a8\u00e4\u00ba\u00a4\u00e9\u009b\u0086\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e5\u008f\u0088\u00e5\u008f\u00ab\u00e5\u008f\u008d\u00e4\u00ba\u00a4\u00e9\u009b\u0086\u00ef\u00bc\u0089\u00e7\u009a\u0084\u00e5\u008f\u00aa\u00e8\u00af\u00bbview\u00ef\u00bc\u008c\u00e4\u00b8\u008d\u00e5\u00a4\u008d\u00e5\u0088\u00b6\u00e4\u00ba\u00a7\u00e7\u0094\u009f\u00e6\u0096\u00b0\u00e7\u009a\u0084Set\u00e5\u00af\u00b9\u00e8\u00b1\u00a1.\n",
          "\t * \n"
        ],
        "line_number": 178,
        "start_line": 174,
        "end_line": 184
      },
      {
        "link": "https://github.com/fisherhe12/cosmos/blob/c143e8ff2b110ee30d63e3eef79c0b09fd92cb6d/common/src/main/java/org/cosmos/common/collection/SetUtil.java\n",
        "code": [
          "\t * \n",
          "\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00b0\u009d\u00e8\u00af\u0095\u00e5\u0086\u0099\u00e5\u0085",
          "\u00a5\u00e8\u00af\u00a5View\u00e4\u00bc\u009a\u00e6\u008a\u009b\u00e5\u0087\u00baUnsupportedOperationException\n",
          "\t */\n",
          "\tpublic static <E> Set<E> differenceView(final Set<E> set1, final Set<?> set2) {\n",
          "\t\treturn Sets.difference(set1, set2);\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * set1, set2\u00e7\u009a\u0084\u00e8\u00a1\u00a5\u00e9\u009b\u0086\u00ef\u00bc\u0088\u00e5\u009c\u00a8set1\u00e6\u0088\u0096set2\u00e4\u00b8\u00ad\u00ef\u00bc\u008c\u00e4\u00bd\u0086\u00e4\u00b8\u008d\u00e5\u009c\u00a8\u00e4\u00ba\u00a4\u00e9\u009b\u0086\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e5\u008f\u0088\u00e5\u008f\u00ab\u00e5\u008f\u008d\u00e4\u00ba\u00a4\u00e9\u009b\u0086\u00ef\u00bc\u0089\u00e7\u009a\u0084\u00e5\u008f\u00aa\u00e8\u00af\u00bbview\u00ef\u00bc\u008c\u00e4\u00b8\u008d\u00e5\u00a4\u008d\u00e5\u0088\u00b6\u00e4\u00ba\u00a7\u00e7\u0094\u009f\u00e6\u0096\u00b0\u00e7\u009a\u0084Set\u00e5\u00af\u00b9\u00e8\u00b1\u00a1.\n",
          "\t * \n"
        ],
        "line_number": 178,
        "start_line": 174,
        "end_line": 184
      },
      {
        "link": "https://github.com/18965050/oasis/blob/e5f1cfa32b74fe37aaf0872c497f7c8502df052d/oasis-common-test/src/test/java/cn/xyz/chaos/guava/common/collection/SetsTest.java\n",
        "code": [
          "        list.add(\"Bob\");\n",
          "        assertThat(cartesian.contains(list), is(true));\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.collect.Sets#difference(Set, Set)}\u00e6\u00b5\u008b\u00e8\u00af\u0095\n",
          "     */\n",
          "    @Test\n",
          "    public void testSetDifference() {\n",
          "        Set<String> s1 = Sets.newHashSet(\"1\", \"2\", \"3\");\n",
          "        Set<String> s2 = Sets.newHashSet(\"3\", \"2\", \"4\");\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      },
      {
        "link": "https://github.com/mbaechler/OBM/blob/355c8233cd75c02b1e7252c5b43599aa2c11a6e9/java/sync/utils/src/main/java/org/obm/push/utils/collection/Sets.java\n",
        "code": [
          "\n",
          "\t/**\n",
          "\t * This methods use the given comparator to perform a difference between col1 and col2.\n",
          "\t * It uses {@link com.google.common.collect.Sets.difference} after wrapping col1 and col2 into TreeSets.\n",
          "\t */\n",
          "\tpublic static <E> Set<E> difference(Collection<E> col1, Collection<E> col2, Comparator<E> comparator) {\n",
          "\t\tPreconditions.checkNotNull(col1, \"col1\");\n",
          "\t\tPreconditions.checkNotNull(col2, \"col2\");\n",
          "\t\tPreconditions.checkNotNull(comparator, \"comparator\");\n",
          "\t\t\n",
          "\t\tTreeSet<E> set1 = com.google.common.collect.Sets.newTreeSet(comparator);\n"
        ],
        "line_number": 15,
        "start_line": 11,
        "end_line": 21
      },
      {
        "link": "https://github.com/huoyanyan/mycollect/blob/806b56a84d324d1c040b964089113467b80283e1/samplepro/mixdemo/src/main/java/util/j360/dubbo/modules/collection/SetUtil.java\n",
        "code": [
          "\t * \n",
          "\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00b0\u009d\u00e8\u00af\u0095\u00e5\u0086\u0099\u00e5\u0085",
          "\u00a5\u00e8\u00af\u00a5View\u00e4\u00bc\u009a\u00e6\u008a\u009b\u00e5\u0087\u00baUnsupportedOperationException\n",
          "\t */\n",
          "\tpublic static <E> Set<E> differenceView(final Set<E> set1, final Set<?> set2) {\n",
          "\t\treturn Sets.difference(set1, set2);\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * set1, set2\u00e7\u009a\u0084\u00e8\u00a1\u00a5\u00e9\u009b\u0086\u00ef\u00bc\u0088\u00e5\u009c\u00a8set1\u00e6\u0088\u0096set2\u00e4\u00b8\u00ad\u00ef\u00bc\u008c\u00e4\u00bd\u0086\u00e4\u00b8\u008d\u00e5\u009c\u00a8\u00e4\u00ba\u00a4\u00e9\u009b\u0086\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e5\u008f\u0088\u00e5\u008f\u00ab\u00e5\u008f\u008d\u00e4\u00ba\u00a4\u00e9\u009b\u0086\u00ef\u00bc\u0089\u00e7\u009a\u0084\u00e5\u008f\u00aa\u00e8\u00af\u00bbview\u00ef\u00bc\u008c\u00e4\u00b8\u008d\u00e5\u00a4\u008d\u00e5\u0088\u00b6\u00e4\u00ba\u00a7\u00e7\u0094\u009f\u00e6\u0096\u00b0\u00e7\u009a\u0084Set\u00e5\u00af\u00b9\u00e8\u00b1\u00a1.\n",
          "\t * \n"
        ],
        "line_number": 178,
        "start_line": 174,
        "end_line": 184
      },
      {
        "link": "https://github.com/PeterXiao/jmh-and-javanew/blob/cd8cfe01472d3f779283d1f64a095fe247ebeaab/vjtools-master/vjkit/src/main/java/com/vip/vjtools/vjkit/collection/SetUtil.java\n",
        "code": [
          "\t * \n",
          "\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00b0\u009d\u00e8\u00af\u0095\u00e5\u0086\u0099\u00e5\u0085",
          "\u00a5\u00e8\u00af\u00a5View\u00e4\u00bc\u009a\u00e6\u008a\u009b\u00e5\u0087\u00baUnsupportedOperationException\n",
          "\t */\n",
          "\tpublic static <E> Set<E> differenceView(final Set<E> set1, final Set<?> set2) {\n",
          "\t\treturn Sets.difference(set1, set2);\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * set1, set2\u00e7\u009a\u0084\u00e8\u00a1\u00a5\u00e9\u009b\u0086\u00ef\u00bc\u0088\u00e5\u009c\u00a8set1\u00e6\u0088\u0096set2\u00e4\u00b8\u00ad\u00ef\u00bc\u008c\u00e4\u00bd\u0086\u00e4\u00b8\u008d\u00e5\u009c\u00a8\u00e4\u00ba\u00a4\u00e9\u009b\u0086\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e5\u008f\u0088\u00e5\u008f\u00ab\u00e5\u008f\u008d\u00e4\u00ba\u00a4\u00e9\u009b\u0086\u00ef\u00bc\u0089\u00e7\u009a\u0084\u00e5\u008f\u00aa\u00e8\u00af\u00bbview\u00ef\u00bc\u008c\u00e4\u00b8\u008d\u00e5\u00a4\u008d\u00e5\u0088\u00b6\u00e4\u00ba\u00a7\u00e7\u0094\u009f\u00e6\u0096\u00b0\u00e7\u009a\u0084Set\u00e5\u00af\u00b9\u00e8\u00b1\u00a1.\n",
          "\t * \n"
        ],
        "line_number": 183,
        "start_line": 179,
        "end_line": 189
      }
    ],
    "com.google.common.base.Joiner.skipNulls": [
      {
        "link": "}https://github.com/ihaolin/diablo/blob/d3b75a888c11390960c3620ea15415542cd199db/diablo-common/src/main/java/me/hao0/diablo/common/util/Joiners.java\n",
        "code": [
          "\n",
          "import com.google.common.base.Joiner;\n",
          "\n",
          "public class Joiners {\n",
          "\n",
          "    public static final Joiner DOT = Joiner.on(\".\").skipNulls();\n",
          "\n",
          "    public static final Joiner COMMA = Joiner.on(\",\").skipNulls();\n",
          "\n",
          "    public static final Joiner COLON = Joiner.on(\":\").skipNulls();\n",
          "\n"
        ],
        "line_number": 6,
        "start_line": 2,
        "end_line": 12
      },
      {
        "link": "https://github.com/AllenWGX/JavaCode/blob/1ba3d095c071e6963121ddebc4ab4b6febbc17e3/src/test/java/guava_learning/base/JoinerTest.java\n",
        "code": [
          "\r\n",
          "\r\n",
          "public class JoinerTest {\r\n",
          "    @Test\r\n",
          "    public void joinLst(){\r\n",
          "        Joiner joiner = Joiner.on(\",\").skipNulls();\r\n",
          "        List<String> lst = Lists.newArrayList(\"samsung\",\"vivo\",\"nokia\",null);\r\n",
          "        //System.out.println(joiner.join(lst));\r\n",
          "        assertThat(joiner.join(lst), is(\"samsung,vivo,nokia\"));\r\n",
          "    }\r\n",
          "    \r\n"
        ],
        "line_number": 19,
        "start_line": 15,
        "end_line": 25
      },
      {
        "link": "https://github.com/18965050/oasis/blob/e5f1cfa32b74fe37aaf0872c497f7c8502df052d/oasis-common-test/src/test/java/cn/xyz/chaos/guava/common/base/JoinerTest.java\n",
        "code": [
          "        assertThat(fromFileString, is(\"foo|bar|baz\"));\n",
          "\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.base.Joiner#skipNulls() }\u00e6\u00b5\u008b\u00e8\u00af\u0095,\n",
          "     */\n",
          "    @Test\n",
          "    public void testJoinStringsSkipNull() {\n",
          "        String[] values = new String[] { \"foo\", null, \"bar\" };\n",
          "        String returned = Joiner.on(\"#\").skipNulls().join(values);\n"
        ],
        "line_number": 81,
        "start_line": 77,
        "end_line": 87
      },
      {
        "link": "https://github.com/RussXia/java-study-notes/blob/d8c6fa4d52fa2e1085c531a891ef7811244df42b/src/main/java/com/xzy/guava/JoinerDemo.java\n",
        "code": [
          "        strList.add(\"Hello World3\");\n",
          "        strList.add(null);\n",
          "        strList.add(\"Hello World4\");\n",
          "        strList.add(\"Hello World5\");\n",
          "        strList.add(\"Hello World6\");\n",
          "        Joiner joiner = Joiner.on(\";\").skipNulls();\n",
          "        String result = joiner.join(strList);\n",
          "//        String result = Joiner.on(\",\").skipNulls().join(strList);\n",
          "//        String result = Joiner.on(\",\").join(Arrays.asList(1, 5, 7));\n",
          "        System.out.println(result);\n",
          "    }\n"
        ],
        "line_number": 24,
        "start_line": 20,
        "end_line": 30
      },
      {
        "link": "https://github.com/amitjoy/other-java/blob/3021756fefbb23d78bac641c9e68997621d86d97/Joiner/src/com/amitinside/guava/Activator.java\n",
        "code": [
          "\t\tList<String> stringList = new ArrayList<>();\n",
          "\t\tstringList.add(\"AMIT\");\n",
          "\t\tstringList.add(null);\n",
          "\t\tstringList.add(\"ANIT\");\n",
          "\t\t\n",
          "\t\tString string = Joiner.on(\"-\").skipNulls().join(stringList);\n",
          "\t\tstring = Joiner.on(\":\").useForNull(\"NO TEXT\").join(stringList);\n",
          "\t\t\n",
          "\t\tStringBuilder builder = new StringBuilder();\n",
          "\t\tbuilder = Joiner.on(\":\").skipNulls().appendTo(builder, stringList);\n",
          "\t\t\n"
        ],
        "line_number": 35,
        "start_line": 31,
        "end_line": 41
      },
      {
        "link": "https://github.com/wo31415927/spider/blob/37fed9c350ccc764c41236949e931b5c3abf1324/src/main/java/utils/Utils.java\n",
        "code": [
          "  public static final Splitter splitterAt = Splitter.on(\"@\").omitEmptyStrings().trimResults();\n",
          "  public static final Splitter splitterDoubleAt =\n",
          "      Splitter.on(\"@@\").omitEmptyStrings().trimResults();\n",
          "  public static final Joiner joinerComma = Joiner.on(\",\");\n",
          "  public static final Joiner joinerSemicolon = Joiner.on(\";\");\n",
          "  public static final Joiner joinerEqual = Joiner.on(\"=\").skipNulls();\n",
          "  public static final MapJoiner jdbcParamJoiner = Joiner.on(\"&\").withKeyValueSeparator(\"=\");\n",
          "  public static final Joiner joinerFileSep = Joiner.on(File.separator).skipNulls();\n",
          "  public static final Joiner joinerT = Joiner.on(\"\\t\").skipNulls();\n",
          "  public static final Joiner joinerCenterLine = Joiner.on(\"-\").skipNulls();\n",
          "  public static final Joiner joinerUnderLine = Joiner.on(\"_\").skipNulls();\n"
        ],
        "line_number": 33,
        "start_line": 29,
        "end_line": 39
      },
      {
        "link": "https://github.com/mykite/guava-test/blob/bd0f760cde45e31e97d9929ec615637999c6935e/src/main/java/com/kite/test/guava/base/JoinerTest.java\n",
        "code": [
          "\t\t// Joiner\u00e7\u00b1\u00bb\u00e4\u00b8\u0080\u00e6\u0097\u00a6\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e5\u0088\u0099\u00e4\u00b8\u008d\u00e5\u008f\u00af\u00e5\u008f\u0098\u00ef\u00bc\u008c\u00e6\u00bb\u00a1\u00e8\u00b6\u00b3\u00e4\u00b8\u008d\u00e5\u008f\u00af\u00e5\u008f\u0098\u00e6\u0080\u00a7\u00ef\u00bc\u008c\u00e5\u009b\u00a0\u00e6\u00ad\u00a4\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u00ae\u0089\u00e5\u0085",
          "\u00a8\r\n",
          "\t\tJoiner joiner = Joiner.on(delimiter);\r\n",
          "\t\t\t\t\r\n",
          "\t\t// \u00e5\u00bf\u00bd\u00e7\u0095\u00a5null\r\n",
          "\t\tString excludeNullString = joiner.skipNulls().join(langs);\r\n",
          "\t\t// \u00e5\u00b0\u0086null\u00e6\u009b\u00bf\u00e4\u00bb\u00a3\u00e4\u00b8\u00baempty\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\r\n",
          "\t\tString replaceNullString = joiner.useForNull(\"empty\").join(langs);\r\n",
          "\t\tSystem.out.println(\"excludeNullString: \" + excludeNullString);\r\n",
          "\t\tSystem.out.println(\"replaceNullString: \" + replaceNullString);\r\n",
          "\t\t\t\t\r\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "}https://github.com/chenxushao/java_enhance/blob/5b883f6c25dc7811d600e009a4b0c3ac2dac5dba/java_guava/src/main/java/com/chenxushao/guava/joiner/JoinerDemo1.java\n",
        "code": [
          "public class JoinerDemo1 {\n",
          "\tpublic static void main(String[] args) {\n",
          "\n",
          "\t\t// 1. Basic\n",
          "\t\tString[] array = { \"abcd\", \"efgh\", null, \"jklm\" };\n",
          "\t\tSystem.out.println(Joiner.on(\"|\").skipNulls().join(array));\n",
          "\n",
          "\t\t// 2. Null Values\n",
          "\t\tSystem.out.println(Joiner.on(\"|\").useForNull(\"***\").join(array));\n",
          "\n",
          "\t\t// 3. Used with Appendable\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 22
      },
      {
        "link": "https://github.com/felixu1992/common-repo/blob/70d7a9e4f88640bef077e2c09df7633e449c4d79/felixu-common/src/main/java/top/felixu/common/parameter/Joiners.java\n",
        "code": [
          "public class Joiners {\n",
          "\n",
          "    private Joiners() {\n",
          "    }\n",
          "\n",
          "    public static final Joiner DOT = Joiner.on(\".\").skipNulls();\n",
          "    public static final Joiner COMMA = Joiner.on(\",\").skipNulls();\n",
          "    public static final Joiner COLON = Joiner.on(\":\").skipNulls();\n",
          "    public static final Joiner AT = Joiner.on(\"@\").skipNulls();\n",
          "    public static final Joiner SLASH = Joiner.on(\"/\").skipNulls();\n",
          "    public static final Joiner SPACE = Joiner.on(\" \").skipNulls();\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/xpoll/xpoll-hbs/blob/3480773da4b3e8d536593eda832f90cf127f2291/src/main/java/cn/blmdz/hbs/util/Joiners.java\n",
        "code": [
          "package cn.blmdz.hbs.util;\n",
          "\n",
          "import com.google.common.base.Joiner;\n",
          "\n",
          "public class Joiners {\n",
          "    public static final Joiner DOT = Joiner.on(\".\").skipNulls();\n",
          "    public static final Joiner COMMA = Joiner.on(\",\").skipNulls();\n",
          "    public static final Joiner COLON = Joiner.on(\":\").skipNulls();\n",
          "}\n"
        ],
        "line_number": 5,
        "start_line": 1,
        "end_line": 9
      }
    ],
    "com.google.common.collect.Table.row": [
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/collect/Tables.java\n",
        "code": [
          "            this.original.clear();\n",
          "        }\n",
          "\n",
          "        @Override // com.google.common.collect.Table\n",
          "        public Map<C, V> column(R r) {\n",
          "            return this.original.row(r);\n",
          "        }\n",
          "\n",
          "        @Override // com.google.common.collect.AbstractTable, com.google.common.collect.Table\n",
          "        public Set<R> columnKeySet() {\n",
          "            return this.original.rowKeySet();\n"
        ],
        "line_number": 200,
        "start_line": 196,
        "end_line": 206
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.deviceauthserver-DeviceAuthServer/sources/com/google/common/collect/Tables.java\n",
        "code": [
          "            this.original.clear();\n",
          "        }\n",
          "\n",
          "        @Override // com.google.common.collect.Table\n",
          "        public Map<C, V> column(R columnKey) {\n",
          "            return this.original.row(columnKey);\n",
          "        }\n",
          "\n",
          "        @Override // com.google.common.collect.AbstractTable, com.google.common.collect.Table\n",
          "        public Set<R> columnKeySet() {\n",
          "            return this.original.rowKeySet();\n"
        ],
        "line_number": 121,
        "start_line": 117,
        "end_line": 127
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.deviceauthserver-DeviceAuthServer/sources/com/google/common/collect/AbstractTable.java\n",
        "code": [
          "        return (V) Maps.safeRemove(row, columnKey);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Table\n",
          "    public V put(R rowKey, C columnKey, V value) {\n",
          "        return row(rowKey).put(columnKey, value);\n",
          "    }\n",
          "\n",
          "    /* JADX DEBUG: Multi-variable search result rejected for r5v0, resolved type: com.google.common.collect.AbstractTable<R, C, V> */\n",
          "    /* JADX WARN: Multi-variable type inference failed */\n",
          "    @Override // com.google.common.collect.Table\n"
        ],
        "line_number": 90,
        "start_line": 86,
        "end_line": 96
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.deviceauthserver-DeviceAuthServer/sources/com/google/common/collect/ForwardingTable.java\n",
        "code": [
          "    public V remove(Object rowKey, Object columnKey) {\n",
          "        return delegate().remove(rowKey, columnKey);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Table\n",
          "    public Map<C, V> row(R rowKey) {\n",
          "        return delegate().row(rowKey);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Table\n",
          "    public Set<R> rowKeySet() {\n"
        ],
        "line_number": 88,
        "start_line": 84,
        "end_line": 94
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/collect/ForwardingTable.java\n",
        "code": [
          "    public V remove(Object obj, Object obj2) {\n",
          "        return delegate().remove(obj, obj2);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Table\n",
          "    public Map<C, V> row(R r) {\n",
          "        return delegate().row(r);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Table\n",
          "    public Set<R> rowKeySet() {\n"
        ],
        "line_number": 91,
        "start_line": 87,
        "end_line": 97
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/collect/Tables.java\n",
        "code": [
          "            this.original.clear();\n",
          "        }\n",
          "\n",
          "        @Override // com.google.common.collect.Table\n",
          "        public Map<C, V> column(R columnKey) {\n",
          "            return this.original.row(columnKey);\n",
          "        }\n",
          "\n",
          "        @Override // com.google.common.collect.AbstractTable, com.google.common.collect.Table\n",
          "        public Set<R> columnKeySet() {\n",
          "            return this.original.rowKeySet();\n"
        ],
        "line_number": 121,
        "start_line": 117,
        "end_line": 127
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/collect/ForwardingTable.java\n",
        "code": [
          "    public V remove(Object rowKey, Object columnKey) {\n",
          "        return delegate().remove(rowKey, columnKey);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Table\n",
          "    public Map<C, V> row(R rowKey) {\n",
          "        return delegate().row(rowKey);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Table\n",
          "    public Set<R> rowKeySet() {\n"
        ],
        "line_number": 91,
        "start_line": 87,
        "end_line": 97
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/collect/AbstractTable.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Table\n",
          "    @CanIgnoreReturnValue\n",
          "    public V put(R rowKey, C columnKey, V value) {\n",
          "        return row(rowKey).put(columnKey, value);\n",
          "    }\n",
          "\n",
          "    /* JADX DEBUG: Multi-variable search result rejected for r5v0, resolved type: com.google.common.collect.AbstractTable<R, C, V> */\n",
          "    /* JADX WARN: Multi-variable type inference failed */\n",
          "    @Override // com.google.common.collect.Table\n"
        ],
        "line_number": 96,
        "start_line": 92,
        "end_line": 102
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/collect/Tables.java\n",
        "code": [
          "            this.original.clear();\n",
          "        }\n",
          "\n",
          "        @Override // com.google.common.collect.Table\n",
          "        public Map<C, V> column(R r) {\n",
          "            return this.original.row(r);\n",
          "        }\n",
          "\n",
          "        @Override // com.google.common.collect.AbstractTable, com.google.common.collect.Table\n",
          "        public Set<R> columnKeySet() {\n",
          "            return this.original.rowKeySet();\n"
        ],
        "line_number": 124,
        "start_line": 120,
        "end_line": 130
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/collect/ForwardingTable.java\n",
        "code": [
          "    public V remove(Object obj, Object obj2) {\n",
          "        return delegate().remove(obj, obj2);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Table\n",
          "    public Map<C, V> row(R r) {\n",
          "        return delegate().row(r);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.collect.Table\n",
          "    public Set<R> rowKeySet() {\n"
        ],
        "line_number": 91,
        "start_line": 87,
        "end_line": 97
      }
    ],
    "org.mockito.stubbing.OngoingStubbing.thenReturn": [
      {
        "link": "}https://github.com/hub-se/BugLoRD/blob/068db7d777dd09333694259f5a2c4a5bbe086007/spectra-generator/src/test/resources/Mockito12b/src/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "import org.mockito.internal.stubbing.answers.ThrowsException;\n",
          "import org.mockito.stubbing.DeprecatedOngoingStubbing;\n",
          "import org.mockito.stubbing.OngoingStubbing;\n",
          "\n",
          "public abstract class BaseStubbing<T> implements OngoingStubbing<T>, DeprecatedOngoingStubbing<T> {\n",
          "    public OngoingStubbing<T> thenReturn(T value) {\n",
          "        return thenAnswer(new Returns(value));\n",
          "    }\n",
          "\n",
          "    public OngoingStubbing<T> thenReturn(T value, T... values) {\n",
          "        OngoingStubbing<T> stubbing = thenReturn(value);\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": "https://github.com/suruthiraju/Assignment---SOEN-691/blob/1e45e69783a779f6d6652fbc4718da884e5295d0/mockito-1.9.0/test/org/mockitousage/bugs/IOOBExceptionShouldNotBeThrownWhenNotCodingFluentlyTest.java\n",
        "code": [
          "    public void second_stubbing_throws_IndexOutOfBoundsException() throws Exception {\r\n",
          "        Map<String, String> map = mock(Map.class);\r\n",
          "\r\n",
          "        OngoingStubbing<String> mapOngoingStubbing = when(map.get(anyString()));\r\n",
          "\r\n",
          "        mapOngoingStubbing.thenReturn(\"first stubbing\");\r\n",
          "\r\n",
          "        try {\r\n",
          "            mapOngoingStubbing.thenReturn(\"second stubbing\");\r\n",
          "            fail();\r\n",
          "        } catch (MockitoException e) {\r\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      },
      {
        "link": "}https://github.com/alfonsodelavega/epsilonFork/blob/4101b0a3678674aee0b2764ed5b0c93954d016a8/tests/org.mockito_1.8.4/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "import org.mockito.internal.stubbing.answers.ThrowsException;\r\n",
          "import org.mockito.stubbing.DeprecatedOngoingStubbing;\r\n",
          "import org.mockito.stubbing.OngoingStubbing;\r\n",
          "\r\n",
          "public abstract class BaseStubbing<T> implements OngoingStubbing<T>, DeprecatedOngoingStubbing<T> {\r\n",
          "    public OngoingStubbing<T> thenReturn(T value) {\r\n",
          "        return thenAnswer(new Returns(value));\r\n",
          "    }\r\n",
          "\r\n",
          "    public OngoingStubbing<T> thenReturn(T value, T... values) {\r\n",
          "        OngoingStubbing<T> stubbing = thenReturn(value);            \r\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": "}https://github.com/Hyacinth-Ali/epsilon-repo/blob/2c492152e30cbddaff74fe5143edbce43aa415b2/tests/org.mockito_1.8.4/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "import org.mockito.internal.stubbing.answers.ThrowsException;\r\n",
          "import org.mockito.stubbing.DeprecatedOngoingStubbing;\r\n",
          "import org.mockito.stubbing.OngoingStubbing;\r\n",
          "\r\n",
          "public abstract class BaseStubbing<T> implements OngoingStubbing<T>, DeprecatedOngoingStubbing<T> {\r\n",
          "    public OngoingStubbing<T> thenReturn(T value) {\r\n",
          "        return thenAnswer(new Returns(value));\r\n",
          "    }\r\n",
          "\r\n",
          "    public OngoingStubbing<T> thenReturn(T value, T... values) {\r\n",
          "        OngoingStubbing<T> stubbing = thenReturn(value);            \r\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": " */https://github.com/mouzhao/metapiga/blob/d522fb004a0127e6befe8cedcac20a3bed0f69b6/src/main/java/metapiga/modelization/CodonDomainTest.java\n",
        "code": [
          "/*    */   @Test\n",
          "/*    */   public void negaiveValueTest()\n",
          "/*    */   {\n",
          "/* 16 */     Parameters testParam = new Parameters(\"TestParam\");\n",
          "/* 17 */     CharactersBlock mockCharBlock = (CharactersBlock)Mockito.mock(CharactersBlock.class);\n",
          "/* 18 */     Mockito.when(Integer.valueOf(mockCharBlock.getDimensionsNChar())).thenReturn(Integer.valueOf(10));\n",
          "/*    */ \n",
          "/* 20 */     testParam.charactersBlock = mockCharBlock;\n",
          "/*    */   }\n",
          "/*    */ }\n",
          "\n"
        ],
        "line_number": 15,
        "start_line": 11,
        "end_line": 21
      },
      {
        "link": "}https://github.com/Debug-2020/Answers-4112-53312-Mockito2/blob/6db099111a1ee6f73d6a58e28d7e5b0242b87756/src/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "import org.mockito.internal.stubbing.answers.ThrowsException;\r\n",
          "import org.mockito.stubbing.DeprecatedOngoingStubbing;\r\n",
          "import org.mockito.stubbing.OngoingStubbing;\r\n",
          "\r\n",
          "public abstract class BaseStubbing<T> implements OngoingStubbing<T>, DeprecatedOngoingStubbing<T> {\r\n",
          "    public OngoingStubbing<T> thenReturn(T value) {\r\n",
          "        return thenAnswer(new Returns(value));\r\n",
          "    }\r\n",
          "\r\n",
          "    public OngoingStubbing<T> thenReturn(T value, T... values) {\r\n",
          "        OngoingStubbing<T> stubbing = thenReturn(value);            \r\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": "https://github.com/pavel-drabushevich/blog-examples/blob/b0bb0795485a67bb777717dbde8643ef4351a02c/pipeline/core/src/test/java/com/blogspot/pdrobushevich/pipeline/FlowUtils.java\n",
        "code": [
          "\r\n",
          "    public static Reader reader(final Document... docs) {\r\n",
          "        final Reader reader = mock(Reader.class);\r\n",
          "        OngoingStubbing<Boolean> hasNextStub = when(reader.hasNext());\r\n",
          "        for (final Document doc : docs) {\r\n",
          "            hasNextStub = hasNextStub.thenReturn(true);\r\n",
          "        }\r\n",
          "        hasNextStub.thenReturn(false);\r\n",
          "        OngoingStubbing<Document> nextStub = when(reader.next());\r\n",
          "        for (final Document doc : docs) {\r\n",
          "            nextStub = nextStub.thenReturn(doc);\r\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/maodunWorld/ChaineseSpring/blob/c9ebea37c683e716148b26b7d81103db39b5c005/spring-boot-test/src/test/java/MockItoTest/QuickStart.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void test2() {\n",
          "        LinkedList mock = mock(LinkedList.class);\n",
          "        OngoingStubbing<Object> first = when(mock.get(0)).thenReturn(\"first\");\n",
          "        System.out.println(mock.get(0));\n",
          "        System.out.println(mock.get(999));\n",
          "    }\n",
          "\n",
          "    @Test(expected = IOException.class)\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/our-fancy-team-name/office-space/blob/cf3b33958de911c3c0b20c27f1eca28eef1100af/office-space-test/src/main/java/com/ourfancyteamname/officespace/test/services/MockHelper.java\n",
        "code": [
          "\n",
          "@UtilityClass\n",
          "public class MockHelper {\n",
          "\n",
          "  public <T> OngoingStubbing<T> mockReturn(T methodCall, T value) {\n",
          "    return when(methodCall).thenReturn(value);\n",
          "  }\n",
          "\n",
          "}\n"
        ],
        "line_number": 11,
        "start_line": 7,
        "end_line": 15
      },
      {
        "link": "https://github.com/kiwibrowser/src/blob/ad4fdb6d6e87d5587e4d9b54c6f159ffa055b67d/third_party/mockito/src/src/test/java/org/mockitousage/bugs/IOOBExceptionShouldNotBeThrownWhenNotCodingFluentlyTest.java\n",
        "code": [
          "        @SuppressWarnings(\"unchecked\")\n",
          "        Map<String, String> map = mock(Map.class);\n",
          "\n",
          "        OngoingStubbing<String> mapOngoingStubbing = when(map.get(anyString()));\n",
          "\n",
          "        mapOngoingStubbing.thenReturn(\"first stubbing\");\n",
          "\n",
          "        try {\n",
          "            mapOngoingStubbing.thenReturn(\"second stubbing\");\n",
          "            fail();\n",
          "        } catch (MockitoException e) {\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      }
    ],
    "com.google.common.eventbus.EventBus.register": [
      {
        "link": "}https://github.com/brunothg/SwingMVP/blob/ca3a1c007f15d1f82884610191a19fe1ebb51ab6/src/main/java/com/github/brunothg/swing/mvp/event/EventBus.java\n",
        "code": [
          "\t * \n",
          "\t * @param subscriber Listener, that wants to register\n",
          "\t */\n",
          "\tpublic void subscribe(Object subscriber)\n",
          "\t{\n",
          "\t\teventBus.register(subscriber);\n",
          "\t\tLOG.info(\"New event subscriber [{}]\", subscriber);\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * Unsubscribe object's listener methods.\n"
        ],
        "line_number": 35,
        "start_line": 31,
        "end_line": 41
      },
      {
        "link": "https://github.com/alanbuttars/commons-java/blob/2b9f48bf2e7e5ab2903776b637e8c6f9f68909dd/commons-config/src/main/java/com/alanbuttars/commons/config/eventbus/EventBusSyncImpl.java\n",
        "code": [
          "\t/**\n",
          "\t * {@inheritDoc}\n",
          "\t */\n",
          "\t@Override\n",
          "\tpublic void subscribe(Object object) {\n",
          "\t\tgetEventBus().register(object);\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * {@inheritDoc}\n",
          "\t */\n"
        ],
        "line_number": 71,
        "start_line": 67,
        "end_line": 77
      },
      {
        "link": "https://github.com/desabuh/OOP20-pogeshi/blob/c7e2625537798e8cee002fa64ab0a77842873003/src/main/java/notifier/GuavaEventBusAdapter.java\n",
        "code": [
          "    /**\n",
          "     * function used to register a listener for this notifier.\n",
          "     * @param listener a {@link Listener} for the defined object\n",
          "     */\n",
          "    @Override\n",
          "    public void register(final Listener<T> listener) {\n",
          "        this.eventBus.register(listener);\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * global notification to all registered listeners.\n"
        ],
        "line_number": 35,
        "start_line": 31,
        "end_line": 41
      },
      {
        "link": "https://github.com/hgo/micronaut-quartz/blob/06b4bac51c7c839889427e7439ab8ee4bc9a2872/src/main/java/quartz/retry/EventBus.java\n",
        "code": [
          "    private com.google.common.eventbus.EventBus asyncEventBus = new AsyncEventBus(Executors.newFixedThreadPool(3), exceptionHandler);\n",
          "    private com.google.common.eventbus.EventBus eventBus = new com.google.common.eventbus.EventBus();\n",
          "\n",
          "\n",
          "    public void registerAsync(Object object) {\n",
          "        asyncEventBus.register(object);\n",
          "    }\n",
          "\n",
          "    public void unregisterAsync(Object object) {\n",
          "        asyncEventBus.unregister(object);\n",
          "    }\n"
        ],
        "line_number": 27,
        "start_line": 23,
        "end_line": 33
      },
      {
        "link": "https://github.com/cookingfox/eventbus-adapter-java/blob/433f897a253309bd9b1751215c899a157e28ed72/src/main/java/com/cookingfox/eventbus/adapter/GuavaEventBusAdapter.java\n",
        "code": [
          "    public void post(Object event) {\n",
          "        eventBus.post(event);\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public void register(Object subscriber) {\n",
          "        eventBus.register(subscriber);\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public void unregister(Object subscriber) {\n"
        ],
        "line_number": 24,
        "start_line": 20,
        "end_line": 30
      },
      {
        "link": "https://github.com/stormpath/stormpath-shiro-eventbus-tutorial/blob/e68790e5725200f9fffca836bc9418ed921c3635/src/main/java/com/stormpath/examples/shiro/ShiroToGuavaEventBusBridge.java\n",
        "code": [
          "\n",
          "    public ShiroToGuavaEventBusBridge() {\n",
          "        this.guavaEventBus = getGlobalGuavaEventBus();\n",
          "\n",
          "        // Since this is an example, we can pretend, there is already guava listeners for this bus.\n",
          "        this.guavaEventBus.register(new GuavaEventBusSubscriber());\n",
          "    }\n",
          "\n",
          "\n",
          "    public void setEventBus(EventBus bus) {\n",
          "        this.shiroEventBus = bus;\n"
        ],
        "line_number": 23,
        "start_line": 19,
        "end_line": 29
      },
      {
        "link": "https://github.com/ydalekorey/multimodule-database/blob/33f619cf9b5a2a8ae92eee2fe8d1644045b8bde5/application/src/main/java/multimodule/application/events/GuavaEventBus.java\n",
        "code": [
          "            topicEventBus.post(event);\n",
          "        }\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public void register(String topic, Object listener) {\n",
          "        com.google.common.eventbus.EventBus topicEventBus = eventBuses.get(topic);\n",
          "\n",
          "        if (Objects.isNull(topicEventBus)) {\n",
          "            topicEventBus = new com.google.common.eventbus.EventBus(topic);\n",
          "            eventBuses.put(topic, topicEventBus);\n"
        ],
        "line_number": 24,
        "start_line": 20,
        "end_line": 30
      },
      {
        "link": "https://github.com/vishpatel/ddd-cqrs-base-project/blob/cd2308c7c04095a4beafc604eace1fdabd5f470d/src/main/java/org/nthdimenzion/ddd/infrastructure/EventBus.java\n",
        "code": [
          "    public EventBus(com.google.common.eventbus.EventBus eventBus) {\r\n",
          "        this.eventBus = eventBus;\r\n",
          "    }\r\n",
          "\r\n",
          "    @Override\r\n",
          "    public void register(Object listener) {\r\n",
          "        this.eventBus.register(listener);\r\n",
          "    }\r\n",
          "\r\n",
          "    @Override\r\n",
          "    public void unRegister(Object listener) {\r\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": "https://github.com/bretterer/smythclay_bot/blob/e89135f046943cdf35ea88b6ebb68f5ad199c2a2/source/me/mast3rplan/phantombot/event/EventBus.java\n",
        "code": [
          "    private final com.google.common.eventbus.EventBus eventBus = new com.google.common.eventbus.EventBus(new ExceptionHandler());\n",
          "    private final com.google.common.eventbus.EventBus peventBus = new com.google.common.eventbus.EventBus(new ExceptionHandler());\n",
          "\n",
          "    private final Set<Listener> listeners = Sets.newHashSet();\n",
          "\n",
          "    public void register(Listener listener) {\n",
          "        listeners.add(listener);\n",
          "        eventBus.register(listener);\n",
          "        aeventBus.register(listener);\n",
          "        peventBus.register(listener);\n",
          "    }\n"
        ],
        "line_number": 37,
        "start_line": 33,
        "end_line": 43
      },
      {
        "link": "https://github.com/loveprotocol/jdg_android-0.0.1/blob/0d0f12866f33e74329823e1176dd98d48f6f608e/app/src/main/java/com/imhc2/plumboard/commons/eventbus/EventBus.java\n",
        "code": [
          "            eventBus = new com.google.common.eventbus.EventBus();\n",
          "        }\n",
          "        return eventBus;\n",
          "    }\n",
          "\n",
          "    public static void register(Object o){\n",
          "        eventBus.register(o);\n",
          "    }\n",
          "    public static  void unregister(Object o){\n",
          "        eventBus.unregister(o);\n",
          "    }\n"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      }
    ],
    "com.google.common.cache.CacheLoader.load": [
      {
        "link": "https://github.com/i-masatoshi/OHANA/blob/e3e65283d66d866c3321fd921e02428c6aed1747/src/main/java/com/airbnb/airpal/core/BackgroundCacheLoader.java\n",
        "code": [
          "    {\n",
          "        this.executor = checkNotNull(executor, \"executor is null\");\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public final ListenableFuture<V> reload(final K key, V oldValue)\n",
          "    {\n",
          "        return executor.submit(new Callable<V>()\n",
          "        {\n",
          "            @Override\n",
          "            public V call()\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/zhangzhg/hsm-parent/blob/0d1c65f652ed67bff12fe79b0ea660b09c2e5959/modules/hsm-app/src/main/java/com/hsm/api/cache/RefreshKeepCacheLoader.java\n",
        "code": [
          "/**\n",
          " * \u00e6\u0089\u00be\u00e4\u00b8\u008d\u00e5\u0088\u00b0\u00e7\u009a\u0084\u00e8\u00af\u009d\u00ef\u00bc\u008c\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e5\u008e\u00bb\u00e6\u009b\u00b4\u00e6\u0096\u00b0\u00ef\u00bc\u008c\u00e5\u0085",
          "\u00b6\u00e4\u00bb\u0096\u00e7\u009a\u0084\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e6\u0097\u00a7\u00e5\u0080\u00bc\u00ef\u00bc\u008c\u00e9\u0098\u00b2\u00e6\u00ad\u00a2\u00e9\u0098\u00bb\u00e5\u00a1\u009e\n",
          " */\n",
          "public abstract class RefreshKeepCacheLoader<K, V> extends CacheLoader<K, V> {\n",
          "    public ListenableFuture<V> reload(K key, V oldValue) throws Exception {\n",
          "        V newValue = null;\n",
          "        try {\n",
          "            newValue = this.load(key);\n",
          "        } catch (Exception e) {\n",
          "\n"
        ],
        "line_number": 12,
        "start_line": 8,
        "end_line": 18
      },
      {
        "link": "https://github.com/ofanan/caffeine/blob/7ccebaa5fd146579d201d1e3896704429af29c81/guava/src/main/java/com/github/benmanes/caffeine/guava/CaffeinatedGuavaLoadingCache.java\n",
        "code": [
          "    SingleLoader(com.google.common.cache.CacheLoader<K, V> cacheLoader) {\n",
          "      this.cacheLoader = requireNonNull(cacheLoader);\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public V load(K key) {\n",
          "      try {\n",
          "        V value = cacheLoader.load(key);\n",
          "        if (value == null) {\n",
          "          throw new InvalidCacheLoadException(\"null value\");\n",
          "        }\n"
        ],
        "line_number": 133,
        "start_line": 129,
        "end_line": 139
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/cache/CacheLoader.java\n",
        "code": [
          "import java.util.Map;\n",
          "import java.util.concurrent.Callable;\n",
          "import java.util.concurrent.Executor;\n",
          "\n",
          "public abstract class CacheLoader<K, V> {\n",
          "    public abstract V load(K k) throws Exception;\n",
          "\n",
          "    protected CacheLoader() {\n",
          "    }\n",
          "\n",
          "    public ListenableFuture<V> reload(K k, V v) throws Exception {\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      },
      {
        "link": "https://github.com/Manouchehri/bindiff/blob/2a31859b4638404cdc915d7ed6be19937d762743/src_fernflower/com/google/common/cache/CacheLoader$1.java\n",
        "code": [
          "   CacheLoader$1(CacheLoader var1, Executor var2) {\n",
          "      this.val$loader = var1;\n",
          "      this.val$executor = var2;\n",
          "   }\n",
          "\n",
          "   public Object load(Object var1) {\n",
          "      return this.val$loader.load(var1);\n",
          "   }\n",
          "\n",
          "   public ListenableFuture reload(Object var1, Object var2) {\n",
          "      ListenableFutureTask var3 = ListenableFutureTask.create(new CacheLoader$1$1(this, var1, var2));\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/Manouchehri/bindiff/blob/2a31859b4638404cdc915d7ed6be19937d762743/src_fernflower/com/google/common/cache/CacheLoader.java\n",
        "code": [
          "\n",
          "@GwtCompatible(\n",
          "   emulated = true\n",
          ")\n",
          "public abstract class CacheLoader {\n",
          "   public abstract Object load(Object var1);\n",
          "\n",
          "   @GwtIncompatible(\"Futures\")\n",
          "   public ListenableFuture reload(Object var1, Object var2) {\n",
          "      Preconditions.checkNotNull(var1);\n",
          "      Preconditions.checkNotNull(var2);\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/Manouchehri/bindiff/blob/2a31859b4638404cdc915d7ed6be19937d762743/src_cfr/com/google/common/cache/CacheLoader.java\n",
        "code": [
          "@GwtCompatible(emulated=1)\n",
          "public abstract class CacheLoader {\n",
          "    protected CacheLoader() {\n",
          "    }\n",
          "\n",
          "    public abstract Object load(Object var1);\n",
          "\n",
          "    @GwtIncompatible(value=\"Futures\")\n",
          "    public ListenableFuture reload(Object object, Object object2) {\n",
          "        Preconditions.checkNotNull(object);\n",
          "        Preconditions.checkNotNull(object2);\n"
        ],
        "line_number": 24,
        "start_line": 20,
        "end_line": 30
      },
      {
        "link": "https://github.com/Manouchehri/bindiff/blob/2a31859b4638404cdc915d7ed6be19937d762743/src_cfr/com/google/common/cache/CacheLoader$1.java\n",
        "code": [
          "        this.val$loader = cacheLoader;\n",
          "        this.val$executor = executor;\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public Object load(Object object) {\n",
          "        return this.val$loader.load(object);\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public ListenableFuture reload(Object object, Object object2) {\n"
        ],
        "line_number": 23,
        "start_line": 19,
        "end_line": 29
      },
      {
        "link": "https://github.com/akyekth/airpal1/blob/ee7db8602203680554839c5a663a83cb412707fa/src/main/java/com/airbnb/airpal/core/BackgroundCacheLoader.java\n",
        "code": [
          "    {\n",
          "        this.executor = checkNotNull(executor, \"executor is null\");\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public final ListenableFuture<V> reload(final K key, V oldValue)\n",
          "    {\n",
          "        return executor.submit(new Callable<V>()\n",
          "        {\n",
          "            @Override\n",
          "            public V call()\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/kklampir/ben-manes/blob/59a0eb0721976b12de9977a1cff3cc057fab89d1/guava/src/main/java/com/github/benmanes/caffeine/guava/CaffeinatedGuavaLoadingCache.java\n",
        "code": [
          "    SingleLoader(com.google.common.cache.CacheLoader<K, V> cacheLoader) {\n",
          "      this.cacheLoader = requireNonNull(cacheLoader);\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public V load(K key) {\n",
          "      try {\n",
          "        V value = cacheLoader.load(key);\n",
          "        if (value == null) {\n",
          "          throw new InvalidCacheLoadException(\"null value\");\n",
          "        }\n"
        ],
        "line_number": 133,
        "start_line": 129,
        "end_line": 139
      }
    ],
    "com.google.common.cache.Cache.cleanUp": [
      {
        "link": "https://github.com/sonnguyenutd/icse_20_user_study/blob/8a3676bc96059ea2c4f6d209016f5088a5628f3c/files/File_16994.java\n",
        "code": [
          "    compare(\"Soft Values\", caffeine, guava);\n",
          "  }\n",
          "\n",
          "  private void compare(String label, Cache<Integer, Integer> caffeine,\n",
          "      com.google.common.cache.Cache<Integer, Integer> guava) {\n",
          "    caffeine.cleanUp();\n",
          "    guava.cleanUp();\n",
          "\n",
          "    int leftPadded = Math.max((36 - label.length()) / 2 - 1, 1);\n",
          "    out.printf(\" %2$-\" + leftPadded + \"s %s%n\", label, \" \");\n",
          "    String result = FlipTable.of(new String[] { \"Cache\", \"Baseline\", \"Per Entry\" },new String[][] {\n"
        ],
        "line_number": 211,
        "start_line": 207,
        "end_line": 217
      },
      {
        "link": "https://github.com/sonnguyenutd/icse_20_user_study/blob/8a3676bc96059ea2c4f6d209016f5088a5628f3c/files/File_16993.java\n",
        "code": [
          "    compare(\"Soft Values\", caffeine, guava);\n",
          "  }\n",
          "\n",
          "  private void compare(String label, Cache<Integer, Integer> caffeine,\n",
          "      com.google.common.cache.Cache<Integer, Integer> guava) {\n",
          "    caffeine.cleanUp();\n",
          "    guava.cleanUp();\n",
          "\n",
          "    int leftPadded = Math.max((36 - label.length()) / 2 - 1, 1);\n",
          "    out.printf(\" %2$-\" + leftPadded + \"s %s%n\", label, \" \");\n",
          "    String result = FlipTable.of(new String[] { \"Cache\", \"Baseline\", \"Per Entry\" },new String[][] {\n"
        ],
        "line_number": 211,
        "start_line": 207,
        "end_line": 217
      },
      {
        "link": "https://github.com/sonnguyenutd/icse_20_user_study/blob/8a3676bc96059ea2c4f6d209016f5088a5628f3c/files/File_16996.java\n",
        "code": [
          "    compare(\"Soft Values\", caffeine, guava);\n",
          "  }\n",
          "\n",
          "  private void compare(String label, Cache<Integer, Integer> caffeine,\n",
          "      com.google.common.cache.Cache<Integer, Integer> guava) {\n",
          "    caffeine.cleanUp();\n",
          "    guava.cleanUp();\n",
          "\n",
          "    int leftPadded = Math.max((36 - label.length()) / 2 - 1, 1);\n",
          "    out.printf(\" %2$-\" + leftPadded + \"s %s%n\", label, \" \");\n",
          "    String result = FlipTable.of(new String[] { \"Cache\", \"Baseline\", \"Per Entry\" },new String[][] {\n"
        ],
        "line_number": 211,
        "start_line": 207,
        "end_line": 217
      },
      {
        "link": "https://github.com/ben-manes/caffeine/blob/dcc1d65dc845039852145f8b9fe5bf8a4ef5d12c/caffeine/src/jmh/java/com/github/benmanes/caffeine/cache/MemoryBenchmark.java\n",
        "code": [
          "    compare(\"Soft Values\", caffeine, guava);\n",
          "  }\n",
          "\n",
          "  private void compare(String label, Cache<Integer, Integer> caffeine,\n",
          "      com.google.common.cache.Cache<Integer, Integer> guava) {\n",
          "    caffeine.cleanUp();\n",
          "    guava.cleanUp();\n",
          "\n",
          "    int leftPadded = Math.max((36 - label.length()) / 2 - 1, 1);\n",
          "    out.printf(\" %2$-\" + leftPadded + \"s %s%n\", label, \" \");\n",
          "    String result = FlipTable.of(new String[] { \"Cache\", \"Baseline\", \"Per Entry\" }, new String[][] {\n"
        ],
        "line_number": 209,
        "start_line": 205,
        "end_line": 215
      },
      {
        "link": "https://github.com/debmalya/vigilant-tribble/blob/c3a106158a0da0663c533e1c04156979253b73fa/CacheComparision/src/main/java/com/deb/MemoryBenchMarkGSON.java\n",
        "code": [
          "\t\tcompare(\"Soft Values\", caffeine, guava);\n",
          "\t}\n",
          "\n",
          "\tprivate void compare(String label, Cache<String, JsonObject> caffeine, LRUPandaCache<String, JsonObject> pandaCache,\n",
          "\t\t\tcom.google.common.cache.Cache<String, JsonObject> guava) {\n",
          "\t\tcaffeine.cleanUp();\n",
          "\t\tpandaCache.clear();\n",
          "\t\tguava.cleanUp();\n",
          "\n",
          "\t\tint leftPadded = Math.max((36 - label.length()) / 2 - 1, 1);\n",
          "\t\tout.printf(\" %2$-\" + leftPadded + \"s %s%n\", label, \" \");\n"
        ],
        "line_number": 227,
        "start_line": 223,
        "end_line": 233
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/cache/ForwardingCache.java\n",
        "code": [
          "    public ConcurrentMap<K, V> asMap() {\n",
          "        return delegate().asMap();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public void cleanUp() {\n",
          "        delegate().cleanUp();\n",
          "    }\n",
          "\n",
          "    public static abstract class SimpleForwardingCache<K, V> extends ForwardingCache<K, V> {\n",
          "        private final Cache<K, V> delegate;\n"
        ],
        "line_number": 76,
        "start_line": 72,
        "end_line": 82
      },
      {
        "link": "https://github.com/sonnguyenutd/icse_20_user_study/blob/8a3676bc96059ea2c4f6d209016f5088a5628f3c/files/File_16998.java\n",
        "code": [
          "    compare(\"Soft Values\", caffeine, guava);\n",
          "  }\n",
          "\n",
          "  private void compare(String label, Cache<Integer, Integer> caffeine,\n",
          "      com.google.common.cache.Cache<Integer, Integer> guava) {\n",
          "    caffeine.cleanUp();\n",
          "    guava.cleanUp();\n",
          "\n",
          "    int leftPadded = Math.max((36 - label.length()) / 2 - 1, 1);\n",
          "    out.printf(\" %2$-\" + leftPadded + \"s %s%n\", label, \" \");\n",
          "    String result = FlipTable.of(new String[] { \"Cache\", \"Baseline\", \"Per Entry\" },new String[][] {\n"
        ],
        "line_number": 211,
        "start_line": 207,
        "end_line": 217
      },
      {
        "link": "https://github.com/sonnguyenutd/icse_20_user_study/blob/8a3676bc96059ea2c4f6d209016f5088a5628f3c/files/File_16990.java\n",
        "code": [
          "    compare(\"Soft Values\", caffeine, guava);\n",
          "  }\n",
          "\n",
          "  private void compare(String label, Cache<Integer, Integer> caffeine,\n",
          "      com.google.common.cache.Cache<Integer, Integer> guava) {\n",
          "    caffeine.cleanUp();\n",
          "    guava.cleanUp();\n",
          "\n",
          "    int leftPadded = Math.max((36 - label.length()) / 2 - 1, 1);\n",
          "    out.printf(\" %2$-\" + leftPadded + \"s %s%n\", label, \" \");\n",
          "    String result = FlipTable.of(new String[] { \"Cache\", \"Baseline\", \"Per Entry\" },new String[][] {\n"
        ],
        "line_number": 211,
        "start_line": 207,
        "end_line": 217
      },
      {
        "link": "https://github.com/sonnguyenutd/icse_20_user_study/blob/8a3676bc96059ea2c4f6d209016f5088a5628f3c/files/File_16997.java\n",
        "code": [
          "    compare(\"Soft Values\", caffeine, guava);\n",
          "  }\n",
          "\n",
          "  private void compare(String label, Cache<Integer, Integer> caffeine,\n",
          "      com.google.common.cache.Cache<Integer, Integer> guava) {\n",
          "    caffeine.cleanUp();\n",
          "    guava.cleanUp();\n",
          "\n",
          "    int leftPadded = Math.max((36 - label.length()) / 2 - 1, 1);\n",
          "    out.printf(\" %2$-\" + leftPadded + \"s %s%n\", label, \" \");\n",
          "    String result = FlipTable.of(new String[] { \"Cache\", \"Baseline\", \"Per Entry\" },new String[][] {\n"
        ],
        "line_number": 211,
        "start_line": 207,
        "end_line": 217
      },
      {
        "link": "https://github.com/sonnguyenutd/icse_20_user_study/blob/8a3676bc96059ea2c4f6d209016f5088a5628f3c/files/File_16999.java\n",
        "code": [
          "    compare(\"Soft Values\", caffeine, guava);\n",
          "  }\n",
          "\n",
          "  private void compare(String label, Cache<Integer, Integer> caffeine,\n",
          "      com.google.common.cache.Cache<Integer, Integer> guava) {\n",
          "    caffeine.cleanUp();\n",
          "    guava.cleanUp();\n",
          "\n",
          "    int leftPadded = Math.max((36 - label.length()) / 2 - 1, 1);\n",
          "    out.printf(\" %2$-\" + leftPadded + \"s %s%n\", label, \" \");\n",
          "    String result = FlipTable.of(new String[] { \"Cache\", \"Baseline\", \"Per Entry\" },new String[][] {\n"
        ],
        "line_number": 211,
        "start_line": 207,
        "end_line": 217
      }
    ],
    "com.google.common.collect.MultimapBuilder.hashKeys": [
      {
        "link": "https://github.com/AshutoshSundresh/OnePlusSettings-Java/blob/8015f4badc24494c3931ea99fb834bc2b264919f/sources/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "\n",
          "public abstract class MultimapBuilder<K0, V0> {\n",
          "    private MultimapBuilder() {\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Object> hashKeys() {\n",
          "        return hashKeys(8);\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Object> hashKeys(final int i) {\n",
          "        CollectPreconditions.checkNonnegative(i, \"expectedKeys\");\n"
        ],
        "line_number": 12,
        "start_line": 8,
        "end_line": 18
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "    public abstract <K extends K0, V extends V0> Multimap<K, V> build();\n",
          "\n",
          "    private MultimapBuilder() {\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Object> hashKeys() {\n",
          "        return hashKeys(8);\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Object> hashKeys(final int expectedKeys) {\n",
          "        CollectPreconditions.checkNonnegative(expectedKeys, \"expectedKeys\");\n"
        ],
        "line_number": 30,
        "start_line": 26,
        "end_line": 36
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "    public abstract <K extends K0, V extends V0> Multimap<K, V> build();\n",
          "\n",
          "    private MultimapBuilder() {\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Object> hashKeys() {\n",
          "        return hashKeys(8);\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Object> hashKeys(final int i) {\n",
          "        CollectPreconditions.checkNonnegative(i, \"expectedKeys\");\n"
        ],
        "line_number": 30,
        "start_line": 26,
        "end_line": 36
      },
      {
        "link": "https://github.com/OemKang/Settings/blob/9371a7a61b6a024015dd88cbd8b75c1bdf0097c8/src/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "import java.util.Set;\n",
          "public abstract class MultimapBuilder<K0, V0> {\n",
          "    private MultimapBuilder() {\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Object> hashKeys() {\n",
          "        return hashKeys(8);\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Object> hashKeys(final int i) {\n",
          "        CollectPreconditions.checkNonnegative(i, \"expectedKeys\");\n"
        ],
        "line_number": 11,
        "start_line": 7,
        "end_line": 17
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "    public abstract <K extends K0, V extends V0> Multimap<K, V> build();\n",
          "\n",
          "    private MultimapBuilder() {\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Object> hashKeys() {\n",
          "        return hashKeys(8);\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Object> hashKeys(final int i) {\n",
          "        CollectPreconditions.checkNonnegative(i, \"expectedKeys\");\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      },
      {
        "link": "https://github.com/duyleekun/zycami-ded/blob/27686ca846de6d164692c81bac2ae7f85710361f/src/main/java/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "        Preconditions.checkNotNull(clazz);\n",
          "        MultimapBuilder$4 multimapBuilder$4 = new MultimapBuilder$4(clazz);\n",
          "        return multimapBuilder$4;\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilder$MultimapBuilderWithKeys hashKeys() {\n",
          "        return MultimapBuilder.hashKeys(8);\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilder$MultimapBuilderWithKeys hashKeys(int n10) {\n",
          "        CollectPreconditions.checkNonnegative(n10, \"expectedKeys\");\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      },
      {
        "link": "https://github.com/upclab/socrates-matcher-android/blob/81594ffd21e1714f86d5316eff43f73e7d00545b/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "    public abstract <K extends K0, V extends V0> Multimap<K, V> build();\n",
          "\n",
          "    private MultimapBuilder() {\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Object> hashKeys() {\n",
          "        return hashKeys(DEFAULT_EXPECTED_KEYS);\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Object> hashKeys(int expectedKeys) {\n",
          "        CollectPreconditions.checkNonnegative(expectedKeys, \"expectedKeys\");\n"
        ],
        "line_number": 322,
        "start_line": 318,
        "end_line": 328
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "    public abstract <K extends K0, V extends V0> Multimap<K, V> build();\n",
          "\n",
          "    private MultimapBuilder() {\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Object> hashKeys() {\n",
          "        return hashKeys(8);\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Object> hashKeys(final int i) {\n",
          "        CollectPreconditions.checkNonnegative(i, \"expectedKeys\");\n"
        ],
        "line_number": 30,
        "start_line": 26,
        "end_line": 36
      },
      {
        "link": "https://github.com/TheScarastic/redfin_b5/blob/8cf6cb88a7bfeca6f7554d69b371df69722b1644/SystemUIGoogle/sources/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "/* loaded from: classes2.dex */\n",
          "public abstract class MultimapBuilder<K0, V0> {\n",
          "    private MultimapBuilder() {\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Object> hashKeys() {\n",
          "        return hashKeys(8);\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Object> hashKeys(final int i) {\n",
          "        CollectPreconditions.checkNonnegative(i, \"expectedKeys\");\n"
        ],
        "line_number": 12,
        "start_line": 8,
        "end_line": 18
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.deviceauthserver-DeviceAuthServer/sources/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "    public abstract <K extends K0, V extends V0> Multimap<K, V> build();\n",
          "\n",
          "    private MultimapBuilder() {\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Object> hashKeys() {\n",
          "        return hashKeys(8);\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Object> hashKeys(final int expectedKeys) {\n",
          "        CollectPreconditions.checkNonnegative(expectedKeys, \"expectedKeys\");\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 40
      }
    ],
    "com.google.common.collect.Lists.newLinkedList": [
      {
        "link": "https://github.com/boatfly/GoShineCenter/blob/4ddefa5a8d8e07a169b2bd89919570cbdb27f261/gskit/src/main/java/com/goshine/gscenter/gskit/collection/ListUtil.java\n",
        "code": [
          "    }\n",
          "\n",
          "    /**\n",
          "     * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e7\u00ad\u0089\u00e5\u008f\u00b7\u00e5\u00b7\u00a6\u00e8\u00be\u00b9\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00ef\u00bc\u008c\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e6\u00ad\u00a3\u00e7\u00a1\u00ae\u00e7\u009a\u0084LinkedList.\n",
          "     *\n",
          "     * @see com.google.common.collect.Lists#newLinkedList()\n",
          "     */\n",
          "    public static <T> LinkedList<T> newLinkedList() {\n",
          "        return new LinkedList<T>();\n",
          "    }\n",
          "\n"
        ],
        "line_number": 102,
        "start_line": 98,
        "end_line": 108
      },
      {
        "link": "}https://github.com/paranoidq/qtill/blob/c0ceae4a78d80f298a416a36c9ce2ade93a1e0bd/qtill-commons/src/main/java/me/qtill/commons/collection/ListUtil.java\n",
        "code": [
          "    }\n",
          "\n",
          "    /**\n",
          "     * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e7\u00ad\u0089\u00e5\u008f\u00b7\u00e5\u00b7\u00a6\u00e8\u00be\u00b9\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00ef\u00bc\u008c\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e6\u00ad\u00a3\u00e7\u00a1\u00ae\u00e7\u009a\u0084LinkedList.\n",
          "     *\n",
          "     * @see com.google.common.collect.Lists#newLinkedList()\n",
          "     */\n",
          "    public static <T> LinkedList<T> newLinkedList() {\n",
          "        return new LinkedList<T>();\n",
          "    }\n",
          "\n"
        ],
        "line_number": 104,
        "start_line": 100,
        "end_line": 110
      },
      {
        "link": "https://github.com/springside/springside4/blob/8950746bb53ce209b4cb5d2d1706712e9c6a0efc/modules/utils/src/main/java/org/springside/modules/utils/collection/ListUtil.java\n",
        "code": [
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e7\u00ad\u0089\u00e5\u008f\u00b7\u00e5\u00b7\u00a6\u00e8\u00be\u00b9\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00ef\u00bc\u008c\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e6\u00ad\u00a3\u00e7\u00a1\u00ae\u00e7\u009a\u0084LinkedList.\n",
          "\t * \n",
          "\t * @see com.google.common.collect.Lists#newLinkedList()\n",
          "\t */\n",
          "\tpublic static <T> LinkedList<T> newLinkedList() {\n",
          "\t\treturn new LinkedList<T>();\n",
          "\t}\n",
          "\n"
        ],
        "line_number": 109,
        "start_line": 105,
        "end_line": 115
      },
      {
        "link": "https://github.com/huoyanyan/mycollect/blob/806b56a84d324d1c040b964089113467b80283e1/samplepro/mixdemo/src/main/java/util/j360/dubbo/modules/collection/ListUtil.java\n",
        "code": [
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e7\u00ad\u0089\u00e5\u008f\u00b7\u00e5\u00b7\u00a6\u00e8\u00be\u00b9\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00ef\u00bc\u008c\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e6\u00ad\u00a3\u00e7\u00a1\u00ae\u00e7\u009a\u0084LinkedList.\n",
          "\t * \n",
          "\t * @see com.google.common.collect.Lists#newLinkedList()\n",
          "\t */\n",
          "\tpublic static <T> LinkedList<T> newLinkedList() {\n",
          "\t\treturn new LinkedList<T>();\n",
          "\t}\n",
          "\n"
        ],
        "line_number": 106,
        "start_line": 102,
        "end_line": 112
      },
      {
        "link": "https://github.com/ash2005/r01fb/blob/6a0868955e2aac054eb4ca292a8030cd40f5a599/r01fbClasses/src/r01f/util/types/collections/Lists.java\n",
        "code": [
          "\t\treturn com.google.common.collect.Lists.newArrayListWithCapacity(size);\n",
          "\t}\n",
          "\t/**\n",
          "\t * Creates an empty LinkedList instance.\n",
          "\t */\n",
          "\tpublic static <E> List<E> newLinkedList() {\n",
          "\t\treturn com.google.common.collect.Lists.newLinkedList();\n",
          "\t}\n",
          "\t/**\n",
          "\t * Creates a LinkedList instance containing the given elements.\n",
          "\t */\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      },
      {
        "link": "https://github.com/AppSecAI-TEST/tent/blob/e1149ca6a56b565dddbf9ace05eeaa97b937770e/common/utils/src/main/java/me/chongfeng/common/utils/collection/ListUtil.java\n",
        "code": [
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e7\u00ad\u0089\u00e5\u008f\u00b7\u00e5\u00b7\u00a6\u00e8\u00be\u00b9\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00ef\u00bc\u008c\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e6\u00ad\u00a3\u00e7\u00a1\u00ae\u00e7\u009a\u0084LinkedList.\n",
          "\t *\n",
          "\t * @see com.google.common.collect.Lists#newLinkedList()\n",
          "\t */\n",
          "\tpublic static <T> LinkedList<T> newLinkedList() {\n",
          "\t\treturn new LinkedList<T>();\n",
          "\t}\n",
          "\n"
        ],
        "line_number": 113,
        "start_line": 109,
        "end_line": 119
      },
      {
        "link": "https://github.com/xuminwlt/j360-dubbo-app-all/blob/fc32b0b074177a30d558ae8f0714ae4c05a7e47f/j360-dubbo-modules/src/main/java/me/j360/dubbo/modules/util/collection/ListUtil.java\n",
        "code": [
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e7\u00ad\u0089\u00e5\u008f\u00b7\u00e5\u00b7\u00a6\u00e8\u00be\u00b9\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00ef\u00bc\u008c\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e6\u00ad\u00a3\u00e7\u00a1\u00ae\u00e7\u009a\u0084LinkedList.\n",
          "\t * \n",
          "\t * @see com.google.common.collect.Lists#newLinkedList()\n",
          "\t */\n",
          "\tpublic static <T> LinkedList<T> newLinkedList() {\n",
          "\t\treturn new LinkedList<T>();\n",
          "\t}\n",
          "\n"
        ],
        "line_number": 106,
        "start_line": 102,
        "end_line": 112
      },
      {
        "link": "https://github.com/hujian0607/dubbo/blob/fc32b0b074177a30d558ae8f0714ae4c05a7e47f/j360-dubbo-modules/src/main/java/me/j360/dubbo/modules/util/collection/ListUtil.java\n",
        "code": [
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e7\u00ad\u0089\u00e5\u008f\u00b7\u00e5\u00b7\u00a6\u00e8\u00be\u00b9\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00ef\u00bc\u008c\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e6\u00ad\u00a3\u00e7\u00a1\u00ae\u00e7\u009a\u0084LinkedList.\n",
          "\t * \n",
          "\t * @see com.google.common.collect.Lists#newLinkedList()\n",
          "\t */\n",
          "\tpublic static <T> LinkedList<T> newLinkedList() {\n",
          "\t\treturn new LinkedList<T>();\n",
          "\t}\n",
          "\n"
        ],
        "line_number": 106,
        "start_line": 102,
        "end_line": 112
      },
      {
        "link": "https://github.com/opendata-euskadi/fabric-r01f/blob/87b8c436b778bc4dbd40ca964cf61a652ec73a14/r01fBase/r01fBaseClasses/src/main/java/r01f/util/types/collections/Lists.java\n",
        "code": [
          "\t\treturn com.google.common.collect.Lists.newArrayListWithCapacity(size);\r\n",
          "\t}\r\n",
          "\t/**\r\n",
          "\t * Creates an empty LinkedList instance.\r\n",
          "\t */\r\n",
          "\tpublic static <E> List<E> newLinkedList() {\r\n",
          "\t\treturn com.google.common.collect.Lists.newLinkedList();\r\n",
          "\t}\r\n",
          "\t/**\r\n",
          "\t * Creates a LinkedList instance containing the given elements.\r\n",
          "\t */\r\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      },
      {
        "link": "https://github.com/xiamuyihui/golang/blob/b62c084cd2e0d69216dadda7d48054bea5a2332e/go-mobiles/kingthy-back-common/src/main/java/org/springside/modules/utils/collection/ListUtil.java\n",
        "code": [
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e7\u00ad\u0089\u00e5\u008f\u00b7\u00e5\u00b7\u00a6\u00e8\u00be\u00b9\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00ef\u00bc\u008c\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e6\u00ad\u00a3\u00e7\u00a1\u00ae\u00e7\u009a\u0084LinkedList.\n",
          "\t * \n",
          "\t * @see com.google.common.collect.Lists#newLinkedList()\n",
          "\t */\n",
          "\tpublic static <T> LinkedList<T> newLinkedList() {\n",
          "\t\treturn new LinkedList<T>();\n",
          "\t}\n",
          "\n"
        ],
        "line_number": 113,
        "start_line": 109,
        "end_line": 119
      }
    ],
    "com.google.common.base.CharMatcher.and": [
      {
        "link": "https://github.com/steveash/jg2p/blob/9ef911031f2762b15f5b731c33dd968f523e181f/jg2p-core/src/main/java/com/github/steveash/jg2p/phoseq/Graphemes.java\n",
        "code": [
          "public class Graphemes {\n",
          "\n",
          "  public static final CharMatcher vowels = anyOf(\"AEIOUYaeiouy\").precomputed();\n",
          "  public static final CharMatcher\n",
          "      consonants =\n",
          "      (inRange('A', 'Z').or(inRange('a', 'z'))).and(vowels.negate()).precomputed();\n",
          "  private static final CharMatcher other = CharMatcher.ANY.and(vowels.or(consonants).negate()).precomputed();\n",
          "\n",
          "  public static boolean isVowelOrConsonant(String graph) {\n",
          "    Preconditions.checkArgument(graph.length() == 1);\n",
          "    return !other.matches(graph.toUpperCase().charAt(0));\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/duyleekun/zycami-ded/blob/27686ca846de6d164692c81bac2ae7f85710361f/src/main/java/com/google/common/base/CharMatcher$IsNot.java\n",
        "code": [
          "\n",
          "    public CharMatcher$IsNot(char c10) {\n",
          "        this.match = c10;\n",
          "    }\n",
          "\n",
          "    public CharMatcher and(CharMatcher charMatcher) {\n",
          "        char c10 = this.match;\n",
          "        if ((c10 = (char)(charMatcher.matches(c10) ? 1 : 0)) != '\\u0000') {\n",
          "            charMatcher = super.and(charMatcher);\n",
          "        }\n",
          "        return charMatcher;\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/steveash/syngen/blob/7be1778a5364b54201506ccfe1f0aac6e783f205/synthrec-core/src/main/java/com/github/steveash/synthrec/canonical/GeneralNormalizer.java\n",
        "code": [
          "public class GeneralNormalizer implements StringNormalizer {\n",
          "\n",
          "    static final GeneralNormalizer INSTANCE = new GeneralNormalizer();\n",
          "\n",
          "    private final StringNormalizer replaceDiacritics = DiacriticNormalizer.DIA_TO_LOWER_NORMAL;\n",
          "    private final CharMatcher lettersDigitsAndPunc = ascii().and(javaIsoControl().negate()).precomputed();\n",
          "    private final CharMatcher trimChars = CharMatcher.invisible().or(CharMatcher.anyOf(\"%\"));\n",
          "    private final CharMatcher replaceWithApostrophe = CharMatcher.anyOf(\"`~^\").precomputed();\n",
          "    private final CharMatcher replaceWithSpace = CharMatcher.anyOf(\"|\").precomputed();\n",
          "\n",
          "    /**\n"
        ],
        "line_number": 33,
        "start_line": 29,
        "end_line": 39
      },
      {
        "link": "https://github.com/dovikn/inegotiate-android/blob/cea5e088b01ae4487d83cd1a84e6d2df78761a6e/src/com/google/common/base/CharMatcher.java\n",
        "code": [
          "\n",
          "        public int countIn(CharSequence sequence) {\n",
          "            return sequence.length();\n",
          "        }\n",
          "\n",
          "        public CharMatcher and(CharMatcher other) {\n",
          "            return (CharMatcher) Preconditions.checkNotNull(other);\n",
          "        }\n",
          "\n",
          "        public CharMatcher or(CharMatcher other) {\n",
          "            Preconditions.checkNotNull(other);\n"
        ],
        "line_number": 296,
        "start_line": 292,
        "end_line": 302
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/base/CharMatcher.java\n",
        "code": [
          "    @Override // java.util.function.Predicate\n",
          "    public CharMatcher negate() {\n",
          "        return new Negated(this);\n",
          "    }\n",
          "\n",
          "    public CharMatcher and(CharMatcher charMatcher) {\n",
          "        return new And(this, charMatcher);\n",
          "    }\n",
          "\n",
          "    public CharMatcher or(CharMatcher charMatcher) {\n",
          "        return new Or(this, charMatcher);\n"
        ],
        "line_number": 169,
        "start_line": 165,
        "end_line": 175
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/base/CharMatcher.java\n",
        "code": [
          "\n",
          "    public CharMatcher negate() {\n",
          "        return new Negated(this);\n",
          "    }\n",
          "\n",
          "    public CharMatcher and(CharMatcher charMatcher) {\n",
          "        return new And(this, charMatcher);\n",
          "    }\n",
          "\n",
          "    public CharMatcher or(CharMatcher charMatcher) {\n",
          "        return new Or(this, charMatcher);\n"
        ],
        "line_number": 124,
        "start_line": 120,
        "end_line": 130
      },
      {
        "link": "https://github.com/steveash/syngen/blob/7be1778a5364b54201506ccfe1f0aac6e783f205/synthrec-core/src/main/java/com/github/steveash/synthrec/canonical/Graphemes.java\n",
        "code": [
          " * @author Steve Ash\n",
          " */\n",
          "public class Graphemes {\n",
          "\n",
          "    private static final CharMatcher vowels = anyOf(\"AEIOUYaeiouy\").precomputed();\n",
          "    private static final CharMatcher consonants = (inRange('A', 'Z').or(inRange('a', 'z'))).and(vowels.negate())\n",
          "            .precomputed();\n",
          "    private static final CharMatcher other = CharMatcher.any().and(vowels.or(consonants).negate()).precomputed();\n",
          "    private static final CharMatcher digits = CharMatcher.digit().precomputed();\n",
          "\n",
          "    public static boolean isVowelOrConsonant(String graph) {\n"
        ],
        "line_number": 35,
        "start_line": 31,
        "end_line": 41
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/base/CharMatcher.java\n",
        "code": [
          "\n",
          "    public CharMatcher negate() {\n",
          "        return new Negated(this);\n",
          "    }\n",
          "\n",
          "    public CharMatcher and(CharMatcher charMatcher) {\n",
          "        return new And(this, charMatcher);\n",
          "    }\n",
          "\n",
          "    public CharMatcher or(CharMatcher charMatcher) {\n",
          "        return new Or(this, charMatcher);\n"
        ],
        "line_number": 120,
        "start_line": 116,
        "end_line": 126
      },
      {
        "link": "https://github.com/dubu/guava-libraries/blob/47b7717473d269db4a5af25678bccce73c736c66/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/CharMatcherTest.java\n",
        "code": [
          "    // more excruciating tests! Hooray!\n",
          "\n",
          "    assertSame(CharMatcher.ANY, CharMatcher.NONE.negate());\n",
          "    assertSame(CharMatcher.NONE, CharMatcher.ANY.negate());\n",
          "\n",
          "    assertSame(WHATEVER, CharMatcher.ANY.and(WHATEVER));\n",
          "    assertSame(CharMatcher.ANY, CharMatcher.ANY.or(WHATEVER));\n",
          "\n",
          "    assertSame(CharMatcher.NONE, CharMatcher.NONE.and(WHATEVER));\n",
          "    assertSame(WHATEVER, CharMatcher.NONE.or(WHATEVER));\n",
          "  }\n"
        ],
        "line_number": 61,
        "start_line": 57,
        "end_line": 67
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/base/CharMatcher.java\n",
        "code": [
          "\n",
          "    public CharMatcher negate() {\n",
          "        return new Negated(this);\n",
          "    }\n",
          "\n",
          "    public CharMatcher and(CharMatcher other) {\n",
          "        return new And(this, other);\n",
          "    }\n",
          "\n",
          "    public CharMatcher or(CharMatcher other) {\n",
          "        return new Or(this, other);\n"
        ],
        "line_number": 119,
        "start_line": 115,
        "end_line": 125
      }
    ],
    "org.mockito.AdditionalMatchers.and": [
      {
        "link": "https://github.com/anubhav0407/SQM_project-1/blob/f010494c9a8b6343f71f66bccad8da3fe80922f0/src/test/java/org/mockitousage/verification/VerificationUsingMatchersTest.java\n",
        "code": [
          "    public void shouldVerifyUsingMixedMatchers() {\n",
          "        mock.threeArgumentMethod(11, \"\", \"01234\");\n",
          "\n",
          "        try {\n",
          "            verify(mock)\n",
          "                    .threeArgumentMethod(and(geq(7), leq(10)), isA(String.class), contains(\"123\"));\n",
          "            fail();\n",
          "        } catch (ArgumentsAreDifferent e) {\n",
          "        }\n",
          "\n",
          "        mock.threeArgumentMethod(8, new Object(), \"01234\");\n"
        ],
        "line_number": 74,
        "start_line": 70,
        "end_line": 80
      },
      {
        "link": "https://github.com/zdenda/aosp_platform_frameworks_support/blob/ea83372a29278e9cb0acca4c330834ea09f905a3/transition/src/androidTest/java/androidx/transition/ChangeScrollTest.java\n",
        "code": [
          "                view.scrollTo(150, 300);\n",
          "            }\n",
          "        });\n",
          "        waitForStart();\n",
          "\n",
          "        verify(view, timeout(1000).atLeastOnce()).setScrollX(and(gt(0), leq(150)));\n",
          "        verify(view, timeout(1000).atLeastOnce()).setScrollY(and(gt(0), leq(300)));\n",
          "\n",
          "        waitForEnd();\n",
          "        rule.runOnUiThread(new Runnable() {\n",
          "            @Override\n"
        ],
        "line_number": 64,
        "start_line": 60,
        "end_line": 70
      },
      {
        "link": "https://github.com/AdrianAndroid/lib_android/blob/29abe76e788113ab8a2a4b5f52645ce5d5a5041d/androidx/transition/transition/src/androidTest/java/androidx/transition/ChangeScrollTest.java\n",
        "code": [
          "                view.scrollTo(150, 300);\n",
          "            }\n",
          "        });\n",
          "        waitForStart();\n",
          "\n",
          "        verify(view, atLeastOnceWithin(1000)).setScrollX(and(gt(0), leq(150)));\n",
          "        verify(view, atLeastOnceWithin(1000)).setScrollY(and(gt(0), leq(300)));\n",
          "\n",
          "        waitForEnd();\n",
          "        rule.runOnUiThread(new Runnable() {\n",
          "            @Override\n"
        ],
        "line_number": 65,
        "start_line": 61,
        "end_line": 71
      },
      {
        "link": "https://github.com/sergiodctest/mockitoclone/blob/0c4e494a16141a65f22605a57382a222040f340b/src/test/java/org/mockitousage/matchers/MatchersTest.java\n",
        "code": [
          "public class MatchersTest extends TestBase {\n",
          "    private IMethods mock = Mockito.mock(IMethods.class);\n",
          "\n",
          "    @Test\n",
          "    public void and_overloaded() {\n",
          "        when(mock.oneArg(and(eq(false), eq(false)))).thenReturn(\"0\");\n",
          "        when(mock.oneArg(and(eq((byte) 1), eq((byte) 1)))).thenReturn(\"1\");\n",
          "        when(mock.oneArg(and(eq('a'), eq('a')))).thenReturn(\"2\");\n",
          "        when(mock.oneArg(and(eq(1D), eq(1D)))).thenReturn(\"3\");\n",
          "        when(mock.oneArg(and(eq(1F), eq(1F)))).thenReturn(\"4\");\n",
          "        when(mock.oneArg(and(eq(1), eq(1)))).thenReturn(\"5\");\n"
        ],
        "line_number": 69,
        "start_line": 65,
        "end_line": 75
      },
      {
        "link": "https://github.com/alban-auzeill/arctic-code-vault-java-patterns/blob/86f321adb8693d9423c39f2f7cc235d411735cb9/src/main/resources/step6/src/mockito/mockito/src/test/java/org/mockitousage/matchers/MatchersTest.java\n",
        "code": [
          "public class MatchersTest extends TestBase {\n",
          "    private IMethods mock = Mockito.mock(IMethods.class);\n",
          "\n",
          "    @Test\n",
          "    public void and_overloaded() {\n",
          "        when(mock.oneArg(and(eq(false), eq(false)))).thenReturn(\"0\");\n",
          "        when(mock.oneArg(and(eq((byte) 1), eq((byte) 1)))).thenReturn(\"1\");\n",
          "        when(mock.oneArg(and(eq('a'), eq('a')))).thenReturn(\"2\");\n",
          "        when(mock.oneArg(and(eq(1D), eq(1D)))).thenReturn(\"3\");\n",
          "        when(mock.oneArg(and(eq(1F), eq(1F)))).thenReturn(\"4\");\n",
          "        when(mock.oneArg(and(eq(1), eq(1)))).thenReturn(\"5\");\n"
        ],
        "line_number": 68,
        "start_line": 64,
        "end_line": 74
      },
      {
        "link": "https://github.com/adamfit/platform_frameworks_support/blob/9e6a7849696fce73bb81005a81b78410bfebc6d6/transition/src/androidTest/java/androidx/transition/ChangeScrollTest.java\n",
        "code": [
          "                view.scrollTo(150, 300);\n",
          "            }\n",
          "        });\n",
          "        waitForStart();\n",
          "\n",
          "        verify(view, timeout(1000).atLeastOnce()).setScrollX(and(gt(0), lt(150)));\n",
          "        verify(view, timeout(1000).atLeastOnce()).setScrollY(and(gt(0), lt(300)));\n",
          "\n",
          "        waitForEnd();\n",
          "        rule.runOnUiThread(new Runnable() {\n",
          "            @Override\n"
        ],
        "line_number": 64,
        "start_line": 60,
        "end_line": 70
      },
      {
        "link": "https://github.com/xiaomanwong/androidx/blob/2f31f44307934840b65378e06c09ad9bb7760169/transition/transition/src/androidTest/java/androidx/transition/SlideEdgeTest.java\n",
        "code": [
          "\n",
          "            switch (slideEdge) {\n",
          "                case Gravity.LEFT:\n",
          "                case Gravity.START:\n",
          "                    verify(redSquare, atLeastOnceWithin(1000))\n",
          "                            .setTranslationX(and(lt(0.f), lt(redStartX)));\n",
          "                    verify(redSquare, never()).setTranslationY(not(eq(0f, 0.01f)));\n",
          "                    break;\n",
          "                case Gravity.RIGHT:\n",
          "                case Gravity.END:\n",
          "                    verify(redSquare, atLeastOnceWithin(1000))\n"
        ],
        "line_number": 112,
        "start_line": 108,
        "end_line": 118
      },
      {
        "link": "https://github.com/xiaomanwong/androidx/blob/2f31f44307934840b65378e06c09ad9bb7760169/transition/transition/src/androidTest/java/androidx/transition/ChangeScrollTest.java\n",
        "code": [
          "                view.scrollTo(150, 300);\n",
          "            }\n",
          "        });\n",
          "        waitForStart();\n",
          "\n",
          "        verify(view, atLeastOnceWithin(1000)).setScrollX(and(gt(0), leq(150)));\n",
          "        verify(view, atLeastOnceWithin(1000)).setScrollY(and(gt(0), leq(300)));\n",
          "\n",
          "        waitForEnd();\n",
          "        rule.runOnUiThread(new Runnable() {\n",
          "            @Override\n"
        ],
        "line_number": 65,
        "start_line": 61,
        "end_line": 71
      },
      {
        "link": "https://github.com/androidx/androidx/blob/8cb282ccdbb00687dbf253a4419ded0dfc786fb5/transition/transition/src/androidTest/java/androidx/transition/ChangeScrollTest.java\n",
        "code": [
          "                view.scrollTo(150, 300);\n",
          "            }\n",
          "        });\n",
          "        waitForStart();\n",
          "\n",
          "        verify(view, atLeastOnceWithin(1000)).setScrollX(and(gt(0), leq(150)));\n",
          "        verify(view, atLeastOnceWithin(1000)).setScrollY(and(gt(0), leq(300)));\n",
          "\n",
          "        waitForEnd();\n",
          "        rule.runOnUiThread(new Runnable() {\n",
          "            @Override\n"
        ],
        "line_number": 65,
        "start_line": 61,
        "end_line": 71
      },
      {
        "link": "https://github.com/uqam22/mockito/blob/2b2f41b8d5baf3377137c015944be1ad5713046c/src/test/java/org/mockitousage/matchers/MatchersTest.java\n",
        "code": [
          "public class MatchersTest extends TestBase {\n",
          "    private IMethods mock = Mockito.mock(IMethods.class);\n",
          "\n",
          "    @Test\n",
          "    public void and_overloaded() {\n",
          "        when(mock.oneArg(and(eq(false), eq(false)))).thenReturn(\"0\");\n",
          "        when(mock.oneArg(and(eq((byte) 1), eq((byte) 1)))).thenReturn(\"1\");\n",
          "        when(mock.oneArg(and(eq('a'), eq('a')))).thenReturn(\"2\");\n",
          "        when(mock.oneArg(and(eq(1D), eq(1D)))).thenReturn(\"3\");\n",
          "        when(mock.oneArg(and(eq(1F), eq(1F)))).thenReturn(\"4\");\n",
          "        when(mock.oneArg(and(eq(1), eq(1)))).thenReturn(\"5\");\n"
        ],
        "line_number": 69,
        "start_line": 65,
        "end_line": 75
      }
    ],
    "org.mockito.AdditionalMatchers.aryEq": [
      {
        "link": "https://github.com/DennissimOS/platform_external_mockito/blob/dd85ed517bd4ea380b918fc68c925a65c697cf05/src/test/java/org/mockitousage/matchers/MatchersTest.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void should_array_equals_deal_with_null_array() throws Exception {\n",
          "        Object[] nullArray = null;\n",
          "        when(mock.oneArray(aryEq(nullArray))).thenReturn(\"null\");\n",
          "\n",
          "        assertEquals(\"null\", mock.oneArray(nullArray));\n",
          "\n",
          "        mock = mock(IMethods.class);\n",
          "\n"
        ],
        "line_number": 312,
        "start_line": 308,
        "end_line": 318
      },
      {
        "link": "https://github.com/asafsofer-sl/test1/blob/2b2f41b8d5baf3377137c015944be1ad5713046c/src/test/java/org/mockitousage/matchers/MatchersTest.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void should_array_equals_deal_with_null_array() throws Exception {\n",
          "        Object[] nullArray = null;\n",
          "        when(mock.oneArray(aryEq(nullArray))).thenReturn(\"null\");\n",
          "\n",
          "        assertEquals(\"null\", mock.oneArray(nullArray));\n",
          "\n",
          "        mock = mock(IMethods.class);\n",
          "\n"
        ],
        "line_number": 312,
        "start_line": 308,
        "end_line": 318
      },
      {
        "link": "https://github.com/sergiodctest/mockitoclone/blob/0c4e494a16141a65f22605a57382a222040f340b/src/test/java/org/mockitousage/matchers/MatchersTest.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void should_array_equals_deal_with_null_array() throws Exception {\n",
          "        Object[] nullArray = null;\n",
          "        when(mock.oneArray(aryEq(nullArray))).thenReturn(\"null\");\n",
          "\n",
          "        assertEquals(\"null\", mock.oneArray(nullArray));\n",
          "\n",
          "        mock = mock(IMethods.class);\n",
          "\n"
        ],
        "line_number": 312,
        "start_line": 308,
        "end_line": 318
      },
      {
        "link": "https://github.com/Hari211981/BlackPrince/blob/e050fd99264803fea5a8b305c6f98f9e7d425d7c/src/test/java/org/mockitousage/matchers/MatchersTest.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void should_array_equals_deal_with_null_array() throws Exception {\n",
          "        Object[] nullArray = null;\n",
          "        when(mock.oneArray(aryEq(nullArray))).thenReturn(\"null\");\n",
          "\n",
          "        assertEquals(\"null\", mock.oneArray(nullArray));\n",
          "\n",
          "        mock = mock(IMethods.class);\n",
          "\n"
        ],
        "line_number": 312,
        "start_line": 308,
        "end_line": 318
      },
      {
        "link": "https://github.com/alban-auzeill/arctic-code-vault-java-patterns/blob/86f321adb8693d9423c39f2f7cc235d411735cb9/src/main/resources/step6/src/mockito/mockito/src/test/java/org/mockitousage/matchers/MatchersTest.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void should_array_equals_deal_with_null_array() throws Exception {\n",
          "        Object[] nullArray = null;\n",
          "        when(mock.oneArray(aryEq(nullArray))).thenReturn(\"null\");\n",
          "\n",
          "        assertEquals(\"null\", mock.oneArray(nullArray));\n",
          "\n",
          "        mock = mock(IMethods.class);\n",
          "\n"
        ],
        "line_number": 311,
        "start_line": 307,
        "end_line": 317
      },
      {
        "link": "https://github.com/aosp-caf-upstream/platform_external_mockito/blob/dd85ed517bd4ea380b918fc68c925a65c697cf05/src/test/java/org/mockitousage/matchers/MatchersTest.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void should_array_equals_deal_with_null_array() throws Exception {\n",
          "        Object[] nullArray = null;\n",
          "        when(mock.oneArray(aryEq(nullArray))).thenReturn(\"null\");\n",
          "\n",
          "        assertEquals(\"null\", mock.oneArray(nullArray));\n",
          "\n",
          "        mock = mock(IMethods.class);\n",
          "\n"
        ],
        "line_number": 312,
        "start_line": 308,
        "end_line": 318
      },
      {
        "link": "https://github.com/fukehan/p_external/blob/1538eb26d30e87d52436962cd7129de0bbedaee6/mockito/src/test/java/org/mockitousage/matchers/MatchersTest.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void should_array_equals_deal_with_null_array() throws Exception {\n",
          "        Object[] nullArray = null;\n",
          "        when(mock.oneArray(aryEq(nullArray))).thenReturn(\"null\");\n",
          "\n",
          "        assertEquals(\"null\", mock.oneArray(nullArray));\n",
          "\n",
          "        mock = mock(IMethods.class);\n",
          "\n"
        ],
        "line_number": 312,
        "start_line": 308,
        "end_line": 318
      },
      {
        "link": "https://github.com/webrtcmirrors/vendor_mockito/blob/e050fd99264803fea5a8b305c6f98f9e7d425d7c/src/test/java/org/mockitousage/matchers/MatchersTest.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void should_array_equals_deal_with_null_array() throws Exception {\n",
          "        Object[] nullArray = null;\n",
          "        when(mock.oneArray(aryEq(nullArray))).thenReturn(\"null\");\n",
          "\n",
          "        assertEquals(\"null\", mock.oneArray(nullArray));\n",
          "\n",
          "        mock = mock(IMethods.class);\n",
          "\n"
        ],
        "line_number": 312,
        "start_line": 308,
        "end_line": 318
      },
      {
        "link": "https://github.com/uqam22/mockito/blob/2b2f41b8d5baf3377137c015944be1ad5713046c/src/test/java/org/mockitousage/matchers/MatchersTest.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void should_array_equals_deal_with_null_array() throws Exception {\n",
          "        Object[] nullArray = null;\n",
          "        when(mock.oneArray(aryEq(nullArray))).thenReturn(\"null\");\n",
          "\n",
          "        assertEquals(\"null\", mock.oneArray(nullArray));\n",
          "\n",
          "        mock = mock(IMethods.class);\n",
          "\n"
        ],
        "line_number": 312,
        "start_line": 308,
        "end_line": 318
      },
      {
        "link": "https://github.com/anubhav0407/SQM_project-1/blob/f010494c9a8b6343f71f66bccad8da3fe80922f0/src/test/java/org/mockitousage/matchers/MatchersTest.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void should_array_equals_deal_with_null_array() throws Exception {\n",
          "        Object[] nullArray = null;\n",
          "        when(mock.oneArray(aryEq(nullArray))).thenReturn(\"null\");\n",
          "\n",
          "        assertEquals(\"null\", mock.oneArray(nullArray));\n",
          "\n",
          "        mock = mock(IMethods.class);\n",
          "\n"
        ],
        "line_number": 304,
        "start_line": 300,
        "end_line": 310
      }
    ],
    "com.google.common.cache.CacheBuilder.softValues": [
      {
        "link": "https://github.com/lhong375/aura/blob/5ce3c6e53f3120f45fca05707883d21e2e29f3e5/aura-impl/src/main/java/org/auraframework/impl/cache/CacheImpl.java\n",
        "code": [
          "\t\tif (builder.recordStats) {\n",
          "\t\t\tcb = cb.recordStats();\n",
          "\t\t}\n",
          "\n",
          "\t\tif (builder.softValues) {\n",
          "\t\t\tcb = cb.softValues();\n",
          "\t\t}\n",
          "\t\tcache = cb.build();\n",
          "\t}\n",
          "\n",
          "\t@Override\n"
        ],
        "line_number": 44,
        "start_line": 40,
        "end_line": 50
      },
      {
        "link": "https://github.com/sivaramancognizant/https-github.com-forcedotcom-aura/blob/74c2bc043ff1af76e736cc9dbd5bf36d4a3f3e09/aura-impl/src/main/java/org/auraframework/impl/cache/CacheImpl.java\n",
        "code": [
          "        if (builder.recordStats) {\n",
          "            cb = cb.recordStats();\n",
          "        }\n",
          "\n",
          "        if (builder.softValues) {\n",
          "            cb = cb.softValues();\n",
          "        }\n",
          "        if (builder.name == null) {\n",
          "            name = UNNAMED;\n",
          "        } else {\n",
          "            name = builder.name;\n"
        ],
        "line_number": 73,
        "start_line": 69,
        "end_line": 79
      },
      {
        "link": "https://github.com/raphw/guava-cache-overflow-extension/blob/befa47bb955ffa9f344b44e8621290d65e6592d2/src/main/java/com/blogspot/mydailyjava/guava/cache/overflow/FileSystemCacheBuilder.java\n",
        "code": [
          "        underlyingCacheBuilder.recordStats();\n",
          "        return this;\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.cache.CacheBuilder#softValues()}\n",
          "     */\n",
          "    public FileSystemCacheBuilder<K, V> softValues() {\n",
          "        underlyingCacheBuilder.softValues();\n",
          "        return this;\n",
          "    }\n"
        ],
        "line_number": 115,
        "start_line": 111,
        "end_line": 121
      },
      {
        "link": "https://github.com/Braj65/Sandbox/blob/ab7d5de63d65a120b264e3dc3219fbead1930a03/ScaleConcepts/src/main/java/designCache/guavaToDIsk/FileSystemCacheBuilder.java\n",
        "code": [
          "        underlyingCacheBuilder.recordStats();\n",
          "        return this;\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.cache.CacheBuilder#softValues()}\n",
          "     */\n",
          "    public FileSystemCacheBuilder<K, V> softValues() {\n",
          "        underlyingCacheBuilder.softValues();\n",
          "        return this;\n",
          "    }\n"
        ],
        "line_number": 115,
        "start_line": 111,
        "end_line": 121
      },
      {
        "link": "https://github.com/zqhxuyuan/tutorials/blob/72740ec130a15331b0b2428b9750099c47073052/zava/src/main/java/com/github/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> weakValues() {\n",
          "\t\treturn builder.weakValues();\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> softValues() {\n",
          "\t\treturn builder.softValues();\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> expireAfterWrite(long duration, TimeUnit unit) {\n",
          "\t\treturn builder.expireAfterWrite(duration, unit);\n"
        ],
        "line_number": 63,
        "start_line": 59,
        "end_line": 69
      },
      {
        "link": "https://github.com/MarlStGIGA/Spiral-Knights-Model-to-OBJ/blob/cb59a454bde443e437aa3e08dd38703d02ac696e/src/com/threerings/util/CacheUtil.java\n",
        "code": [
          "    /**\n",
          "     * Create a soft-value map.\n",
          "     */\n",
          "    public static <K, V> Map<K, V> softValues ()\n",
          "    {\n",
          "        return softValues(-1);\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * Create a soft-value map with the specified initial capacity.\n",
          "     */\n"
        ],
        "line_number": 19,
        "start_line": 15,
        "end_line": 25
      },
      {
        "link": "https://github.com/Gilded-Games/OrbisLib/blob/147af30f2d7ff854c7bdbb4cc47d4e55db24d728/src/main/java/com/gildedgames/orbis/lib/util/cache/FileSystemCacheBuilder.java\n",
        "code": [
          "\t\tthis.underlyingCacheBuilder.recordStats();\n",
          "\t\treturn this;\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * {@link com.google.common.cache.CacheBuilder#softValues()}\n",
          "\t */\n",
          "\tpublic FileSystemCacheBuilder<K, V> softValues()\n",
          "\t{\n",
          "\t\tthis.underlyingCacheBuilder.softValues();\n",
          "\t\treturn this;\n"
        ],
        "line_number": 143,
        "start_line": 139,
        "end_line": 149
      },
      {
        "link": "https://github.com/zqhxuyuan/zava/blob/707691039b7aff8f4129e2b25d08b374610990e5/src/main/java/com/github/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> weakValues() {\n",
          "\t\treturn builder.weakValues();\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> softValues() {\n",
          "\t\treturn builder.softValues();\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> expireAfterWrite(long duration, TimeUnit unit) {\n",
          "\t\treturn builder.expireAfterWrite(duration, unit);\n"
        ],
        "line_number": 63,
        "start_line": 59,
        "end_line": 69
      },
      {
        "link": "https://github.com/threerings/clyde/blob/9715c1e4d338ddcf5ba6dd024bb5129ffdaea1c3/core/src/main/java/com/threerings/util/CacheUtil.java\n",
        "code": [
          "    /**\n",
          "     * Create a soft-value map.\n",
          "     */\n",
          "    public static <K, V> Map<K, V> softValues ()\n",
          "    {\n",
          "        return softValues(-1);\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * Create a soft-value map with the specified initial capacity.\n",
          "     */\n"
        ],
        "line_number": 19,
        "start_line": 15,
        "end_line": 25
      },
      {
        "link": "https://github.com/shansun123/sparrow/blob/5eae1d009717f8eb64f90a22ac9b54a440ff0771/src/main/java/com/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> weakValues() {\n",
          "\t\treturn builder.weakValues();\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> softValues() {\n",
          "\t\treturn builder.softValues();\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> expireAfterWrite(long duration, TimeUnit unit) {\n",
          "\t\treturn builder.expireAfterWrite(duration, unit);\n"
        ],
        "line_number": 63,
        "start_line": 59,
        "end_line": 69
      }
    ],
    "com.google.common.collect.Queues.synchronizedQueue": [
      {
        "link": "https://github.com/dobybros/GroovyCloud/blob/693432c10d2ef625817f221785e8e982a638187b/imcontainer/src/main/java/com/dobybros/chat/utils/AverageCounter.java\n",
        "code": [
          " */\n",
          "public class AverageCounter {\n",
          "    private int max = 10;\n",
          "    private Integer average;\n",
          "    private final long PERIOD = 10000;\n",
          "    private Queue<Integer> queue = Queues.synchronizedQueue(EvictingQueue.create(10));\n",
          "    private TimerTaskEx calculateTask = new TimerTaskEx(\"com.dobybros.chat.utils.AverageCounter\") {\n",
          "        @Override\n",
          "        public void execute() {\n",
          "            Integer[] values = new Integer[10];\n",
          "            queue.toArray(values);\n"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      },
      {
        "link": "https://github.com/dobybros/Oceanus/blob/46104494781944c100200ceb1e25c33afc9fd9a9/core/src/main/java/chat/utils/AverageCounter.java\n",
        "code": [
          " */\n",
          "public class AverageCounter {\n",
          "    private int max = 10;\n",
          "    private Integer average;\n",
          "    private final long PERIOD = 10000;\n",
          "    private Queue<Integer> queue = Queues.synchronizedQueue(EvictingQueue.create(10));\n",
          "    private TimerTaskEx calculateTask = new TimerTaskEx(\"chat.utils.AverageCounter\") {\n",
          "        @Override\n",
          "        public void execute() {\n",
          "            Integer[] values = new Integer[10];\n",
          "            queue.toArray(values);\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 22
      },
      {
        "link": "https://github.com/kiwiproject/kiwi/blob/8af0b47bd46ed37f06ead20dce8bf814e51521a5/src/main/java/org/kiwiproject/collect/KiwiEvictingQueues.java\n",
        "code": [
          "    /**\n",
          "     * Create a new, synchronized {@link EvictingQueue} that can hold up to {@link #DEFAULT_MAX_RECENT_ITEMS} items.\n",
          "     *\n",
          "     * @param <T> the type in the queue\n",
          "     * @return a synchronized {@link EvictingQueue}\n",
          "     * @apiNote returns a plain {@link Queue} because Guava's {@link Queues#synchronizedQueue(Queue)} returns a {@link Queue}.\n",
          "     * Any attempt to cast to an {@link EvictingQueue} will result in a {@link ClassCastException}.\n",
          "     * @implNote See synchronized notes regarding manual synchronization of the returned queue's {@link java.util.Iterator}\n",
          "     * in {@link Queues#synchronizedQueue(Queue)}\n",
          "     * @see Queues#synchronizedQueue(Queue)\n",
          "     */\n"
        ],
        "line_number": 27,
        "start_line": 23,
        "end_line": 33
      },
      {
        "link": "https://github.com/dobybros/scriptcore/blob/1ba07aefb0d6525643706599bcab2e134c9b64ec/SDockerCore/src/com/docker/utils/AverageCounter.java\n",
        "code": [
          " */\n",
          "public class AverageCounter {\n",
          "    private int max = 10;\n",
          "    private Integer average;\n",
          "    private final long PERIOD = 10000;\n",
          "    private Queue<Integer> queue = Queues.synchronizedQueue(EvictingQueue.create(10));\n",
          "    private TimerTaskEx calculateTask = new TimerTaskEx() {\n",
          "        @Override\n",
          "        public void execute() {\n",
          "            Integer[] values = new Integer[10];\n",
          "            queue.toArray(values);\n"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      },
      {
        "link": "https://github.com/dobybros/Oceanus/blob/46104494781944c100200ceb1e25c33afc9fd9a9/imcontainer/src/main/java/com/dobybros/chat/utils/AverageCounter.java\n",
        "code": [
          " */\n",
          "public class AverageCounter {\n",
          "    private int max = 10;\n",
          "    private Integer average;\n",
          "    private final long PERIOD = 10000;\n",
          "    private Queue<Integer> queue = Queues.synchronizedQueue(EvictingQueue.create(10));\n",
          "    private TimerTaskEx calculateTask = new TimerTaskEx(\"com.dobybros.chat.utils.AverageCounter\") {\n",
          "        @Override\n",
          "        public void execute() {\n",
          "            Integer[] values = new Integer[10];\n",
          "            queue.toArray(values);\n"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      },
      {
        "link": "https://github.com/cegeka/batchers/blob/1f3a32dd49ae2aa920dddb7880e90926f0460fb1/taxcalculator/taxcalculator-stubwebservice/src/main/java/be/cegeka/batchers/taxservice/stubwebservice/TextFileTaxLogger.java\n",
        "code": [
          "@Component\n",
          "public class TextFileTaxLogger {\n",
          "\n",
          "    private static final Logger LOGGER = LoggerFactory.getLogger(TextFileTaxLogger.class);\n",
          "\n",
          "    private final Queue<String> logs = Queues.synchronizedQueue(EvictingQueue.create(100));\n",
          "\n",
          "    public void log(Long employeeId, double taxAmount, String status) {\n",
          "        String msg = \"Received tax request for employee with id \" + employeeId + \" with amount \" + taxAmount + \" and completed with status: \" + status;\n",
          "        logs.add(msg);\n",
          "        LOGGER.info(msg);\n"
        ],
        "line_number": 15,
        "start_line": 11,
        "end_line": 21
      },
      {
        "link": "https://github.com/dobybros/GroovyCloud/blob/693432c10d2ef625817f221785e8e982a638187b/core/src/main/java/chat/utils/AverageCounter.java\n",
        "code": [
          " */\n",
          "public class AverageCounter {\n",
          "    private int max = 10;\n",
          "    private Integer average;\n",
          "    private final long PERIOD = 10000;\n",
          "    private Queue<Integer> queue = Queues.synchronizedQueue(EvictingQueue.create(10));\n",
          "    private TimerTaskEx calculateTask = new TimerTaskEx(\"chat.utils.AverageCounter\") {\n",
          "        @Override\n",
          "        public void execute() {\n",
          "            Integer[] values = new Integer[10];\n",
          "            queue.toArray(values);\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 22
      },
      {
        "link": "https://github.com/dobybros/scriptcore/blob/1ba07aefb0d6525643706599bcab2e134c9b64ec/ScriptCore/src/chat/utils/AverageCounter.java\n",
        "code": [
          " */\n",
          "public class AverageCounter {\n",
          "    private int max = 10;\n",
          "    private Integer average;\n",
          "    private final long PERIOD = 10000;\n",
          "    private Queue<Integer> queue = Queues.synchronizedQueue(EvictingQueue.create(10));\n",
          "    private TimerTaskEx calculateTask = new TimerTaskEx() {\n",
          "        @Override\n",
          "        public void execute() {\n",
          "            Integer[] values = new Integer[10];\n",
          "            queue.toArray(values);\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 22
      },
      {
        "link": "https://github.com/dobybros/GroovyCloud/blob/693432c10d2ef625817f221785e8e982a638187b/container/src/main/java/com/docker/utils/AverageCounter.java\n",
        "code": [
          " */\n",
          "public class AverageCounter {\n",
          "    private int max = 10;\n",
          "    private Integer average;\n",
          "    private final long PERIOD = 10000;\n",
          "    private Queue<Integer> queue = Queues.synchronizedQueue(EvictingQueue.create(10));\n",
          "    private TimerTaskEx calculateTask = new TimerTaskEx(\"com.docker.utils.AverageCounter\") {\n",
          "        @Override\n",
          "        public void execute() {\n",
          "            Integer[] values = new Integer[10];\n",
          "            queue.toArray(values);\n"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      },
      {
        "link": "https://github.com/dobybros/Oceanus/blob/46104494781944c100200ceb1e25c33afc9fd9a9/context/src/main/java/com/docker/utils/AverageCounter.java\n",
        "code": [
          " */\n",
          "public class AverageCounter {\n",
          "    private int max = 10;\n",
          "    private Integer average;\n",
          "    private final long PERIOD = 10000;\n",
          "    private Queue<Integer> queue = Queues.synchronizedQueue(EvictingQueue.create(10));\n",
          "    private TimerTaskEx calculateTask = new TimerTaskEx(\"com.docker.utils.AverageCounter\") {\n",
          "        @Override\n",
          "        public void execute() {\n",
          "            Integer[] values = new Integer[10];\n",
          "            queue.toArray(values);\n"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      }
    ],
    "org.mockito.plugins.MockMaker.getHandler": [
      {
        "link": "https://github.com/Jebry/DataField/blob/b980202c24093d8c2725bdcfe27ac42e80f1d945/powermock-api/powermock-api-mockito2/src/main/java/org/powermock/api/mockito/mockmaker/PowerMockMaker.java\n",
        "code": [
          "    public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {\n",
          "        return mockMaker.createMock(settings, handler);\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public MockHandler getHandler(Object mock) {\n",
          "        // Return a fake mock handler for static method mocks\n",
          "        if (mock instanceof Class) {\n",
          "            return new PowerMockInternalMockHandler((Class<?>) mock);\n",
          "        } else {\n",
          "            return mockMaker.getHandler(mock);\n"
        ],
        "line_number": 53,
        "start_line": 49,
        "end_line": 59
      },
      {
        "link": "https://github.com/aosp-caf-upstream/platform_external_mockito/blob/dd85ed517bd4ea380b918fc68c925a65c697cf05/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "        if (mock == null) {\n",
          "            throw new NotAMockException(\"Argument should be a mock, but is null!\");\n",
          "        }\n",
          "\n",
          "        if (isMock(mock)) {\n",
          "            return mockMaker.getHandler(mock);\n",
          "        } else {\n",
          "            throw new NotAMockException(\"Argument should be a mock, but is: \" + mock.getClass());\n",
          "        }\n",
          "    }\n",
          "\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 64
      },
      {
        "link": "https://github.com/DennissimOS/platform_external_mockito/blob/dd85ed517bd4ea380b918fc68c925a65c697cf05/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "        if (mock == null) {\n",
          "            throw new NotAMockException(\"Argument should be a mock, but is null!\");\n",
          "        }\n",
          "\n",
          "        if (isMock(mock)) {\n",
          "            return mockMaker.getHandler(mock);\n",
          "        } else {\n",
          "            throw new NotAMockException(\"Argument should be a mock, but is: \" + mock.getClass());\n",
          "        }\n",
          "    }\n",
          "\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 64
      },
      {
        "link": "https://github.com/fukehan/p_external/blob/1538eb26d30e87d52436962cd7129de0bbedaee6/mockito/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "        if (mock == null) {\n",
          "            throw new NotAMockException(\"Argument should be a mock, but is null!\");\n",
          "        }\n",
          "\n",
          "        if (isMock(mock)) {\n",
          "            return mockMaker.getHandler(mock);\n",
          "        } else {\n",
          "            throw new NotAMockException(\"Argument should be a mock, but is: \" + mock.getClass());\n",
          "        }\n",
          "    }\n",
          "\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 64
      },
      {
        "link": "https://github.com/kiwibrowser/src/blob/ad4fdb6d6e87d5587e4d9b54c6f159ffa055b67d/third_party/mockito/src/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "        if (mock == null) {\n",
          "            throw new NotAMockException(\"Argument should be a mock, but is null!\");\n",
          "        }\n",
          "\n",
          "        if (isMockitoMock(mock)) {\n",
          "            MockHandler handler = mockMaker.getHandler(mock);\n",
          "            return (InternalMockHandler) handler;\n",
          "        } else {\n",
          "            throw new NotAMockException(\"Argument should be a mock, but is: \" + mock.getClass());\n",
          "        }\n",
          "    }\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 64
      },
      {
        "link": "https://github.com/s1a2t3y4/mockito/blob/74e312b7a9236a43eb543bd3184607b75375bc40/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "        if (mock == null) {\n",
          "            throw new NotAMockException(\"Argument should be a mock, but is null!\");\n",
          "        }\n",
          "\n",
          "        if (isMockitoMock(mock)) {\n",
          "            MockHandler handler = mockMaker.getHandler(mock);\n",
          "            return (InternalMockHandler) handler;\n",
          "        } else {\n",
          "            throw new NotAMockException(\"Argument should be a mock, but is: \" + mock.getClass());\n",
          "        }\n",
          "    }\n"
        ],
        "line_number": 55,
        "start_line": 51,
        "end_line": 61
      },
      {
        "link": "https://github.com/TinkerBoard2-Android/external-mockito/blob/c63bd7149ae1c6599c4174fe734247a12cf5ec35/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "        if (mock == null) {\n",
          "            throw new NotAMockException(\"Argument should be a mock, but is null!\");\n",
          "        }\n",
          "\n",
          "        if (isMock(mock)) {\n",
          "            return mockMaker.getHandler(mock);\n",
          "        } else {\n",
          "            throw new NotAMockException(\"Argument should be a mock, but is: \" + mock.getClass());\n",
          "        }\n",
          "    }\n",
          "\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 64
      },
      {
        "link": "https://github.com/uqam22/mockito/blob/2b2f41b8d5baf3377137c015944be1ad5713046c/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "        if (mock == null) {\n",
          "            throw new NotAMockException(\"Argument should be a mock, but is null!\");\n",
          "        }\n",
          "\n",
          "        if (isMock(mock)) {\n",
          "            return mockMaker.getHandler(mock);\n",
          "        } else {\n",
          "            throw new NotAMockException(\"Argument should be a mock, but is: \" + mock.getClass());\n",
          "        }\n",
          "    }\n",
          "\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 64
      },
      {
        "link": "https://github.com/xdtianyu/android-8.0.0_r4/blob/7b2a348b53815c068a960fe7243b9dc9ba144fa6/external/mockito/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "        if (mock == null) {\n",
          "            throw new NotAMockException(\"Argument should be a mock, but is null!\");\n",
          "        }\n",
          "\n",
          "        if (isMock(mock)) {\n",
          "            MockHandler handler = mockMaker.getHandler(mock);\n",
          "            return (InternalMockHandler) handler;\n",
          "        } else {\n",
          "            throw new NotAMockException(\"Argument should be a mock, but is: \" + mock.getClass());\n",
          "        }\n",
          "    }\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 64
      },
      {
        "link": "https://github.com/sergiodctest/mockitoclone/blob/0c4e494a16141a65f22605a57382a222040f340b/src/main/java/org/mockito/internal/util/MockUtil.java\n",
        "code": [
          "        if (mock == null) {\n",
          "            throw new NotAMockException(\"Argument should be a mock, but is null!\");\n",
          "        }\n",
          "\n",
          "        if (isMock(mock)) {\n",
          "            return mockMaker.getHandler(mock);\n",
          "        } else {\n",
          "            throw new NotAMockException(\"Argument should be a mock, but is: \" + mock.getClass());\n",
          "        }\n",
          "    }\n",
          "\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 64
      }
    ],
    "com.alibaba.fastjson.parser.deserializer.ExtraProcessor.processExtra": [
      {
        "link": "}\n",
        "code": [
          "            }\n",
          "        }\n",
          "        return type;\n",
          "    }\n",
          "\n",
          "    public static void processExtra(DefaultJSONParser defaultJSONParser, Object obj, String str, Object obj2) {\n",
          "        List<ExtraProcessor> extraProcessorsDirect = defaultJSONParser.getExtraProcessorsDirect();\n",
          "        if (extraProcessorsDirect != null) {\n",
          "            for (ExtraProcessor processExtra : extraProcessorsDirect) {\n",
          "                processExtra.processExtra(obj, str, obj2);\n",
          "            }\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "}\n",
        "code": [
          "            type = extraProvider.getExtraType(object, key);\n",
          "        }\n",
          "        return type;\n",
          "    }\n",
          "\n",
          "    public static void processExtra(DefaultJSONParser parser, Object object, String key, Object value) {\n",
          "        List<ExtraProcessor> extraProcessors = parser.getExtraProcessorsDirect();\n",
          "        if (extraProcessors == null) {\n",
          "            return;\n",
          "        }\n",
          "        for (ExtraProcessor process : extraProcessors) {\n"
        ],
        "line_number": 24,
        "start_line": 20,
        "end_line": 30
      },
      {
        "link": "}\n",
        "code": [
          "            type = extraProvider.getExtraType(object, key);\n",
          "        }\n",
          "        return type;\n",
          "    }\n",
          "\n",
          "    public static void processExtra(DefaultJSONParser parser, Object object, String key, Object value) {\n",
          "        List<ExtraProcessor> extraProcessors = parser.getExtraProcessorsDirect();\n",
          "        if (extraProcessors == null) {\n",
          "            return;\n",
          "        }\n",
          "        for (ExtraProcessor process : extraProcessors) {\n"
        ],
        "line_number": 24,
        "start_line": 20,
        "end_line": 30
      },
      {
        "link": " */",
        "code": [
          "        localType = ((ExtraTypeProvider)localIterator.next()).getExtraType(paramObject, paramString);\n",
          "      }\n",
          "    }\n",
          "  }\n",
          "  \n",
          "  public static void processExtra(DefaultJSONParser paramDefaultJSONParser, Object paramObject1, String paramString, Object paramObject2)\n",
          "  {\n",
          "    List localList = paramDefaultJSONParser.getExtraProcessorsDirect();\n",
          "    if (localList == null) {}\n",
          "    for (;;)\n",
          "    {\n"
        ],
        "line_number": 56,
        "start_line": 52,
        "end_line": 62
      },
      {
        "link": "}\n",
        "code": [
          "            type = extraProvider.getExtraType(object, key);\n",
          "        }\n",
          "        return type;\n",
          "    }\n",
          "\n",
          "    public static void processExtra(DefaultJSONParser parser, Object object, String key, Object value) {\n",
          "        List<ExtraProcessor> extraProcessors = parser.getExtraProcessorsDirect();\n",
          "        if (extraProcessors == null) {\n",
          "            return;\n",
          "        }\n",
          "        for (ExtraProcessor process : extraProcessors) {\n"
        ],
        "line_number": 24,
        "start_line": 20,
        "end_line": 30
      },
      {
        "link": "}\n",
        "code": [
          "            type = extraProvider.getExtraType(object, key);\n",
          "        }\n",
          "        return type;\n",
          "    }\n",
          "    \n",
          "    public static void processExtra(DefaultJSONParser parser, Object object, String key, Object value) {\n",
          "        List<ExtraProcessor> extraProcessors = parser.getExtraProcessorsDirect();\n",
          "        if (extraProcessors == null) {\n",
          "            return;\n",
          "        }\n",
          "        for (ExtraProcessor process : extraProcessors) {\n"
        ],
        "line_number": 23,
        "start_line": 19,
        "end_line": 29
      },
      {
        "link": "}\n",
        "code": [
          "            type = extraProvider.getExtraType(object, key);\n",
          "        }\n",
          "        return type;\n",
          "    }\n",
          "\n",
          "    public static void processExtra(DefaultJSONParser parser, Object object, String key, Object value) {\n",
          "        List<ExtraProcessor> extraProcessors = parser.getExtraProcessorsDirect();\n",
          "        if (extraProcessors == null) {\n",
          "            return;\n",
          "        }\n",
          "        for (ExtraProcessor process : extraProcessors) {\n"
        ],
        "line_number": 24,
        "start_line": 20,
        "end_line": 30
      },
      {
        "link": "}\n",
        "code": [
          "            type = extraProvider.getExtraType(object, key);\n",
          "        }\n",
          "        return type;\n",
          "    }\n",
          "\n",
          "    public static void processExtra(DefaultJSONParser parser, Object object, String key, Object value) {\n",
          "        List<ExtraProcessor> extraProcessors = parser.getExtraProcessorsDirect();\n",
          "        if (extraProcessors == null) {\n",
          "            return;\n",
          "        }\n",
          "        for (ExtraProcessor process : extraProcessors) {\n"
        ],
        "line_number": 24,
        "start_line": 20,
        "end_line": 30
      },
      {
        "link": "}\n",
        "code": [
          "            type = extraProvider.getExtraType(object, key);\n",
          "        }\n",
          "        return type;\n",
          "    }\n",
          "\n",
          "    public static void processExtra(DefaultJSONParser parser, Object object, String key, Object value) {\n",
          "        List<ExtraProcessor> extraProcessors = parser.getExtraProcessorsDirect();\n",
          "        if (extraProcessors == null) {\n",
          "            return;\n",
          "        }\n",
          "        for (ExtraProcessor process : extraProcessors) {\n"
        ],
        "line_number": 24,
        "start_line": 20,
        "end_line": 30
      },
      {
        "link": "}\n",
        "code": [
          "            }\n",
          "        }\n",
          "        return type;\n",
          "    }\n",
          "\n",
          "    public static void processExtra(DefaultJSONParser defaultJSONParser, Object obj, String str, Object obj2) {\n",
          "        List<ExtraProcessor> extraProcessorsDirect = defaultJSONParser.getExtraProcessorsDirect();\n",
          "        if (extraProcessorsDirect != null) {\n",
          "            for (ExtraProcessor processExtra : extraProcessorsDirect) {\n",
          "                processExtra.processExtra(obj, str, obj2);\n",
          "            }\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      }
    ],
    "com.google.common.base.Stopwatch.createUnstarted": [
      {
        "link": "https://github.com/ymachkivskiy/hage/blob/bf96d2ff1d34581693ad424673e7eeed07c596e4/platform/platform-components/execution/execution-core/src/main/java/org/hage/platform/component/execution/aspect/SimulationExecutionMonitoringAspect.java\n",
        "code": [
          "@Aspect\n",
          "@Order(0)\n",
          "class SimulationExecutionMonitoringAspect implements SimulationExecutionMonitor {\n",
          "\n",
          "    private final AtomicReference<Duration> accumulatedDuration = new AtomicReference<>(ZERO);\n",
          "    private final Stopwatch stopwatch = createUnstarted();\n",
          "\n",
          "    @Autowired\n",
          "    private ExecutionStepInfoProvider stepRunnable;\n",
          "    @Autowired\n",
          "    private ExecutionDurationObserver executionDurationObserver;\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "https://github.com/kspackman/Algorithms/blob/36bf5883033ac4fb1d56f326d2c5fa87df1ace17/src/main/java/Nim/ProblemTimer.java\n",
        "code": [
          "        Stopwatch stopwatch;\n",
          "        FileWriter writer;\n",
          "        long time;\n",
          "        for (int i = 2; i < 11; ++i)\n",
          "        {\n",
          "            stopwatch = Stopwatch.createUnstarted();\n",
          "            stopwatch.start();\n",
          "            nimSolver.winRecursive(i, i, i);\n",
          "            stopwatch.stop();\n",
          "            time = stopwatch.elapsed(TimeUnit.NANOSECONDS);\n",
          "\n"
        ],
        "line_number": 27,
        "start_line": 23,
        "end_line": 33
      },
      {
        "link": "https://github.com/XiaohuanIT/java/blob/2c7a9763f064656ba7caca92561b500490c528d5/guava_demo/src/main/java/com/demo/stopwatch/StopwatchTest.java\n",
        "code": [
          "\t\t// \u00e7\u00bb\u0093\u00e6\u009e\u009c1002\n",
          "\t\tSystem.out.println(\"\u00e4\u00bb\u00a3\u00e7\u00a0\u0081\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e6\u0097\u00b6\u00e9\u0095\u00bf\u00ef\u00bc\u009a\" + time);\n",
          "\n",
          "\t\t// \u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e9\u009d\u009e\u00e8\u0087\u00aa\u00e5\u008a\u00a8start\u00e7\u009a\u0084\u00e8\u00ae\u00a1\u00e6\u0097\u00b6\u00e5\u0099\u00a8\n",
          "\t\t// \u00e7\u00b4\u00af\u00e8\u00ae\u00a1\u00e4\u00ba\u0086start\u00e5\u0088\u00b0stop\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e9\u0097\u00b4\n",
          "\t\tStopwatch watch1 = Stopwatch.createUnstarted();\n",
          "\t\twatch1.start();\n",
          "\t\tThread.sleep(1000L);\n",
          "\t\twatch1.stop();\n",
          "\t\twatch1.start();\n",
          "\t\tThread.sleep(500L);\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "https://github.com/icgc-dcc/dcc-submission/blob/1601cf35b092cb4b48dfe560001d53adf69cd7e6/dcc-submission-validator/src/main/java/org/icgc/dcc/submission/validation/core/Validation.java\n",
        "code": [
          "  private final List<Validator> validators;\n",
          "\n",
          "  /**\n",
          "   * Timer to record overall validation duration.\n",
          "   */\n",
          "  private final Stopwatch duration = createUnstarted();\n",
          "\n",
          "  /**\n",
          "   * Have all the validators completed?\n",
          "   */\n",
          "  private final AtomicBoolean completed = new AtomicBoolean(false);\n"
        ],
        "line_number": 60,
        "start_line": 56,
        "end_line": 66
      },
      {
        "link": "https://github.com/jeeyoungk/exercise/blob/6d7c1893fbe653a0edde2ea3ecc1234f37ee2856/java/src/main/java/com/kimjeeyoung/algo/matching/Benchmark.java\n",
        "code": [
          "/**\n",
          " * Created by jeeyoungk on 9/2/16.\n",
          " */\n",
          "public class Benchmark {\n",
          "  public static void main(String[] args) {\n",
          "    Stopwatch sw = Stopwatch. createUnstarted();\n",
          "    StringBuilder testString = new StringBuilder();\n",
          "  }\n",
          "}\n"
        ],
        "line_number": 9,
        "start_line": 5,
        "end_line": 13
      },
      {
        "link": "https://github.com/searover/effective-java/blob/0a5c73b4910ca7027ca48480b50a5160a3e4f64b/hashmap/src/main/java/io/effective/Test.java\n",
        "code": [
          "import java.util.Map;\n",
          "import java.util.concurrent.TimeUnit;\n",
          "\n",
          "public class Test {\n",
          "    public static void main(String[] args) {\n",
          "        Stopwatch stopwatch = Stopwatch.createUnstarted();\n",
          "        int length = 5000;\n",
          "        stopwatch.start();\n",
          "        process(new HashMap<>(), length);\n",
          "        System.out.println(\"Process HashMap cost: \" + stopwatch.elapsed(TimeUnit.MILLISECONDS) + \"ms\");\n",
          "        stopwatch.reset().start();\n"
        ],
        "line_number": 10,
        "start_line": 6,
        "end_line": 16
      },
      {
        "link": "https://github.com/stg-tud/sootconfig/blob/35975d04b26ce71af07c7fa2094d0636728aeaa1/src/de/tud/cs/peaks/sootconfig/SootResult.java\n",
        "code": [
          "import soot.Scene;\n",
          "\n",
          "import com.google.common.base.Stopwatch;\n",
          "\n",
          "public class SootResult {\n",
          "\tprivate final Stopwatch totalSootRuntime = Stopwatch.createUnstarted();\n",
          "\tprivate final Stopwatch classLoadRuntime = Stopwatch.createUnstarted();\n",
          "\tprivate final Stopwatch entryPointCalculationRuntime = Stopwatch.createUnstarted();\n",
          "\tprivate final Stopwatch packRuntime = Stopwatch.createUnstarted();\n",
          "\n",
          "\tprivate Scene scene;\n"
        ],
        "line_number": 8,
        "start_line": 4,
        "end_line": 14
      },
      {
        "link": "https://github.com/io12/snapchat-re/blob/04f5c5bb627d21f620088525fffcf5c99abd7ce5/jadx-snap-new/sources/defpackage/krt.java\n",
        "code": [
          "/* renamed from: krt */\n",
          "public final class krt {\n",
          "    final Stopwatch a;\n",
          "\n",
          "    public krt() {\n",
          "        Object createUnstarted = Stopwatch.createUnstarted();\n",
          "        akcr.a(createUnstarted, \"Stopwatch.createUnstarted()\");\n",
          "        this.a = createUnstarted;\n",
          "    }\n",
          "\n",
          "    public final long a(TimeUnit timeUnit) {\n"
        ],
        "line_number": 10,
        "start_line": 6,
        "end_line": 16
      },
      {
        "link": "https://github.com/wangchaohui/Guava2/blob/2f00fe8f990208bd996f4df5a1376e3c615a5da9/src/main/java/wch/guava2/base/Timer.java\n",
        "code": [
          "  private Timer(String name, Stopwatch stopwatch) {\n",
          "    this.name = name;\n",
          "    this.stopwatch = stopwatch;\n",
          "  }\n",
          "\n",
          "  public static Timer createUnstarted(String name) {\n",
          "    Timer timer = new Timer(name, Stopwatch.createUnstarted());\n",
          "    return timer;\n",
          "  }\n",
          "\n",
          "  public String time() {\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      },
      {
        "link": "https://github.com/HammerSMP/YarnSource/blob/42762edb4d65ca049e792360b2db7d04f9e3c2dc/net/minecraft/data/DataGenerator.java\n",
        "code": [
          "\n",
          "    public void run() throws IOException {\n",
          "        DataCache lv = new DataCache(this.output, \"cache\");\n",
          "        lv.ignore(this.getOutput().resolve(\"version.json\"));\n",
          "        Stopwatch stopwatch = Stopwatch.createStarted();\n",
          "        Stopwatch stopwatch2 = Stopwatch.createUnstarted();\n",
          "        for (DataProvider lv2 : this.providers) {\n",
          "            LOGGER.info(\"Starting provider: {}\", (Object)lv2.getName());\n",
          "            stopwatch2.start();\n",
          "            lv2.run(lv);\n",
          "            stopwatch2.stop();\n"
        ],
        "line_number": 47,
        "start_line": 43,
        "end_line": 53
      }
    ],
    "org.mockito.AdditionalAnswers.returnsElementsOf": [
      {
        "link": "https://github.com/fukehan/p_external/blob/1538eb26d30e87d52436962cd7129de0bbedaee6/mockito/src/test/java/org/mockitousage/stubbing/StubbingWithExtraAnswersTest.java\n",
        "code": [
          "\n",
          "    @Test\n",
          "    public void shouldWorkAsStandardMockito() throws Exception {\n",
          "        //when\n",
          "        List<Integer> list = asList(1, 2, 3);\n",
          "        when(mock.objectReturningMethodNoArgs()).thenAnswer(AdditionalAnswers.returnsElementsOf(list));\n",
          "\n",
          "        //then\n",
          "        assertEquals(1, mock.objectReturningMethodNoArgs());\n",
          "        assertEquals(2, mock.objectReturningMethodNoArgs());\n",
          "        assertEquals(3, mock.objectReturningMethodNoArgs());\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "https://github.com/anubhav0407/SQM_project-1/blob/f010494c9a8b6343f71f66bccad8da3fe80922f0/src/test/java/org/mockitousage/stubbing/StubbingWithExtraAnswersTest.java\n",
        "code": [
          "    @Test\n",
          "    public void shouldWorkAsStandardMockito() throws Exception {\n",
          "        // when\n",
          "        List<Integer> list = asList(1, 2, 3);\n",
          "        when(mock.objectReturningMethodNoArgs())\n",
          "                .thenAnswer(AdditionalAnswers.returnsElementsOf(list));\n",
          "\n",
          "        // then\n",
          "        assertEquals(1, mock.objectReturningMethodNoArgs());\n",
          "        assertEquals(2, mock.objectReturningMethodNoArgs());\n",
          "        assertEquals(3, mock.objectReturningMethodNoArgs());\n"
        ],
        "line_number": 30,
        "start_line": 26,
        "end_line": 36
      },
      {
        "link": "https://github.com/DennissimOS/platform_external_mockito/blob/dd85ed517bd4ea380b918fc68c925a65c697cf05/src/test/java/org/mockitousage/stubbing/StubbingWithExtraAnswersTest.java\n",
        "code": [
          "\n",
          "    @Test\n",
          "    public void shouldWorkAsStandardMockito() throws Exception {\n",
          "        //when\n",
          "        List<Integer> list = asList(1, 2, 3);\n",
          "        when(mock.objectReturningMethodNoArgs()).thenAnswer(AdditionalAnswers.returnsElementsOf(list));\n",
          "\n",
          "        //then\n",
          "        assertEquals(1, mock.objectReturningMethodNoArgs());\n",
          "        assertEquals(2, mock.objectReturningMethodNoArgs());\n",
          "        assertEquals(3, mock.objectReturningMethodNoArgs());\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "https://github.com/Hari211981/BlackPrince/blob/e050fd99264803fea5a8b305c6f98f9e7d425d7c/src/test/java/org/mockitousage/stubbing/StubbingWithExtraAnswersTest.java\n",
        "code": [
          "\n",
          "    @Test\n",
          "    public void shouldWorkAsStandardMockito() throws Exception {\n",
          "        //when\n",
          "        List<Integer> list = asList(1, 2, 3);\n",
          "        when(mock.objectReturningMethodNoArgs()).thenAnswer(AdditionalAnswers.returnsElementsOf(list));\n",
          "\n",
          "        //then\n",
          "        assertEquals(1, mock.objectReturningMethodNoArgs());\n",
          "        assertEquals(2, mock.objectReturningMethodNoArgs());\n",
          "        assertEquals(3, mock.objectReturningMethodNoArgs());\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "https://github.com/TinkerEdgeR-Android/external_mockito/blob/bf8c1ad2adfe37bae65749ebc46f76c72b475f32/src/test/java/org/mockitousage/stubbing/StubbingWithExtraAnswersTest.java\n",
        "code": [
          "\n",
          "    @Test\n",
          "    public void shouldWorkAsStandardMockito() throws Exception {\n",
          "        //when\n",
          "        List<Integer> list = asList(1, 2, 3);\n",
          "        when(mock.objectReturningMethodNoArgs()).thenAnswer(AdditionalAnswers.returnsElementsOf(list));\n",
          "\n",
          "        //then\n",
          "        assertEquals(1, mock.objectReturningMethodNoArgs());\n",
          "        assertEquals(2, mock.objectReturningMethodNoArgs());\n",
          "        assertEquals(3, mock.objectReturningMethodNoArgs());\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "}https://github.com/kiwibrowser/src/blob/ad4fdb6d6e87d5587e4d9b54c6f159ffa055b67d/third_party/mockito/src/src/test/java/org/mockitousage/stubbing/StubbingWithExtraAnswersTest.java\n",
        "code": [
          "    \n",
          "    @Test\n",
          "    public void shouldWorkAsStandardMockito() throws Exception {\n",
          "        //when\n",
          "        List<Integer> list = asList(1, 2, 3);\n",
          "        when(mock.objectReturningMethodNoArgs()).thenAnswer(AdditionalAnswers.returnsElementsOf(list));\n",
          "        \n",
          "        //then\n",
          "        assertEquals(1, mock.objectReturningMethodNoArgs());\n",
          "        assertEquals(2, mock.objectReturningMethodNoArgs());\n",
          "        assertEquals(3, mock.objectReturningMethodNoArgs());\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "https://github.com/Ashik640/Library-Management-System-using-Java---MySQL/blob/3780118d49b050fdb68995f9d681376afc378194/lib/mockito-release-3.x/src/test/java/org/mockitousage/stubbing/StubbingWithExtraAnswersTest.java\n",
        "code": [
          "    @Test\n",
          "    public void shouldWorkAsStandardMockito() throws Exception {\n",
          "        // when\n",
          "        List<Integer> list = asList(1, 2, 3);\n",
          "        when(mock.objectReturningMethodNoArgs())\n",
          "                .thenAnswer(AdditionalAnswers.returnsElementsOf(list));\n",
          "\n",
          "        // then\n",
          "        assertEquals(1, mock.objectReturningMethodNoArgs());\n",
          "        assertEquals(2, mock.objectReturningMethodNoArgs());\n",
          "        assertEquals(3, mock.objectReturningMethodNoArgs());\n"
        ],
        "line_number": 30,
        "start_line": 26,
        "end_line": 36
      },
      {
        "link": "https://github.com/TinkerBoard2-Android/external-mockito/blob/c63bd7149ae1c6599c4174fe734247a12cf5ec35/src/test/java/org/mockitousage/stubbing/StubbingWithExtraAnswersTest.java\n",
        "code": [
          "\n",
          "    @Test\n",
          "    public void shouldWorkAsStandardMockito() throws Exception {\n",
          "        //when\n",
          "        List<Integer> list = asList(1, 2, 3);\n",
          "        when(mock.objectReturningMethodNoArgs()).thenAnswer(AdditionalAnswers.returnsElementsOf(list));\n",
          "\n",
          "        //then\n",
          "        assertEquals(1, mock.objectReturningMethodNoArgs());\n",
          "        assertEquals(2, mock.objectReturningMethodNoArgs());\n",
          "        assertEquals(3, mock.objectReturningMethodNoArgs());\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "https://github.com/aosp-caf-upstream/platform_external_mockito/blob/dd85ed517bd4ea380b918fc68c925a65c697cf05/src/test/java/org/mockitousage/stubbing/StubbingWithExtraAnswersTest.java\n",
        "code": [
          "\n",
          "    @Test\n",
          "    public void shouldWorkAsStandardMockito() throws Exception {\n",
          "        //when\n",
          "        List<Integer> list = asList(1, 2, 3);\n",
          "        when(mock.objectReturningMethodNoArgs()).thenAnswer(AdditionalAnswers.returnsElementsOf(list));\n",
          "\n",
          "        //then\n",
          "        assertEquals(1, mock.objectReturningMethodNoArgs());\n",
          "        assertEquals(2, mock.objectReturningMethodNoArgs());\n",
          "        assertEquals(3, mock.objectReturningMethodNoArgs());\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "https://github.com/arpitahuddar/java9-mockito/blob/9f2b354851361d99b35ebd6612e1c7c89c335169/src/test/java/org/mockitousage/stubbing/StubbingWithExtraAnswersTest.java\n",
        "code": [
          "\n",
          "    @Test\n",
          "    public void shouldWorkAsStandardMockito() throws Exception {\n",
          "        //when\n",
          "        List<Integer> list = asList(1, 2, 3);\n",
          "        when(mock.objectReturningMethodNoArgs()).thenAnswer(AdditionalAnswers.returnsElementsOf(list));\n",
          "\n",
          "        //then\n",
          "        assertEquals(1, mock.objectReturningMethodNoArgs());\n",
          "        assertEquals(2, mock.objectReturningMethodNoArgs());\n",
          "        assertEquals(3, mock.objectReturningMethodNoArgs());\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      }
    ],
    "com.google.common.base.CharMatcher.inRange": [
      {
        "link": "https://github.com/18965050/oasis/blob/e5f1cfa32b74fe37aaf0872c497f7c8502df052d/oasis-common-test/src/test/java/cn/xyz/chaos/guava/common/base/CharMatcherTest.java\n",
        "code": [
          "        String retained = CharMatcher.JAVA_DIGIT.retainFrom(lettersAndNumbers);\n",
          "        assertThat(expected, is(retained));\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.base.CharMatcher#inRange(char, char)}\u00e6\u00b5\u008b\u00e8\u00af\u0095\n",
          "     */\n",
          "    @Test\n",
          "    public void testCombineMatchers() {\n",
          "        CharMatcher cm = CharMatcher.inRange('A', 'E');\n",
          "        assertThat(cm.retainFrom(\"aaaABbbccCdddDEeee\"), is(\"ABCDE\"));\n"
        ],
        "line_number": 61,
        "start_line": 57,
        "end_line": 67
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/CharMatcherUtil.java\n",
        "code": [
          "*/ \n",
          "public static com.google.common.base.CharMatcher forPredicate(com.google.common.base.Predicate<? super java.lang.Character> p0){\n",
          "\treturn com.google.common.base.CharMatcher.forPredicate(p0);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.base.CharMatcher#inRange(char,char)}\n",
          "*@see com.google.common.base.CharMatcher#inRange(char,char)\n",
          "*<code>public static com.google.common.base.CharMatcher com.google.common.base.CharMatcher.inRange(char,char)\n",
          "*inRange(char p0,char p1)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 92,
        "start_line": 88,
        "end_line": 98
      },
      {
        "link": "https://github.com/steveash/bushwhacker/blob/93958dea1f4e1d881e863970fd12b857278813c1/bushwhacker/src/main/java/com/github/steveash/bushwhacker/util/WildcardMatcher.java\n",
        "code": [
          " * @author Steve Ash\n",
          " */\n",
          "public class WildcardMatcher {\n",
          "\n",
          "  private static final CharMatcher validChars =\n",
          "      inRange('a', 'z').or(inRange('0', '9')).or(inRange('A','Z')).or(anyOf(\".?*():\"));\n",
          "\n",
          "  public static Pattern compileWildcardPattern(String pattern) {\n",
          "    Preconditions.checkNotNull(pattern, \"The wildcard pattern cannot be null\");\n",
          "    if (!validChars.matchesAllOf(pattern)) {\n",
          "      throw new IllegalArgumentException(\"Cannot match the pattern \\\"\" + pattern +\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.notification_proxy-NotificationProxy/sources/com/google/common/base/CharMatcher.java\n",
        "code": [
          "        public CharMatcher or(CharMatcher charMatcher) {\n",
          "            Preconditions.checkNotNull(charMatcher);\n",
          "            return this;\n",
          "        }\n",
          "    };\n",
          "    public static final CharMatcher ASCII = inRange(0, 127, \"CharMatcher.ASCII\");\n",
          "    public static final CharMatcher BREAKING_WHITESPACE = new CharMatcher() {\n",
          "        /* class com.google.common.base.CharMatcher.AnonymousClass1 */\n",
          "\n",
          "        @Override // com.google.common.base.CharMatcher\n",
          "        public boolean matches(char c) {\n"
        ],
        "line_number": 19,
        "start_line": 15,
        "end_line": 25
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.nux.ota-NuxOta/sources/com/google/common/base/CharMatcher.java\n",
        "code": [
          "        public CharMatcher or(CharMatcher charMatcher) {\n",
          "            Preconditions.checkNotNull(charMatcher);\n",
          "            return this;\n",
          "        }\n",
          "    };\n",
          "    public static final CharMatcher ASCII = inRange(0, 127, \"CharMatcher.ASCII\");\n",
          "    public static final CharMatcher BREAKING_WHITESPACE = new CharMatcher() {\n",
          "        /* class com.google.common.base.CharMatcher.AnonymousClass1 */\n",
          "\n",
          "        @Override // com.google.common.base.CharMatcher\n",
          "        public boolean matches(char c) {\n"
        ],
        "line_number": 19,
        "start_line": 15,
        "end_line": 25
      },
      {
        "link": "https://github.com/stupaq/cloud-atlas/blob/4ffb3397ff2f2c3876c51c72fb9818b7b5159493/src/main/java/stupaq/cloudatlas/naming/CAIdentifier.java\n",
        "code": [
          "import static stupaq.cloudatlas.naming.AttributeName.SPECIAL_PREFIX;\n",
          "import static stupaq.cloudatlas.naming.GlobalName.SEPARATOR;\n",
          "\n",
          "public class CAIdentifier extends ASCIIString {\n",
          "  public static final CharMatcher ALLOWED_CHARACTERS =\n",
          "      DIGIT.or(inRange('a', 'z')).or(inRange('A', 'Z'))\n",
          "          .or(anyOf(SPECIAL_PREFIX + SEPARATOR + \"_-\"));\n",
          "\n",
          "  @SerializableImplementation\n",
          "  protected CAIdentifier() {\n",
          "  }\n"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      },
      {
        "link": "https://github.com/salesforce/omakase/blob/97e79c5cf0189ba5dc55144d9e7209133bc8507d/src/main/java/com/salesforce/omakase/parser/token/Tokens.java\n",
        "code": [
          " *\n",
          " * @author nmcwilliams\n",
          " */\n",
          "public enum Tokens implements Token {\n",
          "    /** upper or lower case alpha character */\n",
          "    ALPHA(inRange('a', 'z').or(inRange('A', 'Z')), \"alpha character [a-zA-Z]\"),\n",
          "\n",
          "    /** numerical digit */\n",
          "    DIGIT(inRange('0', '9'), \"numerical digit [0-9]\"),\n",
          "\n",
          "    /** dot, period, full-stop, etc... */\n"
        ],
        "line_number": 43,
        "start_line": 39,
        "end_line": 49
      },
      {
        "link": "https://github.com/dovikn/inegotiate-android/blob/cea5e088b01ae4487d83cd1a84e6d2df78761a6e/src/com/google/common/base/CharMatcher.java\n",
        "code": [
          "    }\n",
          "\n",
          "    public abstract boolean matches(char c);\n",
          "\n",
          "    static {\n",
          "        WHITESPACE = anyOf(\"\\t\\n\\u000b\\f\\r \\u0085\\u1680\\u2028\\u2029\\u205f\\u3000\\u00a0\\u180e\\u202f\").or(inRange('\\u2000', '\\u200a')).precomputed();\n",
          "        BREAKING_WHITESPACE = anyOf(BREAKING_WHITESPACE_CHARS).or(inRange('\\u2000', '\\u2006')).or(inRange('\\u2008', '\\u200a')).precomputed();\n",
          "        ASCII = inRange('\\u0000', '\\u007f');\n",
          "        CharMatcher digit = inRange('0', '9');\n",
          "        for (char base : \"\\u0660\\u06f0\\u07c0\\u0966\\u09e6\\u0a66\\u0ae6\\u0b66\\u0be6\\u0c66\\u0ce6\\u0d66\\u0e50\\u0ed0\\u0f20\\u1040\\u1090\\u17e0\\u1810\\u1946\\u19d0\\u1b50\\u1bb0\\u1c40\\u1c50\\ua620\\ua8d0\\ua900\\uaa50\\uff10\".toCharArray()) {\n",
          "            digit = digit.or(inRange(base, (char) (base + 9)));\n"
        ],
        "line_number": 549,
        "start_line": 545,
        "end_line": 555
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.companion.server-CompanionServer/sources/com/google/common/base/CharMatcher.java\n",
        "code": [
          "        public CharMatcher or(CharMatcher charMatcher) {\n",
          "            Preconditions.checkNotNull(charMatcher);\n",
          "            return this;\n",
          "        }\n",
          "    };\n",
          "    public static final CharMatcher ASCII = inRange(0, 127, \"CharMatcher.ASCII\");\n",
          "    public static final CharMatcher BREAKING_WHITESPACE = new CharMatcher() {\n",
          "        /* class com.google.common.base.CharMatcher.AnonymousClass1 */\n",
          "\n",
          "        @Override // com.google.common.base.CharMatcher\n",
          "        public boolean matches(char c) {\n"
        ],
        "line_number": 19,
        "start_line": 15,
        "end_line": 25
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.vrcast-VrCastService/sources/com/google/common/base/CharMatcher.java\n",
        "code": [
          "        public CharMatcher or(CharMatcher charMatcher) {\n",
          "            Preconditions.checkNotNull(charMatcher);\n",
          "            return this;\n",
          "        }\n",
          "    };\n",
          "    public static final CharMatcher ASCII = inRange(0, 127, \"CharMatcher.ASCII\");\n",
          "    public static final CharMatcher BREAKING_WHITESPACE = new CharMatcher() {\n",
          "        /* class com.google.common.base.CharMatcher.AnonymousClass1 */\n",
          "\n",
          "        @Override // com.google.common.base.CharMatcher\n",
          "        public boolean matches(char c) {\n"
        ],
        "line_number": 19,
        "start_line": 15,
        "end_line": 25
      }
    ],
    "com.google.common.collect.Ordering.compare": [
      {
        "link": "https://github.com/Smithsonian/sidora-services/blob/70e7b8274f81262cfaa152d5e29ffdf36372a749/Tabular/tabular-metadata-generator/src/main/java/edu/si/sidora/tabularmetadata/datatype/GeographicValue.java\n",
        "code": [
          "     * \n",
          "     * @see java.lang.Comparable#compareTo(java.lang.Object)\n",
          "     **/\n",
          "    @Override\n",
          "    public int compareTo(final GeographicValue o) {\n",
          "        return ordering.compare(this.coordinates, o.coordinates);\n",
          "    }\n",
          "\n",
          "\t@Override\n",
          "\tpublic String toString() {\n",
          "\t\treturn coordinates.stream().map(Object::toString).collect(joining(\",\"));\n"
        ],
        "line_number": 76,
        "start_line": 72,
        "end_line": 82
      },
      {
        "link": "https://github.com/LJJ1994/Java-Learn/blob/1932dfc8416f7e4498c848671f59e2a816b1316b/java-interview-demo/src/main/java/com/interview/guavas/Orders.java\n",
        "code": [
          "\r\n",
          "public class Orders {\r\n",
          "    public static void main(String[] args) {\r\n",
          "        Ordering<String> ordering = new Ordering<String>() {\r\n",
          "            @Override\r\n",
          "            public int compare(String s1, String s2) {\r\n",
          "                return Ints.compare(s1.length(), s2.length());\r\n",
          "            }\r\n",
          "        };\r\n",
          "        String s1 = \"abc\";\r\n",
          "        String s2 = \"de\";\r\n"
        ],
        "line_number": 10,
        "start_line": 6,
        "end_line": 16
      },
      {
        "link": "https://github.com/xhurongna/practiceproject/blob/95d02d87dfd649dab183c26ff8199844058b8420/demo/src/main/java/com/github/hrn/practice/demo/guava/basicutilities/comparator/OrderingDemo.java\n",
        "code": [
          " */\n",
          "public class OrderingDemo {\n",
          "\n",
          "    public static void main(String[] args) {\n",
          "        OrderingDemo demo = new OrderingDemo();\n",
          "        System.out.println(demo.bylengthOrdering.compare(\"a\",\"b\"));\n",
          "    }\n",
          "\n",
          "     private Ordering<String> bylengthOrdering = new Ordering<String>() {\n",
          "        @Override\n",
          "        public int compare(String left, String right) {\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": "https://github.com/code4everything/demo/blob/21e47af87718392c734322f581496ee8737beea9/demo-guava/src/main/java/org/code4everything/demo/guava/collect/OrderingDemo.java\n",
        "code": [
          "    public static void main(String[] args) {\n",
          "        // Ordering\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e4\u00ba\u0086Comparator\u00e6\u008e\u00a5\u00e5\u008f\u00a3\u00ef\u00bc\u008c\u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e7\u009c\u008b\u00e5\u0081\u009a\u00e6\u0098\u00af\u00e5\u00af\u00b9\u00e5\u0085",
          "\u00b6\u00e7\u009a\u0084\u00e6\u0089\u00a9\u00e5\u00b1\u0095\n",
          "        Ordering<String> ordering = new Ordering<String>() {\n",
          "            @Override\n",
          "            public int compare(String left, String right) {\n",
          "                return Ints.compare(left.length(), right.length());\n",
          "            }\n",
          "        };\n",
          "        Assert.assertEquals(1, ordering.reverse().compare(\"pan\", \"tao.\"));\n",
          "    }\n"
        ],
        "line_number": 19,
        "start_line": 15,
        "end_line": 25
      },
      {
        "link": "https://github.com/Maple-mxf/opensource/blob/7f43171728959429fd3cba3df162dbc582f78c8e/jopen-core/src/test/java/io/jopen/core/other/guava/base/OrderingTest.java\n",
        "code": [
          "            }\n",
          "        });\n",
          "\n",
          "        Ele ele1 = new Ele(1);\n",
          "        Ele ele2 = new Ele(2);\n",
          "        int compareRes = ordering.compare(ele1, ele2);\n",
          "        // result:-1\n",
          "        System.err.println(compareRes);\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 33,
        "start_line": 29,
        "end_line": 38
      },
      {
        "link": "https://github.com/quotientinc/tts-sidora/blob/dea9e35a09cbc466b59ddc3a2e2fa4bece40af11/sidora-services/Tabular/tabular-metadata-generator/src/main/java/edu/si/sidora/tabularmetadata/datatype/GeographicValue.java\n",
        "code": [
          "     * \n",
          "     * @see java.lang.Comparable#compareTo(java.lang.Object)\n",
          "     **/\n",
          "    @Override\n",
          "    public int compareTo(final GeographicValue o) {\n",
          "        return ordering.compare(this.coordinates, o.coordinates);\n",
          "    }\n",
          "\n",
          "\t@Override\n",
          "\tpublic String toString() {\n",
          "\t\treturn coordinates.stream().map(Object::toString).collect(joining(\",\"));\n"
        ],
        "line_number": 76,
        "start_line": 72,
        "end_line": 82
      },
      {
        "link": "https://github.com/doGe-personal/process-svr/blob/c4de06373cd80203c5378778cdd5487472c789e7/process-learn/src/test/java/com/process/learn/guava/base/OrderTest.java\n",
        "code": [
          " */\n",
          "public class OrderTest {\n",
          "\n",
          "    @Test\n",
          "    public void testCompare() {\n",
          "        int compare = Ordering.natural().compare(\"\", \"aa\");\n",
          "        int compare1 = Ordering.natural().nullsFirst().compare(null, \"aa\");\n",
          "        System.out.println(compare);\n",
          "        ArrayList<Integer> integers = Lists.newArrayList(1, 2, 3);\n",
          "        List<Integer> integers1 = Ordering.natural().greatestOf(integers, 1);\n",
          "        System.out.println(integers1);\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 22
      },
      {
        "link": "https://github.com/maruthu1986/epcommerce/blob/a24269ac8e77d4cf0d18a05db782e1bf82a04d9c/ep-commerce/commerce-engine/core/ep-core/src/main/java/com/elasticpath/sellingchannel/director/impl/InventoryWorseCaseComparator.java\n",
        "code": [
          "public class InventoryWorseCaseComparator implements Comparator<InventoryDto>, Serializable {\n",
          "\n",
          "\tprivate static final long serialVersionUID = -4969847994628054074L;\n",
          "\n",
          "\t@Override\n",
          "\tpublic int compare(final InventoryDto inventory1, final InventoryDto inventory2) {\n",
          "\t\treturn Ordering.natural().nullsFirst()\n",
          "\t\t\t.onResultOf(InventoryDto::getRestockDate).nullsFirst()\n",
          "\t\t\t.compare(inventory1, inventory2);\n",
          "\t}\n",
          "}\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/overlakehome/--1/blob/1b218e2f6b398167584276b1425c9a22b480adb0/sources/maki4j/src/main/java/com/henry4j/commons/collect/PriorityHeap.java\n",
        "code": [
          "        }\n",
          "    }\n",
          "\n",
          "    public int bubbleUp(int n) {\n",
          "        val p = (n - 1)/2;\n",
          "        if (n > 0 && compare(list, p, n, ordering) > 0) {\n",
          "            swap(list, p, n);\n",
          "            map.put(list.get(n).first(), n);\n",
          "            return bubbleUp(p);\n",
          "        } else {\n",
          "            map.put(list.get(n).first(), n);\n"
        ],
        "line_number": 65,
        "start_line": 61,
        "end_line": 71
      },
      {
        "link": "https://github.com/logkcal/-09132013/blob/9522a93dda127bdab850a00dec104997ec53563a/sources/maki4j/src/main/java/com/henry4j/commons/collect/PriorityHeap.java\n",
        "code": [
          "        }\n",
          "    }\n",
          "\n",
          "    public int bubbleUp(int n) {\n",
          "        val p = (n - 1)/2;\n",
          "        if (n > 0 && compare(list, p, n, ordering) > 0) {\n",
          "            swap(list, p, n);\n",
          "            map.put(list.get(n).first(), n);\n",
          "            return bubbleUp(p);\n",
          "        } else {\n",
          "            map.put(list.get(n).first(), n);\n"
        ],
        "line_number": 65,
        "start_line": 61,
        "end_line": 71
      }
    ],
    "com.google.common.collect.ComparisonChain.compare": [
      {
        "link": "https://github.com/aspanfilov/otus_java_pro/blob/0ac90e3f81e734bd109adc05721e44ab91220483/hw01-gradle/src/main/java/ru/otus/HelloOtus.java\n",
        "code": [
          "\n",
          "import com.google.common.collect.ComparisonChain;\n",
          "\n",
          "public class HelloOtus {\n",
          "    public static void main(String[] args) {\n",
          "        int result =  ComparisonChain.start().compare(\"sameWord\", \"sameWord\").compare(1,1).compare(1,134).result();\n",
          "        System.out.println(result);\n",
          "        System.out.println(\"Done\");\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 6,
        "start_line": 2,
        "end_line": 11
      },
      {
        "link": "https://github.com/NaulbiMIX/EaZy-Client/blob/9fb342d3560027911bc340df5c4af7507b21e9ee/Client/Werbung/src/minecraft/net/minecraft/client/gui/spectator/categories/TeleportToPlayer.java\n",
        "code": [
          "ISpectatorMenuObject {\n",
          "    private static final Ordering field_178674_a = Ordering.from((Comparator)new Comparator(){\n",
          "        private static final String __OBFID = \"CL_00001921\";\n",
          "\n",
          "        public int func_178746_a(NetworkPlayerInfo p_178746_1_, NetworkPlayerInfo p_178746_2_) {\n",
          "            return ComparisonChain.start().compare((Comparable)p_178746_1_.getGameProfile().getId(), (Comparable)p_178746_2_.getGameProfile().getId()).result();\n",
          "        }\n",
          "\n",
          "        public int compare(Object p_compare_1_, Object p_compare_2_) {\n",
          "            return this.func_178746_a((NetworkPlayerInfo)p_compare_1_, (NetworkPlayerInfo)p_compare_2_);\n",
          "        }\n"
        ],
        "line_number": 41,
        "start_line": 37,
        "end_line": 47
      },
      {
        "link": "https://github.com/dstoianov/examples/blob/03bce674a0c12e33d33f643b0b01d6032f8b8e57/examples/src/test/java/compare/Attribute.java\n",
        "code": [
          "\n",
          "\n",
          "    @Override\n",
          "    public int compareTo(Attribute that) {\n",
          "        return ComparisonChain.start()\n",
          "                .compare(this.type, that.type)\n",
          "                .compare(this.value, that.value)\n",
          "                .result();\n",
          "    }\n",
          "\n",
          "}\n"
        ],
        "line_number": 66,
        "start_line": 62,
        "end_line": 72
      },
      {
        "link": "https://github.com/taiwan902/bp-src/blob/341a34ebf43ab71bea0becf343795e241641ef6a/source/Class_12131.java\n",
        "code": [
          "implements Comparator {\n",
          "    Class_12131() {\n",
          "    }\n",
          "\n",
          "    public int Method_12132(Class_9738 class_9738, Class_9738 class_97382) {\n",
          "        return ComparisonChain.start().compare((Comparable)class_9738.Method_9758().getId(), (Comparable)class_97382.Method_9758().getId()).result();\n",
          "    }\n",
          "\n",
          "    private void Method_12133() {\n",
          "        MethodHandle methodHandle = MethodHandles.constant(String.class, \"MC|BlazingPack\");\n",
          "    }\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/a3535ed54a5ee6917a46cfa6c3f12679/b38c7fd5_menoria_HDV_ONLY/blob/337765cb6e2640bc0303de8daf3c63653b762309/net/minecraft/client/util/RenderDistanceSorter.java\n",
        "code": [
          "    {\r\n",
          "        this.field_152632_a = p_i1051_1_;\r\n",
          "        this.field_152633_b = p_i1051_2_;\r\n",
          "    }\r\n",
          "\r\n",
          "    public int compare(RenderList p_compare_1_, RenderList p_compare_2_)\r\n",
          "    {\r\n",
          "        int var3 = p_compare_1_.renderChunkX - this.field_152632_a;\r\n",
          "        int var4 = p_compare_1_.renderChunkZ - this.field_152633_b;\r\n",
          "        int var5 = p_compare_2_.renderChunkX - this.field_152632_a;\r\n",
          "        int var6 = p_compare_2_.renderChunkZ - this.field_152633_b;\r\n"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      },
      {
        "link": "https://github.com/tguduru/guava/blob/1d9c02fc065133625f59627e12349ab200482c2a/src/main/java/org/tguduru/guava/compare/ComparisonChainDemo.java\n",
        "code": [
          "            return Objects.hashCode(name, id);\n",
          "        }\n",
          "\n",
          "        public int compareTo(final Person o) {\n",
          "            // this eliminates lot of boiler plate code with comparison\n",
          "            return ComparisonChain.start().compare(getId(), o.getId()).compare(getName(), o.getName()).result();\n",
          "        }\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 63,
        "start_line": 59,
        "end_line": 67
      },
      {
        "link": "https://github.com/taiwan902/bp-src/blob/341a34ebf43ab71bea0becf343795e241641ef6a/source/Class_6753.java\n",
        "code": [
          "    }\n",
          "\n",
          "    public int Method_6756(Class_9738 class_9738, Class_9738 class_97382) {\n",
          "        Class_22057 class_22057 = class_9738.Method_9755();\n",
          "        Class_22057 class_220572 = class_97382.Method_9755();\n",
          "        return ComparisonChain.start().compareTrueFirst((class_9738.Method_9754() != Class_35650.Field_35654 ? 4717 & 19473 : 25634 & 2072) != 0, (class_97382.Method_9754() != Class_35650.Field_35654 ? 17189 & 1041 : -16064 & 7184) != 0).compare((Comparable)((Object)(class_22057 != null ? class_22057.Method_22075() : \"\")), (Comparable)((Object)(class_220572 != null ? class_220572.Method_22075() : \"\"))).compare((Comparable)((Object)class_9738.Method_9758().getName()), (Comparable)((Object)class_97382.Method_9758().getName())).result();\n",
          "    }\n",
          "}\n",
          "\n"
        ],
        "line_number": 33,
        "start_line": 29,
        "end_line": 37
      },
      {
        "link": "https://github.com/zqhxuyuan/tutorials/blob/72740ec130a15331b0b2428b9750099c47073052/middleware/src/main/java/org/tguduru/guava/compare/ComparisonChainDemo.java\n",
        "code": [
          "            return Objects.hashCode(name, id);\n",
          "        }\n",
          "\n",
          "        public int compareTo(final Person o) {\n",
          "            // this eliminates lot of boiler plate code with comparison\n",
          "            return ComparisonChain.start().compare(getId(), o.getId()).compare(getName(), o.getName()).result();\n",
          "        }\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 63,
        "start_line": 59,
        "end_line": 67
      },
      {
        "link": "https://github.com/NaulbiMIX/EaZy-Client/blob/9fb342d3560027911bc340df5c4af7507b21e9ee/Client/EaSy/src/net/minecraft/client/gui/spectator/categories/TeleportToPlayer.java\n",
        "code": [
          "public class TeleportToPlayer\n",
          "implements ISpectatorMenuView,\n",
          "ISpectatorMenuObject {\n",
          "    private static final Ordering<NetworkPlayerInfo> field_178674_a = Ordering.from((Comparator)new Comparator<NetworkPlayerInfo>(){\n",
          "\n",
          "        public int compare(NetworkPlayerInfo p_compare_1_, NetworkPlayerInfo p_compare_2_) {\n",
          "            return ComparisonChain.start().compare((Comparable)p_compare_1_.getGameProfile().getId(), (Comparable)p_compare_2_.getGameProfile().getId()).result();\n",
          "        }\n",
          "    });\n",
          "    private final List<ISpectatorMenuObject> field_178673_b = Lists.newArrayList();\n",
          "\n"
        ],
        "line_number": 47,
        "start_line": 43,
        "end_line": 53
      },
      {
        "link": "https://github.com/UniPoker/Backend/blob/835c1f08f44413d9e65fecadd2919e49ab910bc2/src/main/java/cards/Card.java\n",
        "code": [
          "     * @return Returns a negative integer, zero, or a positive integer as this Card is less than, equal to, or greater than the specified Card\n",
          "     */\n",
          "    @Override\n",
          "    public int compareTo(Card card) {\n",
          "        return ComparisonChain.start()\n",
          "                .compare(value, card.value)\n",
          "//                .compare(symbol, card.symbol)\n",
          "                .result();\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 66,
        "start_line": 62,
        "end_line": 71
      }
    ],
    "com.google.common.cache.CacheBuilder.maximumSize": [
      {
        "link": "https://github.com/Wadpam/guja/blob/eb8ba8e6794a96ea0dd9744cada4f9ad9618f114/guja-core/src/main/java/com/wadpam/guja/cache/GuavaCacheBuilder.java\n",
        "code": [
          "    // Do nothing\n",
          "    return this;\n",
          "  }\n",
          "\n",
          "  @Override\n",
          "  public CacheBuilder maximumSize(long size) {\n",
          "    cacheBuilder = cacheBuilder.maximumSize(size);\n",
          "    return this;\n",
          "  }\n",
          "\n",
          "  @Override\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/zqhxuyuan/zava/blob/707691039b7aff8f4129e2b25d08b374610990e5/src/main/java/com/github/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> concurrencyLevel(int concurrencyLevel) {\n",
          "\t\treturn builder.concurrencyLevel(concurrencyLevel);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> maximumSize(long size) {\n",
          "\t\treturn builder.maximumSize(size);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> maximumWeight(long weight) {\n",
          "\t\treturn builder.maximumWeight(weight);\n"
        ],
        "line_number": 43,
        "start_line": 39,
        "end_line": 49
      },
      {
        "link": "https://github.com/raphw/guava-cache-overflow-extension/blob/befa47bb955ffa9f344b44e8621290d65e6592d2/src/main/java/com/blogspot/mydailyjava/guava/cache/overflow/FileSystemCacheBuilder.java\n",
        "code": [
          "        underlyingCacheBuilder.initialCapacity(initialCapacity);\n",
          "        return this;\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.cache.CacheBuilder#maximumSize(long)}\n",
          "     */\n",
          "    public FileSystemCacheBuilder<K, V> maximumSize(long size) {\n",
          "        underlyingCacheBuilder.maximumSize(size);\n",
          "        return this;\n",
          "    }\n"
        ],
        "line_number": 91,
        "start_line": 87,
        "end_line": 97
      },
      {
        "link": "https://github.com/zqhxuyuan/tutorials/blob/72740ec130a15331b0b2428b9750099c47073052/zava/src/main/java/com/github/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> concurrencyLevel(int concurrencyLevel) {\n",
          "\t\treturn builder.concurrencyLevel(concurrencyLevel);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> maximumSize(long size) {\n",
          "\t\treturn builder.maximumSize(size);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> maximumWeight(long weight) {\n",
          "\t\treturn builder.maximumWeight(weight);\n"
        ],
        "line_number": 43,
        "start_line": 39,
        "end_line": 49
      },
      {
        "link": "https://github.com/shansun123/sparrow/blob/5eae1d009717f8eb64f90a22ac9b54a440ff0771/src/main/java/com/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> concurrencyLevel(int concurrencyLevel) {\n",
          "\t\treturn builder.concurrencyLevel(concurrencyLevel);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> maximumSize(long size) {\n",
          "\t\treturn builder.maximumSize(size);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> maximumWeight(long weight) {\n",
          "\t\treturn builder.maximumWeight(weight);\n"
        ],
        "line_number": 43,
        "start_line": 39,
        "end_line": 49
      },
      {
        "link": "https://github.com/lhong375/aura/blob/5ce3c6e53f3120f45fca05707883d21e2e29f3e5/aura-impl/src/main/java/org/auraframework/impl/cache/CacheImpl.java\n",
        "code": [
          "\t\t// if builder.useSecondaryStorage is true, we should try to use a\n",
          "\t\t// non-quava secondary-storage cache with streaming ability\n",
          "\n",
          "\t\tcom.google.common.cache.CacheBuilder<Object, Object> cb = com.google.common.cache.CacheBuilder\n",
          "\t\t\t\t.newBuilder().initialCapacity(builder.initialCapacity)\n",
          "\t\t\t\t.maximumSize(builder.maximumSize)\n",
          "\t\t\t\t.concurrencyLevel(builder.concurrencyLevel);\n",
          "\n",
          "\t\tif (builder.recordStats) {\n",
          "\t\t\tcb = cb.recordStats();\n",
          "\t\t}\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/wx930910/autorefactor_druid/blob/f2c02baacfea9bc0f57938de2b2bacfc462b45f2/extensions-core/lookups-cached-single/src/main/java/org/apache/druid/server/lookup/cache/loading/OnHeapLoadingCache.java\n",
        "code": [
          "    }\n",
          "    if (this.expireAfterWrite != null) {\n",
          "      builder.expireAfterWrite(this.expireAfterWrite, TimeUnit.MILLISECONDS);\n",
          "    }\n",
          "    if (this.maximumSize != null) {\n",
          "      builder.maximumSize(this.maximumSize);\n",
          "    }\n",
          "\n",
          "    this.cache = builder.build();\n",
          "\n",
          "    if (isClosed.getAndSet(false)) {\n"
        ],
        "line_number": 95,
        "start_line": 91,
        "end_line": 101
      },
      {
        "link": "https://github.com/Braj65/Sandbox/blob/ab7d5de63d65a120b264e3dc3219fbead1930a03/ScaleConcepts/src/main/java/designCache/guavaToDIsk/FileSystemCacheBuilder.java\n",
        "code": [
          "        underlyingCacheBuilder.initialCapacity(initialCapacity);\n",
          "        return this;\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.cache.CacheBuilder#maximumSize(long)}\n",
          "     */\n",
          "    public FileSystemCacheBuilder<K, V> maximumSize(long size) {\n",
          "        underlyingCacheBuilder.maximumSize(size);\n",
          "        return this;\n",
          "    }\n"
        ],
        "line_number": 91,
        "start_line": 87,
        "end_line": 97
      },
      {
        "link": "https://github.com/Gilded-Games/OrbisLib/blob/147af30f2d7ff854c7bdbb4cc47d4e55db24d728/src/main/java/com/gildedgames/orbis/lib/util/cache/FileSystemCacheBuilder.java\n",
        "code": [
          "\t\tthis.underlyingCacheBuilder.initialCapacity(initialCapacity);\n",
          "\t\treturn this;\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * {@link com.google.common.cache.CacheBuilder#maximumSize(long)}\n",
          "\t */\n",
          "\tpublic FileSystemCacheBuilder<K, V> maximumSize(long size)\n",
          "\t{\n",
          "\t\tthis.underlyingCacheBuilder.maximumSize(size);\n",
          "\t\treturn this;\n"
        ],
        "line_number": 116,
        "start_line": 112,
        "end_line": 122
      },
      {
        "link": "https://github.com/catorv/gallop/blob/b4812f3e78905d2f9fddf0539e002e7f2f57d214/data/src/main/java/com/catorv/gallop/cache/adapter/GuavaCacheAdapterBuilder.java\n",
        "code": [
          "\t\t\t\t.concurrencyLevel(10)\n",
          "\t\t\t\t.initialCapacity(16);\n",
          "\n",
          "\t\tint maximumSize = configuration.getMaximumSize();\n",
          "\t\tif (maximumSize <= 0) {\n",
          "\t\t\tcacheBuilder.maximumSize(2048);\n",
          "\t\t} else {\n",
          "\t\t\tcacheBuilder.maximumSize(maximumSize);\n",
          "\t\t}\n",
          "\n",
          "\t\tlong expireSeconds = configuration.getExpireSeconds();\n"
        ],
        "line_number": 23,
        "start_line": 19,
        "end_line": 29
      }
    ],
    "com.google.common.base.Joiner.useForNull": [
      {
        "link": "https://github.com/Eliminater74/com.google.android.tvlauncher/blob/e8284f9970d77a05042a57e9c2173856af7c4246/saved/sources/com/google/common/base/Joiner.java\n",
        "code": [
          "\n",
          "    public final String join(@NullableDecl Object first, @NullableDecl Object second, Object... rest) {\n",
          "        return join(iterable(first, second, rest));\n",
          "    }\n",
          "\n",
          "    public Joiner useForNull(final String nullText) {\n",
          "        Preconditions.checkNotNull(nullText);\n",
          "        return new Joiner(this) {\n",
          "            /* access modifiers changed from: package-private */\n",
          "            public CharSequence toString(@NullableDecl Object part) {\n",
          "                return part == null ? nullText : Joiner.this.toString(part);\n"
        ],
        "line_number": 179,
        "start_line": 175,
        "end_line": 185
      },
      {
        "link": "https://github.com/BigPayno/JavaGuide/blob/512f084343e03de87e4949dd66fba77eb69972ed/src/main/java/guava/string/JoinerGuide.java\n",
        "code": [
          "                .skipNulls()\n",
          "                .join(\"a\",\"b\",\"c\",null,\"e\")\n",
          "                .concat(\";\");\n",
          "        System.out.println(result);\n",
          "    }\n",
          "    private static void useForNull(){\n",
          "        String result=Joiner.on(\"|\")\n",
          "                .useForNull(\"null\")\n",
          "                .join(\"a\",\"b\",null,\"d\")\n",
          "                .concat(\";\");\n",
          "        System.out.println(result);\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/Eliminater74/com.google.android.tvlauncher/blob/e8284f9970d77a05042a57e9c2173856af7c4246/src/main/java/com/google/common/base/Joiner.java\n",
        "code": [
          "\n",
          "    public final String join(@NullableDecl Object first, @NullableDecl Object second, Object... rest) {\n",
          "        return join(iterable(first, second, rest));\n",
          "    }\n",
          "\n",
          "    public Joiner useForNull(final String nullText) {\n",
          "        Preconditions.checkNotNull(nullText);\n",
          "        return new Joiner(this) {\n",
          "            /* access modifiers changed from: package-private */\n",
          "            public CharSequence toString(@NullableDecl Object part) {\n",
          "                return part == null ? nullText : Joiner.this.toString(part);\n"
        ],
        "line_number": 179,
        "start_line": 175,
        "end_line": 185
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/base/Joiner.java\n",
        "code": [
          "\n",
          "    public final String join(@NullableDecl Object first, @NullableDecl Object second, Object... rest) {\n",
          "        return join(iterable(first, second, rest));\n",
          "    }\n",
          "\n",
          "    public Joiner useForNull(final String nullText) {\n",
          "        Preconditions.checkNotNull(nullText);\n",
          "        return new Joiner(this) {\n",
          "            /* class com.google.common.base.Joiner.AnonymousClass1 */\n",
          "\n",
          "            /* access modifiers changed from: package-private */\n"
        ],
        "line_number": 101,
        "start_line": 97,
        "end_line": 107
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.deviceauthserver-DeviceAuthServer/sources/com/google/common/base/Joiner.java\n",
        "code": [
          "    public final String join(@Nullable Object first, @Nullable Object second, Object... rest) {\n",
          "        return join(iterable(first, second, rest));\n",
          "    }\n",
          "\n",
          "    @CheckReturnValue\n",
          "    public Joiner useForNull(final String nullText) {\n",
          "        Preconditions.checkNotNull(nullText);\n",
          "        return new Joiner(this) {\n",
          "            /* class com.google.common.base.Joiner.AnonymousClass1 */\n",
          "\n",
          "            /* access modifiers changed from: package-private */\n"
        ],
        "line_number": 94,
        "start_line": 90,
        "end_line": 100
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/base/Joiner.java\n",
        "code": [
          "\n",
          "    public final String join(@NullableDecl Object obj, @NullableDecl Object obj2, Object... objArr) {\n",
          "        return join(iterable(obj, obj2, objArr));\n",
          "    }\n",
          "\n",
          "    public Joiner useForNull(final String str) {\n",
          "        Preconditions.checkNotNull(str);\n",
          "        return new Joiner(this) {\n",
          "            /* class com.google.common.base.Joiner.AnonymousClass1 */\n",
          "\n",
          "            /* access modifiers changed from: package-private */\n"
        ],
        "line_number": 101,
        "start_line": 97,
        "end_line": 107
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/base/Joiner.java\n",
        "code": [
          "\n",
          "    public final String join(@NullableDecl Object obj, @NullableDecl Object obj2, Object... objArr) {\n",
          "        return join(iterable(obj, obj2, objArr));\n",
          "    }\n",
          "\n",
          "    public Joiner useForNull(final String str) {\n",
          "        Preconditions.checkNotNull(str);\n",
          "        return new Joiner(this) {\n",
          "            /* class com.google.common.base.Joiner.AnonymousClass1 */\n",
          "\n",
          "            /* access modifiers changed from: package-private */\n"
        ],
        "line_number": 101,
        "start_line": 97,
        "end_line": 107
      },
      {
        "link": "https://github.com/doctorwho1986/doctor/blob/fa359432f71f6e2d394be04cff3c1618624cebb5/important-library/src/main/java/com/doctor/guava18/JoinerPractice.java\n",
        "code": [
          "\t\t\n",
          "\t\tString join = Joiner.on('|').skipNulls().join(list);\n",
          "\t\tSystem.out.println(join);\n",
          "\t\t\n",
          "\t\t\n",
          "\t\tSystem.out.println(Joiner.on('|').useForNull(\"null\").join(list));\n",
          "\t\t\n",
          "\t\t\n",
          "\t\tStringBuilder stringBuilder = new StringBuilder(256);\n",
          "\t\tJoiner.on('|').useForNull(\"null\").appendTo(stringBuilder, list);\n",
          "\t\tSystem.out.println(stringBuilder);\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "https://github.com/18965050/oasis/blob/e5f1cfa32b74fe37aaf0872c497f7c8502df052d/oasis-common-test/src/test/java/cn/xyz/chaos/guava/common/base/JoinerTest.java\n",
        "code": [
          "        String returned = Joiner.on(\"#\").skipNulls().join(values);\n",
          "        assertThat(returned, is(\"foo#bar\"));\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.base.Joiner#useForNull(String) }\u00e6\u00b5\u008b\u00e8\u00af\u0095,\n",
          "     */\n",
          "    @Test\n",
          "    public void testJoinStringsUseForNull() {\n",
          "        String[] values = new String[] { \"foo\", null, \"bar\" };\n",
          "        String returned = Joiner.on(\"#\").useForNull(\"missing\").join(values);\n"
        ],
        "line_number": 91,
        "start_line": 87,
        "end_line": 97
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/base/Joiner.java\n",
        "code": [
          "\n",
          "    public final String join(@NullableDecl Object obj, @NullableDecl Object obj2, Object... objArr) {\n",
          "        return join(iterable(obj, obj2, objArr));\n",
          "    }\n",
          "\n",
          "    public Joiner useForNull(final String str) {\n",
          "        Preconditions.checkNotNull(str);\n",
          "        return new Joiner(this) {\n",
          "            /* class com.google.common.base.Joiner.AnonymousClass1 */\n",
          "\n",
          "            /* access modifiers changed from: package-private */\n"
        ],
        "line_number": 89,
        "start_line": 85,
        "end_line": 95
      }
    ],
    "com.google.common.base.Objects.equal": [
      {
        "link": "}https://github.com/luckystar5408/Jvav-Studio-Community/blob/084e8ca780cccca8ae862cc9f63d8b8a52926656/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "    public boolean equals(Object o) {\n",
          "        if (this == o) return true;\n",
          "        if (o == null || getClass() != o.getClass()) return false;\n",
          "        if (!super.equals(o)) return false;\n",
          "        final A a = (A) o;\n",
          "        return a7 == a.a7 && a8 == a.a8 && a9 == a.a9 && a10 == a.a10 && Float.compare(a.a11, a11) == 0 && Double.compare(a.a12, a12) == 0 && com.google.common.base.Objects.equal(a1, a.a1) && com.google.common.base.Objects.equal(a2, a.a2) && com.google.common.base.Objects.equal(a3, a.a3) && com.google.common.base.Objects.equal(a4, a.a4) && com.google.common.base.Objects.equal(a5, a.a5) && com.google.common.base.Objects.equal(a6, a.a6) && com.google.common.base.Objects.equal(a13, a.a13) && com.google.common.base.Objects.equal(a14, a.a14);\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public int hashCode() {\n",
          "        return com.google.common.base.Objects.hashCode(super.hashCode(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "}https://github.com/czeidler/idea/blob/68170b1efd753eabd393008b703f06f67bdbe533/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "    public boolean equals(Object o) {\n",
          "        if (this == o) return true;\n",
          "        if (o == null || getClass() != o.getClass()) return false;\n",
          "        if (!super.equals(o)) return false;\n",
          "        final A a = (A) o;\n",
          "        return com.google.common.base.Objects.equal(a7, a.a7) &&\n",
          "                com.google.common.base.Objects.equal(a8, a.a8) &&\n",
          "                com.google.common.base.Objects.equal(a9, a.a9) &&\n",
          "                com.google.common.base.Objects.equal(a10, a.a10) &&\n",
          "                com.google.common.base.Objects.equal(a11, a.a11) &&\n",
          "                com.google.common.base.Objects.equal(a12, a.a12) &&\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/taochong123456/opennms-1.10.12-1/blob/0f4c01a8e80e2144125eb189daac38a4e559421a/opennms-webapp/src/main/java/org/opennms/web/rest/support/FilterParamMetaData.java\n",
        "code": [
          "       if (getClass() != obj.getClass()) {\n",
          "          return false;\n",
          "       }\n",
          "       final FilterParamMetaData other = (FilterParamMetaData) obj;\n",
          "\n",
          "       return   com.google.common.base.Objects.equal(this.key, other.key)\n",
          "             && com.google.common.base.Objects.equal(this.type, other.type)\n",
          "             && com.google.common.base.Objects.equal(this.displayName, other.displayName)\n",
          "             && com.google.common.base.Objects.equal(this.description, other.description)\n",
          "             && com.google.common.base.Objects.equal(this.defaultValue, other.defaultValue)\n",
          "             && com.google.common.base.Objects.equal(this.required, other.required);\n"
        ],
        "line_number": 138,
        "start_line": 134,
        "end_line": 144
      },
      {
        "link": "}https://github.com/easysoc/intellij-community/blob/1baa9b25b5c1f9b19b3aeee72d54efad7c5f7b96/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "    public boolean equals(Object o) {\n",
          "        if (this == o) return true;\n",
          "        if (o == null || getClass() != o.getClass()) return false;\n",
          "        if (!super.equals(o)) return false;\n",
          "        final A a = (A) o;\n",
          "        return a7 == a.a7 && a8 == a.a8 && a9 == a.a9 && a10 == a.a10 && Float.compare(a.a11, a11) == 0 && Double.compare(a.a12, a12) == 0 && com.google.common.base.Objects.equal(a1, a.a1) && com.google.common.base.Objects.equal(a2, a.a2) && com.google.common.base.Objects.equal(a3, a.a3) && com.google.common.base.Objects.equal(a4, a.a4) && com.google.common.base.Objects.equal(a5, a.a5) && com.google.common.base.Objects.equal(a6, a.a6) && com.google.common.base.Objects.equal(a13, a.a13) && com.google.common.base.Objects.equal(a14, a.a14);\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public int hashCode() {\n",
          "        return com.google.common.base.Objects.hashCode(super.hashCode(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "}https://github.com/JetBrains/intellij-community/blob/0e2aa4030ee763c9b0c828f0b5119f4cdcc66f35/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "    public boolean equals(Object o) {\n",
          "        if (this == o) return true;\n",
          "        if (o == null || getClass() != o.getClass()) return false;\n",
          "        if (!super.equals(o)) return false;\n",
          "        final A a = (A) o;\n",
          "        return a7 == a.a7 && a8 == a.a8 && a9 == a.a9 && a10 == a.a10 && Float.compare(a.a11, a11) == 0 && Double.compare(a.a12, a12) == 0 && com.google.common.base.Objects.equal(a1, a.a1) && com.google.common.base.Objects.equal(a2, a.a2) && com.google.common.base.Objects.equal(a3, a.a3) && com.google.common.base.Objects.equal(a4, a.a4) && com.google.common.base.Objects.equal(a5, a.a5) && com.google.common.base.Objects.equal(a6, a.a6) && com.google.common.base.Objects.equal(a13, a.a13) && com.google.common.base.Objects.equal(a14, a.a14);\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public int hashCode() {\n",
          "        return com.google.common.base.Objects.hashCode(super.hashCode(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/taochong123456/opennms-1.10.12-1/blob/0f4c01a8e80e2144125eb189daac38a4e559421a/opennms-webapp/src/main/java/org/opennms/web/rest/support/FilterMetaData.java\n",
        "code": [
          "       if (getClass() != obj.getClass()) {\n",
          "          return false;\n",
          "       }\n",
          "       final FilterMetaData other = (FilterMetaData) obj;\n",
          "\n",
          "       return   com.google.common.base.Objects.equal(this.canonicalName, other.canonicalName)\n",
          "             && com.google.common.base.Objects.equal(this.name, other.name)\n",
          "             && com.google.common.base.Objects.equal(this.description, other.description)\n",
          "             && com.google.common.base.Objects.equal(this.backend, other.backend)\n",
          "             && com.google.common.base.Objects.equal(this.parameters, other.parameters);\n",
          "    }\n"
        ],
        "line_number": 144,
        "start_line": 140,
        "end_line": 150
      },
      {
        "link": "https://github.com/taochong123456/opennms-1.10.12-1/blob/0f4c01a8e80e2144125eb189daac38a4e559421a/opennms-webapp/src/main/java/org/opennms/web/rest/support/QueryRequest.java\n",
        "code": [
          "       if (getClass() != obj.getClass()) {\n",
          "          return false;\n",
          "       }\n",
          "       final QueryRequest other = (QueryRequest) obj;\n",
          "\n",
          "       return   com.google.common.base.Objects.equal(this.step, other.step)\n",
          "             && com.google.common.base.Objects.equal(this.start, other.start)\n",
          "             && com.google.common.base.Objects.equal(this.end, other.end)\n",
          "             && com.google.common.base.Objects.equal(this.maxrows, other.maxrows)\n",
          "             && com.google.common.base.Objects.equal(this.interval, other.interval)\n",
          "             && com.google.common.base.Objects.equal(this.heartbeat, other.heartbeat)\n"
        ],
        "line_number": 196,
        "start_line": 192,
        "end_line": 202
      },
      {
        "link": "}https://github.com/Mizzlr/intellij-community/blob/7e1217822045325b2e9269505d07c65daa9e5e9d/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "                a8 == a.a8 &&\n",
          "                a9 == a.a9 &&\n",
          "                a10 == a.a10 &&\n",
          "                Float.compare(a.a11, a11) == 0 &&\n",
          "                Double.compare(a.a12, a12) == 0 &&\n",
          "                com.google.common.base.Objects.equal(a1, a.a1) &&\n",
          "                com.google.common.base.Objects.equal(a2, a.a2) &&\n",
          "                com.google.common.base.Objects.equal(a3, a.a3) &&\n",
          "                com.google.common.base.Objects.equal(a4, a.a4) &&\n",
          "                com.google.common.base.Objects.equal(a5, a.a5) &&\n",
          "                com.google.common.base.Objects.equal(a6, a.a6) &&\n"
        ],
        "line_number": 42,
        "start_line": 38,
        "end_line": 48
      },
      {
        "link": "}https://github.com/Soya93/Extract-Refactoring/blob/81d187f0013fc8a6c3f846ea644344bc9c94ecb1/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "                a8 == a.a8 &&\n",
          "                a9 == a.a9 &&\n",
          "                a10 == a.a10 &&\n",
          "                Float.compare(a.a11, a11) == 0 &&\n",
          "                Double.compare(a.a12, a12) == 0 &&\n",
          "                com.google.common.base.Objects.equal(a1, a.a1) &&\n",
          "                com.google.common.base.Objects.equal(a2, a.a2) &&\n",
          "                com.google.common.base.Objects.equal(a3, a.a3) &&\n",
          "                com.google.common.base.Objects.equal(a4, a.a4) &&\n",
          "                com.google.common.base.Objects.equal(a5, a.a5) &&\n",
          "                com.google.common.base.Objects.equal(a6, a.a6) &&\n"
        ],
        "line_number": 42,
        "start_line": 38,
        "end_line": 48
      },
      {
        "link": "}https://github.com/17712484466/intellij-community/blob/df7df2d07ecb4db1886dcef871e0a7883be6751b/java/java-tests/testData/codeInsight/generateEquals/afterDifferentTypesSuperEqualsAndHashCodeGuava.java\n",
        "code": [
          "                a8 == a.a8 &&\n",
          "                a9 == a.a9 &&\n",
          "                a10 == a.a10 &&\n",
          "                Float.compare(a.a11, a11) == 0 &&\n",
          "                Double.compare(a.a12, a12) == 0 &&\n",
          "                com.google.common.base.Objects.equal(a1, a.a1) &&\n",
          "                com.google.common.base.Objects.equal(a2, a.a2) &&\n",
          "                com.google.common.base.Objects.equal(a3, a.a3) &&\n",
          "                com.google.common.base.Objects.equal(a4, a.a4) &&\n",
          "                com.google.common.base.Objects.equal(a5, a.a5) &&\n",
          "                com.google.common.base.Objects.equal(a6, a.a6) &&\n"
        ],
        "line_number": 42,
        "start_line": 38,
        "end_line": 48
      }
    ],
    "com.google.common.collect.Maps.filterValues": [
      {
        "link": "https://github.com/alexvictoor/community-plugins/blob/0e21c50cf4aac248ccf90641eca7d647da21fef3/deployit-cli-plugins/plain-archive-converter/src/main/java/ext/deployit/community/cli/plainarchive/collect/Maps2.java\n",
        "code": [
          "     *         value. All entries of the input map that have {@code null} values\n",
          "     *         are <u>omitted</u> from the returned map.\n",
          "     */\n",
          "    public static @Nonnull <K, V> Map<V, Set<K>> reduce(@Nonnull Map<K, V> fromMap) {\n",
          "        Map<V, Set<K>> inProgress = newHashMap();\n",
          "        for (Entry<K, V> entry : filterValues(fromMap, notNull()).entrySet()) {\n",
          "            V value = entry.getValue();\n",
          "            if (!inProgress.containsKey(value)) {\n",
          "                inProgress.put(value, Sets.<K>newHashSet());\n",
          "            }\n",
          "            inProgress.get(value).add(entry.getKey());\n"
        ],
        "line_number": 116,
        "start_line": 112,
        "end_line": 122
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/NavigableMapUtil.java\n",
        "code": [
          "*/ \n",
          "public static <K,V> java.util.NavigableMap<K, V> filterKeys(java.util.NavigableMap<K, V> p0,com.google.common.base.Predicate<? super K> p1){\n",
          "\treturn com.google.common.collect.Maps.filterKeys(p0,p1);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.Maps#filterValues(java.util.NavigableMap<K, V>,com.google.common.base.Predicate<? super V>)}\n",
          "*@see com.google.common.collect.Maps#filterValues(java.util.NavigableMap<K, V>,com.google.common.base.Predicate<? super V>)\n",
          "*<code>public static <K,V> java.util.NavigableMap<K, V> com.google.common.collect.Maps.filterValues(java.util.NavigableMap<K, V>,com.google.common.base.Predicate<? super V>)\n",
          "*filterValues(java.util.NavigableMap<K, V> p0,com.google.common.base.Predicate<? super V> p1)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 53,
        "start_line": 49,
        "end_line": 59
      },
      {
        "link": "https://github.com/alexvictoor/community-plugins/blob/0e21c50cf4aac248ccf90641eca7d647da21fef3/deployit-server-plugins/importers/jee-archive-importer/src/main/java/ext/deployit/community/importer/jeearchive/collect/Maps2.java\n",
        "code": [
          "     *         value. All entries of the input map that have {@code null} values\n",
          "     *         are <u>omitted</u> from the returned map.\n",
          "     */\n",
          "    public static @Nonnull <K, V> Map<V, Set<K>> reduce(@Nonnull Map<K, V> fromMap) {\n",
          "        Map<V, Set<K>> inProgress = newHashMap();\n",
          "        for (Entry<K, V> entry : filterValues(fromMap, notNull()).entrySet()) {\n",
          "            V value = entry.getValue();\n",
          "            if (!inProgress.containsKey(value)) {\n",
          "                inProgress.put(value, Sets.<K>newHashSet());\n",
          "            }\n",
          "            inProgress.get(value).add(entry.getKey());\n"
        ],
        "line_number": 116,
        "start_line": 112,
        "end_line": 122
      },
      {
        "link": "https://github.com/alexvictoor/community-plugins/blob/0e21c50cf4aac248ccf90641eca7d647da21fef3/deployit-cli-plugins/dar-manifest-exporter/src/main/java/ext/deployit/community/cli/manifestexport/collect/Maps2.java\n",
        "code": [
          "     *         value. All entries of the input map that have {@code null} values\n",
          "     *         are <u>omitted</u> from the returned map.\n",
          "     */\n",
          "    public static @Nonnull <K, V> Map<V, Set<K>> reduce(@Nonnull Map<K, V> fromMap) {\n",
          "        Map<V, Set<K>> inProgress = newHashMap();\n",
          "        for (Entry<K, V> entry : filterValues(fromMap, notNull()).entrySet()) {\n",
          "            V value = entry.getValue();\n",
          "            if (!inProgress.containsKey(value)) {\n",
          "                inProgress.put(value, Sets.<K>newHashSet());\n",
          "            }\n",
          "            inProgress.get(value).add(entry.getKey());\n"
        ],
        "line_number": 91,
        "start_line": 87,
        "end_line": 97
      },
      {
        "link": "https://github.com/Manouchehri/bindiff/blob/2a31859b4638404cdc915d7ed6be19937d762743/src_fernflower/com/google/common/collect/Maps.java\n",
        "code": [
          "      Preconditions.checkNotNull(var1);\n",
          "      return filterEntries(var0, keyPredicateOnEntries(var1));\n",
          "   }\n",
          "\n",
          "   @CheckReturnValue\n",
          "   public static Map filterValues(Map var0, Predicate var1) {\n",
          "      return (Map)(var0 instanceof SortedMap?filterValues((SortedMap)var0, var1):(var0 instanceof BiMap?filterValues((BiMap)var0, var1):filterEntries(var0, valuePredicateOnEntries(var1))));\n",
          "   }\n",
          "\n",
          "   @CheckReturnValue\n",
          "   public static SortedMap filterValues(SortedMap var0, Predicate var1) {\n"
        ],
        "line_number": 461,
        "start_line": 457,
        "end_line": 467
      },
      {
        "link": "https://github.com/Manouchehri/bindiff/blob/2a31859b4638404cdc915d7ed6be19937d762743/src_cfr/com/google/common/collect/Maps.java\n",
        "code": [
          "        Preconditions.checkNotNull(predicate);\n",
          "        return Maps.filterEntries(biMap, Maps.keyPredicateOnEntries(predicate));\n",
          "    }\n",
          "\n",
          "    @CheckReturnValue\n",
          "    public static Map filterValues(Map map, Predicate predicate) {\n",
          "        if (map instanceof SortedMap) {\n",
          "            return Maps.filterValues((SortedMap)map, predicate);\n",
          "        }\n",
          "        if (!(map instanceof BiMap)) return Maps.filterEntries(map, Maps.valuePredicateOnEntries(predicate));\n",
          "        return Maps.filterValues((BiMap)map, predicate);\n"
        ],
        "line_number": 462,
        "start_line": 458,
        "end_line": 468
      },
      {
        "link": "https://github.com/xebialabs-community/xld-mustachifier-importer-plugin/blob/b26e3849ac0b10e296e3e14c9916804b99d0ccb5/src/main/java/ext/deployit/community/cli/mustachify/collect/Maps2.java\n",
        "code": [
          "     *         value. All entries of the input map that have {@code null} values\n",
          "     *         are <u>omitted</u> from the returned map.\n",
          "     */\n",
          "    public static @Nonnull <K, V> Map<V, Set<K>> reduce(@Nonnull Map<K, V> fromMap) {\n",
          "        Map<V, Set<K>> inProgress = newHashMap();\n",
          "        for (Entry<K, V> entry : filterValues(fromMap, notNull()).entrySet()) {\n",
          "            V value = entry.getValue();\n",
          "            if (!inProgress.containsKey(value)) {\n",
          "                inProgress.put(value, Sets.<K>newHashSet());\n",
          "            }\n",
          "            inProgress.get(value).add(entry.getKey());\n"
        ],
        "line_number": 101,
        "start_line": 97,
        "end_line": 107
      },
      {
        "link": "https://github.com/ssaarela/javersion/blob/f4145880a7b350c65608dc9b10d40b6d8daa2e29/javersion-core/src/main/java/org/javersion/core/Merge.java\n",
        "code": [
          "        });\n",
          "        return diff;\n",
          "    }\n",
          "\n",
          "    public Map<K, V> getProperties() {\n",
          "        return filterValues(getPropertiesAsPlainMap(), notNull());\n",
          "    }\n",
          "\n",
          "    private Map<K, V> getPropertiesAsPlainMap() {\n",
          "        return transformValues(mergedProperties.asMap(), getVersionPropertyValue);\n",
          "    }\n"
        ],
        "line_number": 76,
        "start_line": 72,
        "end_line": 82
      },
      {
        "link": "}https://github.com/paul-sadler-ext/javasizzle/blob/96686ba14c493fe2630fdcc9e95d764cb9f9d157/JSizzle/src/org/jsizzle/Delta.java\n",
        "code": [
          "                                                                 Function<? super T, U> uniqueness)\r\n",
          "            throws IllegalArgumentException\r\n",
          "    {\r\n",
          "        final Map<? extends T, U> beforeToKey = domainRestrict(uniqueness, befores);\r\n",
          "        final Map<U, ? extends T> keyToAfter = uniqueIndex(afters, uniqueness);\r\n",
          "        final Map<? extends T, ? extends T> deltas = transformValues(filterValues(beforeToKey, in(keyToAfter.keySet())), forMap(keyToAfter));\r\n",
          "        return transform(deltas.entrySet(), new Function<Entry<? extends T, ? extends T>, Delta<T>>()\r\n",
          "        {\r\n",
          "            @Override\r\n",
          "            public Delta<T> apply(Entry<? extends T, ? extends T> from)\r\n",
          "            {\r\n"
        ],
        "line_number": 94,
        "start_line": 90,
        "end_line": 100
      },
      {
        "link": "https://github.com/alexvictoor/community-plugins/blob/0e21c50cf4aac248ccf90641eca7d647da21fef3/deployit-cli-plugins/mustachifier/src/main/java/ext/deployit/community/cli/mustachify/collect/Maps2.java\n",
        "code": [
          "     *         value. All entries of the input map that have {@code null} values\n",
          "     *         are <u>omitted</u> from the returned map.\n",
          "     */\n",
          "    public static @Nonnull <K, V> Map<V, Set<K>> reduce(@Nonnull Map<K, V> fromMap) {\n",
          "        Map<V, Set<K>> inProgress = newHashMap();\n",
          "        for (Entry<K, V> entry : filterValues(fromMap, notNull()).entrySet()) {\n",
          "            V value = entry.getValue();\n",
          "            if (!inProgress.containsKey(value)) {\n",
          "                inProgress.put(value, Sets.<K>newHashSet());\n",
          "            }\n",
          "            inProgress.get(value).add(entry.getKey());\n"
        ],
        "line_number": 116,
        "start_line": 112,
        "end_line": 122
      }
    ],
    "com.google.common.collect.Ordering.compound": [
      {
        "link": "https://github.com/AsukiLiu/Java-Common/blob/b17f23e956e2e635f27d3b46dec9bc597779fd11/tool/src/test/java/org/asuki/tool/guava/OrderingTest.java\n",
        "code": [
          "        Collections.sort(toSort, orderByLength);\n",
          "        Ordering<String> expectedOrder = explicit(newArrayList(\"b\", \"dd\", \"aa\",\n",
          "                \"ccc\"));\n",
          "        assertThat(expectedOrder.isOrdered(toSort), is(true));\n",
          "\n",
          "        Collections.sort(toSort, orderByLength.compound(natural()));\n",
          "        expectedOrder = explicit(newArrayList(\"b\", \"aa\", \"dd\", \"ccc\"));\n",
          "        assertThat(expectedOrder.isOrdered(toSort), is(true));\n",
          "\n",
          "        toSort = asList(\"dd\", \"aa\", null, \"b\", \"ccc\");\n",
          "        Collections.sort(toSort, orderByLength.reverse().compound(natural())\n"
        ],
        "line_number": 74,
        "start_line": 70,
        "end_line": 80
      },
      {
        "link": "https://github.com/hooj0/guava-example/blob/3c30cf3bcbd07310f8398eaffe6aefcc42da8435/src/java/main/com/cnblogs/hoojo/ordering/OrderingTest.java\n",
        "code": [
          "<tr>\r\n",
          "<td width=\"199\"><a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Ordering.html#nullsLast()\"><tt>nullsLast()</tt></a></td>\r\n",
          "<td width=\"419\">\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e5\u0099\u00a8\u00ef\u00bc\u008c\u00e4\u00bd\u0086\u00e9\u00a2\u009d\u00e5\u00a4\u0096\u00e6\u008a\u008anull\u00e5\u0080\u00bc\u00e6\u008e\u0092\u00e5\u0088\u00b0\u00e6\u009c\u0080\u00e5\u0090\u008e\u00e9\u009d\u00a2\u00e3\u0080\u0082</td>\r\n",
          "</tr>\r\n",
          "<tr>\r\n",
          "<td width=\"199\"><a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Ordering.html#compound(java.util.Comparator)\"><tt>compound(Comparator)</tt></a></td>\r\n",
          "<td width=\"419\">\u00e5\u0090\u0088\u00e6\u0088\u0090\u00e5\u008f\u00a6\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u00af\u0094\u00e8\u00be\u0083\u00e5\u0099\u00a8\u00ef\u00bc\u008c\u00e4\u00bb\u00a5\u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e5\u0099\u00a8\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e7\u009b\u00b8\u00e7\u00ad\u0089\u00e6\u0083\u0085",
          "\u00e5\u0086\u00b5\u00e3\u0080\u0082</td>\r\n",
          "</tr>\r\n",
          "<tr>\r\n",
          "<td width=\"199\"><a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Ordering.html#lexicographical()\"><tt>lexicographical()</tt></a></td>\r\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 64
      },
      {
        "link": "https://github.com/abrother94/IntelRSD2.5/blob/785e3350094cacf19fc5bfc28182227b9bf4ce3d/PODM/SW/node-composer/src/main/java/com/intel/rsd/nodecomposer/composition/allocation/mappers/Sorter.java\n",
        "code": [
          "            throw new IllegalArgumentException(\"At least one ordering method must be passed to sort.\");\n",
          "        }\n",
          "\n",
          "        Ordering<T> ordering = orderings[0];\n",
          "        for (int i = 1; i < orderings.length; i++) {\n",
          "            ordering = ordering.compound(orderings[i]);\n",
          "        }\n",
          "\n",
          "        return ordering.sortedCopy(toBeSorted);\n",
          "    }\n",
          "\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "https://github.com/abrother94/IntelRSD2.3/blob/76c5bca8020220ca9cc0fd0d511ed4f95fa32f65/PODM/SW/pod-manager/podm-business-services/src/main/java/com/intel/podm/business/redfish/services/allocation/mappers/Sorter.java\n",
        "code": [
          "            throw new IllegalArgumentException(\"At least one ordering method must be passed to sort.\");\n",
          "        }\n",
          "\n",
          "        Ordering<T> ordering = orderings[0];\n",
          "        for (int i = 1; i < orderings.length; i++) {\n",
          "            ordering = ordering.compound(orderings[i]);\n",
          "        }\n",
          "\n",
          "        return ordering.sortedCopy(toBeSorted);\n",
          "    }\n",
          "\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "https://github.com/ayellowdog/LzPodm/blob/d5890b4e95007b0e1d13cae878e8c6f8f7d31b20/ipodm/ipodm-service/src/main/java/com/intel/podm/business/redfish/services/allocation/mappers/Sorter.java\n",
        "code": [
          "            throw new IllegalArgumentException(\"At least one ordering method must be passed to sort.\");\n",
          "        }\n",
          "\n",
          "        Ordering<T> ordering = orderings[0];\n",
          "        for (int i = 1; i < orderings.length; i++) {\n",
          "            ordering = ordering.compound(orderings[i]);\n",
          "        }\n",
          "\n",
          "        return ordering.sortedCopy(toBeSorted);\n",
          "    }\n",
          "\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "https://github.com/abrother94/IntelRSD2.4/blob/4be407d8828c2b400e354b516580dcac023e9d09/PODM/SW/node-composer/src/main/java/com/intel/rsd/nodecomposer/composition/allocation/mappers/Sorter.java\n",
        "code": [
          "            throw new IllegalArgumentException(\"At least one ordering method must be passed to sort.\");\n",
          "        }\n",
          "\n",
          "        Ordering<T> ordering = orderings[0];\n",
          "        for (int i = 1; i < orderings.length; i++) {\n",
          "            ordering = ordering.compound(orderings[i]);\n",
          "        }\n",
          "\n",
          "        return ordering.sortedCopy(toBeSorted);\n",
          "    }\n",
          "\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "https://github.com/intel/intelRSD/blob/2cac56a0b338c45b62042c50e920dcb9d8c03cc3/PODM/SW/node-composer/src/main/java/com/intel/rsd/nodecomposer/composition/allocation/mappers/Sorter.java\n",
        "code": [
          "            throw new IllegalArgumentException(\"At least one ordering method must be passed to sort.\");\n",
          "        }\n",
          "\n",
          "        Ordering<T> ordering = orderings[0];\n",
          "        for (int i = 1; i < orderings.length; i++) {\n",
          "            ordering = ordering.compound(orderings[i]);\n",
          "        }\n",
          "\n",
          "        return ordering.sortedCopy(toBeSorted);\n",
          "    }\n",
          "\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/OrderingUtil.java\n",
        "code": [
          "*/ \n",
          "public static com.google.common.collect.Ordering<java.lang.Object> arbitrary(){\n",
          "\treturn com.google.common.collect.Ordering.arbitrary();\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.Ordering#compound(java.lang.Iterable<? extends java.util.Comparator<? super T>>)}\n",
          "*@see com.google.common.collect.Ordering#compound(java.lang.Iterable<? extends java.util.Comparator<? super T>>)\n",
          "*<code>public static <T> com.google.common.collect.Ordering<T> com.google.common.collect.Ordering.compound(java.lang.Iterable<? extends java.util.Comparator<? super T>>)\n",
          "*compound(java.lang.Iterable<? extends java.util.Comparator<? super T>> p0)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 40,
        "start_line": 36,
        "end_line": 46
      },
      {
        "link": "https://github.com/JetBrains/teamcity-rest/blob/7a8bcdd5bbad328deef6ace4c1394f428f576641/src/jetbrains/buildServer/server/rest/model/server/LicenseKeyEntities.java\n",
        "code": [
          "  }\r\n",
          "\r\n",
          "  private List<LicenseKeyEntity> getLicenseKeys(final @NotNull Collection<LicenseKey> licenseKeys, final @Nullable Collection<LicenseKey> activeLicenseKeys, final @NotNull Fields fields) {\r\n",
          "    Ordering<LicenseKeyData> licenseKeyDataComparator = Ordering\r\n",
          "      .natural().reverse().nullsFirst().onResultOf((LicenseKeyData input) -> input == null ? null : input.getExpirationDate())\r\n",
          "      .compound(Ordering.natural().reverse().nullsFirst().onResultOf((LicenseKeyData input) -> input == null ? null : input.getMaintenanceDueDate()));\r\n",
          "    Ordering<LicenseKey> ordering = Ordering\r\n",
          "      .natural().reverse().nullsLast().onResultOf((LicenseKey input) -> activeLicenseKeys == null || input == null ? null : activeLicenseKeys.contains(input))\r\n",
          "      .compound(natural().reverse().onResultOf((LicenseKey item) -> item == null ? null : item.isValid()))\r\n",
          "      .compound(licenseKeyDataComparator.onResultOf(item -> item == null ? null : item.getLicenseKeyData()));\r\n",
          "\r\n"
        ],
        "line_number": 70,
        "start_line": 66,
        "end_line": 76
      },
      {
        "link": "https://github.com/RussXia/java-study-notes/blob/d8c6fa4d52fa2e1085c531a891ef7811244df42b/src/main/java/com/xzy/guava/OrderingDemo.java\n",
        "code": [
          "        //\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e8\u0087\u00aa\u00e7\u0084\u00b6\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00ef\u00bc\u008cnull\u00e6\u008e\u0092\u00e5\u009c\u00a8\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\n",
          "//        Collections.sort(list,ordering.nullsFirst());\n",
          "//        Collections.sort(list,ordering.nullsFirst().reversed());\n",
          "        //\u00e7\u00bb\u0093\u00e5\u0090\u0088\u00e5\u008f\u00a6\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u00af\u0094\u00e8\u00be\u0083\u00e5\u0099\u00a8\u00ef\u00bc\u008c\u00e5\u008f\u00a6\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u00af\u0094\u00e8\u00be\u0083\u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e6\u00af\u0094\u00e8\u00be\u0083\u00e5\u0099\u00a8\u00e7\u009b\u00b8\u00e7\u00ad\u0089\u00e7\u009a\u0084\u00e6\u0083\u0085",
          "\u00e5\u0086\u00b5\n",
          "        Collections.sort(list, ordering.compound(new Comparator<String>() {\n",
          "            @Override\n",
          "            public int compare(String o1, String o2) {\n",
          "                char[] charsO1 = o1.toCharArray();\n",
          "                char[] charsO2 = o2.toCharArray();\n",
          "                for (int i = 0; i < charsO1.length && i < charsO2.length; i++) {\n"
        ],
        "line_number": 44,
        "start_line": 40,
        "end_line": 50
      }
    ],
    "org.mockito.invocation.InvocationOnMock.getArguments": [
      {
        "link": "https://github.com/62mkv/mlib/blob/fda859927c553560b13f4728f29cd28ac562a902/test/src/java/com/redprairie/moca/cluster/manager/TU_AbstractClusterRoleManager.java\n",
        "code": [
          "        Mockito.when(cache.put((K)Mockito.any(), (V)Mockito.any())).thenAnswer(new Answer<V>() {\n",
          "            @Override\n",
          "            public V answer(final InvocationOnMock invocation) throws Throwable {\n",
          "                boolean local = _localModification.get();\n",
          "                manager.onModification(new OurCacheEntryEvent<K, V>(\n",
          "                    (K)invocation.getArguments()[0], concurrentMap.get(\n",
          "                        invocation.getArguments()[0]),\n",
          "                    true, local, cache, Type.CACHE_ENTRY_MODIFIED));\n",
          "                try {\n",
          "                    return concurrentMap.put((K)invocation.getArguments()[0], \n",
          "                        (V)invocation.getArguments()[1]);\n"
        ],
        "line_number": 176,
        "start_line": 172,
        "end_line": 182
      },
      {
        "link": "https://github.com/Karthikeyantkr/HolidayPlanning/blob/eb6367c2aff6a5b3e34836aa1e65f33c828b5ca0/HolidayPlanning/test/com/test/controller/testLogIn.java\n",
        "code": [
          "\t\t\t * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)\r\n",
          "\t\t\t */\r\n",
          "\t\t\t@Override\r\n",
          "\t\t\tpublic Object answer(InvocationOnMock aInvocation) throws Throwable {\r\n",
          "\r\n",
          "\t\t\t\tString key = (String) aInvocation.getArguments()[0];\r\n",
          "\r\n",
          "\t\t\t\treturn parameters.get(key);\r\n",
          "\t\t\t}\r\n",
          "\t\t});\r\n",
          "\r\n"
        ],
        "line_number": 85,
        "start_line": 81,
        "end_line": 91
      },
      {
        "link": "}https://github.com/vsolomatov/vsolomatov/blob/9d9b8e8c15c6918019b5e7fd9f84e863dfa44101/job4jmusicsite/src/test/java/com/solomatoff/mvc/controller/userservlets/ListUsersServletTest.java\n",
        "code": [
          "            /**\n",
          "             * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)\n",
          "             */\n",
          "            @Override\n",
          "            public Object answer(InvocationOnMock aInvocation) {\n",
          "                String key = (String) aInvocation.getArguments()[0];\n",
          "                return parameters.get(key);\n",
          "            }\n",
          "        });\n",
          "\n",
          "        when(request.getAttribute(anyString())).thenAnswer(new Answer() {\n"
        ],
        "line_number": 108,
        "start_line": 104,
        "end_line": 114
      },
      {
        "link": "}https://github.com/simvip/isliusar/blob/357cda33c3d6a96e9627411468daa437d5b37fb1/chapter_006_servlet_JSP/src/test/java/mvc/controls/UsersControllerTest.java\n",
        "code": [
          "            /**\n",
          "             * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)\n",
          "             */\n",
          "            @Override\n",
          "            public Object answer(InvocationOnMock aInvocation) throws Throwable {\n",
          "                String key = (String) aInvocation.getArguments()[0];\n",
          "                return parameters.get(key);\n",
          "            }\n",
          "        });\n",
          "\n",
          "        when(session.getAttribute(anyString())).thenAnswer(new Answer() {\n"
        ],
        "line_number": 70,
        "start_line": 66,
        "end_line": 76
      },
      {
        "link": "}https://github.com/simvip/isliusar/blob/357cda33c3d6a96e9627411468daa437d5b37fb1/chapter_006_servlet_JSP/src/test/java/mvc/controls/UpdateControllerTest.java\n",
        "code": [
          "            /**\n",
          "             * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)\n",
          "             */\n",
          "            @Override\n",
          "            public Object answer(InvocationOnMock aInvocation) throws Throwable {\n",
          "                String key = (String) aInvocation.getArguments()[0];\n",
          "                return parameters.get(key);\n",
          "            }\n",
          "        });\n",
          "\n",
          "        when(session.getAttribute(anyString())).thenAnswer(new Answer() {\n"
        ],
        "line_number": 71,
        "start_line": 67,
        "end_line": 77
      },
      {
        "link": "https://github.com/pabllo007/DDA/blob/e900c03b37e03231e929a08ce66a7ac0ac269a49/Integracao/IntegracaoCipEJB/test/br/com/sicoob/sisbr/sicoobdda/integracaocip/negocio/servicos/util/AssignIdToArticleAnswer.java\n",
        "code": [
          "     * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)\n",
          "     */\n",
          "    @Override\n",
          "    public Void answer(InvocationOnMock invocation) throws Throwable {\n",
          "        if (this.obj instanceof LogRecebimentoArquivoDDA) {\n",
          "            LogRecebimentoArquivoDDA log = (LogRecebimentoArquivoDDA) invocation.getArguments()[0];\n",
          "            log.setId(id);\n",
          "        }\n",
          "        return null;\n",
          "    }\n",
          "\n"
        ],
        "line_number": 43,
        "start_line": 39,
        "end_line": 49
      },
      {
        "link": "https://github.com/glenrobson/github_iiif/blob/fa473c6f71b8167f41d4b35aa09de8d154017c96/src/test/java/com/gdmrdigital/iiif/test/mock/HttpServletMocks.java\n",
        "code": [
          "            /**\n",
          "             * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)\n",
          "             */\n",
          "            @Override\n",
          "            public Object answer(InvocationOnMock aInvocation) throws Throwable {\n",
          "                String key = (String) aInvocation.getArguments()[0];\n",
          "                return pItems.get(key);\n",
          "            }\n",
          "        });\n",
          "        Mockito.doAnswer(new Answer() {\n",
          "            /**\n"
        ],
        "line_number": 50,
        "start_line": 46,
        "end_line": 56
      },
      {
        "link": "}https://github.com/simvip/isliusar/blob/357cda33c3d6a96e9627411468daa437d5b37fb1/chapter_006_servlet_JSP/src/test/java/mvc/controls/SignOutConrollerTest.java\n",
        "code": [
          "            /**\n",
          "             * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)\n",
          "             */\n",
          "            @Override\n",
          "            public Object answer(InvocationOnMock aInvocation) throws Throwable {\n",
          "                String key = (String) aInvocation.getArguments()[0];\n",
          "                return attributes.get(key);\n",
          "            }\n",
          "        });\n",
          "        Mockito.doAnswer(new Answer() {\n",
          "            /**\n"
        ],
        "line_number": 70,
        "start_line": 66,
        "end_line": 76
      },
      {
        "link": "}https://github.com/Karthikeyantkr/HolidayPlanning/blob/eb6367c2aff6a5b3e34836aa1e65f33c828b5ca0/HolidayPlanning/test/com/test/controller/testRegisterController.java\n",
        "code": [
          "\t\t\t * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)\r\n",
          "\t\t\t */\r\n",
          "\t\t\t@Override\r\n",
          "\t\t\tpublic Object answer(InvocationOnMock aInvocation) throws Throwable {\r\n",
          "\r\n",
          "\t\t\t\tString key = (String) aInvocation.getArguments()[0];\r\n",
          "\r\n",
          "\t\t\t\treturn parameters.get(key);\r\n",
          "\t\t\t}\r\n",
          "\t\t});\r\n",
          "\r\n"
        ],
        "line_number": 85,
        "start_line": 81,
        "end_line": 91
      },
      {
        "link": "}https://github.com/simvip/isliusar/blob/357cda33c3d6a96e9627411468daa437d5b37fb1/chapter_006_servlet_JSP/src/test/java/mvc/controls/SigninConrollerTest.java\n",
        "code": [
          "            /**\n",
          "             * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)\n",
          "             */\n",
          "            @Override\n",
          "            public Object answer(InvocationOnMock aInvocation) throws Throwable {\n",
          "                String key = (String) aInvocation.getArguments()[0];\n",
          "                return parameters.get(key);\n",
          "            }\n",
          "        });\n",
          "\n",
          "        when(session.getAttribute(anyString())).thenAnswer(new Answer() {\n"
        ],
        "line_number": 74,
        "start_line": 70,
        "end_line": 80
      }
    ],
    "com.google.common.collect.Multimaps.index": [
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.deviceauthserver-DeviceAuthServer/sources/com/google/common/collect/Multimaps.java\n",
        "code": [
          "        public List<V2> replaceValues(K k, Iterable<? extends V2> iterable) {\n",
          "            throw new UnsupportedOperationException();\n",
          "        }\n",
          "    }\n",
          "\n",
          "    public static <K, V> ImmutableListMultimap<K, V> index(Iterable<V> values, Function<? super V, K> keyFunction) {\n",
          "        return index(values.iterator(), keyFunction);\n",
          "    }\n",
          "\n",
          "    public static <K, V> ImmutableListMultimap<K, V> index(Iterator<V> values, Function<? super V, K> keyFunction) {\n",
          "        Preconditions.checkNotNull(keyFunction);\n"
        ],
        "line_number": 835,
        "start_line": 831,
        "end_line": 841
      },
      {
        "link": "https://github.com/duyleekun/zycami-ded/blob/27686ca846de6d164692c81bac2ae7f85710361f/src/main/java/com/google/common/collect/Multimaps.java\n",
        "code": [
          "    public static SetMultimap forMap(Map map) {\n",
          "        Multimaps$MapMultimap multimaps$MapMultimap = new Multimaps$MapMultimap(map);\n",
          "        return multimaps$MapMultimap;\n",
          "    }\n",
          "\n",
          "    public static ImmutableListMultimap index(Iterable iterable, Function function) {\n",
          "        return Multimaps.index(iterable.iterator(), function);\n",
          "    }\n",
          "\n",
          "    public static ImmutableListMultimap index(Iterator iterator2, Function function) {\n",
          "        boolean bl2;\n"
        ],
        "line_number": 208,
        "start_line": 204,
        "end_line": 214
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/collect/Multimaps.java\n",
        "code": [
          "        public List<V2> replaceValues(K k, Iterable<? extends V2> iterable) {\n",
          "            throw new UnsupportedOperationException();\n",
          "        }\n",
          "    }\n",
          "\n",
          "    public static <K, V> ImmutableListMultimap<K, V> index(Iterable<V> iterable, Function<? super V, K> function) {\n",
          "        return index(iterable.iterator(), function);\n",
          "    }\n",
          "\n",
          "    public static <K, V> ImmutableListMultimap<K, V> index(Iterator<V> it, Function<? super V, K> function) {\n",
          "        Preconditions.checkNotNull(function);\n"
        ],
        "line_number": 946,
        "start_line": 942,
        "end_line": 952
      },
      {
        "link": "https://github.com/rvbiljouw/awsum-backend/blob/2623bbf73517bb61cd0fbcf87974606cc0b7c75c/awsum-api/src/main/java/me/rvbiljouw/awsum/util/BindingUtils.java\n",
        "code": [
          "    public static Multimap<String, Object> bindingResultToMap(BindingResult result) {\n",
          "        List<FieldError> errors = result.getAllErrors().stream()\n",
          "                .filter(error -> error instanceof FieldError)\n",
          "                .map(error -> (FieldError) error)\n",
          "                .collect(Collectors.toList());\n",
          "        return Multimaps.transformEntries(index(errors, FieldError::getField), (k, v) -> v.getDefaultMessage());\n",
          "    }\n",
          "\n",
          "}\n"
        ],
        "line_number": 53,
        "start_line": 49,
        "end_line": 57
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/collect/Multimaps.java\n",
        "code": [
          "        public List<V2> replaceValues(K k, Iterable<? extends V2> iterable) {\n",
          "            throw new UnsupportedOperationException();\n",
          "        }\n",
          "    }\n",
          "\n",
          "    public static <K, V> ImmutableListMultimap<K, V> index(Iterable<V> values, Function<? super V, K> keyFunction) {\n",
          "        return index(values.iterator(), keyFunction);\n",
          "    }\n",
          "\n",
          "    public static <K, V> ImmutableListMultimap<K, V> index(Iterator<V> values, Function<? super V, K> keyFunction) {\n",
          "        Preconditions.checkNotNull(keyFunction);\n"
        ],
        "line_number": 965,
        "start_line": 961,
        "end_line": 971
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/ImmutableListMultimapUtil.java\n",
        "code": [
          "*/ \n",
          "public static <K,V> com.google.common.collect.ImmutableListMultimap<K, V> copyOf(java.lang.Iterable<? extends java.util.Map.Entry<? extends K, ? extends V>> p0){\n",
          "\treturn com.google.common.collect.ImmutableListMultimap.copyOf(p0);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.Multimaps#index(java.lang.Iterable<V>,com.google.common.base.Function<? super V, K>)}\n",
          "*@see com.google.common.collect.Multimaps#index(java.lang.Iterable<V>,com.google.common.base.Function<? super V, K>)\n",
          "*<code>public static <K,V> com.google.common.collect.ImmutableListMultimap<K, V> com.google.common.collect.Multimaps.index(java.lang.Iterable<V>,com.google.common.base.Function<? super V, K>)\n",
          "*index(java.lang.Iterable<V> p0,com.google.common.base.Function<? super V, K> p1)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 40,
        "start_line": 36,
        "end_line": 46
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/collect/Multimaps.java\n",
        "code": [
          "        public List<V2> replaceValues(K k, Iterable<? extends V2> iterable) {\n",
          "            throw new UnsupportedOperationException();\n",
          "        }\n",
          "    }\n",
          "\n",
          "    public static <K, V> ImmutableListMultimap<K, V> index(Iterable<V> iterable, Function<? super V, K> function) {\n",
          "        return index(iterable.iterator(), function);\n",
          "    }\n",
          "\n",
          "    public static <K, V> ImmutableListMultimap<K, V> index(Iterator<V> it, Function<? super V, K> function) {\n",
          "        Preconditions.checkNotNull(function);\n"
        ],
        "line_number": 968,
        "start_line": 964,
        "end_line": 974
      },
      {
        "link": "https://github.com/jmanhnv/java-tricks/blob/5f76271a0494cf8eab9dfe5de903d97eec92f0fa/src/main/java/collections/grouping/GroupUtil.java\n",
        "code": [
          "\t// System.out.println(key);\n",
          "\t// System.out.println(values);\n",
          "\t// });\n",
          "\n",
          "\t// http://docs.guava-libraries.googlecode.com/git-history/v10.0.1/javadoc/com/google/common/collect/Multimaps.html#index%28java.lang.Iterable,%20com.google.common.base.Function%29\n",
          "\tpublic static void index() {\n",
          "\t\tList<String> badGuys = Arrays.asList(\"Inky\", \"Blinky\", \"Pinky\", \"Pinky\", \"Clyde\");\n",
          "\t\tFunction<String, Integer> stringLengthFunction = new Function<String, Integer>() {\n",
          "\t\t\tpublic Integer apply(String s) {\n",
          "\t\t\t\treturn null;\n",
          "\t\t\t}\n"
        ],
        "line_number": 57,
        "start_line": 53,
        "end_line": 63
      },
      {
        "link": "https://github.com/hooj0/guava-example/blob/3c30cf3bcbd07310f8398eaffe6aefcc42da8435/src/java/main/com/cnblogs/hoojo/collections/utility_classes/CollectionTest.java\n",
        "code": [
          "\t\t\r\n",
          "\t\t// \u00e5\u009c\u00ba\u00e6\u0099\u00af\u00e6\u0098\u00af\u00ef\u00bc\u009a\u00e6\u009c\u0089\u00e4\u00b8\u0080\u00e7\u00bb\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e5\u00ae\u0083\u00e4\u00bb\u00ac\u00e6\u009c\u0089\u00e5\u0085",
          "\u00b1\u00e5\u0090\u008c\u00e7\u009a\u0084\u00e7\u0089\u00b9\u00e5\u00ae\u009a\u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00ef\u00bc\u008c\u00e6\u0088\u0091\u00e4\u00bb\u00ac\u00e5\u00b8\u008c\u00e6\u009c\u009b\u00e6\u008c\u0089\u00e7\u0085",
          "\u00a7\u00e8\u00bf\u0099\u00e4\u00b8\u00aa\u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00e7\u009a\u0084\u00e5\u0080\u00bc\u00e6\u009f\u00a5\u00e8\u00af\u00a2\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e4\u00bd\u0086\u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00e5\u0080\u00bc\u00e4\u00b8\u008d\u00e4\u00b8\u0080\u00e5\u00ae\u009a\u00e6\u0098\u00af\u00e7\u008b\u00ac\u00e4\u00b8\u0080\u00e6\u0097\u00a0\u00e4\u00ba\u008c\u00e7\u009a\u0084\r\n",
          "\t\t// \u00e5\u00af\u00b9\u00e9\u009b\u0086\u00e5\u0090\u0088\u00e8\u00bf\u009b\u00e8\u00a1\u008c\u00e5\u0088\u0086\u00e7\u00bb\u0084\u00ef\u00bc\u008c\u00e8\u00bd\u00ac\u00e6\u008d\u00a2ImmutableListMultimap\r\n",
          "\t\tprint(Multimaps.index(Arrays.asList(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"), x -> x.length() ));\r\n",
          "\t\t//{4=[zero, four, five, nine], 3=[one, two, six], 5=[three, seven, eight]}\r\n",
          "\t\t\r\n",
          "\t\t// \u00e5\u008f\u008d\u00e8\u00bd\u00acmap\u00ef\u00bc\u008c\u00e5\u00b0\u0086value\u00e4\u00bd\u009c\u00e4\u00b8\u00bakey\u00e8\u00bf\u009b\u00e8\u00a1\u008c\u00e5\u008f\u008d\u00e8\u00bd\u00ac\r\n",
          "\t\tHashMultimap<String, Integer> hash = HashMultimap.create();\r\n",
          "\t\thash.putAll(\"a\", Ints.asList(5, 3, 1));\r\n"
        ],
        "line_number": 315,
        "start_line": 311,
        "end_line": 321
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/collect/Multimaps.java\n",
        "code": [
          "        public List<V2> replaceValues(K k, Iterable<? extends V2> iterable) {\n",
          "            throw new UnsupportedOperationException();\n",
          "        }\n",
          "    }\n",
          "\n",
          "    public static <K, V> ImmutableListMultimap<K, V> index(Iterable<V> iterable, com.google.common.base.Function<? super V, K> function) {\n",
          "        return index(iterable.iterator(), function);\n",
          "    }\n",
          "\n",
          "    public static <K, V> ImmutableListMultimap<K, V> index(Iterator<V> it, com.google.common.base.Function<? super V, K> function) {\n",
          "        Preconditions.checkNotNull(function);\n"
        ],
        "line_number": 1035,
        "start_line": 1031,
        "end_line": 1041
      }
    ],
    "org.mockito.ArgumentCaptor.getValue": [
      {
        "link": "https://github.com/Noire-Black-Heart/study/blob/8f2fcd4153e8b3bea89a0e42d09acca8b1904a9e/YR3_1/SOFT3202/SOFT3202CODE/Week5Quiz/src/test/java/MyClassTest.java\n",
        "code": [
          "\t\t\n",
          "\t\tmyClass.doSomething();\n",
          "\t\t\n",
          "\t\tverify(myDep, atLeast(1)).getSomeResult(argstr.capture(), argint.capture());\n",
          "\t\t\n",
          "\t\tSystem.out.println(\"last Strign is \" +argstr.getValue());\n",
          "\t\tSystem.out.println(\"Strign is \" +argstr.getAllValues());\n",
          "\t\tSystem.out.println(\"last int is \" +argint.getValue());\n",
          "\t\tSystem.out.println(\"int is \" +argint.getAllValues());\n",
          "\t\t\n",
          "\t\t\n"
        ],
        "line_number": 80,
        "start_line": 76,
        "end_line": 86
      },
      {
        "link": "https://github.com/ICIJ/datashare/blob/eec10c931e288ed862c0821061967f62f0f66714/datashare-app/src/test/java/org/icij/datashare/session/YesCookieAuthFilterTest.java\n",
        "code": [
          "        }}));\n",
          "         Payload payload = filter.apply(\"url\", context, nextFilter);\n",
          "\n",
          "         assertThat(payload).isSameAs(next);\n",
          "         verify(context).setCurrentUser(user.capture());\n",
          "         assertThat(user.getValue().login()).isNotEmpty();\n",
          "         assertThat(((DatashareUser)user.getValue()).getProjects()).containsExactly(\"demo\");\n",
          "         assertThat(user.getValue().isInRole(\"local\")).isFalse();\n",
          "     }\n",
          "\n",
          "}\n"
        ],
        "line_number": 42,
        "start_line": 38,
        "end_line": 48
      },
      {
        "link": "https://github.com/mxcheung/wiremock/blob/014efcc1a7a94db8448335168fe31a9c8a5bae3a/src/test/java/au/com/maxcheung/service/wiremock/AppTest.java\n",
        "code": [
          "        ArgumentCaptor<Map> captor = forClass(Map.class);\n",
          "        app.configure(builder);\n",
          "        verify(builder).properties(captor.capture());\n",
          "\n",
          "        // Check the basics\n",
          "        assertEquals(\"Wiremock Service\", captor.getValue().get(\"application.title\"));\n",
          "        assertEquals(\"1.0.0\", captor.getValue().get(\"application.version\"));\n",
          "        assertEquals(\"MaxCheung Digital\", captor.getValue().get(\"application.vendor\"));\n",
          "    }\n",
          "\n",
          "    /**\n"
        ],
        "line_number": 62,
        "start_line": 58,
        "end_line": 68
      },
      {
        "link": "https://github.com/CJSCommonPlatform/microservice_framework_version_6/blob/25dc170f9178a6f6a6c96263f47781566d78600b/test-utils/test-utils-core/src/main/java/uk/gov/justice/services/test/utils/core/helper/EventStreamMockHelper.java\n",
        "code": [
          "    @SuppressWarnings(\"unchecked\")\n",
          "    public static Stream<JsonEnvelope> verifyAppendAndGetArgumentFrom(final EventStream eventStream) throws EventStreamException {\n",
          "        final ArgumentCaptor<Stream> argumentCaptor = forClass(Stream.class);\n",
          "        verify(eventStream).append(argumentCaptor.capture());\n",
          "\n",
          "        return ((Stream<JsonEnvelope>) argumentCaptor.getValue());\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 34
      },
      {
        "link": "}https://github.com/YunZhang2014/test/blob/d4818c214a037360bf2f2c0aae7a52b75dd8de12/javaSETest/JunitTest/TestingwithJunit2015Test/origin/chapter-8/timeline.util/src/test/java/book/twju/timeline/util/BackgroundProcessorITest.java\n",
        "code": [
          "    \n",
          "    backgroundProcessor.process( () -> { throw expected; } );\n",
          "    sleep( 100 );\n",
          "    \n",
          "    verify( uiThreadDispatcher ).dispatch( captor.capture() );\n",
          "    assertThat( thrownBy( () -> captor.getValue().run() ) ).isSameAs( expected );\n",
          "  }\n",
          "  \n",
          "  @Test\n",
          "  public void processWithError() {\n",
          "    ArgumentCaptor<Runnable> captor = forClass( Runnable.class );\n"
        ],
        "line_number": 54,
        "start_line": 50,
        "end_line": 60
      },
      {
        "link": "}https://github.com/rherrmann/gonsole/blob/fcb6ed0f64029a0ecf6fd9847012dbbfff4efb89/com.codeaffine.console.core.test/src/com/codeaffine/console/core/internal/contentassist/ValueCaptor.java\n",
        "code": [
          "      throw new IllegalStateException( shouldNotHappen );\n",
          "    }\n",
          "  }\n",
          "\n",
          "  int getOffset() {\n",
          "    return offsetCaptor.getValue().intValue();\n",
          "  }\n",
          "\n",
          "  int getLength() {\n",
          "    return lengthCaptor.getValue().intValue();\n",
          "  }\n"
        ],
        "line_number": 37,
        "start_line": 33,
        "end_line": 43
      },
      {
        "link": "https://github.com/ytgdoc/DemoAndroidMVP/blob/5ae1581f5b6cfada7e21bdb01fd4adb56801736d/app/src/test/java/com/antonioleiva/mvpexample/app/main/MainPresenterTest.java\n",
        "code": [
          "    @Test\n",
          "    public void checkIfRightMessageIsDisplayed() {\n",
          "        ArgumentCaptor<String> captor = forClass(String.class);\n",
          "        presenter.onItemClicked(1);\n",
          "        verify(view, times(1)).showMessage(captor.capture());\n",
          "        assertThat(captor.getValue(), is(\"Position 2 clicked\"));\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void checkIfViewIsReleasedOnDestroy() {\n",
          "        presenter.onDestroy();\n"
        ],
        "line_number": 52,
        "start_line": 48,
        "end_line": 58
      },
      {
        "link": "https://github.com/CJSCommonPlatform/microservice-framework/blob/24a33df30b30fb81f4a818c4030b8b55429e462e/test-utils/test-utils-core/src/main/java/uk/gov/justice/services/test/utils/core/helper/EventStreamMockHelper.java\n",
        "code": [
          "    @SuppressWarnings(\"unchecked\")\n",
          "    public static Stream<JsonEnvelope> verifyAppendAndGetArgumentFrom(final EventStream eventStream) throws EventStreamException {\n",
          "        final ArgumentCaptor<Stream> argumentCaptor = forClass(Stream.class);\n",
          "        verify(eventStream).append(argumentCaptor.capture());\n",
          "\n",
          "        return ((Stream<JsonEnvelope>) argumentCaptor.getValue());\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 34
      },
      {
        "link": "https://github.com/Talentica/Mealspice-Android/blob/cecf35e122c259fa67741987b7e3227b5fc0fa47/app/src/test/java/com/talenitca/mealspiceandroid/screens/details/DetailsPresenterErrorTest.java\n",
        "code": [
          "    @Test\n",
          "    public void checkfICorrectErrorPassed() {\n",
          "/*        ArgumentCaptor<String> captor2 = forClass(String.class);\n",
          "        presenter.start(\"anything\");\n",
          "        verify(view, times(1)).loadRestaurantName(captor2.capture());\n",
          "        assertThat(captor2.getValue(), is(TestUtils.getMockedRestaurant().getName()));*/\n",
          "\n",
          "        ArgumentCaptor<Throwable> captor = forClass(Throwable.class);\n",
          "        presenter.start(\"anything\");\n",
          "        verify(view, times(1)).onError(captor.capture());\n",
          "        assertThat(captor.getValue().getMessage(), is(\"save me\"));\n"
        ],
        "line_number": 60,
        "start_line": 56,
        "end_line": 66
      },
      {
        "link": "https://github.com/ksandrasegaramz/microservice-framework/blob/1ae0ee38389c8e77105fa9428ee5a4d73f06dec4/test-utils/test-utils-core/src/main/java/uk/gov/justice/services/test/utils/core/helper/EventStreamMockHelper.java\n",
        "code": [
          "    @SuppressWarnings(\"unchecked\")\n",
          "    public static Stream<JsonEnvelope> verifyAppendAndGetArgumentFrom(final EventStream eventStream) throws EventStreamException {\n",
          "        final ArgumentCaptor<Stream> argumentCaptor = forClass(Stream.class);\n",
          "        verify(eventStream).append(argumentCaptor.capture());\n",
          "\n",
          "        return ((Stream<JsonEnvelope>) argumentCaptor.getValue());\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 34
      }
    ],
    "org.mockito.stubbing.OngoingStubbing.thenThrow": [
      {
        "link": "}https://github.com/Debug-2020/Answers-4113-52628-Mockito3/blob/846c7eba99a39b5fbad1643e1c4e78de59574c50/src/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "            stubbing = stubbing.thenReturn(v);\r\n",
          "        }\r\n",
          "        return stubbing;\r\n",
          "    }\r\n",
          "\r\n",
          "    private OngoingStubbing<T> thenThrow(Throwable throwable) {\r\n",
          "        return thenAnswer(new ThrowsException(throwable));\r\n",
          "    }\r\n",
          "\r\n",
          "    public OngoingStubbing<T> thenThrow(Throwable... throwables) {\r\n",
          "        if (throwables == null) {\r\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "}https://github.com/alfonsodelavega/epsilonFork/blob/4101b0a3678674aee0b2764ed5b0c93954d016a8/tests/org.mockito_1.8.4/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "            stubbing = stubbing.thenReturn(v);\r\n",
          "        }\r\n",
          "        return stubbing;\r\n",
          "    }\r\n",
          "\r\n",
          "    private OngoingStubbing<T> thenThrow(Throwable throwable) {\r\n",
          "        return thenAnswer(new ThrowsException(throwable));\r\n",
          "    }\r\n",
          "\r\n",
          "    public OngoingStubbing<T> thenThrow(Throwable... throwables) {\r\n",
          "        if (throwables == null) {\r\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "}https://github.com/kiwibrowser/src/blob/ad4fdb6d6e87d5587e4d9b54c6f159ffa055b67d/third_party/mockito/src/src/main/java/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "            stubbing = stubbing.thenReturn(v);\n",
          "        }\n",
          "        return stubbing;\n",
          "    }\n",
          "\n",
          "    private OngoingStubbing<T> thenThrow(Throwable throwable) {\n",
          "        return thenAnswer(new ThrowsException(throwable));\n",
          "    }\n",
          "\n",
          "    public OngoingStubbing<T> thenThrow(Throwable... throwables) {\n",
          "        if (throwables == null) {\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "}https://github.com/Hyacinth-Ali/epsilon-repo/blob/2c492152e30cbddaff74fe5143edbce43aa415b2/tests/org.mockito_1.8.4/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "            stubbing = stubbing.thenReturn(v);\r\n",
          "        }\r\n",
          "        return stubbing;\r\n",
          "    }\r\n",
          "\r\n",
          "    private OngoingStubbing<T> thenThrow(Throwable throwable) {\r\n",
          "        return thenAnswer(new ThrowsException(throwable));\r\n",
          "    }\r\n",
          "\r\n",
          "    public OngoingStubbing<T> thenThrow(Throwable... throwables) {\r\n",
          "        if (throwables == null) {\r\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "}https://github.com/hub-se/BugLoRD/blob/068db7d777dd09333694259f5a2c4a5bbe086007/spectra-generator/src/test/resources/Mockito12b/src/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "            stubbing = stubbing.thenReturn(v);\n",
          "        }\n",
          "        return stubbing;\n",
          "    }\n",
          "\n",
          "    private OngoingStubbing<T> thenThrow(Throwable throwable) {\n",
          "        return thenAnswer(new ThrowsException(throwable));\n",
          "    }\n",
          "\n",
          "    public OngoingStubbing<T> thenThrow(Throwable... throwables) {\n",
          "        if (throwables == null) {\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "}https://github.com/Debug-2020/Answers-4111-56195-Mockito1/blob/2114881dba466e91b2917d8385c95417b1883909/src/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "            stubbing = stubbing.thenReturn(v);\r\n",
          "        }\r\n",
          "        return stubbing;\r\n",
          "    }\r\n",
          "\r\n",
          "    private OngoingStubbing<T> thenThrow(Throwable throwable) {\r\n",
          "        return thenAnswer(new ThrowsException(throwable));\r\n",
          "    }\r\n",
          "\r\n",
          "    public OngoingStubbing<T> thenThrow(Throwable... throwables) {\r\n",
          "        if (throwables == null) {\r\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "}https://github.com/Debug-2020/Answers-4112-53312-Mockito2/blob/6db099111a1ee6f73d6a58e28d7e5b0242b87756/src/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "            stubbing = stubbing.thenReturn(v);\r\n",
          "        }\r\n",
          "        return stubbing;\r\n",
          "    }\r\n",
          "\r\n",
          "    private OngoingStubbing<T> thenThrow(Throwable throwable) {\r\n",
          "        return thenAnswer(new ThrowsException(throwable));\r\n",
          "    }\r\n",
          "\r\n",
          "    public OngoingStubbing<T> thenThrow(Throwable... throwables) {\r\n",
          "        if (throwables == null) {\r\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "https://github.com/yinquan529/platform-external-mockito/blob/34f80a94e45f7110ec3444c1d0ecfacc194d009a/src/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "            stubbing = stubbing.thenReturn(v);\r\n",
          "        }\r\n",
          "        return stubbing;\r\n",
          "    }\r\n",
          "\r\n",
          "    private OngoingStubbing<T> thenThrow(Throwable throwable) {\r\n",
          "        return thenAnswer(new ThrowsException(throwable));\r\n",
          "    }\r\n",
          "\r\n",
          "    public OngoingStubbing<T> thenThrow(Throwable... throwables) {\r\n",
          "        if (throwables == null) {\r\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "https://github.com/IllusionRom-deprecated/android_platform_external_mockito/blob/34f80a94e45f7110ec3444c1d0ecfacc194d009a/src/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "            stubbing = stubbing.thenReturn(v);\r\n",
          "        }\r\n",
          "        return stubbing;\r\n",
          "    }\r\n",
          "\r\n",
          "    private OngoingStubbing<T> thenThrow(Throwable throwable) {\r\n",
          "        return thenAnswer(new ThrowsException(throwable));\r\n",
          "    }\r\n",
          "\r\n",
          "    public OngoingStubbing<T> thenThrow(Throwable... throwables) {\r\n",
          "        if (throwables == null) {\r\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "https://github.com/mbboyraz/jiraPostFunctions/blob/c90eb41ab0e3680bf8b0221b41c596b17560052b/target/classes/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "            stubbing = stubbing.thenReturn(v);\r\n",
          "        }\r\n",
          "        return stubbing;\r\n",
          "    }\r\n",
          "\r\n",
          "    private OngoingStubbing<T> thenThrow(Throwable throwable) {\r\n",
          "        return thenAnswer(new ThrowsException(throwable));\r\n",
          "    }\r\n",
          "\r\n",
          "    public OngoingStubbing<T> thenThrow(Throwable... throwables) {\r\n",
          "        if (throwables == null) {\r\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      }
    ],
    "com.google.common.eventbus.SubscriberExceptionContext.getSubscriber": [
      {
        "link": "https://github.com/huangchunjian123/leyou/blob/f57b85536ef1919bae8f84001a511a4653284938/game-admin/src/main/java/com/game/admin/eventbus/excepiton/EventBusExceptionHandler.java\n",
        "code": [
          "\t\tthis.name = name;\n",
          "\t}\n",
          "\t@Override\n",
          "\tpublic void handleException(Throwable exception, SubscriberExceptionContext context) {\n",
          "\t\teventLog.error(\n",
          "\t\t\t\tString.format(\"%s > Could not dispatch event: %s to %s\", name, context.getSubscriber(),\n",
          "\t\t\t\t\t\tcontext.getSubscriberMethod()), exception);\n",
          "\t}\n",
          "\n",
          "}\n"
        ],
        "line_number": 24,
        "start_line": 20,
        "end_line": 29
      },
      {
        "link": "https://github.com/KarenPan/gggg/blob/079d13ce62aee9a85f6871384a53356bd25735a8/Util/core/src/main/java/tc/oc/commons/core/event/EventExceptionHandler.java\n",
        "code": [
          "        this.loggers = loggers;\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public void handleException(Throwable exception, SubscriberExceptionContext context) {\n",
          "        loggers.get(context.getSubscriber().getClass()).log(\n",
          "            Level.SEVERE,\n",
          "            \"Exception dispatching \" + context.getEvent().getClass().getName() +\n",
          "            \" to \" + context.getSubscriber().getClass().getName() +\n",
          "            \"#\" + context.getSubscriberMethod().getName(),\n",
          "            exception\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "https://github.com/ZilionCHu/zillionchu/blob/361a44729fd511ac6c63198b52ce456344bff895/zilionchu-test/src/main/java/com/github/zilionchu/test/zilionchutest/guava/event/eventTest/SimpleListenerTest.java\n",
        "code": [
          "        public void handleException(Throwable throwable, SubscriberExceptionContext context) {\n",
          "\n",
          "            info(\"###-ExceptionHandler to SimpleListener  getSubscriberMethod {}\", context\n",
          "                    .getSubscriberMethod());\n",
          "            info(\"###-ExceptionHandler to SimpleListener  getSubscriber {}\", context\n",
          "                    .getSubscriber());\n",
          "            info(\"###-ExceptionHandler to SimpleListener  Event {}\", context\n",
          "                    .getEvent());\n",
          "            info(\"###-ExceptionHandler to SimpleListener  EventBus {}\", context\n",
          "                    .getEventBus());\n",
          "        }\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "}https://github.com/nanthony21/PWSMicroManager/blob/9a3938a02f8202cc2404b1ca8d669321bc439046/mmstudio/src/main/java/org/micromanager/internal/utils/EventBusExceptionLogger.java\n",
        "code": [
          "   @Override\n",
          "   public void handleException(Throwable thrwbl, SubscriberExceptionContext sec) {\n",
          "      String message = \"Exception thrown by EventBus subscriber:\\n\" +\n",
          "            \"Event: \" + sec.getEvent() + \"\\n\" +\n",
          "            \"EventBus: \" + sec.getEventBus() + \"\\n\" +\n",
          "            \"Subscriber: \" + sec.getSubscriber() + \"\\n\" +\n",
          "            \"Subscriber Method: \" + sec.getSubscriberMethod();\n",
          "      ReportingUtils.logError(thrwbl, message);\n",
          "   }\n"
        ],
        "line_number": 27,
        "start_line": 23,
        "end_line": 31
      },
      {
        "link": "https://github.com/OvercastNetwork/ProjectAres/blob/7484cb81fcc33814fe26812684660da4e0dbd671/Util/core/src/main/java/tc/oc/commons/core/event/EventExceptionHandler.java\n",
        "code": [
          "        this.loggers = loggers;\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public void handleException(Throwable exception, SubscriberExceptionContext context) {\n",
          "        loggers.get(context.getSubscriber().getClass()).log(\n",
          "            Level.SEVERE,\n",
          "            \"Exception dispatching \" + context.getEvent().getClass().getName() +\n",
          "            \" to \" + context.getSubscriber().getClass().getName() +\n",
          "            \"#\" + context.getSubscriberMethod().getName(),\n",
          "            exception\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "https://github.com/hariummadi/awsome/blob/799a4989e3459b3189d88da07086a549dbbef8d4/Util/core/src/main/java/tc/oc/commons/core/event/EventExceptionHandler.java\n",
        "code": [
          "        this.loggers = loggers;\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public void handleException(Throwable exception, SubscriberExceptionContext context) {\n",
          "        loggers.get(context.getSubscriber().getClass()).log(\n",
          "            Level.SEVERE,\n",
          "            \"Exception dispatching \" + context.getEvent().getClass().getName() +\n",
          "            \" to \" + context.getSubscriber().getClass().getName() +\n",
          "            \"#\" + context.getSubscriberMethod().getName(),\n",
          "            exception\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "}https://github.com/myungjin-k/social-server/blob/066244bbc09f5f2d02e694555909ae3d2b151da9/src/main/java/me/myungjin/social/controller/event/EventExceptionHandler.java\n",
        "code": [
          "\n",
          "  @Override\n",
          "  public void handleException(Throwable exception, SubscriberExceptionContext context) {\n",
          "    if(exception instanceof NotNotifiedException)\n",
          "      log.warn(\"Notification exception occured [{} > {}]\",\n",
          "              context.getSubscriber(), context.getSubscriberMethod(), exception);\n",
          "   else log.error(\"Unexpected event exception occurred [{} > {} with {}]: {}\",\n",
          "        context.getSubscriber(), context.getSubscriberMethod(), context.getEvent(), exception.getMessage(), exception);\n",
          "  }\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 20
      },
      {
        "link": "https://github.com/jasonandersen/knotlog/blob/3176f7144efc18d2eba45dc5aa7e75be91c647c6/src/main/java/com/svhelloworld/knotlog/events/LoggingEventBusExceptionHandler.java\n",
        "code": [
          "        if (context == null) {\n",
          "            return;\n",
          "        }\n",
          "        message.append(\"\\n\").append(\"Event: [\").append(context.getEvent().getClass().getName()).append(\"] \");\n",
          "        message.append(context.getEvent().toString());\n",
          "        message.append(\"\\n\").append(\"Subscriber: [\").append(context.getSubscriber().getClass().getName()).append(\"] \");\n",
          "        message.append(context.getSubscriber().toString());\n",
          "        message.append(\"\\n\").append(\"Method: [\").append(context.getSubscriberMethod().toString()).append(\"]\\n\");\n",
          "    }\n",
          "\n",
          "}\n"
        ],
        "line_number": 55,
        "start_line": 51,
        "end_line": 61
      },
      {
        "link": "https://github.com/metrixware-echoes-tech/ksf-foundation/blob/8f9ed8d20feb8f7c3906964b20527c2fb52031ca/ksf-commons/ksf-backend-cqrs/src/main/java/com/tocea/corolla/cqrs/gate/spring/SubscriberExceptionHandlerBean.java\n",
        "code": [
          "\t@Override\n",
          "\tpublic void handleException(final Throwable _arg0, final SubscriberExceptionContext _arg1) {\n",
          "\t\tLOGGER.warn(\"Event has triggered an exception inside an handler {}\", _arg0);\n",
          "\t\tLOGGER.warn(\"Exception : {}\" , _arg0);\n",
          "\t\tLOGGER.warn(\"Event : {}\" , _arg1.getEvent());\n",
          "\t\tLOGGER.warn(\"Suscriber : {}\" , _arg1.getSubscriber());\n",
          "\t\tLOGGER.warn(\"EventBus : {}\" , _arg1.getEventBus());\n",
          "\t\tLOGGER.warn(\"SuscriberMethod : {}\" , _arg1.getSubscriberMethod());\n",
          "\t\t\n",
          "\t}\n",
          "\t\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      },
      {
        "link": "https://github.com/psh5487/hunMusic-Ver2/blob/621e11d15f825626370ea52a609707d841fc62cf/hun-server-api/src/main/java/com/music/event/EventExceptionHandler.java\n",
        "code": [
          "    private Logger log = LoggerFactory.getLogger(getClass());\n",
          "\n",
          "    @Override\n",
          "    public void handleException(Throwable exception, SubscriberExceptionContext context) {\n",
          "        log.error(\"Unexpected exception occurred [{} > {} with {}]: {}\",\n",
          "                context.getSubscriber(), context.getSubscriberMethod(), context.getEvent(), exception.getMessage(), exception);\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 17
      }
    ],
    "com.google.common.io.Files.toByteArray": [
      {
        "link": "https://github.com/hooj0/guava-example/blob/3c30cf3bcbd07310f8398eaffe6aefcc42da8435/src/java/main/com/cnblogs/hoojo/io/FilesTest.java\n",
        "code": [
          "\t\t}\r\n",
          "\t\t\r\n",
          "\t\t// \u00e5\u0086\u0099\u00e5\u0085",
          "\u00a5byte\u00e5\u0088\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6\r\n",
          "\t\ttry {\r\n",
          "\t\t\tFiles.write(Files.toByteArray(file), new File(\"c://new.txt\"));\r\n",
          "\t\t} catch (Exception e) {\r\n",
          "\t\t\te.printStackTrace();\r\n",
          "\t\t}\r\n",
          "\t}\r\n",
          "\t\r\n"
        ],
        "line_number": 131,
        "start_line": 127,
        "end_line": 137
      },
      {
        "link": "https://github.com/linkwithkk/base_64_encoder_examples/blob/2875005818e5f400b3569939f124f412d0a42b85/Base64EncodeDecode.java\n",
        "code": [
          "*/\n",
          "\n",
          "public class Base64EncodeDecode {\n",
          "\n",
          "\tpublic static void encoder(String inp, String opt) throws IOException {\n",
          "\t\tbyte[] encoded = Base64.getEncoder().encode(Files.toByteArray(new File(inp)));\n",
          "        Files.write(encoded, new File(opt));\n",
          "\t}\n",
          "\t\n",
          "\tpublic static void decoder(String inp, String opt) throws IOException {\n",
          "\t\tFiles.write(Base64.getDecoder().decode(Files.toByteArray(new File(inp))),new File(opt));\n"
        ],
        "line_number": 15,
        "start_line": 11,
        "end_line": 21
      },
      {
        "link": "https://github.com/zqhxuyuan/concurrency/blob/639edc43b6e17809757507d18acd93dbfe1172c8/src/test/java/bbejeck/guava/chapter8/sink/ByteSinkTest.java\n",
        "code": [
          "    public void testCreateFileByteSink() throws Exception {\n",
          "        File dest = new File(\"src/test/resources/byteSink.pdf\");\n",
          "        dest.deleteOnExit();\n",
          "        byteSink = Files.asByteSink(dest);\n",
          "        File file = new File(\"src/main/resources/sample.pdf\");\n",
          "        byteSink.write(Files.toByteArray(file));\n",
          "        assertThat(Files.toByteArray(dest), is(Files.toByteArray(file)));\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void testWriteFromInputStream() throws Exception {\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "https://github.com/deodeveloper/guava-practice/blob/6f69bc54184c09a703e92676b361e7d322f0dcfa/src/test/java/bbejeck/guava/chapter8/sink/ByteSinkTest.java\n",
        "code": [
          "    public void testCreateFileByteSink() throws Exception {\n",
          "        File dest = new File(\"src/test/resources/byteSink.pdf\");\n",
          "        dest.deleteOnExit();\n",
          "        byteSink = Files.asByteSink(dest);\n",
          "        File file = new File(\"src/main/resources/sample.pdf\");\n",
          "        byteSink.write(Files.toByteArray(file));\n",
          "        assertThat(Files.toByteArray(dest), is(Files.toByteArray(file)));\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void testWriteFromInputStream() throws Exception {\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "https://github.com/mapbased/nsfw/blob/1effd39bddbe4d3f26cc1ceef55e6de9856681a9/src/main/java/com/mapkc/nsfw/site/FileSiteStore.java\n",
        "code": [
          "                }\n",
          "            }\n",
          "            /////////////////////\n",
          "\n",
          "\n",
          "            // BufferedReader bufferedReader=new BufferedReader(new Bytearrayr) out.toByteArray();\n",
          "\n",
          "\n",
          "        } else {\n",
          "            throw new java.lang.RuntimeException(sf.getAbsolutePath()\n",
          "                    + \" Not exists\");\n"
        ],
        "line_number": 229,
        "start_line": 225,
        "end_line": 235
      },
      {
        "link": "https://github.com/rmarinsky/ElementObjectSelenide/blob/9f9d1029351e5e0708be6e4b565be7f8e323647e/src/main/java/gsmserver/Utils/Report/AllureUtils.java\n",
        "code": [
          "class AllureUtils {\n",
          "\n",
          "    @Attachment(value = \"Screenshot\", type = \"image/png\")\n",
          "    static byte[] attachScreenshot() {\n",
          "        try {\n",
          "            return toByteArray(takeScreenShotAsFile());\n",
          "        } catch (IOException e) {\n",
          "            return new byte[0];\n",
          "        }\n",
          "    }\n",
          "\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 22
      },
      {
        "link": "https://github.com/vozlok/selenide-yandex/blob/77a3a191cb97658930d1c203b548f54244565b89/src/test/java/ru/yandex/utils/AllureReportUtil.java\n",
        "code": [
          "class AllureReportUtil {\n",
          "\n",
          "    @Attachment(value = \"Screenshot\", type = \"image/png\")\n",
          "    public static byte[] attachScreenshot() {\n",
          "        try {\n",
          "            return toByteArray(takeScreenShotAsFile());\n",
          "        } catch (IOException e) {\n",
          "            return new byte[0];\n",
          "        }\n",
          "    }\n",
          "\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      },
      {
        "link": "https://github.com/BruceWhiteBai/bruceBoot/blob/0e2212b665094c985c85d80932ea9d62754927a4/guava/src/test/java/bbejeck/guava/chapter8/sink/ByteSinkTest.java\n",
        "code": [
          "    public void testCreateFileByteSink() throws Exception {\n",
          "        File dest = new File(\"src/test/resources/byteSink.pdf\");\n",
          "        dest.deleteOnExit();\n",
          "        byteSink = Files.asByteSink(dest);\n",
          "        File file = new File(\"src/main/resources/sample.pdf\");\n",
          "        byteSink.write(Files.toByteArray(file));\n",
          "        assertThat(Files.toByteArray(dest), is(Files.toByteArray(file)));\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void testWriteFromInputStream() throws Exception {\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "https://github.com/landawn/abacus-common/blob/c2af5b84d666466311169c64d516506ca68b62b3/src/main/java/com/landawn/abacus/guava/Files.java\n",
        "code": [
          "     *\r\n",
          "     * @param file\r\n",
          "     * @return\r\n",
          "     * @throws IOException Signals that an I/O exception has occurred.\r\n",
          "     */\r\n",
          "    public static byte[] toByteArray(File file) throws IOException {\r\n",
          "        return com.google.common.io.Files.toByteArray(file);\r\n",
          "    }\r\n",
          "\r\n",
          "    /**\r\n",
          "     *\r\n"
        ],
        "line_number": 174,
        "start_line": 170,
        "end_line": 180
      },
      {
        "link": "https://github.com/nipra/Jafun/blob/2993554f2471f8b75fca4430e3ddb6de2d7da4aa/books/Getting%20Started%20with%20Google%20Guava/Getting%20Started%20with%20Google%20Guava/src/test/java/bbejeck/guava/chapter8/sink/ByteSinkTest.java\n",
        "code": [
          "    public void testCreateFileByteSink() throws Exception {\n",
          "        File dest = new File(\"src/test/resources/byteSink.pdf\");\n",
          "        dest.deleteOnExit();\n",
          "        byteSink = Files.asByteSink(dest);\n",
          "        File file = new File(\"src/main/resources/sample.pdf\");\n",
          "        byteSink.write(Files.toByteArray(file));\n",
          "        assertThat(Files.toByteArray(dest), is(Files.toByteArray(file)));\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void testWriteFromInputStream() throws Exception {\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      }
    ],
    "com.google.common.cache.Cache.size": [
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/cache/ForwardingCache.java\n",
        "code": [
          "    public void invalidateAll() {\n",
          "        delegate().invalidateAll();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public long size() {\n",
          "        return delegate().size();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public CacheStats stats() {\n"
        ],
        "line_number": 63,
        "start_line": 59,
        "end_line": 69
      },
      {
        "link": "https://github.com/DebalinaDey/AuraDevelopDeb/blob/7a208333165e2621f168e7476f66d3c81c27dc06/aura-impl/src/main/java/org/auraframework/impl/cache/CacheImpl.java\n",
        "code": [
          "                    LoggingContext loggingCtx = adapter.getLoggingContext();\n",
          "                    CacheStats stats = cache.stats();\n",
          "                    loggingCtx.logCacheInfo(name,\n",
          "                            String.format(\"evicted %d entries for size pressure, hit rate=%.3f\",\n",
          "                                    evictions, stats.hitRate()),\n",
          "                                    cache.size(), stats);\n",
          "                    lastFull = System.currentTimeMillis();\n",
          "                }\n",
          "            } else if (dayHasPassed) {\n",
          "                // Even without size pressure, we want to\n",
          "                LoggingContext loggingCtx = adapter.getLoggingContext();\n"
        ],
        "line_number": 94,
        "start_line": 90,
        "end_line": 100
      },
      {
        "link": "https://github.com/songyibing/ndfs/blob/c244c04f3d95b5f519e71c38f4d4043b6a15170f/ndfs-parent/ndfs-core/src/main/java/ndfs/core/cache/CacheBuilder.java\n",
        "code": [
          "            }\n",
          "            return hasValue;\n",
          "        }\n",
          "        \n",
          "        @Override\n",
          "        public long size() {\n",
          "            return loadingCache.size();\n",
          "        }\n",
          "    }\n",
          "}\n",
          "\n"
        ],
        "line_number": 120,
        "start_line": 116,
        "end_line": 126
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.deviceauthserver-DeviceAuthServer/sources/com/google/common/cache/ForwardingCache.java\n",
        "code": [
          "    public void invalidateAll() {\n",
          "        delegate().invalidateAll();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public long size() {\n",
          "        return delegate().size();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public CacheStats stats() {\n"
        ],
        "line_number": 63,
        "start_line": 59,
        "end_line": 69
      },
      {
        "link": "https://github.com/ousui/chanjetedu-framework-parent/blob/6a4d7496e5d750ee8a44a2c4d1f1cb6e4df6a9cf/chanjetedu-framework-spring/src/main/java/com/chanjet/edu/framework/spring/shiro/cache/SpringCacheManagerWrapper.java\n",
        "code": [
          "\t\tpublic void clear() throws CacheException {\n",
          "\t\t\tspringCache.clear();\n",
          "\t\t}\n",
          "\n",
          "\t\t@Override\n",
          "\t\tpublic int size() {\n",
          "\t\t\tif (springCache.getNativeCache() instanceof com.google.common.cache.Cache) {\n",
          "\t\t\t\tcom.google.common.cache.Cache guavaCache = (com.google.common.cache.Cache) springCache.getNativeCache();\n",
          "\t\t\t\treturn Long.valueOf(guavaCache.size()).intValue();\n",
          "\t\t\t}\n",
          "\t\t\t// redis \u00e6\u0097\u00a0\u00e6\u00b3\u0095\u00e7\u009b\u00b4\u00e6\u008e\u00a5\u00e6\u0089\u00be\u00e5\u0088\u00b0 size\n"
        ],
        "line_number": 70,
        "start_line": 66,
        "end_line": 76
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/cache/ForwardingCache.java\n",
        "code": [
          "    public void invalidateAll() {\n",
          "        delegate().invalidateAll();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public long size() {\n",
          "        return delegate().size();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public CacheStats stats() {\n"
        ],
        "line_number": 63,
        "start_line": 59,
        "end_line": 69
      },
      {
        "link": "https://github.com/shengzhiconghaoshuai/mediator/blob/48971b8a386e5df1e900a010ab7960edd6b26035/mediator-web/src/main/java/org/apache/shiro/cache/SpringCacheWrapper.java\n",
        "code": [
          "\t\tspringCache.clear();\n",
          "\t}\n",
          "\n",
          "\t@SuppressWarnings(\"rawtypes\")\n",
          "\t@Override\n",
          "\tpublic int size() {\n",
          "\t\tif (springCache.getNativeCache() instanceof com.google.common.cache.Cache) {\n",
          "\t\t\treturn (int)((com.google.common.cache.Cache)springCache).size();\n",
          "\t\t}\n",
          "\t\tthrow new UnsupportedOperationException(\"invoke spring cache abstract size method not support\");\n",
          "\t}\n"
        ],
        "line_number": 56,
        "start_line": 52,
        "end_line": 62
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/cache/ForwardingCache.java\n",
        "code": [
          "    public void invalidateAll() {\n",
          "        delegate().invalidateAll();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public long size() {\n",
          "        return delegate().size();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public CacheStats stats() {\n"
        ],
        "line_number": 63,
        "start_line": 59,
        "end_line": 69
      },
      {
        "link": "https://github.com/shengzhiconghaoshuai/mediator/blob/48971b8a386e5df1e900a010ab7960edd6b26035/mediator-web/src/main/java/org/apache/shiro/cache/SpringCacheWrapper.java\n",
        "code": [
          "\t\tspringCache.clear();\n",
          "\t}\n",
          "\n",
          "\t@SuppressWarnings(\"rawtypes\")\n",
          "\t@Override\n",
          "\tpublic int size() {\n",
          "\t\tif (springCache.getNativeCache() instanceof com.google.common.cache.Cache) {\n",
          "\t\t\treturn (int)((com.google.common.cache.Cache)springCache).size();\n",
          "\t\t}\n",
          "\t\tthrow new UnsupportedOperationException(\"invoke spring cache abstract size method not support\");\n",
          "\t}\n"
        ],
        "line_number": 56,
        "start_line": 52,
        "end_line": 62
      },
      {
        "link": "https://github.com/wtgodk/project-sso/blob/de8bc0a35920802f7035dc942cd2d4fc02ed8d1f/sso-core/src/main/java/cn/godk/sso/cache/guava/GuavaCache.java\n",
        "code": [
          "    /**\n",
          "     * \u00e9\u0095\u00bf\u00e5\u00ba\u00a6\n",
          "     *\n",
          "     * @return\n",
          "     */\n",
          "    public synchronized long size(Cache guavaKey) {\n",
          "        com.google.common.cache.Cache cache = getCache(guavaKey);\n",
          "        return cache.size();\n",
          "    }\n",
          "\n",
          "    /**\n"
        ],
        "line_number": 139,
        "start_line": 135,
        "end_line": 145
      }
    ],
    "com.google.common.collect.MultimapBuilder.build": [
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "import java.util.TreeSet;\n",
          "\n",
          "public abstract class MultimapBuilder<K0, V0> {\n",
          "    private static final int DEFAULT_EXPECTED_KEYS = 8;\n",
          "\n",
          "    public abstract <K extends K0, V extends V0> Multimap<K, V> build();\n",
          "\n",
          "    private MultimapBuilder() {\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Object> hashKeys() {\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "@Beta\n",
          "@GwtCompatible\n",
          "public abstract class MultimapBuilder<K0, V0> {\n",
          "    private static final int DEFAULT_EXPECTED_KEYS = 8;\n",
          "\n",
          "    public abstract <K extends K0, V extends V0> Multimap<K, V> build();\n",
          "\n",
          "    private MultimapBuilder() {\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Object> hashKeys() {\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "https://github.com/duyleekun/zycami-ded/blob/27686ca846de6d164692c81bac2ae7f85710361f/src/main/java/com/google/common/collect/MultimapBuilder$ListMultimapBuilder.java\n",
        "code": [
          "extends MultimapBuilder {\n",
          "    public MultimapBuilder$ListMultimapBuilder() {\n",
          "        super(null);\n",
          "    }\n",
          "\n",
          "    public abstract ListMultimap build();\n",
          "\n",
          "    public ListMultimap build(Multimap multimap) {\n",
          "        return (ListMultimap)super.build(multimap);\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 15,
        "start_line": 11,
        "end_line": 21
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "@Beta\n",
          "@GwtCompatible\n",
          "public abstract class MultimapBuilder<K0, V0> {\n",
          "    private static final int DEFAULT_EXPECTED_KEYS = 8;\n",
          "\n",
          "    public abstract <K extends K0, V extends V0> Multimap<K, V> build();\n",
          "\n",
          "    private MultimapBuilder() {\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Object> hashKeys() {\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "https://github.com/duyleekun/zycami-ded/blob/27686ca846de6d164692c81bac2ae7f85710361f/src/main/java/com/google/common/collect/MultimapBuilder$SetMultimapBuilder.java\n",
        "code": [
          "extends MultimapBuilder {\n",
          "    public MultimapBuilder$SetMultimapBuilder() {\n",
          "        super(null);\n",
          "    }\n",
          "\n",
          "    public abstract SetMultimap build();\n",
          "\n",
          "    public SetMultimap build(Multimap multimap) {\n",
          "        return (SetMultimap)super.build(multimap);\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 15,
        "start_line": 11,
        "end_line": 21
      },
      {
        "link": "https://github.com/duyleekun/zycami-ded/blob/27686ca846de6d164692c81bac2ae7f85710361f/src/main/java/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "        Preconditions.checkNotNull(comparator);\n",
          "        MultimapBuilder$3 multimapBuilder$3 = new MultimapBuilder$3(comparator);\n",
          "        return multimapBuilder$3;\n",
          "    }\n",
          "\n",
          "    public abstract Multimap build();\n",
          "\n",
          "    public Multimap build(Multimap multimap) {\n",
          "        Multimap multimap2 = this.build();\n",
          "        multimap2.putAll(multimap);\n",
          "        return multimap2;\n"
        ],
        "line_number": 62,
        "start_line": 58,
        "end_line": 68
      },
      {
        "link": "https://github.com/Manouchehri/bindiff/blob/2a31859b4638404cdc915d7ed6be19937d762743/src_fernflower/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "   public static MultimapBuilder$MultimapBuilderWithKeys enumKeys(Class var0) {\n",
          "      Preconditions.checkNotNull(var0);\n",
          "      return new MultimapBuilder$4(var0);\n",
          "   }\n",
          "\n",
          "   public abstract Multimap build();\n",
          "\n",
          "   public Multimap build(Multimap var1) {\n",
          "      Multimap var2 = this.build();\n",
          "      var2.putAll(var1);\n",
          "      return var2;\n"
        ],
        "line_number": 57,
        "start_line": 53,
        "end_line": 63
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "@Beta\n",
          "@GwtCompatible\n",
          "public abstract class MultimapBuilder<K0, V0> {\n",
          "    private static final int DEFAULT_EXPECTED_KEYS = 8;\n",
          "\n",
          "    public abstract <K extends K0, V extends V0> Multimap<K, V> build();\n",
          "\n",
          "    private MultimapBuilder() {\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Object> hashKeys() {\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "https://github.com/upclab/socrates-matcher-android/blob/81594ffd21e1714f86d5316eff43f73e7d00545b/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "\n",
          "            C09911(int i) {\n",
          "                this.val$expectedValuesPerKey = i;\n",
          "            }\n",
          "\n",
          "            public <K extends K0, V> ListMultimap<K, V> build() {\n",
          "                return Multimaps.newListMultimap(MultimapBuilderWithKeys.this.createMap(), new ArrayListSupplier(this.val$expectedValuesPerKey));\n",
          "            }\n",
          "        }\n",
          "\n",
          "        /* renamed from: com.google.common.collect.MultimapBuilder.MultimapBuilderWithKeys.2 */\n"
        ],
        "line_number": 40,
        "start_line": 36,
        "end_line": 46
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.deviceauthserver-DeviceAuthServer/sources/com/google/common/collect/MultimapBuilder.java\n",
        "code": [
          "@Beta\n",
          "@GwtCompatible\n",
          "public abstract class MultimapBuilder<K0, V0> {\n",
          "    private static final int DEFAULT_EXPECTED_KEYS = 8;\n",
          "\n",
          "    public abstract <K extends K0, V extends V0> Multimap<K, V> build();\n",
          "\n",
          "    private MultimapBuilder() {\n",
          "    }\n",
          "\n",
          "    public static MultimapBuilderWithKeys<Object> hashKeys() {\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      }
    ],
    "com.google.common.cache.CacheBuilder.build": [
      {
        "link": "https://github.com/ssy-githup/spring-framework-4.3.x/blob/d07a8e4d5dbb0722dbfb45088cb10fb3e3211a95/spring-context-support/src/main/java/org/springframework/cache/guava/GuavaCacheManager.java\n",
        "code": [
          "\n",
          "\t/**\n",
          "\t * Set the Guava CacheBuilder to use for building each individual\n",
          "\t * {@link GuavaCache} instance.\n",
          "\t * @see #createNativeGuavaCache\n",
          "\t * @see com.google.common.cache.CacheBuilder#build()\n",
          "\t */\n",
          "\tpublic void setCacheBuilder(CacheBuilder<Object, Object> cacheBuilder) {\n",
          "\t\tAssert.notNull(cacheBuilder, \"CacheBuilder must not be null\");\n",
          "\t\tdoSetCacheBuilder(cacheBuilder);\n",
          "\t}\n"
        ],
        "line_number": 105,
        "start_line": 101,
        "end_line": 111
      },
      {
        "link": "https://github.com/shansun123/sparrow/blob/5eae1d009717f8eb64f90a22ac9b54a440ff0771/src/main/java/com/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> recordStats() {\n",
          "\t\treturn builder.recordStats();\n",
          "\t}\n",
          "\n",
          "\tpublic <K1, V1> LoadingCache<K1, V1> build(CacheLoader<? super K1, V1> loader) {\n",
          "\t\treturn builder.build(loader);\n",
          "\t}\n",
          "\n",
          "\tpublic <K1, V1> Cache<K1, V1> build() {\n",
          "\t\treturn builder.build();\n"
        ],
        "line_number": 91,
        "start_line": 87,
        "end_line": 97
      },
      {
        "link": "https://github.com/403966064/spring-framework-4.0.x/blob/64e3c411c7f032e8136815bb01a9626b96208d26/spring-context-support/src/main/java/org/springframework/cache/guava/GuavaCacheManager.java\n",
        "code": [
          "\n",
          "\t/**\n",
          "\t * Set the Guava CacheBuilder to use for building each individual\n",
          "\t * {@link GuavaCache} instance.\n",
          "\t * @see #createNativeGuavaCache\n",
          "\t * @see com.google.common.cache.CacheBuilder#build()\n",
          "\t */\n",
          "\tpublic void setCacheBuilder(CacheBuilder<Object, Object> cacheBuilder) {\n",
          "\t\tAssert.notNull(cacheBuilder, \"CacheBuilder must not be null\");\n",
          "\t\tdoSetCacheBuilder(cacheBuilder);\n",
          "\t}\n"
        ],
        "line_number": 105,
        "start_line": 101,
        "end_line": 111
      },
      {
        "link": "https://github.com/wuzhenyujimmy/spring-can-import/blob/dc1e63e1f3fc0f1c3347f7e3075b9213226538c6/spring-context-support/src/main/java/org/springframework/cache/guava/GuavaCacheManager.java\n",
        "code": [
          "\n",
          "\t/**\n",
          "\t * Set the Guava CacheBuilder to use for building each individual\n",
          "\t * {@link GuavaCache} instance.\n",
          "\t * @see #createNativeGuavaCache\n",
          "\t * @see com.google.common.cache.CacheBuilder#build()\n",
          "\t */\n",
          "\tpublic void setCacheBuilder(CacheBuilder<Object, Object> cacheBuilder) {\n",
          "\t\tAssert.notNull(cacheBuilder, \"CacheBuilder must not be null\");\n",
          "\t\tthis.cacheBuilder = cacheBuilder;\n",
          "\t}\n"
        ],
        "line_number": 97,
        "start_line": 93,
        "end_line": 103
      },
      {
        "link": "https://github.com/youyaHp430/cloneOne/blob/d7632d52c1a99df9b9fdd73d3dcee11605dadfb5/spring-context-support/src/main/java/org/springframework/cache/guava/GuavaCacheManager.java\n",
        "code": [
          "\n",
          "\t/**\n",
          "\t * Set the Guava CacheBuilder to use for building each individual\n",
          "\t * {@link GuavaCache} instance.\n",
          "\t * @see #createNativeGuavaCache\n",
          "\t * @see com.google.common.cache.CacheBuilder#build()\n",
          "\t */\n",
          "\tpublic void setCacheBuilder(CacheBuilder<Object, Object> cacheBuilder) {\n",
          "\t\tAssert.notNull(cacheBuilder, \"CacheBuilder must not be null\");\n",
          "\t\tdoSetCacheBuilder(cacheBuilder);\n",
          "\t}\n"
        ],
        "line_number": 105,
        "start_line": 101,
        "end_line": 111
      },
      {
        "link": "https://github.com/NighterCoder/spring_project/blob/911804a6a67a217aa04c8411502ab890529b1bb6/spring-context-support/src/main/java/org/springframework/cache/guava/GuavaCacheManager.java\n",
        "code": [
          "\n",
          "\t/**\n",
          "\t * Set the Guava CacheBuilder to use for building each individual\n",
          "\t * {@link GuavaCache} instance.\n",
          "\t * @see #createNativeGuavaCache\n",
          "\t * @see com.google.common.cache.CacheBuilder#build()\n",
          "\t */\n",
          "\tpublic void setCacheBuilder(CacheBuilder<Object, Object> cacheBuilder) {\n",
          "\t\tAssert.notNull(cacheBuilder, \"CacheBuilder must not be null\");\n",
          "\t\tdoSetCacheBuilder(cacheBuilder);\n",
          "\t}\n"
        ],
        "line_number": 105,
        "start_line": 101,
        "end_line": 111
      },
      {
        "link": "https://github.com/zqhxuyuan/tutorials/blob/72740ec130a15331b0b2428b9750099c47073052/zava/src/main/java/com/github/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> recordStats() {\n",
          "\t\treturn builder.recordStats();\n",
          "\t}\n",
          "\n",
          "\tpublic <K1, V1> LoadingCache<K1, V1> build(CacheLoader<? super K1, V1> loader) {\n",
          "\t\treturn builder.build(loader);\n",
          "\t}\n",
          "\n",
          "\tpublic <K1, V1> Cache<K1, V1> build() {\n",
          "\t\treturn builder.build();\n"
        ],
        "line_number": 91,
        "start_line": 87,
        "end_line": 97
      },
      {
        "link": "https://github.com/sunhonglei527/honglei527/blob/edb74fdc11ce02d7fd490d63e69a2aeab63b3f93/spring-framework-4.3.9.RELEASE/spring-context-support/src/main/java/org/springframework/cache/guava/GuavaCacheManager.java\n",
        "code": [
          "\n",
          "\t/**\n",
          "\t * Set the Guava CacheBuilder to use for building each individual\n",
          "\t * {@link GuavaCache} instance.\n",
          "\t * @see #createNativeGuavaCache\n",
          "\t * @see com.google.common.cache.CacheBuilder#build()\n",
          "\t */\n",
          "\tpublic void setCacheBuilder(CacheBuilder<Object, Object> cacheBuilder) {\n",
          "\t\tAssert.notNull(cacheBuilder, \"CacheBuilder must not be null\");\n",
          "\t\tdoSetCacheBuilder(cacheBuilder);\n",
          "\t}\n"
        ],
        "line_number": 105,
        "start_line": 101,
        "end_line": 111
      },
      {
        "link": "https://github.com/zqhxuyuan/zava/blob/707691039b7aff8f4129e2b25d08b374610990e5/src/main/java/com/github/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> recordStats() {\n",
          "\t\treturn builder.recordStats();\n",
          "\t}\n",
          "\n",
          "\tpublic <K1, V1> LoadingCache<K1, V1> build(CacheLoader<? super K1, V1> loader) {\n",
          "\t\treturn builder.build(loader);\n",
          "\t}\n",
          "\n",
          "\tpublic <K1, V1> Cache<K1, V1> build() {\n",
          "\t\treturn builder.build();\n"
        ],
        "line_number": 91,
        "start_line": 87,
        "end_line": 97
      },
      {
        "link": "https://github.com/songyibing/ndfs/blob/c244c04f3d95b5f519e71c38f4d4043b6a15170f/ndfs-parent/ndfs-core/src/main/java/ndfs/core/cache/CacheBuilder.java\n",
        "code": [
          "\n",
          "    public abstract CacheBuilder<K, V> maxinumSize(Long size);\n",
          "\n",
          "    public abstract CacheBuilder<K, V> initialCapacity(int initialCapacity);\n",
          "\n",
          "    public abstract LocalCache<K, V> build();\n",
          "}\n",
          "\n",
          "class GuavaCacheBuilder<K, V> extends CacheBuilder<K, V> {\n",
          "\n",
          "    @SuppressWarnings(\"unchecked\")\n"
        ],
        "line_number": 46,
        "start_line": 42,
        "end_line": 52
      }
    ],
    "com.google.common.collect.ImmutableMap.of": [
      {
        "link": "https://github.com/TAOTAO-WEB/brainstorm/blob/a7572e471f3405d2a2afdb3371c3e859ef63ea33/lombok-intellij-plugin-master/test-manual/src/main/java/de/plushnikov/builder/generic/guava/SingularGuavaMap2.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n",
          "    @javax.annotation.Generated(\"lombok\")\n",
          "    public SingularGuavaMap2<A, B> build() {\n",
          "      com.google.common.collect.ImmutableMap<java.lang.Object, java.lang.Object> rawTypes = this.rawTypes == null ? com.google.common.collect.ImmutableMap.<java.lang.Object, java.lang.Object>of() : this.rawTypes.build();\n",
          "      com.google.common.collect.ImmutableMap<Integer, Float> integers = this.integers == null ? com.google.common.collect.ImmutableMap.<Integer, Float>of() : this.integers.build();\n",
          "      com.google.common.collect.ImmutableMap<A, B> generics = this.generics == null ? com.google.common.collect.ImmutableMap.<A, B>of() : this.generics.build();\n",
          "      com.google.common.collect.ImmutableMap<Number, String> extendsGenerics = this.extendsGenerics == null ? com.google.common.collect.ImmutableMap.<Number, String>of() : this.extendsGenerics.build();\n",
          "      return new SingularGuavaMap2<A, B>(rawTypes, integers, generics, extendsGenerics);\n",
          "    }\n"
        ],
        "line_number": 140,
        "start_line": 136,
        "end_line": 146
      },
      {
        "link": "https://github.com/TAOTAO-WEB/brainstorm/blob/a7572e471f3405d2a2afdb3371c3e859ef63ea33/lombok-intellij-plugin-master/testData/after/superbuilder/Singular/Generic/Guava/SingularGuavaMap.java\n",
        "code": [
          "    }\n",
          "  }\n",
          "\n",
          "  @java.lang.SuppressWarnings(\"all\")\n",
          "  protected SingularGuavaMap(final SingularGuavaMapBuilder<A, B, ?, ?> b) {\n",
          "    com.google.common.collect.ImmutableMap<java.lang.Object, java.lang.Object> rawTypes = b.rawTypes == null ? com.google.common.collect.ImmutableMap.<java.lang.Object, java.lang.Object>of() : b.rawTypes.build();\n",
          "    this.rawTypes = rawTypes;\n",
          "    com.google.common.collect.ImmutableMap<Integer, Float> integers = b.integers == null ? com.google.common.collect.ImmutableMap.<Integer, Float>of() : b.integers.build();\n",
          "    this.integers = integers;\n",
          "    com.google.common.collect.ImmutableMap<A, B> generics = b.generics == null ? com.google.common.collect.ImmutableMap.<A, B>of() : b.generics.build();\n",
          "    this.generics = generics;\n"
        ],
        "line_number": 141,
        "start_line": 137,
        "end_line": 147
      },
      {
        "link": "https://github.com/JetBrains/intellij-community/blob/0e2aa4030ee763c9b0c828f0b5119f4cdcc66f35/plugins/lombok/testData/after/superbuilder/Singular/Generic/Guava/SingularGuavaMap.java\n",
        "code": [
          "    }\n",
          "  }\n",
          "\n",
          "  @java.lang.SuppressWarnings(\"all\")\n",
          "  protected SingularGuavaMap(final SingularGuavaMapBuilder<A, B, ?, ?> b) {\n",
          "    com.google.common.collect.ImmutableMap<java.lang.Object, java.lang.Object> rawTypes = b.rawTypes == null ? com.google.common.collect.ImmutableMap.<java.lang.Object, java.lang.Object>of() : b.rawTypes.build();\n",
          "    this.rawTypes = rawTypes;\n",
          "    com.google.common.collect.ImmutableMap<Integer, Float> integers = b.integers == null ? com.google.common.collect.ImmutableMap.<Integer, Float>of() : b.integers.build();\n",
          "    this.integers = integers;\n",
          "    com.google.common.collect.ImmutableMap<A, B> generics = b.generics == null ? com.google.common.collect.ImmutableMap.<A, B>of() : b.generics.build();\n",
          "    this.generics = generics;\n"
        ],
        "line_number": 141,
        "start_line": 137,
        "end_line": 147
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/ImmutableMapUtil.java\n",
        "code": [
          "*/ \n",
          "public static <K extends java.lang.Enum<K> ,V> com.google.common.collect.ImmutableMap<K, V> immutableEnumMap(java.util.Map<K, ? extends V> p0){\n",
          "\treturn com.google.common.collect.Maps.immutableEnumMap(p0);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.ImmutableMap#of()}\n",
          "*@see com.google.common.collect.ImmutableMap#of()\n",
          "*<code>public static <K,V> com.google.common.collect.ImmutableMap<K, V> com.google.common.collect.ImmutableMap.of()\n",
          "*of()</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 66,
        "start_line": 62,
        "end_line": 72
      },
      {
        "link": "https://github.com/luckystar5408/Jvav-Studio-Community/blob/084e8ca780cccca8ae862cc9f63d8b8a52926656/plugins/lombok/testData/after/superbuilder/Singular/Generic/Guava/SingularGuavaMap.java\n",
        "code": [
          "    }\n",
          "  }\n",
          "\n",
          "  @java.lang.SuppressWarnings(\"all\")\n",
          "  protected SingularGuavaMap(final SingularGuavaMapBuilder<A, B, ?, ?> b) {\n",
          "    com.google.common.collect.ImmutableMap<java.lang.Object, java.lang.Object> rawTypes = b.rawTypes == null ? com.google.common.collect.ImmutableMap.<java.lang.Object, java.lang.Object>of() : b.rawTypes.build();\n",
          "    this.rawTypes = rawTypes;\n",
          "    com.google.common.collect.ImmutableMap<Integer, Float> integers = b.integers == null ? com.google.common.collect.ImmutableMap.<Integer, Float>of() : b.integers.build();\n",
          "    this.integers = integers;\n",
          "    com.google.common.collect.ImmutableMap<A, B> generics = b.generics == null ? com.google.common.collect.ImmutableMap.<A, B>of() : b.generics.build();\n",
          "    this.generics = generics;\n"
        ],
        "line_number": 141,
        "start_line": 137,
        "end_line": 147
      },
      {
        "link": "https://github.com/mplushnikov/lombok-intellij-plugin/blob/6775f2989b461f4dd4e03054740f164c68c893a2/testData/after/builder/Singular/Generic/Guava/SingularGuavaMap.java\n",
        "code": [
          "      return this;\n",
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n",
          "    public SingularGuavaMap<A, B> build() {\n",
          "      com.google.common.collect.ImmutableMap<java.lang.Object, java.lang.Object> rawTypes = this.rawTypes == null ? com.google.common.collect.ImmutableMap.<java.lang.Object, java.lang.Object>of() : this.rawTypes.build();\n",
          "      com.google.common.collect.ImmutableMap<Integer, Float> integers = this.integers == null ? com.google.common.collect.ImmutableMap.<Integer, Float>of() : this.integers.build();\n",
          "      com.google.common.collect.ImmutableMap<A, B> generics = this.generics == null ? com.google.common.collect.ImmutableMap.<A, B>of() : this.generics.build();\n",
          "      com.google.common.collect.ImmutableMap<Number, String> extendsGenerics = this.extendsGenerics == null ? com.google.common.collect.ImmutableMap.<Number, String>of() : this.extendsGenerics.build();\n",
          "      return new SingularGuavaMap<A, B>(rawTypes, integers, generics, extendsGenerics);\n",
          "    }\n"
        ],
        "line_number": 120,
        "start_line": 116,
        "end_line": 126
      },
      {
        "link": "https://github.com/mplushnikov/lombok-intellij-plugin/blob/6775f2989b461f4dd4e03054740f164c68c893a2/test-manual/src/main/java/de/plushnikov/builder/generic/guava/SingularGuavaMap2.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n",
          "    @javax.annotation.Generated(\"lombok\")\n",
          "    public SingularGuavaMap2<A, B> build() {\n",
          "      com.google.common.collect.ImmutableMap<java.lang.Object, java.lang.Object> rawTypes = this.rawTypes == null ? com.google.common.collect.ImmutableMap.<java.lang.Object, java.lang.Object>of() : this.rawTypes.build();\n",
          "      com.google.common.collect.ImmutableMap<Integer, Float> integers = this.integers == null ? com.google.common.collect.ImmutableMap.<Integer, Float>of() : this.integers.build();\n",
          "      com.google.common.collect.ImmutableMap<A, B> generics = this.generics == null ? com.google.common.collect.ImmutableMap.<A, B>of() : this.generics.build();\n",
          "      com.google.common.collect.ImmutableMap<Number, String> extendsGenerics = this.extendsGenerics == null ? com.google.common.collect.ImmutableMap.<Number, String>of() : this.extendsGenerics.build();\n",
          "      return new SingularGuavaMap2<A, B>(rawTypes, integers, generics, extendsGenerics);\n",
          "    }\n"
        ],
        "line_number": 140,
        "start_line": 136,
        "end_line": 146
      },
      {
        "link": "https://github.com/mplushnikov/lombok-intellij-plugin/blob/6775f2989b461f4dd4e03054740f164c68c893a2/testData/after/superbuilder/Singular/Generic/Guava/SingularGuavaMap.java\n",
        "code": [
          "    }\n",
          "  }\n",
          "\n",
          "  @java.lang.SuppressWarnings(\"all\")\n",
          "  protected SingularGuavaMap(final SingularGuavaMapBuilder<A, B, ?, ?> b) {\n",
          "    com.google.common.collect.ImmutableMap<java.lang.Object, java.lang.Object> rawTypes = b.rawTypes == null ? com.google.common.collect.ImmutableMap.<java.lang.Object, java.lang.Object>of() : b.rawTypes.build();\n",
          "    this.rawTypes = rawTypes;\n",
          "    com.google.common.collect.ImmutableMap<Integer, Float> integers = b.integers == null ? com.google.common.collect.ImmutableMap.<Integer, Float>of() : b.integers.build();\n",
          "    this.integers = integers;\n",
          "    com.google.common.collect.ImmutableMap<A, B> generics = b.generics == null ? com.google.common.collect.ImmutableMap.<A, B>of() : b.generics.build();\n",
          "    this.generics = generics;\n"
        ],
        "line_number": 141,
        "start_line": 137,
        "end_line": 147
      },
      {
        "link": "https://github.com/TAOTAO-WEB/brainstorm/blob/a7572e471f3405d2a2afdb3371c3e859ef63ea33/lombok-intellij-plugin-master/testData/after/builder/Singular/Generic/Guava/SingularGuavaMap.java\n",
        "code": [
          "      return this;\n",
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n",
          "    public SingularGuavaMap<A, B> build() {\n",
          "      com.google.common.collect.ImmutableMap<java.lang.Object, java.lang.Object> rawTypes = this.rawTypes == null ? com.google.common.collect.ImmutableMap.<java.lang.Object, java.lang.Object>of() : this.rawTypes.build();\n",
          "      com.google.common.collect.ImmutableMap<Integer, Float> integers = this.integers == null ? com.google.common.collect.ImmutableMap.<Integer, Float>of() : this.integers.build();\n",
          "      com.google.common.collect.ImmutableMap<A, B> generics = this.generics == null ? com.google.common.collect.ImmutableMap.<A, B>of() : this.generics.build();\n",
          "      com.google.common.collect.ImmutableMap<Number, String> extendsGenerics = this.extendsGenerics == null ? com.google.common.collect.ImmutableMap.<Number, String>of() : this.extendsGenerics.build();\n",
          "      return new SingularGuavaMap<A, B>(rawTypes, integers, generics, extendsGenerics);\n",
          "    }\n"
        ],
        "line_number": 120,
        "start_line": 116,
        "end_line": 126
      },
      {
        "link": "https://github.com/luckystar5408/Jvav-Studio-Community/blob/084e8ca780cccca8ae862cc9f63d8b8a52926656/plugins/lombok/testData/after/builder/Singular/Generic/Guava/SingularGuavaMap.java\n",
        "code": [
          "      return this;\n",
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n",
          "    public SingularGuavaMap<A, B> build() {\n",
          "      com.google.common.collect.ImmutableMap<java.lang.Object, java.lang.Object> rawTypes = this.rawTypes == null ? com.google.common.collect.ImmutableMap.<java.lang.Object, java.lang.Object>of() : this.rawTypes.build();\n",
          "      com.google.common.collect.ImmutableMap<Integer, Float> integers = this.integers == null ? com.google.common.collect.ImmutableMap.<Integer, Float>of() : this.integers.build();\n",
          "      com.google.common.collect.ImmutableMap<A, B> generics = this.generics == null ? com.google.common.collect.ImmutableMap.<A, B>of() : this.generics.build();\n",
          "      com.google.common.collect.ImmutableMap<Number, String> extendsGenerics = this.extendsGenerics == null ? com.google.common.collect.ImmutableMap.<Number, String>of() : this.extendsGenerics.build();\n",
          "      return new SingularGuavaMap<A, B>(rawTypes, integers, generics, extendsGenerics);\n",
          "    }\n"
        ],
        "line_number": 120,
        "start_line": 116,
        "end_line": 126
      }
    ],
    "com.google.common.collect.ImmutableList.of": [
      {
        "link": "https://github.com/TAOTAO-WEB/brainstorm/blob/a7572e471f3405d2a2afdb3371c3e859ef63ea33/lombok-intellij-plugin-master/test-manual/src/main/java/de/plushnikov/builder/generic/guava/SingularGuavaList2.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n",
          "    @javax.annotation.Generated(\"lombok\")\n",
          "    public SingularGuavaList2<T> build() {\n",
          "      com.google.common.collect.ImmutableList<java.lang.Object> rawTypes = this.rawTypes == null ? com.google.common.collect.ImmutableList.<java.lang.Object>of() : this.rawTypes.build();\n",
          "      com.google.common.collect.ImmutableList<Integer> integers = this.integers == null ? com.google.common.collect.ImmutableList.<Integer>of() : this.integers.build();\n",
          "      com.google.common.collect.ImmutableList<T> generics = this.generics == null ? com.google.common.collect.ImmutableList.<T>of() : this.generics.build();\n",
          "      com.google.common.collect.ImmutableList<Number> extendsGenerics = this.extendsGenerics == null ? com.google.common.collect.ImmutableList.<Number>of() : this.extendsGenerics.build();\n",
          "      return new SingularGuavaList2<T>(rawTypes, integers, generics, extendsGenerics);\n",
          "    }\n"
        ],
        "line_number": 140,
        "start_line": 136,
        "end_line": 146
      },
      {
        "link": "https://github.com/STAMP-project/descartes-amplification-experiments/blob/a5709fd78bbe8b4a4ae590ec50704dbf7881e882/subjects/java-html-sanitizer/results/reneri/generated/org/owasp/html/TagBalancingHtmlStreamRendererTest.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @org.junit.Test\n",
          "    public final void testTagBalancing() {\n",
          "        eu.stamp_project.reneri.instrumentation.StateObserver.<org.owasp.html.TagBalancingHtmlStreamEventReceiver>observeState(\"org.owasp.html.TagBalancingHtmlStreamRendererTest|testTagBalancing()|0\", org.owasp.html.TagBalancingHtmlStreamEventReceiver.class, balancer).openDocument();\n",
          "        eu.stamp_project.reneri.instrumentation.StateObserver.<org.owasp.html.TagBalancingHtmlStreamEventReceiver>observeState(\"org.owasp.html.TagBalancingHtmlStreamRendererTest|testTagBalancing()|1\", org.owasp.html.TagBalancingHtmlStreamEventReceiver.class, balancer).openTag(\"html\", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.common.collect.ImmutableList<java.lang.String>>observeState(\"org.owasp.html.TagBalancingHtmlStreamRendererTest|testTagBalancing()|2\", com.google.common.collect.ImmutableList.class, com.google.common.collect.ImmutableList.<java.lang.String>of()));\n",
          "        eu.stamp_project.reneri.instrumentation.StateObserver.<org.owasp.html.TagBalancingHtmlStreamEventReceiver>observeState(\"org.owasp.html.TagBalancingHtmlStreamRendererTest|testTagBalancing()|3\", org.owasp.html.TagBalancingHtmlStreamEventReceiver.class, balancer).openTag(\"head\", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.common.collect.ImmutableList<java.lang.String>>observeState(\"org.owasp.html.TagBalancingHtmlStreamRendererTest|testTagBalancing()|4\", com.google.common.collect.ImmutableList.class, com.google.common.collect.ImmutableList.<java.lang.String>of()));\n",
          "        eu.stamp_project.reneri.instrumentation.StateObserver.<org.owasp.html.TagBalancingHtmlStreamEventReceiver>observeState(\"org.owasp.html.TagBalancingHtmlStreamRendererTest|testTagBalancing()|5\", org.owasp.html.TagBalancingHtmlStreamEventReceiver.class, balancer).openTag(\"title\", eu.stamp_project.reneri.instrumentation.StateObserver.<com.google.common.collect.ImmutableList<java.lang.String>>observeState(\"org.owasp.html.TagBalancingHtmlStreamRendererTest|testTagBalancing()|6\", com.google.common.collect.ImmutableList.class, com.google.common.collect.ImmutableList.<java.lang.String>of()));\n",
          "        eu.stamp_project.reneri.instrumentation.StateObserver.<org.owasp.html.TagBalancingHtmlStreamEventReceiver>observeState(\"org.owasp.html.TagBalancingHtmlStreamRendererTest|testTagBalancing()|7\", org.owasp.html.TagBalancingHtmlStreamEventReceiver.class, balancer).text(\"Hello, <<World>>!\");\n",
          "        // TITLE closed with case-sensitively different name.\n",
          "        eu.stamp_project.reneri.instrumentation.StateObserver.<org.owasp.html.TagBalancingHtmlStreamEventReceiver>observeState(\"org.owasp.html.TagBalancingHtmlStreamRendererTest|testTagBalancing()|8\", org.owasp.html.TagBalancingHtmlStreamEventReceiver.class, balancer).closeTag(\"TITLE\");\n"
        ],
        "line_number": 105,
        "start_line": 101,
        "end_line": 111
      },
      {
        "link": "https://github.com/haltona/FlinkTrainingAttemp2/blob/c81b831d5fe08d328251d91f4f255b1508a9feb4/flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/plan/metadata/FlinkRelMdCollation.java\n",
        "code": [
          "     * @return Relational expression's collations\n",
          "     * @see org.apache.calcite.rel.metadata.RelMetadataQuery#collations(RelNode)\n",
          "     */\n",
          "    public com.google.common.collect.ImmutableList<RelCollation> collations(\n",
          "            RelNode rel, RelMetadataQuery mq) {\n",
          "        return com.google.common.collect.ImmutableList.of();\n",
          "    }\n",
          "\n",
          "    // Helper methods\n",
          "\n",
          "    /** Helper method to determine a {@link org.apache.calcite.rel.core.TableScan}'s collation. */\n"
        ],
        "line_number": 226,
        "start_line": 222,
        "end_line": 232
      },
      {
        "link": "https://github.com/FrankSen/flink-flink/blob/391b3561f4f3178e9ce0319766018103e45cd79b/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/metadata/FlinkRelMdCollation.java\n",
        "code": [
          "     * @return Relational expression's collations\n",
          "     * @see org.apache.calcite.rel.metadata.RelMetadataQuery#collations(RelNode)\n",
          "     */\n",
          "    public com.google.common.collect.ImmutableList<RelCollation> collations(\n",
          "            RelNode rel, RelMetadataQuery mq) {\n",
          "        return com.google.common.collect.ImmutableList.of();\n",
          "    }\n",
          "\n",
          "    // Helper methods\n",
          "\n",
          "    /** Helper method to determine a {@link org.apache.calcite.rel.core.TableScan}'s collation. */\n"
        ],
        "line_number": 226,
        "start_line": 222,
        "end_line": 232
      },
      {
        "link": "https://github.com/easysoc/intellij-community/blob/1baa9b25b5c1f9b19b3aeee72d54efad7c5f7b96/plugins/lombok/testData/after/builder/Singular/Generic/Guava/SingularGuavaList.java\n",
        "code": [
          "      return this;\n",
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n",
          "    public SingularGuavaList<T> build() {\n",
          "      com.google.common.collect.ImmutableList<java.lang.Object> rawTypes = this.rawTypes == null ? com.google.common.collect.ImmutableList.<java.lang.Object>of() : this.rawTypes.build();\n",
          "      com.google.common.collect.ImmutableList<Integer> integers = this.integers == null ? com.google.common.collect.ImmutableList.<Integer>of() : this.integers.build();\n",
          "      com.google.common.collect.ImmutableList<T> generics = this.generics == null ? com.google.common.collect.ImmutableList.<T>of() : this.generics.build();\n",
          "      com.google.common.collect.ImmutableList<Number> extendsGenerics = this.extendsGenerics == null ? com.google.common.collect.ImmutableList.<Number>of() : this.extendsGenerics.build();\n",
          "      return new SingularGuavaList<T>(rawTypes, integers, generics, extendsGenerics);\n",
          "    }\n"
        ],
        "line_number": 119,
        "start_line": 115,
        "end_line": 125
      },
      {
        "link": "https://github.com/TAOTAO-WEB/brainstorm/blob/a7572e471f3405d2a2afdb3371c3e859ef63ea33/lombok-intellij-plugin-master/testData/after/builder/Singular/Generic/Guava/SingularGuavaList.java\n",
        "code": [
          "      return this;\n",
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n",
          "    public SingularGuavaList<T> build() {\n",
          "      com.google.common.collect.ImmutableList<java.lang.Object> rawTypes = this.rawTypes == null ? com.google.common.collect.ImmutableList.<java.lang.Object>of() : this.rawTypes.build();\n",
          "      com.google.common.collect.ImmutableList<Integer> integers = this.integers == null ? com.google.common.collect.ImmutableList.<Integer>of() : this.integers.build();\n",
          "      com.google.common.collect.ImmutableList<T> generics = this.generics == null ? com.google.common.collect.ImmutableList.<T>of() : this.generics.build();\n",
          "      com.google.common.collect.ImmutableList<Number> extendsGenerics = this.extendsGenerics == null ? com.google.common.collect.ImmutableList.<Number>of() : this.extendsGenerics.build();\n",
          "      return new SingularGuavaList<T>(rawTypes, integers, generics, extendsGenerics);\n",
          "    }\n"
        ],
        "line_number": 119,
        "start_line": 115,
        "end_line": 125
      },
      {
        "link": "https://github.com/TAOTAO-WEB/brainstorm/blob/a7572e471f3405d2a2afdb3371c3e859ef63ea33/lombok-intellij-plugin-master/testData/after/superbuilder/Singular/Generic/Guava/SingularGuavaList.java\n",
        "code": [
          "    }\n",
          "  }\n",
          "\n",
          "  @java.lang.SuppressWarnings(\"all\")\n",
          "  protected SingularGuavaList(final SingularGuavaListBuilder<T, ?, ?> b) {\n",
          "    com.google.common.collect.ImmutableList<java.lang.Object> rawTypes = b.rawTypes == null ? com.google.common.collect.ImmutableList.<java.lang.Object>of() : b.rawTypes.build();\n",
          "    this.rawTypes = rawTypes;\n",
          "    com.google.common.collect.ImmutableList<Integer> integers = b.integers == null ? com.google.common.collect.ImmutableList.<Integer>of() : b.integers.build();\n",
          "    this.integers = integers;\n",
          "    com.google.common.collect.ImmutableList<T> generics = b.generics == null ? com.google.common.collect.ImmutableList.<T>of() : b.generics.build();\n",
          "    this.generics = generics;\n"
        ],
        "line_number": 140,
        "start_line": 136,
        "end_line": 146
      },
      {
        "link": "https://github.com/easysoc/intellij-community/blob/1baa9b25b5c1f9b19b3aeee72d54efad7c5f7b96/plugins/lombok/testData/after/superbuilder/Singular/Generic/Guava/SingularGuavaList.java\n",
        "code": [
          "    }\n",
          "  }\n",
          "\n",
          "  @java.lang.SuppressWarnings(\"all\")\n",
          "  protected SingularGuavaList(final SingularGuavaListBuilder<T, ?, ?> b) {\n",
          "    com.google.common.collect.ImmutableList<java.lang.Object> rawTypes = b.rawTypes == null ? com.google.common.collect.ImmutableList.<java.lang.Object>of() : b.rawTypes.build();\n",
          "    this.rawTypes = rawTypes;\n",
          "    com.google.common.collect.ImmutableList<Integer> integers = b.integers == null ? com.google.common.collect.ImmutableList.<Integer>of() : b.integers.build();\n",
          "    this.integers = integers;\n",
          "    com.google.common.collect.ImmutableList<T> generics = b.generics == null ? com.google.common.collect.ImmutableList.<T>of() : b.generics.build();\n",
          "    this.generics = generics;\n"
        ],
        "line_number": 140,
        "start_line": 136,
        "end_line": 146
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/ImmutableListUtil.java\n",
        "code": [
          "*/ \n",
          "public static com.google.common.collect.ImmutableList<java.nio.file.Path> listFiles(java.nio.file.Path p0) throws java.io.IOException{\n",
          "\treturn com.google.common.io.MoreFiles.listFiles(p0);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.ImmutableList#of(E,E,E)}\n",
          "*@see com.google.common.collect.ImmutableList#of(E,E,E)\n",
          "*<code>public static <E> com.google.common.collect.ImmutableList<E> com.google.common.collect.ImmutableList.of(E,E,E)\n",
          "*of(E p0,E p1,E p2)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 105,
        "start_line": 101,
        "end_line": 111
      },
      {
        "link": "https://github.com/jh290948587/flink-master/blob/ffee07fed6bdb537726db97e39276c39d140a5ae/flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/metadata/FlinkRelMdCollation.java\n",
        "code": [
          "     * @return Relational expression's collations\n",
          "     * @see org.apache.calcite.rel.metadata.RelMetadataQuery#collations(RelNode)\n",
          "     */\n",
          "    public com.google.common.collect.ImmutableList<RelCollation> collations(\n",
          "            RelNode rel, RelMetadataQuery mq) {\n",
          "        return com.google.common.collect.ImmutableList.of();\n",
          "    }\n",
          "\n",
          "    // Helper methods\n",
          "\n",
          "    /** Helper method to determine a {@link org.apache.calcite.rel.core.TableScan}'s collation. */\n"
        ],
        "line_number": 226,
        "start_line": 222,
        "end_line": 232
      }
    ],
    "org.mockito.Mockito.when": [
      {
        "link": "https://github.com/daniakalomiris/k9-mail/blob/d7dabdc938d81abd47fc5f6dec0f4d9763aa57fd/app/ui/src/test/java/com/fsck/k9/activity/LabelPageTest.java\n",
        "code": [
          "\n",
          "    @Before\n",
          "    public void setUp() {\n",
          "        view = mock(View.class);\n",
          "        lp = mock(LabelPage.class);\n",
          "        when(view.getId()).thenReturn(123);\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void onClickLogicTest() {\n",
          "        Mockito.doReturn(\"\").when(lpl).getLabelString(lp);\n"
        ],
        "line_number": 30,
        "start_line": 26,
        "end_line": 36
      },
      {
        "link": "}https://github.com/srikanth-josyula/junit-mockito/blob/5fbb468d5de005757468029608e68d8245955481/src/main/java/com/sample/mockito/stubbing/ListTest.java\n",
        "code": [
          "\n",
          "\t@Test\n",
          "\tpublic void letsMockListSize() {\n",
          "\n",
          "\t\tList<Integer> list = mock(List.class);\n",
          "\t\twhen(list.size()).thenReturn(10);\n",
          "\t\tassertEquals(10, list.size());\n",
          "\t}\n",
          "\n",
          "\t@Test\n",
          "\tpublic void letsMockListSizeWithMultipleReturnValues() {\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/Kamilahsantos/GlobalSummitforJavaDevs2021-junit-clean-arch/blob/e0860eb07b896c2211601d027ad4c92b8cc87e30/junit/src/test/java/com/javaglobalsummit/junit/business/ListMockTest.java\n",
        "code": [
          "\n",
          "  List<String> mock = mock(List.class);\n",
          "\n",
          "  @Test\n",
          "  public void size_basic() {\n",
          "    when(mock.size()).thenReturn(10);\n",
          "    assertEquals(10, mock.size());\n",
          "  }\n",
          "\n",
          "  @Test\n",
          "  public void returnDifferentValues() {\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "https://github.com/UltraAOSP/frameworks_base/blob/c0fbdf45d7c9826533186751a03c27e500cac78e/packages/SystemUI/tests/src/com/android/systemui/chooser/ChooserHelperTest.java\n",
        "code": [
          "        final Intent intent = new Intent();\n",
          "        final Binder token = new Binder();\n",
          "        intent.putExtra(ActivityTaskManager.EXTRA_PERMISSION_TOKEN, token);\n",
          "\n",
          "        final Activity mockActivity = mock(Activity.class);\n",
          "        when(mockActivity.getIntent()).thenReturn(intent);\n",
          "\n",
          "        ChooserHelper.onChoose(mockActivity);\n",
          "        verify(mockActivity, times(1)).startActivityAsCaller(\n",
          "                any(), any(), eq(token), anyBoolean(), anyInt());\n",
          "    }\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      },
      {
        "link": "https://github.com/przodownikR1/commonBatch/blob/248e71efaf7d47bd9dfade2b52c17ef53a39156c/src/test/java/commonBatch/SlawekTest.java\n",
        "code": [
          "    @SuppressWarnings(\"boxing\")\n",
          "    @Test\n",
          "    public void test() {\n",
          "        @SuppressWarnings(\"unchecked\")\n",
          "        List<Integer> myMockedList = mock(ArrayList.class);\n",
          "        when(myMockedList.get(anyInt())).thenReturn(5);\n",
          "        when(myMockedList.isEmpty()).thenReturn(false);\n",
          "        log.info(\"{} \", myMockedList.get(1));\n",
          "        log.info(\"{} \", myMockedList.isEmpty());\n",
          "    }\n",
          "\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "https://github.com/yanricheng/xspring/blob/b835b502a835f3281e5bf22a49e10485ef9454bc/module/act-server/src/test/java/net/yanrc/xpring/activity/biz/manger/ActivityManagerTest.java\n",
        "code": [
          "    @InjectMocks\n",
          "    private ActivityManagerImpl activityManager;\n",
          "\n",
          "    @Test\n",
          "    public void removeTest() {\n",
          "        when(activityMapper.deleteByPrimaryKey(anyInt())).thenReturn(1);\n",
          "        Assertions.assertThat(activityManager.remove(-1)).isFalse();\n",
          "        Assertions.assertThat(activityManager.remove(0)).isFalse();\n",
          "        Assertions.assertThat(activityManager.remove(1)).isTrue();\n",
          "        Assertions.assertThat(activityManager.remove(10)).isTrue();\n",
          "        Assertions.assertThat(activityManager.remove(1000)).isTrue();\n"
        ],
        "line_number": 60,
        "start_line": 56,
        "end_line": 66
      },
      {
        "link": "https://github.com/Dragonwrath/AndroidDemo/blob/bb7ffb4229097e01d6b50b0427f9b2d0dfa2721a/android-mock/src/test/java/com/joke/mock/offical_mock/OfficalTest_Part_2.java\n",
        "code": [
          "     * }\n",
          "     */\n",
          "    @Test\n",
          "    public void step_11() {\n",
          "        final LinkedList mockedLinkList = mock(LinkedList.class);\n",
          "        when(mockedLinkList.remove(anyInt())).thenAnswer(new Answer<String>() {\n",
          "            @Override\n",
          "            public String answer(InvocationOnMock invocation) throws Throwable {\n",
          "                Object[] arguments = invocation.getArguments();\n",
          "                Object mock = invocation.getMock();\n",
          "                return \"called with arguments: \" + Arrays.toString(arguments);\n"
        ],
        "line_number": 44,
        "start_line": 40,
        "end_line": 50
      },
      {
        "link": "https://github.com/atrink1978/q_frameworks_base/blob/db1c840c8c4f234e6ffbf5c764c34be0be0fe589/packages/SystemUI/tests/src/com/android/systemui/chooser/ChooserHelperTest.java\n",
        "code": [
          "        final Intent intent = new Intent();\n",
          "        final Binder token = new Binder();\n",
          "        intent.putExtra(ActivityTaskManager.EXTRA_PERMISSION_TOKEN, token);\n",
          "\n",
          "        final Activity mockActivity = mock(Activity.class);\n",
          "        when(mockActivity.getIntent()).thenReturn(intent);\n",
          "\n",
          "        ChooserHelper.onChoose(mockActivity);\n",
          "        verify(mockActivity, times(1)).startActivityAsCaller(\n",
          "                any(), any(), eq(token), anyBoolean(), anyInt());\n",
          "    }\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      },
      {
        "link": "https://github.com/test-acc-vaccym/packages_apps_Settings/blob/16da813cbf315b357c21b4400e0e9bab67cb6e67/tests/robotests/src/com/android/settings/wifi/tether/WifiTetherSwitchBarControllerTest.java\n",
        "code": [
          "    public void setUp() {\n",
          "        MockitoAnnotations.initMocks(this);\n",
          "\n",
          "        mContext = spy(RuntimeEnvironment.application);\n",
          "        mSwitchBar = new SwitchBar(mContext);\n",
          "        when(mContext.getSystemService(Context.WIFI_SERVICE)).thenReturn(mWifiManager);\n",
          "        when(mContext.getSystemService(Context.CONNECTIVITY_SERVICE)).thenReturn(\n",
          "                mConnectivityManager);\n",
          "        when(mContext.getSystemService(Context.NETWORK_POLICY_SERVICE)).thenReturn(\n",
          "                mNetworkPolicyManager);\n",
          "\n"
        ],
        "line_number": 67,
        "start_line": 63,
        "end_line": 73
      },
      {
        "link": "https://github.com/infobip/mobile-messaging-sdk-huawei/blob/0f6d978fdc9a6aff7b2448a447ff9b0c4fbcf84a/infobip-mobile-messaging-huawei-sdk/src/androidTest/java/org/infobip/mobile/messaging/MobileMessagingConnectivityReceiverTest.java\n",
        "code": [
          "    @Before\n",
          "    public void setUp() throws Exception {\n",
          "        reset(mmcMock, contextMock, connectivityManagerMock);\n",
          "\n",
          "        //noinspection WrongConstant\n",
          "        when(mmcMock.getApplicationCode()).thenReturn(\"someApplicationCode\");\n",
          "        when(contextMock.getSystemService(Mockito.eq(Context.CONNECTIVITY_SERVICE))).thenReturn(connectivityManagerMock);\n",
          "        mobileMessagingConnectivityReceiver = new MobileMessagingConnectivityReceiver(mmcMock);\n",
          "    }\n",
          "\n",
          "    @Test\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/ArthouseEngineer/java-school-tasks-maven-solution/blob/2ec693184a5d2f44e48c2b8c51ea36a0a8eef419/java-school-lesson8-unit-testing/src/test/java/com/sbt/testing/examples/MockListTest.java\n",
        "code": [
          "        verify(mockedList, atLeast(3)).add(anyString());\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void testWhenReturnList() {\n",
          "        when(mockedList.get(anyInt())).thenReturn(\"Four\");\n",
          "        when(mockedList.get(5)).thenReturn(\"Five\");\n",
          "        doReturn(\"Six\").when(mockedList).get(100);\n",
          "\n",
          "        assertEquals(\"Four\", mockedList.get(500));\n",
          "        assertEquals(\"Five\", mockedList.get(5));\n"
        ],
        "line_number": 66,
        "start_line": 62,
        "end_line": 72
      },
      {
        "link": "https://github.com/Kamilahsantos/GlobalSummitforJavaDevs2021-junit-clean-arch/blob/e0860eb07b896c2211601d027ad4c92b8cc87e30/junit/src/test/java/com/javaglobalsummit/junit/business/ListMockTest.java\n",
        "code": [
          "\n",
          "  List<String> mock = mock(List.class);\n",
          "\n",
          "  @Test\n",
          "  public void size_basic() {\n",
          "    when(mock.size()).thenReturn(10);\n",
          "    assertEquals(10, mock.size());\n",
          "  }\n",
          "\n",
          "  @Test\n",
          "  public void returnDifferentValues() {\n"
        ],
        "line_number": 28,
        "start_line": 24,
        "end_line": 34
      },
      {
        "link": "https://github.com/Dragonwrath/AndroidDemo/blob/bb7ffb4229097e01d6b50b0427f9b2d0dfa2721a/android-mock/src/test/java/com/joke/mock/offical_mock/OfficalTest_Part_3.java\n",
        "code": [
          "\n",
          "    /*\n",
          "     * One-liner stubs (Since 1.9.0)\n",
          "     * \u00e6\u0088\u0091\u00e4\u00bb\u00ac\u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e5\u008f\u00af\u00e7\u0094\u00a8\u00e4\u00b8\u0080\u00e8\u00a1\u008c\u00e4\u00bb\u00a3\u00e7\u00a0\u0081\u00e6\u009d\u00a5\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e7\u009b\u00b8\u00e5\u00ba\u0094\u00e7\u009a\u0084mock\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e4\u00bf\u009d\u00e8\u00af\u0081\u00e7\u00ae\u0080\u00e6\u00b4\u0081\u00e6\u0080\u00a7\u00ef\u00bc\u008c\u00e4\u00be\u008b\u00e5\u00a6\u0082\u00e4\u00b8\u008b\u00e9\u009d\u00a2\u00e7\u009a\u0084\u00e4\u00be\u008b\u00e5\u00ad\u0090\n",
          "     *  public class CarTest {\n",
          "     *   Car boringStubbedCar = when(mock(Car.class).shiftGear()).thenThrow(EngineNotStarted.class).getMock();\n",
          "     *      @Test public void should... {}\n",
          "     *  }\n",
          "     */\n",
          "    /**\n",
          "     * {@see Mockito\n"
        ],
        "line_number": 109,
        "start_line": 105,
        "end_line": 115
      },
      {
        "link": "https://github.com/linhou/AndroidTest/blob/c3126a3f0e081b9bc59f23c69b725171525b4249/app/src/test/java/com/example/linhou/testdome/unitcase/MockTestUnit.java\n",
        "code": [
          "\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void  getListSizeTest() throws Exception{\n",
          "       when(list.size()).thenReturn(10);\n",
          "//        System.out.println(listMockUnit.getListSize());\n",
          "        assertEquals(10,listMockUnit.getListSize());\n",
          "    }\n",
          "\n",
          "    @Test\n"
        ],
        "line_number": 62,
        "start_line": 58,
        "end_line": 68
      },
      {
        "link": "https://github.com/Dragonwrath/AndroidDemo/blob/bb7ffb4229097e01d6b50b0427f9b2d0dfa2721a/android-mock/src/test/java/com/joke/mock/offical_mock/OfficalTest_Part_1.java\n",
        "code": [
          "     * }\n",
          "     */\n",
          "    @Test\n",
          "    public void step_2() {\n",
          "        LinkedList mockedLinkList = mock(LinkedList.class);\n",
          "        when(mockedLinkList.get(0)).thenReturn(\"first value\");\n",
          "        when(mockedLinkList.get(1)).thenThrow(new RuntimeException());\n",
          "        //following prints \"first\"\n",
          "        System.out.println(mockedLinkList.get(0));\n",
          "        //following throws runtime exception\n",
          "//        System.out.println(mockedLinkList.get(1));\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      },
      {
        "link": "https://github.com/Ankp/frameworks_base/blob/5e08c991a51028ccb70efc81348d390fed79ef31/packages/SystemUI/tests/src/com/android/systemui/chooser/ChooserHelperTest.java\n",
        "code": [
          "        final Intent intent = new Intent();\n",
          "        final Binder token = new Binder();\n",
          "        intent.putExtra(ActivityTaskManager.EXTRA_PERMISSION_TOKEN, token);\n",
          "\n",
          "        final Activity mockActivity = mock(Activity.class);\n",
          "        when(mockActivity.getIntent()).thenReturn(intent);\n",
          "\n",
          "        ChooserHelper.onChoose(mockActivity);\n",
          "        verify(mockActivity, times(1)).startActivityAsCaller(\n",
          "                any(), any(), eq(token), anyBoolean(), anyInt());\n",
          "    }\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      },
      {
        "link": "https://github.com/linhou/AndroidTest/blob/c3126a3f0e081b9bc59f23c69b725171525b4249/app/src/test/java/com/example/linhou/testdome/unitcase/MockTestUnit.java\n",
        "code": [
          "\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void  getListSizeTest() throws Exception{\n",
          "       when(list.size()).thenReturn(10);\n",
          "//        System.out.println(listMockUnit.getListSize());\n",
          "        assertEquals(10,listMockUnit.getListSize());\n",
          "    }\n",
          "\n",
          "    @Test\n"
        ],
        "line_number": 62,
        "start_line": 58,
        "end_line": 68
      },
      {
        "link": "https://github.com/atrink1978/q_frameworks_base/blob/db1c840c8c4f234e6ffbf5c764c34be0be0fe589/packages/SystemUI/tests/src/com/android/systemui/chooser/ChooserHelperTest.java\n",
        "code": [
          "        final Intent intent = new Intent();\n",
          "        final Binder token = new Binder();\n",
          "        intent.putExtra(ActivityTaskManager.EXTRA_PERMISSION_TOKEN, token);\n",
          "\n",
          "        final Activity mockActivity = mock(Activity.class);\n",
          "        when(mockActivity.getIntent()).thenReturn(intent);\n",
          "\n",
          "        ChooserHelper.onChoose(mockActivity);\n",
          "        verify(mockActivity, times(1)).startActivityAsCaller(\n",
          "                any(), any(), eq(token), anyBoolean(), anyInt());\n",
          "    }\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      },
      {
        "link": "https://github.com/kadrivaripuu/JavaTraining/blob/dc91bac386e6fb2f0d0ecf0019f610af7e9f32f9/Demo/Spring/Spring-000-MASTER/Spring-300-Advanced/Spring-370-UnitTests/src/test/java/com/knits/spring/utest/Test03MockitoAnnotations.java\n",
        "code": [
          "\t@Test\n",
          "\tpublic void testStubbing(){\n",
          "\t\t\t\t\n",
          "\t\t\n",
          "\t\t//setup mock behavior\n",
          "\t\twhen(aMockedListOfString.indexOf(\"A Test\")).thenReturn(-1);\n",
          "\t\t\n",
          "\t\t//real call on the mock\n",
          "\t\taMockedListOfString.indexOf(\"A Test\");\n",
          "\t\t\n",
          "\t\t\n"
        ],
        "line_number": 44,
        "start_line": 40,
        "end_line": 50
      },
      {
        "link": "https://github.com/daniakalomiris/k9-mail/blob/d7dabdc938d81abd47fc5f6dec0f4d9763aa57fd/app/ui/src/test/java/com/fsck/k9/activity/LabelPageTest.java\n",
        "code": [
          "\n",
          "    @Before\n",
          "    public void setUp() {\n",
          "        view = mock(View.class);\n",
          "        lp = mock(LabelPage.class);\n",
          "        when(view.getId()).thenReturn(123);\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void onClickLogicTest() {\n",
          "        Mockito.doReturn(\"\").when(lpl).getLabelString(lp);\n"
        ],
        "line_number": 30,
        "start_line": 26,
        "end_line": 36
      }
    ],
    "org.mockito.stubbing.Stubber.when": [
      {
        "link": "https://github.com/xxnjdg/elasticsearch7.6.1/blob/703ed4ea9f5c4dc4a5dd10ec5d6f929369a54b15/x-pack/plugin/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/exporter/http/AsyncHttpResourceHelper.java\n",
        "code": [
          "\n",
          "    static void whenPerformRequestAsyncWith(final RestClient client, final Response response) {\n",
          "        doAnswer(invocation -> {\n",
          "            ((ResponseListener)invocation.getArguments()[1]).onSuccess(response);\n",
          "            return null;\n",
          "        }).when(client).performRequestAsync(any(Request.class), any(ResponseListener.class));\n",
          "    }\n",
          "\n",
          "    static void whenPerformRequestAsyncWith(final RestClient client, final Matcher<Request> request, final Response response) {\n",
          "        doAnswer(invocation -> {\n",
          "            ((ResponseListener)invocation.getArguments()[1]).onSuccess(response);\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 40
      },
      {
        "link": "https://github.com/bugsbunnyshah/AIPlatform/blob/8f174c63a9ba7631a4b0ab2e7c8e8e93c42aa85a/extensions/panache/panache-mock/src/main/java/io/quarkus/panache/mock/PanacheStubber.java\n",
        "code": [
          "     * Example:\n",
          "     * \n",
          "     * <pre class=\"code\">\n",
          "     * <code class=\"java\">\n",
          "     *   doThrow(new RuntimeException())\n",
          "     *   .when(mockedList).clear();\n",
          "     *\n",
          "     *   //following throws RuntimeException:\n",
          "     *   mockedList.clear();\n",
          "     * </code>\n",
          "     * </pre>\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      },
      {
        "link": "https://github.com/tomdev2008/leopard/blob/304f002ebfc89a0bda26ebe33ce6959f9ead8d2f/leopard-test/src/main/java/io/leopard/test/mock/proxy/MockMethodUtil.java\n",
        "code": [
          "public class MockMethodUtil {\r\n",
          "\tpublic static <T> void invokeMethod(Stubber stubber, T mock, String methodName) {\r\n",
          "\t\tMethod[] methods = mock.getClass().getMethods();\r\n",
          "\t\tfor (Method method : methods) {\r\n",
          "\t\t\tif (method.getName().equals(methodName)) {\r\n",
          "\t\t\t\tT proxy = stubber.when(mock);\r\n",
          "\t\t\t\t// System.out.println(\"method:\" + method.toGenericString());\r\n",
          "\t\t\t\tObject[] args = toAnyArgs(method.getParameterTypes());\r\n",
          "\t\t\t\ttry {\r\n",
          "\t\t\t\t\tmethod.invoke(proxy, args);\r\n",
          "\t\t\t\t\t// System.out.println(\"method:\" + method.toGenericString());\r\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/njuancuk/remake4/blob/19be066e2efada2bc1c2f21a836e8c9e48d189d0/x-pack/plugin/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/exporter/http/AsyncHttpResourceHelper.java\n",
        "code": [
          "\n",
          "    static void whenPerformRequestAsyncWith(final RestClient client, final Response response) {\n",
          "        doAnswer(invocation -> {\n",
          "            ((ResponseListener)invocation.getArguments()[1]).onSuccess(response);\n",
          "            return null;\n",
          "        }).when(client).performRequestAsync(any(Request.class), any(ResponseListener.class));\n",
          "    }\n",
          "\n",
          "    static void whenPerformRequestAsyncWith(final RestClient client, final Matcher<Request> request, final Response response) {\n",
          "        doAnswer(invocation -> {\n",
          "            ((ResponseListener)invocation.getArguments()[1]).onSuccess(response);\n"
        ],
        "line_number": 45,
        "start_line": 41,
        "end_line": 51
      },
      {
        "link": "https://github.com/chd830/ElasticSearch/blob/d9c94ad9e778099e42ec6f83f7c8c6ab0b2b9c58/x-pack/plugin/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/exporter/http/AsyncHttpResourceHelper.java\n",
        "code": [
          "\n",
          "    static void whenPerformRequestAsyncWith(final RestClient client, final Response response) {\n",
          "        doAnswer(invocation -> {\n",
          "            ((ResponseListener)invocation.getArguments()[1]).onSuccess(response);\n",
          "            return null;\n",
          "        }).when(client).performRequestAsync(any(Request.class), any(ResponseListener.class));\n",
          "    }\n",
          "\n",
          "    static void whenPerformRequestAsyncWith(final RestClient client, final Matcher<Request> request, final Response response) {\n",
          "        doAnswer(invocation -> {\n",
          "            ((ResponseListener)invocation.getArguments()[1]).onSuccess(response);\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 40
      },
      {
        "link": "https://github.com/leitstand/leitstand-jobs/blob/fd10f88c061afba49c8fc84098d60a9e6be0149b/leitstand-jobs-model/src/test/java/io/leitstand/jobs/model/JobTaskEventLoopTest.java\n",
        "code": [
          "    }\n",
          "    \n",
          "    @Test\n",
          "    public void pause_loop_when_no_tasks_are_eligible_for_execution() throws InterruptedException {\n",
          "        workers.set(1);\n",
          "        when(scheduler.fetchExecutableTasks(1)).thenReturn(emptyList());\n",
          "        \n",
          "        loop.scheduleTasks();\n",
          "        verify(pause).sleep();\n",
          "        verify(pause,never()).reset();\n",
          "    }\n"
        ],
        "line_number": 75,
        "start_line": 71,
        "end_line": 81
      },
      {
        "link": "https://github.com/leitstand/leitstand-jobs/blob/fd10f88c061afba49c8fc84098d60a9e6be0149b/leitstand-jobs-model/src/test/java/io/leitstand/jobs/model/JobTaskEventLoopTest.java\n",
        "code": [
          "    }\n",
          "    \n",
          "    @Test\n",
          "    public void pause_loop_when_no_tasks_are_eligible_for_execution() throws InterruptedException {\n",
          "        workers.set(1);\n",
          "        when(scheduler.fetchExecutableTasks(1)).thenReturn(emptyList());\n",
          "        \n",
          "        loop.scheduleTasks();\n",
          "        verify(pause).sleep();\n",
          "        verify(pause,never()).reset();\n",
          "    }\n"
        ],
        "line_number": 75,
        "start_line": 71,
        "end_line": 81
      },
      {
        "link": "https://github.com/quarkusio/quarkus/blob/2cbd177416f92b9f45abb34b6f01acb8cb0f4eb5/extensions/panache/panache-mock/src/main/java/io/quarkus/panache/mock/PanacheStubber.java\n",
        "code": [
          "     * Example:\n",
          "     * \n",
          "     * <pre class=\"code\">\n",
          "     * <code class=\"java\">\n",
          "     *   doThrow(new RuntimeException())\n",
          "     *   .when(mockedList).clear();\n",
          "     *\n",
          "     *   //following throws RuntimeException:\n",
          "     *   mockedList.clear();\n",
          "     * </code>\n",
          "     * </pre>\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      },
      {
        "link": "https://github.com/lkulig/java-retry-playground/blob/827084eba1f267a5c11fa8c4c85d3253b75ddbad/src/test/java/com/lkulig/retry/AbstractUnitTest.java\n",
        "code": [
          "        Stubber stubber = doThrow(new IllegalArgumentException());\n",
          "        do {\n",
          "            stubber = stubber.doThrow(new IllegalArgumentException());\n",
          "            i++;\n",
          "        } while (i < numberOfThrows);\n",
          "        stubber.doCallRealMethod().when(fabulousBusinessService).superbBusinessOperation();\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 19,
        "start_line": 15,
        "end_line": 22
      },
      {
        "link": "https://github.com/lkulig/java-retry-playground/blob/827084eba1f267a5c11fa8c4c85d3253b75ddbad/src/test/java/com/lkulig/retry/AbstractUnitTest.java\n",
        "code": [
          "        Stubber stubber = doThrow(new IllegalArgumentException());\n",
          "        do {\n",
          "            stubber = stubber.doThrow(new IllegalArgumentException());\n",
          "            i++;\n",
          "        } while (i < numberOfThrows);\n",
          "        stubber.doCallRealMethod().when(fabulousBusinessService).superbBusinessOperation();\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 19,
        "start_line": 15,
        "end_line": 22
      },
      {
        "link": "https://github.com/meetaseth/quarkus/blob/82793e9bd44130aa86e9d9e2a1342d7950a52435/extensions/panache/panache-mock/src/main/java/io/quarkus/panache/mock/PanacheStubber.java\n",
        "code": [
          "     * Example:\n",
          "     * \n",
          "     * <pre class=\"code\">\n",
          "     * <code class=\"java\">\n",
          "     *   doThrow(new RuntimeException())\n",
          "     *   .when(mockedList).clear();\n",
          "     *\n",
          "     *   //following throws RuntimeException:\n",
          "     *   mockedList.clear();\n",
          "     * </code>\n",
          "     * </pre>\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      },
      {
        "link": "https://github.com/quarkusio/quarkus/blob/2cbd177416f92b9f45abb34b6f01acb8cb0f4eb5/extensions/panache/panache-mock/src/main/java/io/quarkus/panache/mock/PanacheStubber.java\n",
        "code": [
          "     * Example:\n",
          "     * \n",
          "     * <pre class=\"code\">\n",
          "     * <code class=\"java\">\n",
          "     *   doThrow(new RuntimeException())\n",
          "     *   .when(mockedList).clear();\n",
          "     *\n",
          "     *   //following throws RuntimeException:\n",
          "     *   mockedList.clear();\n",
          "     * </code>\n",
          "     * </pre>\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      },
      {
        "link": "https://github.com/Helloes/ES7.6.0/blob/433f3baad095aff11d87bf9aea5911271d52d5aa/x-pack/plugin/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/exporter/http/AsyncHttpResourceHelper.java\n",
        "code": [
          "\n",
          "    static void whenPerformRequestAsyncWith(final RestClient client, final Response response) {\n",
          "        doAnswer(invocation -> {\n",
          "            ((ResponseListener)invocation.getArguments()[1]).onSuccess(response);\n",
          "            return null;\n",
          "        }).when(client).performRequestAsync(any(Request.class), any(ResponseListener.class));\n",
          "    }\n",
          "\n",
          "    static void whenPerformRequestAsyncWith(final RestClient client, final Matcher<Request> request, final Response response) {\n",
          "        doAnswer(invocation -> {\n",
          "            ((ResponseListener)invocation.getArguments()[1]).onSuccess(response);\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 40
      },
      {
        "link": "https://github.com/meetaseth/quarkus/blob/82793e9bd44130aa86e9d9e2a1342d7950a52435/extensions/panache/panache-mock/src/main/java/io/quarkus/panache/mock/PanacheStubber.java\n",
        "code": [
          "     * Example:\n",
          "     * \n",
          "     * <pre class=\"code\">\n",
          "     * <code class=\"java\">\n",
          "     *   doThrow(new RuntimeException())\n",
          "     *   .when(mockedList).clear();\n",
          "     *\n",
          "     *   //following throws RuntimeException:\n",
          "     *   mockedList.clear();\n",
          "     * </code>\n",
          "     * </pre>\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      },
      {
        "link": "https://github.com/bugsbunnyshah/AIPlatform/blob/8f174c63a9ba7631a4b0ab2e7c8e8e93c42aa85a/extensions/panache/panache-mock/src/main/java/io/quarkus/panache/mock/PanacheStubber.java\n",
        "code": [
          "     * Example:\n",
          "     * \n",
          "     * <pre class=\"code\">\n",
          "     * <code class=\"java\">\n",
          "     *   doThrow(new RuntimeException())\n",
          "     *   .when(mockedList).clear();\n",
          "     *\n",
          "     *   //following throws RuntimeException:\n",
          "     *   mockedList.clear();\n",
          "     * </code>\n",
          "     * </pre>\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      }
    ],
    "com.google.common.collect.Collections2.filter": [
      {
        "link": "https://github.com/CodeInside/siu/blob/788d67c0181a10bf34a52417243ec2d4a0603619/web-client/src/main/java/ru/codeinside/gses/activiti/behavior/TaskFields.java\n",
        "code": [
          "    if (declarations.size() > 1) {\n",
          "      throw new IllegalArgumentException(\n",
          "        \"\u00d0\u0094\u00d1\u0083\u00d0\u00b1\u00d0\u00bb\u00d0\u00b8\u00d1\u0080\u00d0\u00be\u00d0\u00b2\u00d0\u00b0\u00d0\u00bd\u00d0\u00b8\u00d0\u00b5 \u00d0\u00bf\u00d0\u00be\u00d0\u00bb\u00d1\u008f {\" + Joiner.on(\" | \").join(transform(declarations, new Names())) + \"}\"\n",
          "      );\n",
          "    }\n",
          "    Collection<Expression> expressions = filter(transform(declarations, new Values()), notNull());\n",
          "    Expression expression;\n",
          "    if (expressions.isEmpty()) {\n",
          "      if (type.getUsage() == Usage.REQUIRED) {\n",
          "        throw new IllegalArgumentException(\"\u00d0\u009f\u00d1\u0080\u00d0\u00be\u00d0\u00bf\u00d1\u0083\u00d1\u0089\u00d0\u00b5\u00d0\u00bd\u00d0\u00be \u00d0\u00be\u00d0\u00b1\u00d1\u008f\u00d0\u00b7\u00d0\u00b0\u00d1\u0082\u00d0\u00b5\u00d0\u00bb\u00d1\u008c\u00d0\u00bd\u00d0\u00be\u00d0\u00b5 \u00d0\u00bf\u00d0\u00be\u00d0\u00bb\u00d0\u00b5 {\" + type.getName() + \"}, \u00d0\u00b0\u00d0\u00bb\u00d1\u008c\u00d1\u0082\u00d0\u00b5\u00d1\u0080\u00d0\u00bd\u00d0\u00b0\u00d1\u0082\u00d0\u00b8\u00d0\u00b2\u00d0\u00bd\u00d1\u008b\u00d0\u00b5 \u00d0\u00bd\u00d0\u00b0\u00d0\u00b7\u00d0\u00b2\u00d0\u00b0\u00d0\u00bd\u00d0\u00b8\u00d1\u008f {\" + Joiner.on(\" | \").join(aliases) + \"}\");\n",
          "      }\n"
        ],
        "line_number": 70,
        "start_line": 66,
        "end_line": 76
      },
      {
        "link": "https://github.com/caelum/mamute/blob/bc0a94d188557c0ff65dd0ecf5b74a6dbf76056b/src/main/java/org/mamute/util/TagsSplitter.java\n",
        "code": [
          "\t}\n",
          "\t\n",
          "\tpublic List<String> splitTags(String tagNames) {\n",
          "\t\tList<String> tags = tagNames == null ? new ArrayList<String>() : asList(tagNames.split(regex));\n",
          "\t\tCollection<String> trimmed = transform(tags, trim());\n",
          "\t\tCollection<String> notEmpty = filter(trimmed, filterEmpty());\n",
          "\t\treturn new ArrayList<>(notEmpty);\n",
          "\t}\n",
          "\n",
          "\tprivate Predicate<String> filterEmpty() {\n",
          "\t\treturn new Predicate<String>() {\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "}https://github.com/tfnico/guava-examples/blob/d1a08d6e3442ac986ac511b905cb6a137d327e8c/src/test/java/com/tfnico/examples/guava/NewStuffInR08Test.java\n",
        "code": [
          "\tpublic void filterVowelsInSomeChars() {\n",
          "\t\tCharMatcher vowelMatcher = CharMatcher.anyOf(\"aeiouy\");\n",
          "\t\tassertTrue(vowelMatcher.matches('a'));\n",
          "\t\t\n",
          "\t\tImmutableList<Character> someChars = ImmutableList.of('a','b','c','d','e');\n",
          "\t\tCollection<Character> filter = filter(someChars, vowelMatcher);\n",
          "\t\t\n",
          "\t\tImmutableList<Character> result = ImmutableList.of('a','e');\n",
          "\t\tassertThat(charArray(filter), is(charArray(result)));\n",
          "\t}\n",
          "\t\n"
        ],
        "line_number": 37,
        "start_line": 33,
        "end_line": 43
      },
      {
        "link": "https://github.com/rags/playground/blob/29284721b47b542d73fbb951101fd73519803582/Java/VehicleSurvey/src/main/java/vehiclesurvey/query/QueryProcessor.java\n",
        "code": [
          "                public QueryProcessor apply(T input) {\n",
          "                    return ((QueryProcessor) input).where(predicate);\n",
          "                }\n",
          "            });\n",
          "        }\n",
          "        return new QueryProcessor<T>(filter(items, (Predicate<? super T>) predicate), scope);\n",
          "    }\n",
          "\n",
          "    public <K> QueryProcessor groupBy(final Predicates<K> predicates) {\n",
          "        if (isComposite()) { //composition. i.e, groupBy of groups\n",
          "            return handleComposite(new Function<T, QueryProcessor>() {\n"
        ],
        "line_number": 78,
        "start_line": 74,
        "end_line": 84
      },
      {
        "link": "}https://github.com/mateuszszulc/IntelliDict/blob/4c43e8d9edfa37225d050820723c32605ad78770/src-guava/test/com/tfnico/examples/guava/NewStuffInR08Test.java\n",
        "code": [
          "\tpublic void filterVowelsInSomeChars() {\n",
          "\t\tCharMatcher vowelMatcher = CharMatcher.anyOf(\"aeiouy\");\n",
          "\t\tassertTrue(vowelMatcher.matches('a'));\n",
          "\t\t\n",
          "\t\tImmutableList<Character> someChars = ImmutableList.of('a','b','c','d','e');\n",
          "\t\tCollection<Character> filter = filter(someChars, vowelMatcher);\n",
          "\t\t\n",
          "\t\tImmutableList<Character> result = ImmutableList.of('a','e');\n",
          "\t\tassertThat(charArray(filter), is(charArray(result)));\n",
          "\t}\n",
          "\t\n"
        ],
        "line_number": 33,
        "start_line": 29,
        "end_line": 39
      },
      {
        "link": "}https://github.com/cyidea/testguava/blob/f51ac5a434edc0915d7063bc36970611911eab5e/src/test/java/com/cyinc/examples/guava/NewStuffInR08Test.java\n",
        "code": [
          "\tpublic void filterVowelsInSomeChars() {\n",
          "\t\tCharMatcher vowelMatcher = CharMatcher.anyOf(\"aeiouy\");\n",
          "\t\tassertTrue(vowelMatcher.matches('a'));\n",
          "\t\t\n",
          "\t\tImmutableList<Character> someChars = ImmutableList.of('a','b','c','d','e');\n",
          "\t\tCollection<Character> filter = filter(someChars, vowelMatcher);\n",
          "\t\t\n",
          "\t\tImmutableList<Character> result = ImmutableList.of('a','e');\n",
          "\t\tassertThat(charArray(filter), is(charArray(result)));\n",
          "\t}\n",
          "\t\n"
        ],
        "line_number": 37,
        "start_line": 33,
        "end_line": 43
      },
      {
        "link": "}https://github.com/joansmith1/anathema/blob/9ea0e4621b01b440f129e8527969e11d9a1b180e/Platform/src/main/java/net/sf/anathema/framework/environment/dependencies/ReflectionObjectFactory.java\n",
        "code": [
          "    filteredClasses = filterAbstractClasses(filteredClasses);\n",
          "    return filteredClasses;\n",
          "  }\n",
          "\n",
          "  private <T> Collection<Class<? extends T>> filterBlackListedClasses(Set<Class<? extends T>> classes) {\n",
          "    return filter(classes, input -> !input.isAnnotationPresent(DoNotInstantiateAutomatically.class));\n",
          "  }\n",
          "\n",
          "  private <T> Collection<Class<? extends T>> filterAbstractClasses(Collection<Class<? extends T>> classes) {\n",
          "    return filter(classes, input -> !Modifier.isAbstract(input.getModifiers()));\n",
          "  }\n"
        ],
        "line_number": 60,
        "start_line": 56,
        "end_line": 66
      },
      {
        "link": "https://github.com/OpenTreeMap/otm-android/blob/c9a5bdca3f0a46039ff97f9302c9c869368c8901/OpenTreeMap/src/main/java/org/azavea/otm/fields/MultiChoiceField.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @Override\n",
          "    public String formatValue(Object valuesList) {\n",
          "        List<String> values = jsonStringArrayToList((JSONArray) valuesList);\n",
          "        Collection<String> labels = filter(transform(values, value -> {\n",
          "            Choice choice = choiceMap.get(value);\n",
          "            return choice != null ? choice.getText() : null;\n",
          "        }), value -> value != null);\n",
          "\n",
          "        if (!labels.isEmpty()) {\n"
        ],
        "line_number": 27,
        "start_line": 23,
        "end_line": 33
      },
      {
        "link": "}https://github.com/joansmith/anathema/blob/9ea0e4621b01b440f129e8527969e11d9a1b180e/Platform/src/main/java/net/sf/anathema/framework/environment/dependencies/ReflectionObjectFactory.java\n",
        "code": [
          "    filteredClasses = filterAbstractClasses(filteredClasses);\n",
          "    return filteredClasses;\n",
          "  }\n",
          "\n",
          "  private <T> Collection<Class<? extends T>> filterBlackListedClasses(Set<Class<? extends T>> classes) {\n",
          "    return filter(classes, input -> !input.isAnnotationPresent(DoNotInstantiateAutomatically.class));\n",
          "  }\n",
          "\n",
          "  private <T> Collection<Class<? extends T>> filterAbstractClasses(Collection<Class<? extends T>> classes) {\n",
          "    return filter(classes, input -> !Modifier.isAbstract(input.getModifiers()));\n",
          "  }\n"
        ],
        "line_number": 60,
        "start_line": 56,
        "end_line": 66
      },
      {
        "link": "https://github.com/Lazy-Hero/Celestial-PASTA-NO-ZKM-SB/blob/3a504090268268ecb8f72994678b3e5314b3e3c2/Celestial-%D0%9A%D1%83%D0%BF%D0%B8%20%D0%BB%D1%83%D1%87%D1%88%D0%B5%20%D0%B7%D0%BC/net/minecraft/ae/e.java\n",
        "code": [
          "    public static e a(String string) {\n",
          "        return e.a(string, (Predicate<aA>)Predicates.alwaysTrue());\n",
          "    }\n",
          "\n",
          "    public static e a(String string, Predicate<aA> predicate) {\n",
          "        return e.a(string, Collections2.filter((Collection)Lists.newArrayList((Object[])aA.values()), predicate));\n",
          "    }\n",
          "\n",
          "    protected e(String string, Collection<aA> collection) {\n",
          "        super(string, aA.class, collection);\n",
          "    }\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      }
    ],
    "com.google.common.collect.Sets.filter": [
      {
        "link": "https://github.com/Manouchehri/bindiff/blob/2a31859b4638404cdc915d7ed6be19937d762743/src_cfr/com/google/common/collect/Sets.java\n",
        "code": [
          "        Preconditions.checkNotNull(set2, \"set2\");\n",
          "        return new Sets$4(set, set2);\n",
          "    }\n",
          "\n",
          "    @CheckReturnValue\n",
          "    public static Set filter(Set set, Predicate predicate) {\n",
          "        if (set instanceof SortedSet) {\n",
          "            return Sets.filter((SortedSet)set, predicate);\n",
          "        }\n",
          "        if (!(set instanceof Sets$FilteredSet)) return new Sets$FilteredSet((Set)Preconditions.checkNotNull(set), (Predicate)Preconditions.checkNotNull(predicate));\n",
          "        Sets$FilteredSet sets$FilteredSet = (Sets$FilteredSet)set;\n"
        ],
        "line_number": 303,
        "start_line": 299,
        "end_line": 309
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/collect/Sets.java\n",
        "code": [
          "                return !set.contains(obj);\n",
          "            }\n",
          "\n",
          "            @Override // java.util.Collection\n",
          "            public Stream<E> stream() {\n",
          "                return Stream.concat(set.stream(), set2.stream().filter(new Predicate(set) {\n",
          "                    /* class com.google.common.collect.$$Lambda$Sets$1$SgG8Qe8hxyMq4JICRRsW2TYosLE */\n",
          "                    private final /* synthetic */ Set f$0;\n",
          "\n",
          "                    {\n",
          "                        this.f$0 = r1;\n"
        ],
        "line_number": 372,
        "start_line": 368,
        "end_line": 378
      },
      {
        "link": "https://github.com/sgo/guava-learning/blob/f321443b35cabd27f89b01449c9b28a9eb692de2/src/test/java/guava/SetsProvides.java\n",
        "code": [
          "    public void symmetricDifference() {\n",
          "        assertEquals(newHashSet(2, 3), Sets.symmetricDifference(newHashSet(1, 2), newHashSet(1, 3)));\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void filter() {\n",
          "        assertEquals(newHashSet(2, 4), Sets.filter(newHashSet(1, 2, 3, 4), new DivisibleByTwoPredicate()));\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void intersection() {\n"
        ],
        "line_number": 48,
        "start_line": 44,
        "end_line": 54
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/collect/Sets.java\n",
        "code": [
          "                return set2.contains(obj) ^ set.contains(obj);\n",
          "            }\n",
          "        };\n",
          "    }\n",
          "\n",
          "    public static <E> Set<E> filter(Set<E> set, Predicate<? super E> predicate) {\n",
          "        if (set instanceof SortedSet) {\n",
          "            return filter((SortedSet) set, (Predicate) predicate);\n",
          "        }\n",
          "        if (!(set instanceof FilteredSet)) {\n",
          "            return new FilteredSet((Set) Preconditions.checkNotNull(set), (Predicate) Preconditions.checkNotNull(predicate));\n"
        ],
        "line_number": 477,
        "start_line": 473,
        "end_line": 483
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/SetUtil.java\n",
        "code": [
          "*/ \n",
          "public static <E> java.util.Set<E> emptySet(){\n",
          "\treturn org.apache.commons.collections4.SetUtils.emptySet();\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.Sets#filter(java.util.Set<E>,com.google.common.base.Predicate<? super E>)}\n",
          "*@see com.google.common.collect.Sets#filter(java.util.Set<E>,com.google.common.base.Predicate<? super E>)\n",
          "*<code>public static <E> java.util.Set<E> com.google.common.collect.Sets.filter(java.util.Set<E>,com.google.common.base.Predicate<? super E>)\n",
          "*filter(java.util.Set<E> p0,com.google.common.base.Predicate<? super E> p1)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 209,
        "start_line": 205,
        "end_line": 215
      },
      {
        "link": "https://github.com/Manouchehri/bindiff/blob/2a31859b4638404cdc915d7ed6be19937d762743/src_fernflower/com/google/common/collect/Sets.java\n",
        "code": [
          "      Preconditions.checkNotNull(var1, \"set2\");\n",
          "      return new Sets$4(var0, var1);\n",
          "   }\n",
          "\n",
          "   @CheckReturnValue\n",
          "   public static Set filter(Set var0, Predicate var1) {\n",
          "      if(var0 instanceof SortedSet) {\n",
          "         return filter((SortedSet)var0, var1);\n",
          "      } else if(var0 instanceof Sets$FilteredSet) {\n",
          "         Sets$FilteredSet var2 = (Sets$FilteredSet)var0;\n",
          "         Predicate var3 = Predicates.and(var2.predicate, var1);\n"
        ],
        "line_number": 285,
        "start_line": 281,
        "end_line": 291
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/collect/Sets.java\n",
        "code": [
          "                return set2.contains(obj) ^ set.contains(obj);\n",
          "            }\n",
          "        };\n",
          "    }\n",
          "\n",
          "    public static <E> Set<E> filter(Set<E> set, Predicate<? super E> predicate) {\n",
          "        if (set instanceof SortedSet) {\n",
          "            return filter((SortedSet) set, (Predicate) predicate);\n",
          "        }\n",
          "        if (!(set instanceof FilteredSet)) {\n",
          "            return new FilteredSet((Set) Preconditions.checkNotNull(set), (Predicate) Preconditions.checkNotNull(predicate));\n"
        ],
        "line_number": 477,
        "start_line": 473,
        "end_line": 483
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/collect/Sets.java\n",
        "code": [
          "                return set1.contains(element) ^ set2.contains(element);\n",
          "            }\n",
          "        };\n",
          "    }\n",
          "\n",
          "    public static <E> Set<E> filter(Set<E> unfiltered, Predicate<? super E> predicate) {\n",
          "        if (unfiltered instanceof SortedSet) {\n",
          "            return filter((SortedSet) unfiltered, (Predicate) predicate);\n",
          "        }\n",
          "        if (!(unfiltered instanceof FilteredSet)) {\n",
          "            return new FilteredSet((Set) Preconditions.checkNotNull(unfiltered), (Predicate) Preconditions.checkNotNull(predicate));\n"
        ],
        "line_number": 478,
        "start_line": 474,
        "end_line": 484
      },
      {
        "link": "https://github.com/duyleekun/zycami-ded/blob/27686ca846de6d164692c81bac2ae7f85710361f/src/main/java/com/google/common/collect/Sets.java\n",
        "code": [
          "            return bl2;\n",
          "        }\n",
          "        return false;\n",
          "    }\n",
          "\n",
          "    public static NavigableSet filter(NavigableSet set, Predicate predicate) {\n",
          "        boolean bl2 = set instanceof Sets$FilteredSet;\n",
          "        if (bl2) {\n",
          "            set = (Sets$FilteredSet)set;\n",
          "            predicate = Predicates.and(((Collections2$FilteredCollection)set).predicate, predicate);\n",
          "            set = (NavigableSet)((Collections2$FilteredCollection)set).unfiltered;\n"
        ],
        "line_number": 141,
        "start_line": 137,
        "end_line": 147
      },
      {
        "link": "https://github.com/qq5132834/presto-0.225-mac/blob/cee05ffcb5dca6118471cd21bcabfa9583e5d377/presto-main/src/main/java/com/facebook/presto/util/GenerateTimeZoneIndex.java\n",
        "code": [
          "        //\n",
          "\n",
          "        TreeSet<String> jodaZones = new TreeSet<>(DateTimeZone.getAvailableIDs());\n",
          "        TreeSet<String> jdkZones = new TreeSet<>(Arrays.asList(TimeZone.getAvailableIDs()));\n",
          "\n",
          "        TreeSet<String> zoneIds = new TreeSet<>(filter(intersection(jodaZones, jdkZones), not(ignoredZone())));\n",
          "\n",
          "        for (String zoneId : zoneIds) {\n",
          "            if (zoneId.indexOf('/') < 0) {\n",
          "                continue;\n",
          "            }\n"
        ],
        "line_number": 85,
        "start_line": 81,
        "end_line": 91
      }
    ],
    "com.google.common.collect.FluentIterable.filter": [
      {
        "link": "https://github.com/niksoc/sonarqube-plagiarism/blob/50a999a3efbd985da80f8ef3b817c4de9c247f21/sonarqube/server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/IdentityProviderRepository.java\n",
        "code": [
          "    throw new IllegalArgumentException(String.format(\"Identity provider %s does not exist or is not enabled\", key));\n",
          "  }\n",
          "\n",
          "  public List<IdentityProvider> getAllEnabledAndSorted() {\n",
          "    return from(providersByKey.values())\n",
          "      .filter(IsEnabledFilter.INSTANCE)\n",
          "      .toSortedList(\n",
          "        Ordering.natural().onResultOf(ToName.INSTANCE)\n",
          "      );\n",
          "  }\n",
          "\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 64
      },
      {
        "link": "https://github.com/xicmiah/see/blob/53735cdb49cb104b37d70be6a451e2d52b2bbfa9/src/main/java/see/exceptions/SeeRuntimeException.java\n",
        "code": [
          "     * @param throwable target throwable\n",
          "     * @return extracted trace\n",
          "     */\n",
          "    private static List<TraceElement> getTrace(Throwable throwable) {\n",
          "        List<Throwable> causalChain = getCausalChain(throwable);\n",
          "        FluentIterable<PropagatedException> stack = from(causalChain).filter(PropagatedException.class);\n",
          "        FluentIterable<Node<?>> nodes = stack.transform(new Function<PropagatedException, Node<?>>() {\n",
          "            @Override\n",
          "            public Node<?> apply(PropagatedException input) {\n",
          "                return input.getFailedNode();\n",
          "            }\n"
        ],
        "line_number": 57,
        "start_line": 53,
        "end_line": 63
      },
      {
        "link": "https://github.com/angryziber/slides/blob/055d336ac9c0fbf985fb150a3ba158b725f1b840/java7/src/GuavaDemo.java\n",
        "code": [
          "\n",
          "public class GuavaDemo {\n",
          "  public static void main(String[] args) {\n",
          "    List<String> list = asList(\"a1\", \"b2\", \"c3\");\n",
          "    out.println(\n",
          "        filter(list, Predicates.or(Predicates.containsPattern(\"b\"), Predicates.containsPattern(\"3\")))\n",
          "    );\n",
          "\n",
          "    out.println(filter(list, new Predicate<String>() {\n",
          "      @Override public boolean apply(String s) {\n",
          "        return s.startsWith(\"b\");\n"
        ],
        "line_number": 23,
        "start_line": 19,
        "end_line": 29
      },
      {
        "link": "https://github.com/dreamhead/jfun/blob/738cf1253eeaeaf668cf3a03517fa4b38e079bba/src/test/java/com/github/dreamhead/jfun/NumberPredicatesTest.java\n",
        "code": [
          "import static org.junit.Assert.assertThat;\n",
          "\n",
          "public class NumberPredicatesTest {\n",
          "    @Test\n",
          "    public void should_filter_less_than_int() {\n",
          "        FluentIterable<Integer> ints = from(of(1, 2, 3)).filter(lessThan(2));\n",
          "        assertThat(ints.get(0), is(1));\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void should_filter_less_than_double() {\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 22
      },
      {
        "link": "https://github.com/tmgoncales/tmg/blob/55c61d3efdfe8f4eb149d63fd9b93337562b78d8/server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/IdentityProviderRepository.java\n",
        "code": [
          "    throw new IllegalArgumentException(String.format(\"Identity provider %s does not exist or is not enabled\", key));\n",
          "  }\n",
          "\n",
          "  public List<IdentityProvider> getAllEnabledAndSorted() {\n",
          "    return from(providersByKey.values())\n",
          "      .filter(IsEnabledFilter.INSTANCE)\n",
          "      .toSortedList(\n",
          "        Ordering.natural().onResultOf(ToName.INSTANCE)\n",
          "      );\n",
          "  }\n",
          "\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 64
      },
      {
        "link": "https://github.com/SonarSource/sonarqube/blob/900af07a23832dc8357eb49c3dd997976686ff29/server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/IdentityProviderRepository.java\n",
        "code": [
          "    throw new IllegalArgumentException(String.format(\"Identity provider %s does not exist or is not enabled\", key));\n",
          "  }\n",
          "\n",
          "  public List<IdentityProvider> getAllEnabledAndSorted() {\n",
          "    return from(providersByKey.values())\n",
          "      .filter(IsEnabledFilter.INSTANCE)\n",
          "      .toSortedList(\n",
          "        Ordering.natural().onResultOf(ToName.INSTANCE)\n",
          "      );\n",
          "  }\n",
          "\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 64
      },
      {
        "link": "https://github.com/dansimpson/chronos/blob/9cd0b92a36355536838cd3ae571338149a2dda70/chronos-api/src/main/java/org/ds/chronos/timeline/stream/DataStream.java\n",
        "code": [
          "\t * \n",
          "\t * @param condition\n",
          "\t *          the condition, which returns true if the object should pass\n",
          "\t * @return new stream with filter applied\n",
          "\t */\n",
          "\tpublic DataStream<O> filter(final Predicate<? super O> condition) {\n",
          "\t\treturn new DataStream<O>(source.filter(condition));\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * Apply a map function to each element and emit a stream of mapped objects\n"
        ],
        "line_number": 42,
        "start_line": 38,
        "end_line": 48
      },
      {
        "link": "https://github.com/nikhilnanivadekar/CollectionsCompare/blob/136d08ee91bb2fc758ec94db2ad08a5c06fc27f2/jmh-tests/src/main/java/collections/compare/demo/protocol/FilterTest.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @Benchmark\n",
          "    public int apacheFluentIterable_List(Input input)\n",
          "    {\n",
          "        List<Integer> evensList = input.apacheFluentList.filter(integer -> integer % 2 == 0).toList();\n",
          "        return evensList.size();\n",
          "    }\n",
          "\n",
          "    @Benchmark\n",
          "    public int apacheFluentIterable_Set(Input input)\n"
        ],
        "line_number": 62,
        "start_line": 58,
        "end_line": 68
      },
      {
        "link": "https://github.com/PacktPublishing/Java-EE-8-High-Performance-video-/blob/2be339d29ca865c82a7d44e7d855aba8d5979655/Section4/CollectionsCompare/jmh-tests/src/main/java/collections/compare/demo/protocol/FilterTest.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @Benchmark\n",
          "    public int apacheFluentIterable_List(Input input)\n",
          "    {\n",
          "        List<Integer> evensList = input.apacheFluentList.filter(integer -> integer % 2 == 0).toList();\n",
          "        return evensList.size();\n",
          "    }\n",
          "\n",
          "    @Benchmark\n",
          "    public int apacheFluentIterable_Set(Input input)\n"
        ],
        "line_number": 62,
        "start_line": 58,
        "end_line": 68
      },
      {
        "link": "https://github.com/laurawacrenier/sonarqube/blob/34d74627cf25e28a7605a1857cb3fdd5be2d6978/server/sonar-webserver-auth/src/main/java/org/sonar/server/authentication/IdentityProviderRepository.java\n",
        "code": [
          "    throw new IllegalArgumentException(String.format(\"Identity provider %s does not exist or is not enabled\", key));\n",
          "  }\n",
          "\n",
          "  public List<IdentityProvider> getAllEnabledAndSorted() {\n",
          "    return from(providersByKey.values())\n",
          "      .filter(IsEnabledFilter.INSTANCE)\n",
          "      .toSortedList(\n",
          "        Ordering.natural().onResultOf(ToName.INSTANCE)\n",
          "      );\n",
          "  }\n",
          "\n"
        ],
        "line_number": 58,
        "start_line": 54,
        "end_line": 64
      }
    ],
    "com.google.common.base.CharMatcher.or": [
      {
        "link": "https://github.com/yuanyuqiang1/app_demo/blob/28d8dce8ee2bad328cd9fb143c716fc5e04e5b2c/gradle-4.1-all/bzyivzo6n839fup2jbap0tjew/gradle-4.1/src/core/org/gradle/plugin/use/internal/DefaultPluginId.java\n",
        "code": [
          "    public static final String ID_SEPARATOR_ON_START_OR_END = \"cannot begin or end with '\" + SEPARATOR + \"'\";\n",
          "    public static final String DOUBLE_SEPARATOR = \"cannot contain '\" + SEPARATOR + SEPARATOR + \"'\";\n",
          "\n",
          "    public static final String PLUGIN_ID_VALID_CHARS_DESCRIPTION = \"ASCII alphanumeric characters, '.', '_' and '-'\";\n",
          "    public static final CharMatcher INVALID_PLUGIN_ID_CHAR_MATCHER = inRange('a', 'z')\n",
          "        .or(inRange('A', 'Z'))\n",
          "        .or(inRange('0', '9'))\n",
          "        .or(anyOf(\".-_\"))\n",
          "        .negate();\n",
          "\n",
          "    private final String value;\n"
        ],
        "line_number": 35,
        "start_line": 31,
        "end_line": 41
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/base/CharMatcher.java\n",
        "code": [
          "\n",
          "    public CharMatcher and(CharMatcher charMatcher) {\n",
          "        return new And(this, charMatcher);\n",
          "    }\n",
          "\n",
          "    public CharMatcher or(CharMatcher charMatcher) {\n",
          "        return new Or(this, charMatcher);\n",
          "    }\n",
          "\n",
          "    public CharMatcher precomputed() {\n",
          "        return Platform.precomputeCharMatcher(this);\n"
        ],
        "line_number": 128,
        "start_line": 124,
        "end_line": 134
      },
      {
        "link": "https://github.com/avibh/jclouds/blob/c595a3abcbaaa1b4f1175b4698dd47318bd60939/core/src/main/java/org/jclouds/predicates/validators/DnsNameValidator.java\n",
        "code": [
          "public class DnsNameValidator extends Validator<String> {\n",
          "   private int min;\n",
          "   private int max;\n",
          "\n",
          "   @Inject\n",
          "   public DnsNameValidator(@Named(\"jclouds.dns_name_length_min\") int min,\n",
          "            @Named(\"jclouds.dns_name_length_max\") int max) {\n",
          "      this.min = min;\n",
          "      this.max = max;\n",
          "   }\n",
          "\n"
        ],
        "line_number": 41,
        "start_line": 37,
        "end_line": 47
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/base/CharMatcher.java\n",
        "code": [
          "\n",
          "    public CharMatcher and(CharMatcher charMatcher) {\n",
          "        return new And(this, charMatcher);\n",
          "    }\n",
          "\n",
          "    public CharMatcher or(CharMatcher charMatcher) {\n",
          "        return new Or(this, charMatcher);\n",
          "    }\n",
          "\n",
          "    public CharMatcher precomputed() {\n",
          "        return Platform.precomputeCharMatcher(this);\n"
        ],
        "line_number": 173,
        "start_line": 169,
        "end_line": 179
      },
      {
        "link": "https://github.com/kavikondala/jclouds/blob/6057d0423687eaa2bcd131facb42cfad133f7480/core/src/main/java/org/jclouds/predicates/validators/DnsNameValidator.java\n",
        "code": [
          "public class DnsNameValidator extends Validator<String> {\n",
          "   private int min;\n",
          "   private int max;\n",
          "\n",
          "   @Inject\n",
          "   public DnsNameValidator(@Named(\"jclouds.dns_name_length_min\") int min,\n",
          "            @Named(\"jclouds.dns_name_length_max\") int max) {\n",
          "      this.min = min;\n",
          "      this.max = max;\n",
          "   }\n",
          "\n"
        ],
        "line_number": 41,
        "start_line": 37,
        "end_line": 47
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/base/CharMatcher.java\n",
        "code": [
          "\n",
          "    public CharMatcher and(CharMatcher other) {\n",
          "        return new And(this, other);\n",
          "    }\n",
          "\n",
          "    public CharMatcher or(CharMatcher other) {\n",
          "        return new Or(this, other);\n",
          "    }\n",
          "\n",
          "    public CharMatcher precomputed() {\n",
          "        return Platform.precomputeCharMatcher(this);\n"
        ],
        "line_number": 123,
        "start_line": 119,
        "end_line": 129
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/base/CharMatcher.java\n",
        "code": [
          "\n",
          "    public CharMatcher and(CharMatcher charMatcher) {\n",
          "        return new And(this, charMatcher);\n",
          "    }\n",
          "\n",
          "    public CharMatcher or(CharMatcher charMatcher) {\n",
          "        return new Or(this, charMatcher);\n",
          "    }\n",
          "\n",
          "    public CharMatcher precomputed() {\n",
          "        return Platform.precomputeCharMatcher(this);\n"
        ],
        "line_number": 124,
        "start_line": 120,
        "end_line": 130
      },
      {
        "link": "https://github.com/dovikn/inegotiate-android/blob/cea5e088b01ae4487d83cd1a84e6d2df78761a6e/src/com/google/common/base/CharMatcher.java\n",
        "code": [
          "\n",
          "        public CharMatcher and(CharMatcher other) {\n",
          "            return (CharMatcher) Preconditions.checkNotNull(other);\n",
          "        }\n",
          "\n",
          "        public CharMatcher or(CharMatcher other) {\n",
          "            Preconditions.checkNotNull(other);\n",
          "            return this;\n",
          "        }\n",
          "\n",
          "        public CharMatcher negate() {\n"
        ],
        "line_number": 300,
        "start_line": 296,
        "end_line": 306
      },
      {
        "link": "https://github.com/eriktx11/Sunshine/blob/9487792fceec9015c927e2a8e698938a4d417834/gradle/wrapper/dists/gradle-2.2.1-all/c64ydeuardnfqctvr1gm30w53/gradle-2.2.1/src/core/org/gradle/plugin/internal/PluginId.java\n",
        "code": [
          "    public static final String ID_SEPARATOR_ON_START_OR_END = \"cannot begin or end with '\" + PluginId.SEPARATOR + \"'\";\n",
          "    public static final String DOUBLE_SEPARATOR = \"cannot contain '\" + PluginId.SEPARATOR + PluginId.SEPARATOR + \"'\";\n",
          "\n",
          "    public static final String PLUGIN_ID_VALID_CHARS_DESCRIPTION = \"ASCII alphanumeric characters, '.', '_' and '-'\";\n",
          "    public static final CharMatcher INVALID_PLUGIN_ID_CHAR_MATCHER = inRange('a', 'z')\n",
          "            .or(inRange('A', 'Z'))\n",
          "            .or(inRange('0', '9'))\n",
          "            .or(anyOf(\".-_\"))\n",
          "            .negate();\n",
          "    public static final String SEPARATOR = \".\";\n",
          "\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/steveash/bushwhacker/blob/93958dea1f4e1d881e863970fd12b857278813c1/bushwhacker/src/main/java/com/github/steveash/bushwhacker/util/WildcardMatcher.java\n",
        "code": [
          " * @author Steve Ash\n",
          " */\n",
          "public class WildcardMatcher {\n",
          "\n",
          "  private static final CharMatcher validChars =\n",
          "      inRange('a', 'z').or(inRange('0', '9')).or(inRange('A','Z')).or(anyOf(\".?*():\"));\n",
          "\n",
          "  public static Pattern compileWildcardPattern(String pattern) {\n",
          "    Preconditions.checkNotNull(pattern, \"The wildcard pattern cannot be null\");\n",
          "    if (!validChars.matchesAllOf(pattern)) {\n",
          "      throw new IllegalArgumentException(\"Cannot match the pattern \\\"\" + pattern +\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      }
    ],
    "org.mockito.stubbing.OngoingStubbing.thenAnswer": [
      {
        "link": "}https://github.com/Hyacinth-Ali/epsilon-repo/blob/2c492152e30cbddaff74fe5143edbce43aa415b2/tests/org.mockito_1.8.4/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "import org.mockito.stubbing.DeprecatedOngoingStubbing;\r\n",
          "import org.mockito.stubbing.OngoingStubbing;\r\n",
          "\r\n",
          "public abstract class BaseStubbing<T> implements OngoingStubbing<T>, DeprecatedOngoingStubbing<T> {\r\n",
          "    public OngoingStubbing<T> thenReturn(T value) {\r\n",
          "        return thenAnswer(new Returns(value));\r\n",
          "    }\r\n",
          "\r\n",
          "    public OngoingStubbing<T> thenReturn(T value, T... values) {\r\n",
          "        OngoingStubbing<T> stubbing = thenReturn(value);            \r\n",
          "        if (values == null) {\r\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      },
      {
        "link": "https://github.com/mbboyraz/jiraPostFunctions/blob/c90eb41ab0e3680bf8b0221b41c596b17560052b/target/classes/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "\r\n",
          "public abstract class BaseStubbing<T> implements OngoingStubbing<T>, DeprecatedOngoingStubbing<T> {\r\n",
          "\r\n",
          "    //TODO why we need this method? The other thenReturn covers it.\r\n",
          "    public OngoingStubbing<T> thenReturn(T value) {\r\n",
          "        return thenAnswer(new Returns(value));\r\n",
          "    }\r\n",
          "\r\n",
          "    public OngoingStubbing<T> thenReturn(T value, T... values) {\r\n",
          "        OngoingStubbing<T> stubbing = thenReturn(value);            \r\n",
          "        if (values == null) {\r\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "}https://github.com/varioush/cmpt371t1/blob/6befdc8e43f7674581dab197c7dc6f590e19c44c/TestSuite/ReferencedLibrariesJar/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "import org.mockito.stubbing.DeprecatedOngoingStubbing;\r\n",
          "import org.mockito.stubbing.OngoingStubbing;\r\n",
          "\r\n",
          "public abstract class BaseStubbing<T> implements OngoingStubbing<T>, DeprecatedOngoingStubbing<T> {\r\n",
          "    public OngoingStubbing<T> thenReturn(T value) {\r\n",
          "        return thenAnswer(new Returns(value));\r\n",
          "    }\r\n",
          "\r\n",
          "    public OngoingStubbing<T> thenReturn(T value, T... values) {\r\n",
          "        OngoingStubbing<T> stubbing = thenReturn(value);            \r\n",
          "        if (values == null) {\r\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      },
      {
        "link": "}https://github.com/Debug-2020/Answers-4111-52834-Mockito1/blob/989b56ee764394c86838e1282f37ae27d416eb1d/src/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "import org.mockito.stubbing.DeprecatedOngoingStubbing;\r\n",
          "import org.mockito.stubbing.OngoingStubbing;\r\n",
          "\r\n",
          "public abstract class BaseStubbing<T> implements OngoingStubbing<T>, DeprecatedOngoingStubbing<T> {\r\n",
          "    public OngoingStubbing<T> thenReturn(T value) {\r\n",
          "        return thenAnswer(new Returns(value));\r\n",
          "    }\r\n",
          "\r\n",
          "    public OngoingStubbing<T> thenReturn(T value, T... values) {\r\n",
          "        OngoingStubbing<T> stubbing = thenReturn(value);            \r\n",
          "        if (values == null) {\r\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      },
      {
        "link": "https://github.com/bitlogo/androidsource/blob/47f9bbfb032b3118907e709b1099d3f1983ae346/external/mockito/src/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "import org.mockito.stubbing.DeprecatedOngoingStubbing;\r\n",
          "import org.mockito.stubbing.OngoingStubbing;\r\n",
          "\r\n",
          "public abstract class BaseStubbing<T> implements OngoingStubbing<T>, DeprecatedOngoingStubbing<T> {\r\n",
          "    public OngoingStubbing<T> thenReturn(T value) {\r\n",
          "        return thenAnswer(new Returns(value));\r\n",
          "    }\r\n",
          "\r\n",
          "    public OngoingStubbing<T> thenReturn(T value, T... values) {\r\n",
          "        OngoingStubbing<T> stubbing = thenReturn(value);            \r\n",
          "        if (values == null) {\r\n"
        ],
        "line_number": 15,
        "start_line": 11,
        "end_line": 21
      },
      {
        "link": "}https://github.com/alfonsodelavega/epsilonFork/blob/4101b0a3678674aee0b2764ed5b0c93954d016a8/tests/org.mockito_1.8.4/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "import org.mockito.stubbing.DeprecatedOngoingStubbing;\r\n",
          "import org.mockito.stubbing.OngoingStubbing;\r\n",
          "\r\n",
          "public abstract class BaseStubbing<T> implements OngoingStubbing<T>, DeprecatedOngoingStubbing<T> {\r\n",
          "    public OngoingStubbing<T> thenReturn(T value) {\r\n",
          "        return thenAnswer(new Returns(value));\r\n",
          "    }\r\n",
          "\r\n",
          "    public OngoingStubbing<T> thenReturn(T value, T... values) {\r\n",
          "        OngoingStubbing<T> stubbing = thenReturn(value);            \r\n",
          "        if (values == null) {\r\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      },
      {
        "link": "https://github.com/yinquan529/platform-external-mockito/blob/34f80a94e45f7110ec3444c1d0ecfacc194d009a/src/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "import org.mockito.stubbing.DeprecatedOngoingStubbing;\r\n",
          "import org.mockito.stubbing.OngoingStubbing;\r\n",
          "\r\n",
          "public abstract class BaseStubbing<T> implements OngoingStubbing<T>, DeprecatedOngoingStubbing<T> {\r\n",
          "    public OngoingStubbing<T> thenReturn(T value) {\r\n",
          "        return thenAnswer(new Returns(value));\r\n",
          "    }\r\n",
          "\r\n",
          "    public OngoingStubbing<T> thenReturn(T value, T... values) {\r\n",
          "        OngoingStubbing<T> stubbing = thenReturn(value);            \r\n",
          "        if (values == null) {\r\n"
        ],
        "line_number": 15,
        "start_line": 11,
        "end_line": 21
      },
      {
        "link": "}https://github.com/hub-se/BugLoRD/blob/068db7d777dd09333694259f5a2c4a5bbe086007/spectra-generator/src/test/resources/Mockito12b/src/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "import org.mockito.stubbing.DeprecatedOngoingStubbing;\n",
          "import org.mockito.stubbing.OngoingStubbing;\n",
          "\n",
          "public abstract class BaseStubbing<T> implements OngoingStubbing<T>, DeprecatedOngoingStubbing<T> {\n",
          "    public OngoingStubbing<T> thenReturn(T value) {\n",
          "        return thenAnswer(new Returns(value));\n",
          "    }\n",
          "\n",
          "    public OngoingStubbing<T> thenReturn(T value, T... values) {\n",
          "        OngoingStubbing<T> stubbing = thenReturn(value);\n",
          "        if (values == null) {\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      },
      {
        "link": "}https://github.com/Debug-2020/Answers-4113-45926-Mockito3/blob/d9ba522d378d5c9bdfe68b8a7bd9399cebf40382/src/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "import org.mockito.stubbing.DeprecatedOngoingStubbing;\r\n",
          "import org.mockito.stubbing.OngoingStubbing;\r\n",
          "\r\n",
          "public abstract class BaseStubbing<T> implements OngoingStubbing<T>, DeprecatedOngoingStubbing<T> {\r\n",
          "    public OngoingStubbing<T> thenReturn(T value) {\r\n",
          "        return thenAnswer(new Returns(value));\r\n",
          "    }\r\n",
          "\r\n",
          "    public OngoingStubbing<T> thenReturn(T value, T... values) {\r\n",
          "        OngoingStubbing<T> stubbing = thenReturn(value);            \r\n",
          "        if (values == null) {\r\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      },
      {
        "link": "}https://github.com/Debug-2020/Answers-4112-53312-Mockito2/blob/6db099111a1ee6f73d6a58e28d7e5b0242b87756/src/org/mockito/internal/stubbing/BaseStubbing.java\n",
        "code": [
          "import org.mockito.stubbing.DeprecatedOngoingStubbing;\r\n",
          "import org.mockito.stubbing.OngoingStubbing;\r\n",
          "\r\n",
          "public abstract class BaseStubbing<T> implements OngoingStubbing<T>, DeprecatedOngoingStubbing<T> {\r\n",
          "    public OngoingStubbing<T> thenReturn(T value) {\r\n",
          "        return thenAnswer(new Returns(value));\r\n",
          "    }\r\n",
          "\r\n",
          "    public OngoingStubbing<T> thenReturn(T value, T... values) {\r\n",
          "        OngoingStubbing<T> stubbing = thenReturn(value);            \r\n",
          "        if (values == null) {\r\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      }
    ],
    "com.google.common.collect.Lists.newArrayList": [
      {
        "link": "https://github.com/AYCHSignup/AdminRegisterTool/blob/a2e9e1aeb80f97bed4ea896d567cf9cd09905696/persistence/src/test/java/org/opentestsystem/delivery/testadmin/scheduling/SchedulerHelperFindAssessmentTest.java\n",
        "code": [
          "    private Assessment assess2;\n",
          "    private Assessment assess3;\n",
          "\n",
          "    private static final String TENANT_ID = \"53f027c18f44c7080a67e06a\";\n",
          "    \n",
          "    final List<String> tenantIdsForAssessment = Lists.newArrayList(); \n",
          "    // this assessment has 2 test windows:\n",
          "    // one from june 1 to june 30\n",
          "    // another from september 1 to september 30\n",
          "    @SuppressWarnings(\"unused\")\n",
          "    private Assessment assess4;\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "https://github.com/opendata-euskadi/fabric-r01f/blob/87b8c436b778bc4dbd40ca964cf61a652ec73a14/r01fBase/r01fBaseClasses/src/main/java/r01f/util/types/collections/Lists.java\n",
        "code": [
          "\t\treturn false;\r\n",
          "\t}\r\n",
          "\t/**\r\n",
          "\t * Creates a mutable ArrayList instance containing the given elements.\r\n",
          "\t */\r\n",
          "\tpublic static <E> List<E> newArrayList(final E... elements) {\r\n",
          "\t\treturn com.google.common.collect.Lists.newArrayList(elements);\r\n",
          "\t}\r\n",
          "\t/**\r\n",
          "\t * Creates a mutable ArrayList instance containing the given elements.\r\n",
          "\t */\r\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "https://github.com/rockguo2015/med/blob/b3db5a4943e190370a20cc4fac8faf38053ae6ae/com.fudanmed.platform.core.web/src/main/java/com/fudanmed/platform/core/web/server/service/warehouse/ProductSpecificationValidator.java\n",
        "code": [
          "    }.apply(), _function);\n",
          "    return Boolean.valueOf(_isUnique);\n",
          "  }\n",
          "  \n",
          "  public Collection<ValidationErrorItem> validate(final UIProductSpecification _entity) {\n",
          "    Collection<ValidationErrorItem> errors = com.google.common.collect.Lists.newArrayList();\n",
          "    if(_entity.getSid()!=null && !UniqueSid(_entity)){\n",
          "    \terrors.add(new ValidationErrorItem(\"\u00e6\u009d\u00a1\u00e7\u00a0\u0081\",\"\u00e7\u0089\u00a9\u00e5\u0093\u0081\u00e6\u009d\u00a1\u00e7\u00a0\u0081\u00e5\u00b7\u00b2\u00e5\u00ad\u0098\u00e5\u009c\u00a8\",com.google.common.collect.Lists.newArrayList(\"sid\" )));\n",
          "    }\n",
          "    if(_entity.getMaterialId()!=null && !UniqueMid(_entity)){\n",
          "    \terrors.add(new ValidationErrorItem(\"\u00e7\u0089\u00a9\u00e5\u0093\u0081\u00e7\u00bc\u0096\u00e5\u008f\u00b7\",\"\u00e7\u0089\u00a9\u00e5\u0093\u0081\u00e7\u00bc\u0096\u00e5\u008f\u00b7\u00e5\u00b7\u00b2\u00e5\u00ad\u0098\u00e5\u009c\u00a8\",com.google.common.collect.Lists.newArrayList(\"materialId\" )));\n"
        ],
        "line_number": 60,
        "start_line": 56,
        "end_line": 66
      },
      {
        "link": "https://github.com/rockguo2015/med/blob/b3db5a4943e190370a20cc4fac8faf38053ae6ae/com.fudanmed.platform.core.web/src/main/java/com/fudanmed/platform/core/web/server/service/project/ReportValidator.java\n",
        "code": [
          "  \n",
          "  @Autowired\n",
          "  private RuleFactory ruleFactory;\n",
          "  \n",
          "  public Collection<ValidationErrorItem> validate(final UIRepairTask _entity) {\n",
          "    Collection<ValidationErrorItem> errors = com.google.common.collect.Lists.newArrayList();\n",
          "    {\n",
          "    \tcom.uniquesoft.uidl.validation.rules.Required rule \n",
          "    \t\t= ruleFactory.Required(_entity.getReportDate());\n",
          "    \tif(!rule.checkValid()) \n",
          "    \t\terrors.add(new ValidationErrorItem(\"\u00e6\u008e\u00a5\u00e6\u008a\u00a5\u00e6\u0097\u00a5\u00e6\u009c\u009f\",rule.getMessage(),com.google.common.collect.Lists.newArrayList(\"reportDate\" )));\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "}https://github.com/isr-uci-edu/ArchStudio5/blob/61aeb2edc0674f395e257a6fe12e28d09dae1286/org.archstudio.bna/src/org/archstudio/bna/facets/IHasArrowheads.java\n",
        "code": [
          "\n",
          "@SuppressWarnings(\"all\")\n",
          "@NonNullByDefault\n",
          "public interface IHasArrowheads extends org.archstudio.bna.IThing {\n",
          "\tpublic static final IThingKey<org.eclipse.swt.graphics.RGB> ARROWHEAD_1_COLOR_KEY = ThingKey\n",
          "\t\t\t.create(com.google.common.collect.Lists.newArrayList(\"arrowhead1Color\", IHasArrowheads.class), true);\n",
          "\n",
          "\tpublic static final IThingKey<org.eclipse.swt.graphics.RGB> ARROWHEAD_1_EDGE_COLOR_KEY = ThingKey\n",
          "\t\t\t.create(com.google.common.collect.Lists.newArrayList(\"arrowhead1EdgeColor\", IHasArrowheads.class), true);\n",
          "\n",
          "\tpublic static final IThingKey<java.lang.Integer> ARROWHEAD_1_LENGTH_KEY =\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 22
      },
      {
        "link": "https://github.com/rockguo2015/med/blob/b3db5a4943e190370a20cc4fac8faf38053ae6ae/com.fudanmed.platform.core.web/src/main/java/com/fudanmed/platform/core/web/server/service/project/RepairTaskValidator.java\n",
        "code": [
          "    }\n",
          "    return Boolean.valueOf(_xifexpression);\n",
          "  }\n",
          "  \n",
          "  public Collection<ValidationErrorItem> validate(final UIRepairTask _entity) {\n",
          "    Collection<ValidationErrorItem> errors = com.google.common.collect.Lists.newArrayList();\n",
          "    if(true && !TeamIsRequired(_entity)){\n",
          "    \terrors.add(new ValidationErrorItem(\"\u00e7\u00bb\u00b4\u00e4\u00bf\u00ae\u00e7\u008f\u00ad\u00e7\u00bb\u0084\",\"\u00e8\u00af\u00b7\u00e9\u0080\u0089\u00e6\u008b\u00a9\u00e7\u008f\u00ad\u00e7\u00bb\u0084\",com.google.common.collect.Lists.newArrayList(\"activeTeam\" )));\n",
          "    }\n",
          "    {\n",
          "    \tcom.uniquesoft.uidl.validation.rules.Required rule \n"
        ],
        "line_number": 35,
        "start_line": 31,
        "end_line": 41
      },
      {
        "link": "}https://github.com/paranoidq/qtill/blob/c0ceae4a78d80f298a416a36c9ce2ade93a1e0bd/qtill-commons/src/main/java/me/qtill/commons/collection/ListUtil.java\n",
        "code": [
          "    ///////////////// from Guava\u00e7\u009a\u0084\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e5\u0087\u00bd\u00e6\u0095\u00b0///////////////////\n",
          "\n",
          "    /**\n",
          "     * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e7\u00ad\u0089\u00e5\u008f\u00b7\u00e5\u00b7\u00a6\u00e8\u00be\u00b9\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00ef\u00bc\u008c\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e6\u00ad\u00a3\u00e7\u00a1\u00ae\u00e7\u009a\u0084ArrayList.\n",
          "     *\n",
          "     * @see com.google.common.collect.Lists#newArrayList()\n",
          "     */\n",
          "    public static <T> ArrayList<T> newArrayList() {\n",
          "        return new ArrayList<T>();\n",
          "    }\n",
          "\n"
        ],
        "line_number": 66,
        "start_line": 62,
        "end_line": 72
      },
      {
        "link": "https://github.com/AppSecAI-TEST/tent/blob/e1149ca6a56b565dddbf9ace05eeaa97b937770e/common/utils/src/main/java/me/chongfeng/common/utils/collection/ListUtil.java\n",
        "code": [
          "\n",
          "\t///////////////// from Guava\u00e7\u009a\u0084\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e5\u0087\u00bd\u00e6\u0095\u00b0///////////////////\n",
          "\t/**\n",
          "\t * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e7\u00ad\u0089\u00e5\u008f\u00b7\u00e5\u00b7\u00a6\u00e8\u00be\u00b9\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00ef\u00bc\u008c\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e6\u00ad\u00a3\u00e7\u00a1\u00ae\u00e7\u009a\u0084ArrayList.\n",
          "\t *\n",
          "\t * @see com.google.common.collect.Lists#newArrayList()\n",
          "\t */\n",
          "\tpublic static <T> ArrayList<T> newArrayList() {\n",
          "\t\treturn new ArrayList<T>();\n",
          "\t}\n",
          "\n"
        ],
        "line_number": 75,
        "start_line": 71,
        "end_line": 81
      },
      {
        "link": "https://github.com/xuminwlt/j360-dubbo-app-all/blob/fc32b0b074177a30d558ae8f0714ae4c05a7e47f/j360-dubbo-modules/src/main/java/me/j360/dubbo/modules/util/collection/ListUtil.java\n",
        "code": [
          "\n",
          "\t///////////////// from Guava\u00e7\u009a\u0084\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e5\u0087\u00bd\u00e6\u0095\u00b0///////////////////\n",
          "\t/**\n",
          "\t * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e7\u00ad\u0089\u00e5\u008f\u00b7\u00e5\u00b7\u00a6\u00e8\u00be\u00b9\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00ef\u00bc\u008c\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e6\u00ad\u00a3\u00e7\u00a1\u00ae\u00e7\u009a\u0084ArrayList.\n",
          "\t * \n",
          "\t * @see com.google.common.collect.Lists#newArrayList()\n",
          "\t */\n",
          "\tpublic static <T> ArrayList<T> newArrayList() {\n",
          "\t\treturn new ArrayList<T>();\n",
          "\t}\n",
          "\n"
        ],
        "line_number": 68,
        "start_line": 64,
        "end_line": 74
      },
      {
        "link": "https://github.com/boatfly/GoShineCenter/blob/4ddefa5a8d8e07a169b2bd89919570cbdb27f261/gskit/src/main/java/com/goshine/gscenter/gskit/collection/ListUtil.java\n",
        "code": [
          "\n",
          "    ///////////////// from Guava\u00e7\u009a\u0084\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e5\u0087\u00bd\u00e6\u0095\u00b0///////////////////\n",
          "    /**\n",
          "     * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e7\u00ad\u0089\u00e5\u008f\u00b7\u00e5\u00b7\u00a6\u00e8\u00be\u00b9\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00ef\u00bc\u008c\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e6\u00ad\u00a3\u00e7\u00a1\u00ae\u00e7\u009a\u0084ArrayList.\n",
          "     *\n",
          "     * @see com.google.common.collect.Lists#newArrayList()\n",
          "     */\n",
          "    public static <T> ArrayList<T> newArrayList() {\n",
          "        return new ArrayList<T>();\n",
          "    }\n",
          "\n"
        ],
        "line_number": 64,
        "start_line": 60,
        "end_line": 70
      }
    ],
    "org.mockito.listeners.MethodInvocationReport.getReturnedValue": [
      {
        "link": "https://github.com/brianwoo/cm11_grouper/blob/b23d9dd09915bf2c1a744113e507d3d7fc32f4bd/external/mockito/src/org/mockito/internal/debugging/VerboseMockInvocationLogger.java\n",
        "code": [
          "    private void printReturnedValueOrThrowable(MethodInvocationReport methodInvocationReport) {\n",
          "        if (methodInvocationReport.threwException()) {\n",
          "            String message = methodInvocationReport.getThrowable().getMessage() == null ? \"\" : \" with message \" + methodInvocationReport.getThrowable().getMessage();\n",
          "            printlnIndented(\"has thrown: \" + methodInvocationReport.getThrowable().getClass() + message);\n",
          "        } else {\n",
          "            String type = (methodInvocationReport.getReturnedValue() == null) ? \"\" : \" (\" + methodInvocationReport.getReturnedValue().getClass().getName() + \")\";\n",
          "            printlnIndented(\"has returned: \\\"\" + methodInvocationReport.getReturnedValue() + \"\\\"\" + type);\n",
          "        }\n",
          "    }\n",
          "\n",
          "    private void printStubInfo(MethodInvocationReport methodInvocationReport) {\n"
        ],
        "line_number": 46,
        "start_line": 42,
        "end_line": 52
      },
      {
        "link": "https://github.com/yunychen/nxp_android/blob/4c9c3d73b6eb315457dad63f0ff0dafa346d91fd/6.0.1/external/mockito/src/org/mockito/internal/debugging/VerboseMockInvocationLogger.java\n",
        "code": [
          "    private void printReturnedValueOrThrowable(MethodInvocationReport methodInvocationReport) {\n",
          "        if (methodInvocationReport.threwException()) {\n",
          "            String message = methodInvocationReport.getThrowable().getMessage() == null ? \"\" : \" with message \" + methodInvocationReport.getThrowable().getMessage();\n",
          "            printlnIndented(\"has thrown: \" + methodInvocationReport.getThrowable().getClass() + message);\n",
          "        } else {\n",
          "            String type = (methodInvocationReport.getReturnedValue() == null) ? \"\" : \" (\" + methodInvocationReport.getReturnedValue().getClass().getName() + \")\";\n",
          "            printlnIndented(\"has returned: \\\"\" + methodInvocationReport.getReturnedValue() + \"\\\"\" + type);\n",
          "        }\n",
          "    }\n",
          "\n",
          "    private void printStubInfo(MethodInvocationReport methodInvocationReport) {\n"
        ],
        "line_number": 46,
        "start_line": 42,
        "end_line": 52
      },
      {
        "link": "https://github.com/yangfancoming/mockito/blob/5aa9df3d4ffab02339081d1cf1a8fe691d1be20a/src/main/java/org/mockito/internal/debugging/VerboseMockInvocationLogger.java\n",
        "code": [
          "    private void printReturnedValueOrThrowable(MethodInvocationReport methodInvocationReport) {\n",
          "        if (methodInvocationReport.threwException()) {\n",
          "            String message = methodInvocationReport.getThrowable().getMessage() == null ? \"\" : \" with message \" + methodInvocationReport.getThrowable().getMessage();\n",
          "            printlnIndented(\"has thrown: \" + methodInvocationReport.getThrowable().getClass() + message);\n",
          "        } else {\n",
          "            String type = (methodInvocationReport.getReturnedValue() == null) ? \"\" : \" (\" + methodInvocationReport.getReturnedValue().getClass().getName() + \")\";\n",
          "            printlnIndented(\"has returned: \\\"\" + methodInvocationReport.getReturnedValue() + \"\\\"\" + type);\n",
          "        }\n",
          "    }\n",
          "\n",
          "    private void printStubInfo(MethodInvocationReport methodInvocationReport) {\n"
        ],
        "line_number": 42,
        "start_line": 38,
        "end_line": 48
      },
      {
        "link": "https://github.com/1-Family/external/blob/06a0bfee7abba6e30ee25974839f369a0fc9d551/mockito/src/org/mockito/internal/debugging/VerboseMockInvocationLogger.java\n",
        "code": [
          "    private void printReturnedValueOrThrowable(MethodInvocationReport methodInvocationReport) {\n",
          "        if (methodInvocationReport.threwException()) {\n",
          "            String message = methodInvocationReport.getThrowable().getMessage() == null ? \"\" : \" with message \" + methodInvocationReport.getThrowable().getMessage();\n",
          "            printlnIndented(\"has thrown: \" + methodInvocationReport.getThrowable().getClass() + message);\n",
          "        } else {\n",
          "            String type = (methodInvocationReport.getReturnedValue() == null) ? \"\" : \" (\" + methodInvocationReport.getReturnedValue().getClass().getName() + \")\";\n",
          "            printlnIndented(\"has returned: \\\"\" + methodInvocationReport.getReturnedValue() + \"\\\"\" + type);\n",
          "        }\n",
          "    }\n",
          "\n",
          "    private void printStubInfo(MethodInvocationReport methodInvocationReport) {\n"
        ],
        "line_number": 46,
        "start_line": 42,
        "end_line": 52
      },
      {
        "link": "https://github.com/s20121035/rk3288_android5.1_repo/blob/e8e83e89bd06e168c5dbc977dafccd93e8a03f94/external/mockito/src/org/mockito/internal/debugging/VerboseMockInvocationLogger.java\n",
        "code": [
          "    private void printReturnedValueOrThrowable(MethodInvocationReport methodInvocationReport) {\n",
          "        if (methodInvocationReport.threwException()) {\n",
          "            String message = methodInvocationReport.getThrowable().getMessage() == null ? \"\" : \" with message \" + methodInvocationReport.getThrowable().getMessage();\n",
          "            printlnIndented(\"has thrown: \" + methodInvocationReport.getThrowable().getClass() + message);\n",
          "        } else {\n",
          "            String type = (methodInvocationReport.getReturnedValue() == null) ? \"\" : \" (\" + methodInvocationReport.getReturnedValue().getClass().getName() + \")\";\n",
          "            printlnIndented(\"has returned: \\\"\" + methodInvocationReport.getReturnedValue() + \"\\\"\" + type);\n",
          "        }\n",
          "    }\n",
          "\n",
          "    private void printStubInfo(MethodInvocationReport methodInvocationReport) {\n"
        ],
        "line_number": 46,
        "start_line": 42,
        "end_line": 52
      },
      {
        "link": "https://github.com/ADVAN-ELAA-34207421/external_mockito/blob/c7d7be3cdbefd99229903414cf71308f47973aa5/src/org/mockito/internal/debugging/VerboseMockInvocationLogger.java\n",
        "code": [
          "    private void printReturnedValueOrThrowable(MethodInvocationReport methodInvocationReport) {\n",
          "        if (methodInvocationReport.threwException()) {\n",
          "            String message = methodInvocationReport.getThrowable().getMessage() == null ? \"\" : \" with message \" + methodInvocationReport.getThrowable().getMessage();\n",
          "            printlnIndented(\"has thrown: \" + methodInvocationReport.getThrowable().getClass() + message);\n",
          "        } else {\n",
          "            String type = (methodInvocationReport.getReturnedValue() == null) ? \"\" : \" (\" + methodInvocationReport.getReturnedValue().getClass().getName() + \")\";\n",
          "            printlnIndented(\"has returned: \\\"\" + methodInvocationReport.getReturnedValue() + \"\\\"\" + type);\n",
          "        }\n",
          "    }\n",
          "\n",
          "    private void printStubInfo(MethodInvocationReport methodInvocationReport) {\n"
        ],
        "line_number": 46,
        "start_line": 42,
        "end_line": 52
      },
      {
        "link": "https://github.com/huangningren/ldlDbutils/blob/21ead409b85668e9c5cf343b6fd3b1be66929ad9/dbutilsweb/mockito-all-1.9.5-sources/org/mockito/internal/debugging/VerboseMockInvocationLogger.java\n",
        "code": [
          "    private void printReturnedValueOrThrowable(MethodInvocationReport methodInvocationReport) {\n",
          "        if (methodInvocationReport.threwException()) {\n",
          "            String message = methodInvocationReport.getThrowable().getMessage() == null ? \"\" : \" with message \" + methodInvocationReport.getThrowable().getMessage();\n",
          "            printlnIndented(\"has thrown: \" + methodInvocationReport.getThrowable().getClass() + message);\n",
          "        } else {\n",
          "            String type = (methodInvocationReport.getReturnedValue() == null) ? \"\" : \" (\" + methodInvocationReport.getReturnedValue().getClass().getName() + \")\";\n",
          "            printlnIndented(\"has returned: \\\"\" + methodInvocationReport.getReturnedValue() + \"\\\"\" + type);\n",
          "        }\n",
          "    }\n",
          "\n",
          "    private void printStubInfo(MethodInvocationReport methodInvocationReport) {\n"
        ],
        "line_number": 46,
        "start_line": 42,
        "end_line": 52
      },
      {
        "link": "https://github.com/wanxiasijin/jianfei/blob/f33258a86419da47a808a7e5816a7bbed364007a/androidxjianfei/androidOne/build/intermediates/exploded-aar/e6a393973c4121d86d3d2956055a2de70eb7c8af/class/org/mockito/internal/debugging/VerboseMockInvocationLogger.java\n",
        "code": [
          "    private void printReturnedValueOrThrowable(MethodInvocationReport methodInvocationReport) {\n",
          "        if (methodInvocationReport.threwException()) {\n",
          "            String message = methodInvocationReport.getThrowable().getMessage() == null ? \"\" : \" with message \" + methodInvocationReport.getThrowable().getMessage();\n",
          "            printlnIndented(\"has thrown: \" + methodInvocationReport.getThrowable().getClass() + message);\n",
          "        } else {\n",
          "            String type = (methodInvocationReport.getReturnedValue() == null) ? \"\" : \" (\" + methodInvocationReport.getReturnedValue().getClass().getName() + \")\";\n",
          "            printlnIndented(\"has returned: \\\"\" + methodInvocationReport.getReturnedValue() + \"\\\"\" + type);\n",
          "        }\n",
          "    }\n",
          "\n",
          "    private void printStubInfo(MethodInvocationReport methodInvocationReport) {\n"
        ],
        "line_number": 46,
        "start_line": 42,
        "end_line": 52
      },
      {
        "link": "https://github.com/mbboyraz/jiraPostFunctions/blob/c90eb41ab0e3680bf8b0221b41c596b17560052b/target/classes/org/mockito/internal/debugging/VerboseMockInvocationLogger.java\n",
        "code": [
          "    private void printReturnedValueOrThrowable(MethodInvocationReport methodInvocationReport) {\n",
          "        if (methodInvocationReport.threwException()) {\n",
          "            String message = methodInvocationReport.getThrowable().getMessage() == null ? \"\" : \" with message \" + methodInvocationReport.getThrowable().getMessage();\n",
          "            printlnIndented(\"has thrown: \" + methodInvocationReport.getThrowable().getClass() + message);\n",
          "        } else {\n",
          "            String type = (methodInvocationReport.getReturnedValue() == null) ? \"\" : \" (\" + methodInvocationReport.getReturnedValue().getClass().getName() + \")\";\n",
          "            printlnIndented(\"has returned: \\\"\" + methodInvocationReport.getReturnedValue() + \"\\\"\" + type);\n",
          "        }\n",
          "    }\n",
          "\n",
          "    private void printStubInfo(MethodInvocationReport methodInvocationReport) {\n"
        ],
        "line_number": 46,
        "start_line": 42,
        "end_line": 52
      },
      {
        "link": "https://github.com/yinquan529/platform-external-mockito/blob/34f80a94e45f7110ec3444c1d0ecfacc194d009a/src/org/mockito/internal/debugging/VerboseMockInvocationLogger.java\n",
        "code": [
          "    private void printReturnedValueOrThrowable(MethodInvocationReport methodInvocationReport) {\n",
          "        if (methodInvocationReport.threwException()) {\n",
          "            String message = methodInvocationReport.getThrowable().getMessage() == null ? \"\" : \" with message \" + methodInvocationReport.getThrowable().getMessage();\n",
          "            printlnIndented(\"has thrown: \" + methodInvocationReport.getThrowable().getClass() + message);\n",
          "        } else {\n",
          "            String type = (methodInvocationReport.getReturnedValue() == null) ? \"\" : \" (\" + methodInvocationReport.getReturnedValue().getClass().getName() + \")\";\n",
          "            printlnIndented(\"has returned: \\\"\" + methodInvocationReport.getReturnedValue() + \"\\\"\" + type);\n",
          "        }\n",
          "    }\n",
          "\n",
          "    private void printStubInfo(MethodInvocationReport methodInvocationReport) {\n"
        ],
        "line_number": 46,
        "start_line": 42,
        "end_line": 52
      }
    ],
    "com.google.common.base.Joiner.on": [
      {
        "link": "https://github.com/rlalfo/google-http-java-client/blob/1973a3915993c72375fd1df423e6c6b42705aea8/google-http-client/src/main/java/com/google/api/client/util/Joiner.java\n",
        "code": [
          "  private final com.google.common.base.Joiner wrapped;\n",
          "\n",
          "  /**\n",
          "   * Returns a joiner which automatically places {@code separator} between consecutive elements.\n",
          "   */\n",
          "  public static Joiner on(char separator) {\n",
          "    return new Joiner(com.google.common.base.Joiner.on(separator));\n",
          "  }\n",
          "\n",
          "  /**\n",
          "   * @param wrapped wrapped joiner\n"
        ],
        "line_number": 37,
        "start_line": 33,
        "end_line": 43
      },
      {
        "link": "https://github.com/gitburr/google-oauth-java-client-gzip-patched/blob/48fa293493d494c3d6a2d2045182a85e5ad0d0e0/google-http-java-client/google-http-client/src/main/java/com/google/api/client/util/Joiner.java\n",
        "code": [
          "  private final com.google.common.base.Joiner wrapped;\n",
          "\n",
          "  /**\n",
          "   * Returns a joiner which automatically places {@code separator} between consecutive elements.\n",
          "   */\n",
          "  public static Joiner on(char separator) {\n",
          "    return new Joiner(com.google.common.base.Joiner.on(separator));\n",
          "  }\n",
          "\n",
          "  /**\n",
          "   * @param wrapped wrapped joiner\n"
        ],
        "line_number": 37,
        "start_line": 33,
        "end_line": 43
      },
      {
        "link": "https://github.com/ryangardner/excursion-decompiling/blob/ecc1982649200e1a40519c09219842eb2a3b6beb/divestory-Fernflower/com/google/api/client/util/Joiner.java\n",
        "code": [
          "\n",
          "   private Joiner(com.google.common.base.Joiner var1) {\n",
          "      this.wrapped = var1;\n",
          "   }\n",
          "\n",
          "   public static Joiner on(char var0) {\n",
          "      return new Joiner(com.google.common.base.Joiner.on(var0));\n",
          "   }\n",
          "\n",
          "   public final String join(Iterable<?> var1) {\n",
          "      return this.wrapped.join(var1);\n"
        ],
        "line_number": 9,
        "start_line": 5,
        "end_line": 15
      },
      {
        "link": "https://github.com/trujunzhang/mxYoutube/blob/d5c99b8eb80e8939e502a5a99e562b644779f74b/android/mxYoutubeApp/libraries/google/google-http-client/src/main/java/com/google/api/client/util/Joiner.java\n",
        "code": [
          "  private final com.google.common.base.Joiner wrapped;\n",
          "\n",
          "  /**\n",
          "   * Returns a joiner which automatically places {@code separator} between consecutive elements.\n",
          "   */\n",
          "  public static Joiner on(char separator) {\n",
          "    return new Joiner(com.google.common.base.Joiner.on(separator));\n",
          "  }\n",
          "\n",
          "  /**\n",
          "   * @param wrapped wrapped joiner\n"
        ],
        "line_number": 37,
        "start_line": 33,
        "end_line": 43
      },
      {
        "link": "https://github.com/gragonvlad/PluginsRUs/blob/cdb50cf070af6eee48cb88f6b5df636809271a80/src/autosaveworld/zlibs/com/google/api/client/util/Joiner.java\n",
        "code": [
          "  private final com.google.common.base.Joiner wrapped;\n",
          "\n",
          "  /**\n",
          "   * Returns a joiner which automatically places {@code separator} between consecutive elements.\n",
          "   */\n",
          "  public static Joiner on(char separator) {\n",
          "    return new Joiner(com.google.common.base.Joiner.on(separator));\n",
          "  }\n",
          "\n",
          "  /**\n",
          "   * @param wrapped wrapped joiner\n"
        ],
        "line_number": 37,
        "start_line": 33,
        "end_line": 43
      },
      {
        "link": "https://github.com/18965050/oasis/blob/e5f1cfa32b74fe37aaf0872c497f7c8502df052d/oasis-common-test/src/test/java/cn/xyz/chaos/guava/common/base/JoinerTest.java\n",
        "code": [
          "        Map<String, String> testMap = Maps.newLinkedHashMap();\n",
          "        testMap.put(\"Washington D.C\", \"Redskins\");\n",
          "        testMap.put(\"New York City\", \"Giants\");\n",
          "        testMap.put(\"Philadelphia\", \"Eagles\");\n",
          "        testMap.put(\"Dallas\", \"Cowboys\");\n",
          "        String returnedString = Joiner.on(\"#\").withKeyValueSeparator(\"=\").join(testMap);\n",
          "        assertThat(returnedString, is(expectedString));\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.base.Joiner#join(Object[]) }\u00e6\u00b5\u008b\u00e8\u00af\u0095\n"
        ],
        "line_number": 35,
        "start_line": 31,
        "end_line": 41
      },
      {
        "link": "https://github.com/googleapis/google-http-java-client/blob/9f389ef89195af77eff8f1e1c1c9ee9bf9c7792c/google-http-client/src/main/java/com/google/api/client/util/Joiner.java\n",
        "code": [
          "\n",
          "  /** Wrapped joiner. */\n",
          "  private final com.google.common.base.Joiner wrapped;\n",
          "\n",
          "  /** Returns a joiner which automatically places {@code separator} between consecutive elements. */\n",
          "  public static Joiner on(char separator) {\n",
          "    return new Joiner(com.google.common.base.Joiner.on(separator));\n",
          "  }\n",
          "\n",
          "  /** @param wrapped wrapped joiner */\n",
          "  private Joiner(com.google.common.base.Joiner wrapped) {\n"
        ],
        "line_number": 33,
        "start_line": 29,
        "end_line": 39
      },
      {
        "link": "https://github.com/raymanrt/orientqb/blob/aad64874ca35b677e70a428b3b0405432eb36c50/src/main/java/com/github/raymanrt/orientqb/util/Joiner.java\n",
        "code": [
          "\n",
          "public class Joiner {\n",
          "\n",
          "    private Joiner() {};\n",
          "\n",
          "    public final static com.google.common.base.Joiner j = com.google.common.base.Joiner.on(\"\");\n",
          "    public final static com.google.common.base.Joiner listJoiner = com.google.common.base.Joiner.on(\", \");\n",
          "    public final static com.google.common.base.Joiner oneCommaJoiner = com.google.common.base.Joiner.on(\",\");\n",
          "    public final static com.google.common.base.Joiner oneSpaceJoiner = com.google.common.base.Joiner.on(\" \");\n",
          "    public final static com.google.common.base.Joiner andJoiner = com.google.common.base.Joiner.on(\" \" + Token.AND + \" \");\n",
          "    public final static com.google.common.base.Joiner orJoiner = com.google.common.base.Joiner.on(\" \" + Token.OR + \" \");\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      },
      {
        "link": "https://github.com/ryangardner/excursion-decompiling/blob/ecc1982649200e1a40519c09219842eb2a3b6beb/divestory-CFR/com/google/api/client/util/Joiner.java\n",
        "code": [
          "\n",
          "    private Joiner(com.google.common.base.Joiner joiner) {\n",
          "        this.wrapped = joiner;\n",
          "    }\n",
          "\n",
          "    public static Joiner on(char c) {\n",
          "        return new Joiner(com.google.common.base.Joiner.on(c));\n",
          "    }\n",
          "\n",
          "    public final String join(Iterable<?> iterable) {\n",
          "        return this.wrapped.join(iterable);\n"
        ],
        "line_number": 12,
        "start_line": 8,
        "end_line": 18
      },
      {
        "link": "https://github.com/micheldewit/TicketManager/blob/b2900b01063cc93e19680eae5afdeca36ee00d2d/src/com/google/api/client/util/Joiner.java\n",
        "code": [
          "  private final com.google.common.base.Joiner wrapped;\n",
          "\n",
          "  /**\n",
          "   * Returns a joiner which automatically places {@code separator} between consecutive elements.\n",
          "   */\n",
          "  public static Joiner on(char separator) {\n",
          "    return new Joiner(com.google.common.base.Joiner.on(separator));\n",
          "  }\n",
          "\n",
          "  /**\n",
          "   * @param wrapped wrapped joiner\n"
        ],
        "line_number": 37,
        "start_line": 33,
        "end_line": 43
      }
    ],
    "com.google.common.collect.ImmutableTable.builder": [
      {
        "link": "https://github.com/mplushnikov/lombok-intellij-plugin/blob/6775f2989b461f4dd4e03054740f164c68c893a2/testData/after/builder/Singular/Generic/Guava/SingularGuavaTable.java\n",
        "code": [
          "    SingularGuavaTableBuilder() {\n",
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n",
          "    public SingularGuavaTableBuilder<A, B, C> rawType(final java.lang.Object rowKey, final java.lang.Object columnKey, final java.lang.Object value) {\n",
          "      if (this.rawTypes == null) this.rawTypes = com.google.common.collect.ImmutableTable.builder();\n",
          "      this.rawTypes.put(rowKey, columnKey, value);\n",
          "      return this;\n",
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n"
        ],
        "line_number": 40,
        "start_line": 36,
        "end_line": 46
      },
      {
        "link": "https://github.com/luckystar5408/Jvav-Studio-Community/blob/084e8ca780cccca8ae862cc9f63d8b8a52926656/plugins/lombok/testData/after/superbuilder/Singular/Generic/Guava/SingularGuavaTable.java\n",
        "code": [
          "    @java.lang.SuppressWarnings(\"all\")\n",
          "    public abstract C2 build();\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n",
          "    public B2 rawType(final java.lang.Object rowKey, final java.lang.Object columnKey, final java.lang.Object value) {\n",
          "      if (this.rawTypes == null) this.rawTypes = com.google.common.collect.ImmutableTable.builder();\n",
          "      this.rawTypes.put(rowKey, columnKey, value);\n",
          "      return self();\n",
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 40
      },
      {
        "link": "https://github.com/luckystar5408/Jvav-Studio-Community/blob/084e8ca780cccca8ae862cc9f63d8b8a52926656/plugins/lombok/testData/after/builder/Singular/Generic/Guava/SingularGuavaTable.java\n",
        "code": [
          "    SingularGuavaTableBuilder() {\n",
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n",
          "    public SingularGuavaTableBuilder<A, B, C> rawType(final java.lang.Object rowKey, final java.lang.Object columnKey, final java.lang.Object value) {\n",
          "      if (this.rawTypes == null) this.rawTypes = com.google.common.collect.ImmutableTable.builder();\n",
          "      this.rawTypes.put(rowKey, columnKey, value);\n",
          "      return this;\n",
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n"
        ],
        "line_number": 40,
        "start_line": 36,
        "end_line": 46
      },
      {
        "link": "https://github.com/JetBrains/intellij-community/blob/0e2aa4030ee763c9b0c828f0b5119f4cdcc66f35/plugins/lombok/testData/after/builder/Singular/Generic/Guava/SingularGuavaTable.java\n",
        "code": [
          "    SingularGuavaTableBuilder() {\n",
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n",
          "    public SingularGuavaTableBuilder<A, B, C> rawType(final java.lang.Object rowKey, final java.lang.Object columnKey, final java.lang.Object value) {\n",
          "      if (this.rawTypes == null) this.rawTypes = com.google.common.collect.ImmutableTable.builder();\n",
          "      this.rawTypes.put(rowKey, columnKey, value);\n",
          "      return this;\n",
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n"
        ],
        "line_number": 40,
        "start_line": 36,
        "end_line": 46
      },
      {
        "link": "https://github.com/ryan-zhy/lombok-intellij-plugin/blob/1db9b359a96dcc2bc673a5eef76eba1ad0cf9e78/testData/after/superbuilder/Singular/Generic/Guava/SingularGuavaTable.java\n",
        "code": [
          "    @java.lang.SuppressWarnings(\"all\")\n",
          "    public abstract C2 build();\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n",
          "    public B2 rawType(final java.lang.Object rowKey, final java.lang.Object columnKey, final java.lang.Object value) {\n",
          "      if (this.rawTypes == null) this.rawTypes = com.google.common.collect.ImmutableTable.builder();\n",
          "      this.rawTypes.put(rowKey, columnKey, value);\n",
          "      return self();\n",
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 40
      },
      {
        "link": "https://github.com/mplushnikov/lombok-intellij-plugin/blob/6775f2989b461f4dd4e03054740f164c68c893a2/test-manual/src/main/java/de/plushnikov/builder/generic/guava/SingularGuavaTable2.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n",
          "    @javax.annotation.Generated(\"lombok\")\n",
          "    public SingularGuavaTableBuilder<A, B, C> rawType(final java.lang.Object rowKey, final java.lang.Object columnKey, final java.lang.Object value) {\n",
          "      if (this.rawTypes == null) this.rawTypes = com.google.common.collect.ImmutableTable.builder();\n",
          "      this.rawTypes.put(rowKey, columnKey, value);\n",
          "      return this;\n",
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n"
        ],
        "line_number": 48,
        "start_line": 44,
        "end_line": 54
      },
      {
        "link": "https://github.com/ryan-zhy/lombok-intellij-plugin/blob/1db9b359a96dcc2bc673a5eef76eba1ad0cf9e78/test-manual/src/main/java/de/plushnikov/builder/generic/guava/SingularGuavaTable2.java\n",
        "code": [
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n",
          "    @javax.annotation.Generated(\"lombok\")\n",
          "    public SingularGuavaTableBuilder<A, B, C> rawType(final java.lang.Object rowKey, final java.lang.Object columnKey, final java.lang.Object value) {\n",
          "      if (this.rawTypes == null) this.rawTypes = com.google.common.collect.ImmutableTable.builder();\n",
          "      this.rawTypes.put(rowKey, columnKey, value);\n",
          "      return this;\n",
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n"
        ],
        "line_number": 48,
        "start_line": 44,
        "end_line": 54
      },
      {
        "link": "https://github.com/JetBrains/intellij-community/blob/0e2aa4030ee763c9b0c828f0b5119f4cdcc66f35/plugins/lombok/testData/after/superbuilder/Singular/Generic/Guava/SingularGuavaTable.java\n",
        "code": [
          "    @java.lang.SuppressWarnings(\"all\")\n",
          "    public abstract C2 build();\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n",
          "    public B2 rawType(final java.lang.Object rowKey, final java.lang.Object columnKey, final java.lang.Object value) {\n",
          "      if (this.rawTypes == null) this.rawTypes = com.google.common.collect.ImmutableTable.builder();\n",
          "      this.rawTypes.put(rowKey, columnKey, value);\n",
          "      return self();\n",
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 40
      },
      {
        "link": "https://github.com/mplushnikov/lombok-intellij-plugin/blob/6775f2989b461f4dd4e03054740f164c68c893a2/testData/after/superbuilder/Singular/Generic/Guava/SingularGuavaTable.java\n",
        "code": [
          "    @java.lang.SuppressWarnings(\"all\")\n",
          "    public abstract C2 build();\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n",
          "    public B2 rawType(final java.lang.Object rowKey, final java.lang.Object columnKey, final java.lang.Object value) {\n",
          "      if (this.rawTypes == null) this.rawTypes = com.google.common.collect.ImmutableTable.builder();\n",
          "      this.rawTypes.put(rowKey, columnKey, value);\n",
          "      return self();\n",
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 40
      },
      {
        "link": "https://github.com/ryan-zhy/lombok-intellij-plugin/blob/1db9b359a96dcc2bc673a5eef76eba1ad0cf9e78/testData/after/builder/Singular/Generic/Guava/SingularGuavaTable.java\n",
        "code": [
          "    SingularGuavaTableBuilder() {\n",
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n",
          "    public SingularGuavaTableBuilder<A, B, C> rawType(final java.lang.Object rowKey, final java.lang.Object columnKey, final java.lang.Object value) {\n",
          "      if (this.rawTypes == null) this.rawTypes = com.google.common.collect.ImmutableTable.builder();\n",
          "      this.rawTypes.put(rowKey, columnKey, value);\n",
          "      return this;\n",
          "    }\n",
          "\n",
          "    @java.lang.SuppressWarnings(\"all\")\n"
        ],
        "line_number": 40,
        "start_line": 36,
        "end_line": 46
      }
    ],
    "com.google.common.collect.HashMultimap.create": [
      {
        "link": "https://github.com/18965050/oasis/blob/e5f1cfa32b74fe37aaf0872c497f7c8502df052d/oasis-common-test/src/test/java/cn/xyz/chaos/guava/common/collection/MultiMapsTest.java\n",
        "code": [
          "    /**\n",
          "     * {@link com.google.common.collect.ArrayListMultimap}\u00e6\u00b5\u008b\u00e8\u00af\u0095\n",
          "     */\n",
          "    @Test\n",
          "    public void testArrayListMultiMap() {\n",
          "        ArrayListMultimap<String, String> multiMap = ArrayListMultimap.create();\n",
          "        multiMap.put(\"Foo\", \"1\");\n",
          "        multiMap.put(\"Foo\", \"2\");\n",
          "        multiMap.put(\"Foo\", \"3\");\n",
          "        List<String> expected = Lists.newArrayList(\"1\", \"2\", \"3\");\n",
          "        assertEquals(multiMap.get(\"Foo\"), expected);\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 40
      },
      {
        "link": "https://github.com/NaulbiMIX/EaZy-Client/blob/9fb342d3560027911bc340df5c4af7507b21e9ee/Client/Werbung/src/minecraft/net/minecraft/entity/ai/attributes/BaseAttributeMap.java\n",
        "code": [
          "import net.minecraft.server.management.LowerStringMap;\n",
          "\n",
          "public abstract class BaseAttributeMap {\n",
          "    protected final Map attributes = Maps.newHashMap();\n",
          "    protected final Map attributesByName = new LowerStringMap();\n",
          "    protected final Multimap field_180377_c = HashMultimap.create();\n",
          "    private static final String __OBFID = \"CL_00001566\";\n",
          "\n",
          "    public IAttributeInstance getAttributeInstance(IAttribute p_111151_1_) {\n",
          "        return (IAttributeInstance)this.attributes.get(p_111151_1_);\n",
          "    }\n"
        ],
        "line_number": 23,
        "start_line": 19,
        "end_line": 29
      },
      {
        "link": "https://github.com/rohankumardubey/brooklyn-server/blob/868bfdd2c990d60e8c064099fbdf044a32eb6bd2/core/src/main/java/org/apache/brooklyn/util/core/xstream/HashMultimapConverter.java\n",
        "code": [
          "        reader.moveDown();\n",
          "        String value = reader.getValue();\n",
          "        int distinctKeys = Integer.parseInt(value);\n",
          "        reader.moveUp();\n",
          "\n",
          "        HashMultimap<Object, Object> objectObjectHashMultimap = HashMultimap.create();\n",
          "        for (int i = 0; i < distinctKeys; i++) {\n",
          "            Object key = readCompleteItem(reader, context, null);\n",
          "            reader.moveDown();\n",
          "            int children= Integer.parseInt(reader.getValue());\n",
          "            reader.moveUp();\n"
        ],
        "line_number": 98,
        "start_line": 94,
        "end_line": 104
      },
      {
        "link": "}https://github.com/rohankumardubey/brooklyn-server/blob/868bfdd2c990d60e8c064099fbdf044a32eb6bd2/core/src/test/java/org/apache/brooklyn/util/core/xstream/HashMultimapConverterTest.java\n",
        "code": [
          "                \"    <default/>\\n\",\n",
          "                \"    <int>2</int>\\n\",\n",
          "                \"    <int>0</int>\\n\",\n",
          "                \"  </com.google.common.collect.HashMultimap>\\n\",\n",
          "                \"</com.google.common.collect.HashMultimap>\");\n",
          "        assertX(HashMultimap.create(), fmr);\n",
          "    }\n",
          "\n",
          "    @Test(groups=\"WIP\", enabled = false)\n",
          "    public void testHashMultimapBasic() throws UnknownHostException {\n",
          "        String fmr = Strings.concat(\n"
        ],
        "line_number": 55,
        "start_line": 51,
        "end_line": 61
      },
      {
        "link": "https://github.com/thiagosoares/kers-mda/blob/86260baa62f87d96b85c68fbcda2645e1c9cb6b0/kers-xml-engine/src/test/java/br/pa/calangoMda/tempate/engine/xml/magager/XmlManagerTest.java\n",
        "code": [
          "      l1.add(\"l2\");\n",
          "      \n",
          "      obj2.put(\"k1\",l1);\n",
          "      obj2.put(\"k2\",l1);\n",
          "      \n",
          "      multmap = com.google.common.collect.HashMultimap.create();\n",
          "      multmap.put(\"A\", \"A\");\n",
          "      multmap.put(\"A\", \"B\");\n",
          "      multmap.put(\"B\", \"A\");\n",
          "      multmap.put(\"B\", \"B\");\n",
          "    }\n"
        ],
        "line_number": 121,
        "start_line": 117,
        "end_line": 127
      },
      {
        "link": "https://github.com/Raf0707/Musicspeed/blob/8c60d0e7d456512f7a4642ed8bb3602f44cb7149/src/java/de/javakaffee/kryoserializers/guava/HashMultimapSerializer.java\n",
        "code": [
          "    public static void registerSerializers(Kryo kryo) {\n",
          "        kryo.register(HashMultimap.class, (Serializer)new HashMultimapSerializer());\n",
          "    }\n",
          "\n",
          "    public HashMultimap<Object, Object> read(Kryo kryo, Input input, Class<HashMultimap<Object, Object>> class_) {\n",
          "        HashMultimap hashMultimap = HashMultimap.create();\n",
          "        this.readMultimap(kryo, input, hashMultimap);\n",
          "        return hashMultimap;\n",
          "    }\n",
          "\n",
          "    public void write(Kryo kryo, Output output, HashMultimap<Object, Object> hashMultimap) {\n"
        ],
        "line_number": 39,
        "start_line": 35,
        "end_line": 45
      },
      {
        "link": "https://github.com/yaitskov/ping-pong/blob/d4d88c70c15f74b56c9161cf6791f6dd023e3ed4/ping-pong/src/test/java/org/dan/ping/pong/app/tournament/rules/GroupRuleValidatorTest.java\n",
        "code": [
          "import org.junit.Test;\n",
          "\n",
          "import java.util.Optional;\n",
          "\n",
          "public class GroupRuleValidatorTest {\n",
          "    private static final HashMultimap<Object, Object> EMPTY_MMAP = create();\n",
          "    private GroupRuleValidator sut = new GroupRuleValidator();\n",
          "    private Multimap<String, ValidationError> errors;\n",
          "\n",
          "    @Before\n",
          "    public void setUp() {\n"
        ],
        "line_number": 23,
        "start_line": 19,
        "end_line": 29
      },
      {
        "link": "https://github.com/apache/brooklyn-server/blob/4ad5633358622de7ff3939ad879cf36f01a965d5/core/src/main/java/org/apache/brooklyn/util/core/xstream/HashMultimapConverter.java\n",
        "code": [
          "        reader.moveDown();\n",
          "        String value = reader.getValue();\n",
          "        int distinctKeys = Integer.parseInt(value);\n",
          "        reader.moveUp();\n",
          "\n",
          "        HashMultimap<Object, Object> objectObjectHashMultimap = HashMultimap.create();\n",
          "        for (int i = 0; i < distinctKeys; i++) {\n",
          "            Object key = readCompleteItem(reader, context, null);\n",
          "            reader.moveDown();\n",
          "            int children= Integer.parseInt(reader.getValue());\n",
          "            reader.moveUp();\n"
        ],
        "line_number": 98,
        "start_line": 94,
        "end_line": 104
      },
      {
        "link": "https://github.com/HammerSMP/YarnSource/blob/42762edb4d65ca049e792360b2db7d04f9e3c2dc/net/minecraft/tag/RequiredTagListRegistry.java\n",
        "code": [
          "    public static void clearAllTags() {\n",
          "        REQUIRED_TAG_LISTS.values().forEach(RequiredTagList::clearAllTags);\n",
          "    }\n",
          "\n",
          "    public static Multimap<Identifier, Identifier> getMissingTags(TagManager tagManager) {\n",
          "        HashMultimap multimap = HashMultimap.create();\n",
          "        REQUIRED_TAG_LISTS.forEach((arg_0, arg_1) -> RequiredTagListRegistry.method_30200((Multimap)multimap, tagManager, arg_0, arg_1));\n",
          "        return multimap;\n",
          "    }\n",
          "\n",
          "    public static void validateRegistrations() {\n"
        ],
        "line_number": 51,
        "start_line": 47,
        "end_line": 57
      },
      {
        "link": "}https://github.com/apache/brooklyn-server/blob/4ad5633358622de7ff3939ad879cf36f01a965d5/core/src/test/java/org/apache/brooklyn/util/core/xstream/HashMultimapConverterTest.java\n",
        "code": [
          "                \"    <default/>\\n\",\n",
          "                \"    <int>2</int>\\n\",\n",
          "                \"    <int>0</int>\\n\",\n",
          "                \"  </com.google.common.collect.HashMultimap>\\n\",\n",
          "                \"</com.google.common.collect.HashMultimap>\");\n",
          "        assertX(HashMultimap.create(), fmr);\n",
          "    }\n",
          "\n",
          "    @Test(groups=\"WIP\", enabled = false)\n",
          "    public void testHashMultimapBasic() throws UnknownHostException {\n",
          "        String fmr = Strings.concat(\n"
        ],
        "line_number": 55,
        "start_line": 51,
        "end_line": 61
      }
    ],
    "com.google.common.collect.HashBasedTable.create": [
      {
        "link": "https://github.com/Raf0707/Musicspeed/blob/8c60d0e7d456512f7a4642ed8bb3602f44cb7149/src/java/de/javakaffee/kryoserializers/guava/ImmutableListSerializer.java\n",
        "code": [
          "        Integer n3 = 2;\n",
          "        Integer n4 = 3;\n",
          "        kryo.register(ImmutableList.of((Object)n2, (Object)n3, (Object)n4).subList(1, 2).getClass(), (Serializer)immutableListSerializer);\n",
          "        kryo.register(ImmutableList.of().reverse().getClass(), (Serializer)immutableListSerializer);\n",
          "        kryo.register(Lists.charactersOf((String)\"KryoRocks\").getClass(), (Serializer)immutableListSerializer);\n",
          "        HashBasedTable hashBasedTable = HashBasedTable.create();\n",
          "        hashBasedTable.put((Object)n2, (Object)n3, (Object)n4);\n",
          "        hashBasedTable.put((Object)4, (Object)5, (Object)6);\n",
          "        kryo.register(ImmutableTable.copyOf((Table)hashBasedTable).values().getClass(), (Serializer)immutableListSerializer);\n",
          "    }\n",
          "\n"
        ],
        "line_number": 56,
        "start_line": 52,
        "end_line": 62
      },
      {
        "link": "https://github.com/despird-zh/gp.svc/blob/7bbf923dbfb430f263398d6bbab017d4ce092fa3/src/main/java/com/gp/quickflow/FlowLayout.java\n",
        "code": [
          "import com.google.common.collect.HashBasedTable;\n",
          "import com.google.common.collect.Table;\n",
          "\n",
          "public class FlowLayout {\n",
          "\n",
          "\tprivate Table<Integer, Integer, FlowNode> flowGraph = HashBasedTable.create();\n",
          "\t\n",
          "\tpublic FlowLayout(){\n",
          "\t\t\n",
          "\t}\n",
          "}\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "https://github.com/coding-camps/java-experiences/blob/cc41dbd8a6a36ba5b73f3f846644840b4746884b/src/test/java/frameworks/guava/collections/TableTestCase.java\n",
        "code": [
          "public class TableTestCase {\n",
          "\n",
          "    @Test\n",
          "    public void test_01_commons() {\n",
          "\n",
          "        Table<Integer, Integer, String> table = HashBasedTable.create();\n",
          "        table.put(1, 1, \"AA\");\n",
          "        table.put(1, 2, \"AB\");\n",
          "        table.put(2, 1, \"BA\");\n",
          "        table.put(2, 2, \"BB\");\n",
          "\n"
        ],
        "line_number": 11,
        "start_line": 7,
        "end_line": 17
      },
      {
        "link": "https://github.com/ftsrg-retelab/qwer-vcs-ci-lab/blob/f56e796d27831a80185a78dd0e6fea6da94ac1f2/train-controller/src/main/java/hu/bme/mit/train/controller/Tachograph.java\n",
        "code": [
          "public class Tachograph {\n",
          "\n",
          "  private Table<Integer, Double, Double> t;\n",
          "\n",
          "  public Tachograph() {\n",
          "    t = HashBasedTable.create();\n",
          "  }\n",
          "\n",
          "  public void put(int timestamp, double jstick, double r_speed) {\n",
          "    this.t.put(timestamp, jstick, r_speed);\n",
          "  }\n"
        ],
        "line_number": 10,
        "start_line": 6,
        "end_line": 16
      },
      {
        "link": "https://github.com/mosoft521/item/blob/fcbc888f9ca27afbb0d2f88090eac12aa7d95c9c/src/main/java/com/company/ch11OpenSource/item140/section3/Client.java\n",
        "code": [
          "import com.google.common.collect.HashBasedTable;\r\n",
          "import com.google.common.collect.Table;\r\n",
          "\r\n",
          "public class Client {\r\n",
          "    public static void main(String[] args) {\r\n",
          "        Table<Double, Double, String> l = HashBasedTable.create();\r\n",
          "        //\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e4\u00ba\u00ba\u00e6\u00b0\u0091\u00e5\u00b9\u00bf\u00e5\u009c\u00ba\u00e7\u009a\u0084\u00e7\u00bb\u008f\u00e7\u00ba\u00ac\u00e5\u00ba\u00a6\u00e5\u009d\u0090\u00e6\u00a0\u0087\r\n",
          "        l.put(31.23, 121.48, \"\u00e4\u00ba\u00ba\u00e6\u00b0\u0091\u00e5\u00b9\u00bf\u00e5\u009c\u00ba\");\r\n",
          "        System.out.println(l.get(31.23, 121.48));\r\n",
          "    }\r\n",
          "}\r\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "https://github.com/690830629/rice/blob/b6238a2718ec5ba8e79c3b645382f9fdc76787c4/src/main/java/com/rice/entity/Table.java\n",
        "code": [
          "\n",
          "import com.google.common.collect.HashBasedTable;\n",
          "\n",
          "public class Table {\n",
          "    public HashBasedTable a() {\n",
          "        HashBasedTable<String, String, Object> table = HashBasedTable.create();\n",
          "        table.put(\"\u00e9\u00bb\u008e\u00e6\u0098\u008e\", \"javase\", 80);\n",
          "        table.put(\"\u00e9\u00bb\u008e\u00e6\u0098\u008e\", \"oracle\", 100);\n",
          "        table.put(\"\u00e9\u0083\u00ad\u00e5\u00af\u008c\u00e5\u009f\u008e\", \"javase\", 90);\n",
          "        table.put(\"\u00e5\u0088\u0098\u00e5\u00be\u00b7\u00e5\u008d\u008e\", \"oracle\", 95);\n",
          "        return table;\n"
        ],
        "line_number": 6,
        "start_line": 2,
        "end_line": 12
      },
      {
        "link": "https://github.com/ilixiang/java-test/blob/c54d62e1e185917c56a95ba472502dd5ee7b7266/src/test/java/guava/TableTest.java\n",
        "code": [
          "import org.junit.Test;\n",
          "\n",
          "public class TableTest {\n",
          "    @Test\n",
          "    public void testTable() {\n",
          "        Table<String, String, String> table = HashBasedTable.create();\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 9,
        "start_line": 5,
        "end_line": 12
      },
      {
        "link": "https://github.com/ftsrg-retelab/abcd-vcs-ci-lab/blob/4e843d556fdb5eb7af8ce517e8dcf04272c5b7b3/train-system/src/main/java/hu/bme/mit/train/Tacho.java\n",
        "code": [
          "\n",
          "    public Table<String, String, Integer> table;\n",
          "\n",
          "\n",
          "    public void testsetup() {\n",
          "     table =HashBasedTable.create();\n",
          "     table.put(\"0.0.0\", \"0.0\", 100);\n",
          "    }\n",
          "\n",
          "}\n"
        ],
        "line_number": 11,
        "start_line": 7,
        "end_line": 16
      },
      {
        "link": "https://github.com/haiswang1989/helloword/blob/4c7ecb3865730bd691e17eaf906aa132f2fd92d2/src/main/java/com/hiworld/guava/collection/GuavaTable.java\n",
        "code": [
          "\n",
          "public class GuavaTable {\n",
          "\n",
          "    public static void main(String[] args) {\n",
          "        \n",
          "        Table<String, Integer, Integer> table = HashBasedTable.create();\n",
          "        table.put(\"wanghaisheng\", 1, 1);\n",
          "        table.put(\"wanghaisheng\", 2, 2);\n",
          "        \n",
          "        System.out.println(table);\n",
          "    }\n"
        ],
        "line_number": 9,
        "start_line": 5,
        "end_line": 15
      },
      {
        "link": "https://github.com/dawidwys/utils/blob/61d6e18243eb1dbf6fa2c7373b7e58038af4a4fa/src/main/java/com/blogspot/yetanothercoders/collections/Collectors2.java\n",
        "code": [
          "                (BiConsumer<Table<R, C, V>, T>) (objectObjectObjectHashBasedTable, o) ->\n",
          "                        objectObjectObjectHashBasedTable.put(rowMapper.apply(o), columnMapper.apply(o), valueMapper.apply(o)),\n",
          "\n",
          "                //Combiner\n",
          "                (rcvHashBasedTable, rcvHashBasedTable2) -> {\n",
          "                    Table<R, C, V> newTable = create(rcvHashBasedTable);\n",
          "                    newTable.putAll(rcvHashBasedTable2);\n",
          "                    return newTable;\n",
          "                },\n",
          "\n",
          "                Collector.Characteristics.UNORDERED\n"
        ],
        "line_number": 53,
        "start_line": 49,
        "end_line": 59
      }
    ],
    "com.google.common.collect.TreeMultimap.create": [
      {
        "link": "https://github.com/pashkazp/dostavka/blob/816c0d7d0eb6aca3460f87892175ac240689cda7/dostavka/dostavka-service/src/main/java/ua/com/sipsoft/service/exception/AuditException.java\n",
        "code": [
          "@Setter\n",
          "public class AuditException extends CustomGenericException {\n",
          "\n",
          "\tprivate static final long serialVersionUID = 4728309790778116393L;\n",
          "\n",
          "\tprivate Multimap<String, String> auditMessages = TreeMultimap.create();\n",
          "\n",
          "\tpublic AuditException(AuditResponse audit) {\n",
          "\t\taudit.getMessages().forEach((key, value) -> auditMessages.put(key, value));\n",
          "\t}\n",
          "\n"
        ],
        "line_number": 15,
        "start_line": 11,
        "end_line": 21
      },
      {
        "link": "}https://github.com/eclipse/org.aspectj/blob/32b2585c55ba8dbc5e1ee5fa522e7074f76040fb/tests/bugs167/pr296040/ErrorClass.java\n",
        "code": [
          "import com.google.common.collect.TreeMultimap;\n",
          "\n",
          "public class ErrorClass {\n",
          "\n",
          "    public void useGoogleCollections() {\n",
          "        TreeMultimap<String, String> countResult = TreeMultimap.create();\n",
          "        Set<Entry<String, String>> entries = countResult.entries();\n",
          "        System.out.println(entries.size());\n",
          "    }\n",
          "\n",
          "    public static void main(String[] args) {\n"
        ],
        "line_number": 8,
        "start_line": 4,
        "end_line": 14
      },
      {
        "link": "https://github.com/AnonNPEX/AnonNPEX/blob/1f70f2e8e7dd6c4a16c3770f60c87d4bfaf3c6af/benchmarks/Ours/fastjson_7c05c6f/src/test/java/com/alibaba/json/bvt/guava/ArrayListMultimapTest.java\n",
        "code": [
          "/**\n",
          " * Created by wenshao on 15/01/2017.\n",
          " */\n",
          "public class ArrayListMultimapTest extends TestCase {\n",
          "    public void test_for_multimap() throws Exception {\n",
          "        ArrayListMultimap<String, Integer> multimap = ArrayListMultimap.create();\n",
          "        multimap.putAll(\"b\", Ints.asList(2, 4, 6));\n",
          "        multimap.putAll(\"a\", Ints.asList(4, 2, 1));\n",
          "        multimap.putAll(\"c\", Ints.asList(2, 5, 3));\n",
          "\n",
          "\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": "https://github.com/tangchuanyan/fastjson/blob/4b44cf4d8a2aa7307ef79a02ca2e2998956173e7/src/test/java/com/alibaba/json/bvt/guava/ArrayListMultimapTest.java\n",
        "code": [
          "/**\n",
          " * Created by wenshao on 15/01/2017.\n",
          " */\n",
          "public class ArrayListMultimapTest extends TestCase {\n",
          "    public void test_for_multimap() throws Exception {\n",
          "        ArrayListMultimap<String, Integer> multimap = ArrayListMultimap.create();\n",
          "        multimap.putAll(\"b\", Ints.asList(2, 4, 6));\n",
          "        multimap.putAll(\"a\", Ints.asList(4, 2, 1));\n",
          "        multimap.putAll(\"c\", Ints.asList(2, 5, 3));\n",
          "\n",
          "\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": "https://github.com/kamilwsb/fastjson/blob/5bf67baf4723b12054f1eaac3bb97998610d98dc/src/test/java/com/alibaba/json/bvt/guava/ArrayListMultimapTest.java\n",
        "code": [
          "/**\n",
          " * Created by wenshao on 15/01/2017.\n",
          " */\n",
          "public class ArrayListMultimapTest extends TestCase {\n",
          "    public void test_for_multimap() throws Exception {\n",
          "        ArrayListMultimap<String, Integer> multimap = ArrayListMultimap.create();\n",
          "        multimap.putAll(\"b\", Ints.asList(2, 4, 6));\n",
          "        multimap.putAll(\"a\", Ints.asList(4, 2, 1));\n",
          "        multimap.putAll(\"c\", Ints.asList(2, 5, 3));\n",
          "\n",
          "\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": "https://github.com/d1sant/research-and-dev/blob/eda2c58f7a7ec34832fa25580c16a152c2b53367/src/main/java/com/my/research/and/dev/TreeMultimaps.java\n",
        "code": [
          "public class TreeMultimaps {\n",
          "\n",
          "    private static final Random random = new Random();\n",
          "\n",
          "    public static void main(String[] args) {\n",
          "        final TreeMultimap<Integer, Integer> multimap = TreeMultimap.create();\n",
          "        for (int i = 0; i < 10; i++) {\n",
          "            multimap.put(i, random.nextInt());\n",
          "            multimap.put(i, random.nextInt());\n",
          "        }\n",
          "        System.out.println(multimap.size());\n"
        ],
        "line_number": 11,
        "start_line": 7,
        "end_line": 17
      },
      {
        "link": "}https://github.com/JamesCao2048/BlizzardData/blob/a524bec4f0d297bb748234eeb1c2fcdee3dce7d7/Corpus/aspectj/4060.java\n",
        "code": [
          "import com.google.common.collect.TreeMultimap;\n",
          "\n",
          "public class ErrorClass {\n",
          "\n",
          "    public void useGoogleCollections() {\n",
          "        TreeMultimap<String, String> countResult = TreeMultimap.create();\n",
          "        Set<Entry<String, String>> entries = countResult.entries();\n",
          "        System.out.println(entries.size());\n",
          "    }\n",
          "\n",
          "    public static void main(String[] args) {\n"
        ],
        "line_number": 8,
        "start_line": 4,
        "end_line": 14
      },
      {
        "link": "https://github.com/MarcinSzramka/Maven/blob/5bf67baf4723b12054f1eaac3bb97998610d98dc/src/test/java/com/alibaba/json/bvt/guava/ArrayListMultimapTest.java\n",
        "code": [
          "/**\n",
          " * Created by wenshao on 15/01/2017.\n",
          " */\n",
          "public class ArrayListMultimapTest extends TestCase {\n",
          "    public void test_for_multimap() throws Exception {\n",
          "        ArrayListMultimap<String, Integer> multimap = ArrayListMultimap.create();\n",
          "        multimap.putAll(\"b\", Ints.asList(2, 4, 6));\n",
          "        multimap.putAll(\"a\", Ints.asList(4, 2, 1));\n",
          "        multimap.putAll(\"c\", Ints.asList(2, 5, 3));\n",
          "\n",
          "\n"
        ],
        "line_number": 13,
        "start_line": 9,
        "end_line": 19
      },
      {
        "link": "https://github.com/Raf0707/Musicspeed/blob/8c60d0e7d456512f7a4642ed8bb3602f44cb7149/src/java/de/javakaffee/kryoserializers/guava/TreeMultimapSerializer.java\n",
        "code": [
          "    public static void registerSerializers(Kryo kryo) {\n",
          "        kryo.register(TreeMultimap.class, (Serializer)new TreeMultimapSerializer());\n",
          "    }\n",
          "\n",
          "    public TreeMultimap<Comparable, Comparable> read(Kryo kryo, Input input, Class<TreeMultimap<Comparable, Comparable>> class_) {\n",
          "        TreeMultimap treeMultimap = TreeMultimap.create();\n",
          "        this.readMultimap(kryo, input, treeMultimap);\n",
          "        return treeMultimap;\n",
          "    }\n",
          "\n",
          "    public void write(Kryo kryo, Output output, TreeMultimap<Comparable, Comparable> treeMultimap) {\n"
        ],
        "line_number": 40,
        "start_line": 36,
        "end_line": 46
      },
      {
        "link": "}https://github.com/OpenUniversity/ajc/blob/9a8e1676fc022ce5fee89782a701057eee563864/tests/bugs167/pr296040/ErrorClass.java\n",
        "code": [
          "import com.google.common.collect.TreeMultimap;\n",
          "\n",
          "public class ErrorClass {\n",
          "\n",
          "    public void useGoogleCollections() {\n",
          "        TreeMultimap<String, String> countResult = TreeMultimap.create();\n",
          "        Set<Entry<String, String>> entries = countResult.entries();\n",
          "        System.out.println(entries.size());\n",
          "    }\n",
          "\n",
          "    public static void main(String[] args) {\n"
        ],
        "line_number": 8,
        "start_line": 4,
        "end_line": 14
      }
    ],
    "com.google.common.collect.MinMaxPriorityQueue.create": [
      {
        "link": "https://github.com/rohannr/elevator-control-system/blob/5ad509697a14dbcf06705241e5029753f63f81bf/src/main/java/com/rohan/meso/Elevator.java\n",
        "code": [
          "  public Elevator(int id, int numFloors) {\n",
          "    this.id = id;\n",
          "    this.currentFloor = 1;\n",
          "    this.numFloors = numFloors;\n",
          "    this.direction = ElevatorState.STILL;\n",
          "    this.destinations = MinMaxPriorityQueue.create();\n",
          "    this.requests = Lists.newLinkedList();\n",
          "  }\n",
          "\n",
          "  public void moveUp() {\n",
          "    this.currentFloor++;\n"
        ],
        "line_number": 36,
        "start_line": 32,
        "end_line": 42
      },
      {
        "link": "https://github.com/mayukhdas/MLNBoostDB/blob/7013f1b1db402006fb9e14203e70082e3b0289ef/src/edu/soic/Learning/Boosting/Beam.java\n",
        "code": [
          "import edu.soic.FOL.HornClause;\n",
          "\n",
          "public class Beam {\n",
          "\tprivate int maxSize;\n",
          "\t\n",
          "\tMinMaxPriorityQueue<HornClause> pq = MinMaxPriorityQueue.create();\n",
          "\t\n",
          "\tpublic Beam(int maxSize){\n",
          "\t\tthis.maxSize = maxSize;\n",
          "\t}\n",
          "\t\n"
        ],
        "line_number": 8,
        "start_line": 4,
        "end_line": 14
      },
      {
        "link": "https://github.com/f361600134/coral/blob/d2dd8a72cf415176b606ffcc0c4faa57788e3435/coral-server/src/test/java/org/coral/server/queue/QueueTest.java\n",
        "code": [
          "//\t\tqueue =\tJSON.parseObject(json, new TypeReference<CircularFifoQueue<Integer>>() {});\r\n",
          "//\t\tSystem.out.println(queue);\r\n",
          "\t}\r\n",
          "\t\r\n",
          "\tpublic static void testEvictingQueue() {\r\n",
          "\t\tEvictingQueue<Integer> queue = EvictingQueue.create(2);\r\n",
          "\t\tqueue.add(1);\r\n",
          "\t\tqueue.add(2);\r\n",
          "\t\tqueue.add(3);\r\n",
          "//\t\tSystem.out.println(queue);\r\n",
          "//\t\tJSONObject  json = JSONObject.toJSON(queue);\r\n"
        ],
        "line_number": 35,
        "start_line": 31,
        "end_line": 41
      },
      {
        "link": "https://github.com/sabram/DataStructures/blob/e0ddd8544f20305d8159dd85926d6f8c5b8f006b/src/main/java/com/shaunabram/datastructures/misc/MaxProfits.java\n",
        "code": [
          "     * Note that since head of a PriorityQueue is the min element, and\n",
          "     * we want the max, we are using a MinMaxPriorityQueue, which\n",
          "     * provides both peek() and peekLast() in constant time.\n",
          "     */\n",
          "    private static MinMaxPriorityQueue<Integer> createHeapOfPrices(Integer[] stockPrices) {\n",
          "        MinMaxPriorityQueue<Integer> maxPricesHeap = MinMaxPriorityQueue.create();\n",
          "        for (Integer stockPrice : stockPrices) {\n",
          "            maxPricesHeap.add(stockPrice);\n",
          "        }\n",
          "        return maxPricesHeap;\n",
          "    }\n"
        ],
        "line_number": 37,
        "start_line": 33,
        "end_line": 43
      },
      {
        "link": "https://github.com/tomekl007/algAnalysisDesign/blob/e2d082e596a0ddcccda1eda6649669cd288b8daf/src/main/java/ch4_sortingAndSearching/HeapSort.java\n",
        "code": [
          " */\n",
          "public class HeapSort extends SortAlgorithm {\n",
          "\n",
          "\n",
          "    private MinMaxPriorityQueue<Integer> makeHeap(Integer[] s) {\n",
          "        MinMaxPriorityQueue<Integer> heap = MinMaxPriorityQueue.create();\n",
          "        heap.addAll(Arrays.asList(s));//initialization of heap is n\n",
          "        return heap;\n",
          "    }\n",
          "\n",
          "    @Override\n"
        ],
        "line_number": 15,
        "start_line": 11,
        "end_line": 21
      },
      {
        "link": "}https://github.com/vinaypunrao68/fds-src/blob/a394065a14dd38b406d57ac3192eff532d34e73e/source/java/fds-project/fds/src/main/java/com/formationds/om/plotter/VolumeStatistics.java\n",
        "code": [
          "    private final MinMaxPriorityQueue<VolumeDatapoint> window;\n",
          "    private final Duration duration;\n",
          "\n",
          "    public VolumeStatistics(Duration duration) {\n",
          "        this.duration = duration;\n",
          "        window = MinMaxPriorityQueue.create();\n",
          "    }\n",
          "\n",
          "    public int size() {\n",
          "        synchronized (window) {\n",
          "            return window.size();\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      },
      {
        "link": "https://github.com/mydiemho/insight/blob/af34f34a35313035b98a34f67dbcf7535ff77180/src/main/java/MedianProcessor.java\n",
        "code": [
          "\n",
          "    // # of lines read so far, used to keep track of values in both heap\n",
          "    private int lineCount = 0;\n",
          "\n",
          "    public MedianProcessor() {\n",
          "        minHeap =  MinMaxPriorityQueue.create();\n",
          "        maxHeap =  MinMaxPriorityQueue.create();\n",
          "        runningMedians = new LinkedList<Double>();\n",
          "    }\n",
          "\n",
          "    public void add(int wordCount) {\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/imalygin/stanford_algoritms2/blob/6d714d3a6e9ebd78fa082cedeb9a15bc40330fe5/src/org/imalygin/graph/GreedyAlgorithm.java\n",
        "code": [
          "        InputStream inputStream = OrderOfRatio.class.getClassLoader().getResourceAsStream(\"org/imalygin/graph/jobs.txt\");\n",
          "        fileReader = new BufferedReader(new InputStreamReader(inputStream));\n",
          "    }\n",
          "\n",
          "    public void doStuff(){\n",
          "        MinMaxPriorityQueue<LengthWeight> queue = MinMaxPriorityQueue.create();\n",
          "        int numberOfJobs = numberOfJobs();\n",
          "        for (int i = 0; i < numberOfJobs; i++) {\n",
          "            queue.add(getNext());\n",
          "        }\n",
          "\n"
        ],
        "line_number": 23,
        "start_line": 19,
        "end_line": 29
      },
      {
        "link": "https://github.com/hn5092/MR-FOR-WORK/blob/e6eab6c0196a459b1735d0fb7b0108588e87587e/src/main/java/com/x/hadoop/mr/bbs/Model.java\n",
        "code": [
          "\t\t\t\tthrows IOException, InterruptedException {\n",
          "\t\t\tStringBuffer count = new StringBuffer();\n",
          "\t\t\t//\u00e7\u008b\u00ac\u00e7\u00ab\u008b\u00e8\u00ae\u00bf\u00e9\u0097\u00ae\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e9\u0097\u00b4\n",
          "\t\t\tList<Long> list = new ArrayList<Long>();\n",
          "\t\t\t//\u00e4\u00bf\u009d\u00e5\u00ad\u0098\u00e6\u0089\u0080\u00e6\u009c\u0089\u00e6\u0097\u00b6\u00e9\u0097\u00b4    \u00e7\u0084\u00b6\u00e5\u0090\u008e\u00e6\u008e\u0092\u00e5\u00ba\u008f\n",
          "\t\t\tMinMaxPriorityQueue<Long> maxPriorityQueue  = MinMaxPriorityQueue.create();;\n",
          "\t\t\tlong temp = 0;\n",
          "\t\t\tfor (Text t : v2) {\n",
          "\t\t\t\tlong parseLong = Long.parseLong(t.toString());\n",
          "\t\t\t\t \n",
          "\t\t\t\tmaxPriorityQueue.add(parseLong);\n"
        ],
        "line_number": 73,
        "start_line": 69,
        "end_line": 79
      },
      {
        "link": "https://github.com/leetp/biscotti/blob/3792f5ab96f767f1872f3e70d42a59b4647f8c79/src/QueueTest.java\n",
        "code": [
          "\t/**\r\n",
          "\t * @param args\r\n",
          "\t */\r\n",
          "\tpublic static void main(String[] args) {\r\n",
          "\r\n",
          "\t\tMinMaxPriorityQueue<Integer> guavaQueue = MinMaxPriorityQueue.create();\r\n",
          "\t\tPriorityQueue<Integer> javaQueue = new PriorityQueue<Integer>();\r\n",
          "\t\tTreeQueue<Integer> treeQueue = TreeQueue.create();\r\n",
          "\t\t\r\n",
          "\t\tint num = 10000000;\r\n",
          "\r\n"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      }
    ],
    "com.google.common.cache.LoadingCache.getAll": [
      {
        "link": "https://github.com/tclan126/glassdoorapk/blob/858772b5f2caa20a9370c52d8dbda83da4ee1d69/sources/com/google/common/cache/ForwardingLoadingCache.java\n",
        "code": [
          "    public V get(K k2) throws java.util.concurrent.ExecutionException {\n",
          "        return delegate().get(k2);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache\n",
          "    public com.google.common.collect.ImmutableMap<K, V> getAll(java.lang.Iterable<? extends K> iterable) throws java.util.concurrent.ExecutionException {\n",
          "        return delegate().getAll(iterable);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache\n",
          "    public V getUnchecked(K k2) {\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/One-Platform/cache/blob/858fabdd5d94af82d64d1b26585d8d2437a1f953/src/main/java/com/sinosoft/one/cache/guava/GuavaLoadingCache.java\n",
        "code": [
          "\t * \n",
          "\t * @param keys\n",
          "\t * @return\n",
          "\t * @throws ExecutionException\n",
          "\t */\n",
          "\tpublic Map<K, V> getAll(Iterable<? extends K> keys)\n",
          "\t\t\tthrows ExecutionException {\n",
          "\t\treturn loadingCache.getAll(keys);\n",
          "\t}\n",
          "\t\n",
          "\t/**\n"
        ],
        "line_number": 41,
        "start_line": 37,
        "end_line": 47
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/cache/ForwardingLoadingCache.java\n",
        "code": [
          "    public V getUnchecked(K k) {\n",
          "        return delegate().getUnchecked(k);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache\n",
          "    public ImmutableMap<K, V> getAll(Iterable<? extends K> iterable) throws ExecutionException {\n",
          "        return delegate().getAll(iterable);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache, com.google.common.base.Function\n",
          "    public V apply(K k) {\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/cache/ForwardingLoadingCache.java\n",
        "code": [
          "    public V getUnchecked(K k) {\n",
          "        return delegate().getUnchecked(k);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache\n",
          "    public ImmutableMap<K, V> getAll(Iterable<? extends K> iterable) throws ExecutionException {\n",
          "        return delegate().getAll(iterable);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache, com.google.common.base.Function, java.util.function.Function\n",
          "    public V apply(K k) {\n"
        ],
        "line_number": 27,
        "start_line": 23,
        "end_line": 33
      },
      {
        "link": "https://github.com/duyleekun/zycami-ded/blob/27686ca846de6d164692c81bac2ae7f85710361f/src/main/java/com/google/common/cache/ForwardingLoadingCache.java\n",
        "code": [
          "\n",
          "    public Object get(Object object) {\n",
          "        return this.delegate().get(object);\n",
          "    }\n",
          "\n",
          "    public ImmutableMap getAll(Iterable iterable) {\n",
          "        return this.delegate().getAll(iterable);\n",
          "    }\n",
          "\n",
          "    public Object getUnchecked(Object object) {\n",
          "        return this.delegate().getUnchecked(object);\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      },
      {
        "link": "}https://github.com/github/codeql/blob/9dc28eb9b55d712b737fc53c04814cb8a991b65a/java/ql/test/library-tests/frameworks/guava/generated/cache/Test.java\n",
        "code": [
          "\t\t}\n",
          "\t\t{\n",
          "\t\t\t// \"com.google.common.cache;LoadingCache;true;getAll;(Iterable);;Element of Argument[0];MapKey of Argument[-1];value\"\n",
          "\t\t\tLoadingCache out = null;\n",
          "\t\t\tIterable in = (Iterable)newWithElement(source());\n",
          "\t\t\tout.getAll(in);\n",
          "\t\t\tsink(getMapKey(out)); // $ hasValueFlow\n",
          "\t\t}\n",
          "\t\t{\n",
          "\t\t\t// \"com.google.common.cache;LoadingCache;true;getAll;(Iterable);;Element of Argument[0];MapKey of ReturnValue;value\"\n",
          "\t\t\tImmutableMap out = null;\n"
        ],
        "line_number": 152,
        "start_line": 148,
        "end_line": 158
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/cache/ForwardingLoadingCache.java\n",
        "code": [
          "    public V getUnchecked(K key) {\n",
          "        return delegate().getUnchecked(key);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache\n",
          "    public ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException {\n",
          "        return delegate().getAll(keys);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache, com.google.common.base.Function\n",
          "    public V apply(K key) {\n"
        ],
        "line_number": 27,
        "start_line": 23,
        "end_line": 33
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.deviceauthserver-DeviceAuthServer/sources/com/google/common/cache/ForwardingLoadingCache.java\n",
        "code": [
          "    public V getUnchecked(K key) {\n",
          "        return delegate().getUnchecked(key);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache\n",
          "    public ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException {\n",
          "        return delegate().getAll(keys);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache, com.google.common.base.Function\n",
          "    public V apply(K key) {\n"
        ],
        "line_number": 27,
        "start_line": 23,
        "end_line": 33
      },
      {
        "link": "}https://github.com/potar-vietcombank/https-github.com/blob/2096c0aab11213a5414c7c56ea9ba47c00d843e3/java/ql/test/library-tests/frameworks/guava/generated/cache/Test.java\n",
        "code": [
          "\t\t}\n",
          "\t\t{\n",
          "\t\t\t// \"com.google.common.cache;LoadingCache;true;getAll;(Iterable);;Element of Argument[0];MapKey of Argument[-1];value\"\n",
          "\t\t\tLoadingCache out = null;\n",
          "\t\t\tIterable in = (Iterable)newWithElement(source());\n",
          "\t\t\tout.getAll(in);\n",
          "\t\t\tsink(getMapKey(out)); // $ hasValueFlow\n",
          "\t\t}\n",
          "\t\t{\n",
          "\t\t\t// \"com.google.common.cache;LoadingCache;true;getAll;(Iterable);;Element of Argument[0];MapKey of ReturnValue;value\"\n",
          "\t\t\tImmutableMap out = null;\n"
        ],
        "line_number": 152,
        "start_line": 148,
        "end_line": 158
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/cache/ForwardingLoadingCache.java\n",
        "code": [
          "    public V getUnchecked(K k) {\n",
          "        return delegate().getUnchecked(k);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache\n",
          "    public ImmutableMap<K, V> getAll(Iterable<? extends K> iterable) throws ExecutionException {\n",
          "        return delegate().getAll(iterable);\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.LoadingCache, com.google.common.base.Function\n",
          "    public V apply(K k) {\n"
        ],
        "line_number": 27,
        "start_line": 23,
        "end_line": 33
      }
    ],
    "com.google.common.base.CharMatcher.forPredicate": [
      {
        "link": "https://github.com/houjichao/spring-boot-learn/blob/e0b16d447472bad825f7da68c7048164da95e7e1/src/main/java/com/hjc/learn/util/GuavaCharMatcherUtil.java\n",
        "code": [
          "     * @return \u00e5\u0089\u0094\u00e9\u0099\u00a4\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\n",
          "     */\n",
          "    public static String retainLetterOrDigit(String str) {\n",
          "        //\u00e5\u008c\u00b9\u00e9\u0085",
          "\u008d\u00e5\u00ad\u0097\u00e6\u00af\u008d\u00ef\u00bc\u0088\u00e5\u0090\u00ab\u00e4\u00b8\u00ad\u00e6\u0096\u0087\u00ef\u00bc\u0089\u00e6\u0088\u0096\u00e6\u0095\u00b0\u00e5\u00ad\u0097\n",
          "        CharMatcher matcher = CharMatcher.forPredicate(Character::isLetterOrDigit);\n",
          "        //\u00e4\u00bf\u009d\u00e7\u0095\u0099\u00e5\u008c\u00b9\u00e9\u0085",
          "\u008d\u00e5\u0088\u00b0\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\n",
          "        return  matcher.retainFrom(str);\n",
          "    }\n",
          "\n"
        ],
        "line_number": 44,
        "start_line": 40,
        "end_line": 50
      },
      {
        "link": "https://github.com/BigPayno/JavaGuide/blob/512f084343e03de87e4949dd66fba77eb69972ed/src/main/java/guava/string/CharMattcherGuide.java\n",
        "code": [
          "    private void matcher(){\n",
          "        CharMatcher.javaIsoControl();\n",
          "        CharMatcher.javaDigit();\n",
          "        CharMatcher.javaLetter();\n",
          "        CharMatcher.javaLetterOrDigit();\n",
          "        CharMatcher.forPredicate(Character::isDigit);\n",
          "    }\n",
          "    private static void function(){\n",
          "        /**\n",
          "         * \u00e6\u0081\u0092\u00e6\u0088\u0090\u00e7\u00ab\u008b\u00e3\u0080\u0081\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e3\u0080\u0081\u00e4\u00b8\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8\n",
          "         */\n"
        ],
        "line_number": 19,
        "start_line": 15,
        "end_line": 25
      },
      {
        "link": "https://github.com/salesforce/omakase/blob/97e79c5cf0189ba5dc55144d9e7209133bc8507d/src/main/java/com/salesforce/omakase/parser/token/Tokens.java\n",
        "code": [
          "\n",
          "    /** hyphen or digit */\n",
          "    HYPHEN_OR_DIGIT(is('-').or(inRange('0', '9')), \"hyphen or digit\"),\n",
          "\n",
          "    /** a token that never matches */\n",
          "    NEVER_MATCH(forPredicate(c -> false), \"a token that never matches\");\n",
          "\n",
          "    private final char singleChar;\n",
          "    private final boolean isSingleChar;\n",
          "    private final CharMatcher matcher;\n",
          "    private final String description;\n"
        ],
        "line_number": 152,
        "start_line": 148,
        "end_line": 158
      },
      {
        "link": "https://github.com/pranav0087/GUAVA/blob/c77be7a745fc5e0992126949832c6c25253ad289/android/guava-tests/test/com/google/common/base/CharMatcherTest.java\n",
        "code": [
          "    doTestSetBits(anyOf(\"x\"));\n",
          "    doTestSetBits(anyOf(\"xy\"));\n",
          "    doTestSetBits(anyOf(\"CharMatcher\"));\n",
          "    doTestSetBits(noneOf(\"CharMatcher\"));\n",
          "    doTestSetBits(inRange('n', 'q'));\n",
          "    doTestSetBits(forPredicate(Predicates.equalTo('c')));\n",
          "    doTestSetBits(CharMatcher.ascii());\n",
          "    doTestSetBits(CharMatcher.digit());\n",
          "    doTestSetBits(CharMatcher.invisible());\n",
          "    doTestSetBits(CharMatcher.whitespace());\n",
          "    doTestSetBits(inRange('A', 'Z').and(inRange('F', 'K').negate()));\n"
        ],
        "line_number": 122,
        "start_line": 118,
        "end_line": 128
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/CharMatcherUtil.java\n",
        "code": [
          "*/ \n",
          "public static com.google.common.base.CharMatcher digit(){\n",
          "\treturn com.google.common.base.CharMatcher.digit();\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.base.CharMatcher#forPredicate(com.google.common.base.Predicate<? super java.lang.Character>)}\n",
          "*@see com.google.common.base.CharMatcher#forPredicate(com.google.common.base.Predicate<? super java.lang.Character>)\n",
          "*<code>public static com.google.common.base.CharMatcher com.google.common.base.CharMatcher.forPredicate(com.google.common.base.Predicate<? super java.lang.Character>)\n",
          "*forPredicate(com.google.common.base.Predicate<? super java.lang.Character> p0)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 79,
        "start_line": 75,
        "end_line": 85
      },
      {
        "link": "https://github.com/dubu/guava-libraries/blob/47b7717473d269db4a5af25678bccce73c736c66/guava-tests/test/com/google/common/base/CharMatcherTest.java\n",
        "code": [
          "    doTestSetBits(anyOf(\"x\"));\n",
          "    doTestSetBits(anyOf(\"xy\"));\n",
          "    doTestSetBits(anyOf(\"CharMatcher\"));\n",
          "    doTestSetBits(noneOf(\"CharMatcher\"));\n",
          "    doTestSetBits(inRange('n', 'q'));\n",
          "    doTestSetBits(forPredicate(Predicates.equalTo('c')));\n",
          "    doTestSetBits(CharMatcher.ASCII);\n",
          "    doTestSetBits(CharMatcher.DIGIT);\n",
          "    doTestSetBits(CharMatcher.INVISIBLE);\n",
          "    doTestSetBits(CharMatcher.WHITESPACE);\n",
          "    doTestSetBits(inRange('A', 'Z').and(inRange('F', 'K').negate()));\n"
        ],
        "line_number": 123,
        "start_line": 119,
        "end_line": 129
      },
      {
        "link": "https://github.com/dubu/guava-libraries/blob/47b7717473d269db4a5af25678bccce73c736c66/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/CharMatcherTest.java\n",
        "code": [
          "    doTestEmpty(anyOf(\"x\"));\n",
          "    doTestEmpty(anyOf(\"xy\"));\n",
          "    doTestEmpty(anyOf(\"CharMatcher\"));\n",
          "    doTestEmpty(noneOf(\"CharMatcher\"));\n",
          "    doTestEmpty(inRange('n', 'q'));\n",
          "    doTestEmpty(forPredicate(Predicates.equalTo('c')));\n",
          "  }\n",
          "\n",
          "  private void doTestEmpty(CharMatcher matcher) throws Exception {\n",
          "    reallyTestEmpty(matcher);\n",
          "    reallyTestEmpty(matcher.negate());\n"
        ],
        "line_number": 103,
        "start_line": 99,
        "end_line": 109
      },
      {
        "link": "https://github.com/tinyking/guava/blob/de0bdfdf44dd95fdc275a8d49c7110ae9c4c12d6/guava-tests/test/com/google/common/base/CharMatcherTest.java\n",
        "code": [
          "    doTestSetBits(anyOf(\"x\"));\n",
          "    doTestSetBits(anyOf(\"xy\"));\n",
          "    doTestSetBits(anyOf(\"CharMatcher\"));\n",
          "    doTestSetBits(noneOf(\"CharMatcher\"));\n",
          "    doTestSetBits(inRange('n', 'q'));\n",
          "    doTestSetBits(forPredicate(Predicates.equalTo('c')));\n",
          "    doTestSetBits(CharMatcher.ascii());\n",
          "    doTestSetBits(CharMatcher.digit());\n",
          "    doTestSetBits(CharMatcher.invisible());\n",
          "    doTestSetBits(CharMatcher.whitespace());\n",
          "    doTestSetBits(inRange('A', 'Z').and(inRange('F', 'K').negate()));\n"
        ],
        "line_number": 122,
        "start_line": 118,
        "end_line": 128
      },
      {
        "link": "https://github.com/pranav0087/GUAVA/blob/c77be7a745fc5e0992126949832c6c25253ad289/guava-tests/test/com/google/common/base/CharMatcherTest.java\n",
        "code": [
          "    doTestSetBits(anyOf(\"x\"));\n",
          "    doTestSetBits(anyOf(\"xy\"));\n",
          "    doTestSetBits(anyOf(\"CharMatcher\"));\n",
          "    doTestSetBits(noneOf(\"CharMatcher\"));\n",
          "    doTestSetBits(inRange('n', 'q'));\n",
          "    doTestSetBits(forPredicate(Predicates.equalTo('c')));\n",
          "    doTestSetBits(CharMatcher.ascii());\n",
          "    doTestSetBits(CharMatcher.digit());\n",
          "    doTestSetBits(CharMatcher.invisible());\n",
          "    doTestSetBits(CharMatcher.whitespace());\n",
          "    doTestSetBits(inRange('A', 'Z').and(inRange('F', 'K').negate()));\n"
        ],
        "line_number": 122,
        "start_line": 118,
        "end_line": 128
      },
      {
        "link": "https://github.com/privatemousse/guava/blob/729800f33ca04808da7906dfa6356e179c91df7e/guava-tests/test/com/google/common/base/CharMatcherTest.java\n",
        "code": [
          "    doTestSetBits(anyOf(\"x\"));\n",
          "    doTestSetBits(anyOf(\"xy\"));\n",
          "    doTestSetBits(anyOf(\"CharMatcher\"));\n",
          "    doTestSetBits(noneOf(\"CharMatcher\"));\n",
          "    doTestSetBits(inRange('n', 'q'));\n",
          "    doTestSetBits(forPredicate(Predicates.equalTo('c')));\n",
          "    doTestSetBits(CharMatcher.ascii());\n",
          "    doTestSetBits(CharMatcher.digit());\n",
          "    doTestSetBits(CharMatcher.invisible());\n",
          "    doTestSetBits(CharMatcher.whitespace());\n",
          "    doTestSetBits(inRange('A', 'Z').and(inRange('F', 'K').negate()));\n"
        ],
        "line_number": 123,
        "start_line": 119,
        "end_line": 129
      }
    ],
    "com.google.common.collect.Collections2.transform": [
      {
        "link": "https://github.com/18965050/oasis/blob/e5f1cfa32b74fe37aaf0872c497f7c8502df052d/oasis-common-test/src/test/java/cn/xyz/chaos/guava/common/collection/Collections2Test.java\n",
        "code": [
          "\n",
          "        assertThat(filtered.isEmpty(), is(true));\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.collect.Collections2#transform(Collection, Function)} \u00e6\u00b5\u008b\u00e8\u00af\u0095\n",
          "     *\n",
          "     * @throws Exception\n",
          "     */\n",
          "    @Test\n",
          "    public void testTransform() throws Exception {\n"
        ],
        "line_number": 69,
        "start_line": 65,
        "end_line": 75
      }
    ],
    "com.google.common.collect.Lists.transform": [
      {
        "link": "https://github.com/svetanis/data-structures/blob/10bb37f00f825825a01ca8d77da5596abfe6e913/src/main/java/com/svetanis/datastructures/tree/trie/HotelReviews.java\n",
        "code": [
          "\n",
          "public final class HotelReviews {\n",
          "\n",
          "  public static ImmutableList<Integer> sortReviews(String good, List<String> list) {\n",
          "    List<String> words = split('_', good);\n",
          "    List<ImmutableList<String>> lists = transform(list, s -> split('_', s));\n",
          "    Node root = Trie.build(words).getRoot();\n",
          "    List<Rank> ranks = newArrayList();\n",
          "    for (int i = 0; i < lists.size(); i++) {\n",
          "      int score = 0;\n",
          "      for (String str : lists.get(i)) {\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      },
      {
        "link": "https://github.com/opendata-euskadi/fabric-r01f/blob/87b8c436b778bc4dbd40ca964cf61a652ec73a14/r01fBase/r01fBaseClasses/src/main/java/r01f/util/types/collections/Lists.java\n",
        "code": [
          "\t\treturn com.google.common.collect.Lists.reverse(list);\r\n",
          "\t}\r\n",
          "\t/**\r\n",
          "\t * Returns a list that applies function to each element of fromList.\r\n",
          "\t */\r\n",
          "\tpublic static <E,T> List<T> transform(final List<E> fromList,final Function<? super E,? extends T> function) {\r\n",
          "\t\treturn com.google.common.collect.Lists.transform(fromList,function);\r\n",
          "\t}\r\n",
          "/////////////////////////////////////////////////////////////////////////////////////////\r\n",
          "//  \r\n",
          "/////////////////////////////////////////////////////////////////////////////////////////\r\n"
        ],
        "line_number": 87,
        "start_line": 83,
        "end_line": 93
      },
      {
        "link": "https://github.com/ash2005/r01fb/blob/6a0868955e2aac054eb4ca292a8030cd40f5a599/r01fbClasses/src/r01f/util/types/collections/Lists.java\n",
        "code": [
          "\t\treturn com.google.common.collect.Lists.reverse(list);\n",
          "\t}\n",
          "\t/**\n",
          "\t * Returns a list that applies function to each element of fromList.\n",
          "\t */\n",
          "\tpublic static <E,T> List<T> transform(final List<E> fromList,final Function<? super E,? extends T> function) {\n",
          "\t\treturn com.google.common.collect.Lists.transform(fromList,function);\n",
          "\t}\n",
          "/////////////////////////////////////////////////////////////////////////////////////////\n",
          "//  \n",
          "/////////////////////////////////////////////////////////////////////////////////////////\n"
        ],
        "line_number": 87,
        "start_line": 83,
        "end_line": 93
      },
      {
        "link": "https://github.com/zqhxuyuan/tutorials/blob/72740ec130a15331b0b2428b9750099c47073052/middleware/src/main/java/org/tguduru/guava/collections/ListsDemo.java\n",
        "code": [
          "public class ListsDemo {\n",
          "    public static void main(String[] args) {\n",
          "        List<Integer> integers = Lists.newArrayList(1, 2, 3, 4, 5, 6);\n",
          "\n",
          "        // list transformations\n",
          "        Lists.transform(integers, new Function<Integer, Integer>() {\n",
          "            @Override\n",
          "            public Integer apply(final Integer input) {\n",
          "                return input * 2;\n",
          "            }\n",
          "        }).forEach(System.out::println);\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 22
      },
      {
        "link": "}https://github.com/charlie-stevenson/java-dfp/blob/fc540f0347313df352e4d0bbaaf1e6c216b9fb09/modules/adwords_axis_utility_extension/src/main/java/com/google/api/ads/adwords/axis/utility/extension/util/ListUtil.java\n",
        "code": [
          "   *        mainly used to transform for mixed long, Long and int.\n",
          "   *        It cannot be null\n",
          "   * @return a converted List of Strings\n",
          "   */\n",
          "  public static <T> List<String> asStringList(List<T> list) {\n",
          "    return com.google.common.collect.Lists.transform(list, Functions.toStringFunction());\n",
          "  }\n"
        ],
        "line_number": 60,
        "start_line": 56,
        "end_line": 62
      },
      {
        "link": "https://github.com/KualiCo/jute/blob/44b6d2bb2d74a9ac65a1ef4f0e78adc56f0d5687/src/main/java/org/kuali/common/jute/tree/AbstractNode.java\n",
        "code": [
          "    /**\n",
          "     * Returns the node elements in the path from the root, to get to this node. The last entry is the element from this node\n",
          "     */\n",
          "    @Override\n",
          "    public List<T> getElementPath() {\n",
          "        return transform(getPath(), Nodes.<T> nodeElementFunction());\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * Return true if this node is a child of parent\n",
          "     */\n"
        ],
        "line_number": 76,
        "start_line": 72,
        "end_line": 82
      },
      {
        "link": "}https://github.com/raymanrt/orientqb/blob/aad64874ca35b677e70a428b3b0405432eb36c50/src/main/java/com/github/raymanrt/orientqb/query/clause/CompositeClause.java\n",
        "code": [
          "        this.clauses = clauses;\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public String toString() {\n",
          "        List<String> clausesList = transform(newArrayList(clauses), whereToStringFunction);\n",
          "        return joiner.join(clausesList);\n",
          "    }\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 41
      },
      {
        "link": "https://github.com/opendata-euskadi/java-utils/blob/6f66dc26c2bd0dc136742e27a2214f2f2b43d938/r01f/r01fBase/r01fBaseClasses/src/main/java/r01f/util/types/collections/Lists.java\n",
        "code": [
          "\t\treturn com.google.common.collect.Lists.reverse(list);\n",
          "\t}\n",
          "\t/**\n",
          "\t * Returns a list that applies function to each element of fromList.\n",
          "\t */\n",
          "\tpublic static <E,T> List<T> transform(final List<E> fromList,final Function<? super E,? extends T> function) {\n",
          "\t\treturn com.google.common.collect.Lists.transform(fromList,function);\n",
          "\t}\n",
          "/////////////////////////////////////////////////////////////////////////////////////////\n",
          "//  \n",
          "/////////////////////////////////////////////////////////////////////////////////////////\n"
        ],
        "line_number": 87,
        "start_line": 83,
        "end_line": 93
      },
      {
        "link": "https://github.com/CLLKazan/UIMA-Ext/blob/a728ef58ef1cd1e0c765ba4a0bf79c48ebc0e6ce/UIMA.Ext.ML.Commons/src/main/java/ru/kfu/itis/issst/uima/ml/AbstractTieredSequenceClassifier.java\n",
        "code": [
          "        }\n",
          "        //\n",
          "        for (int tier = 0; tier < tierNum; tier++) {\n",
          "            featureExtractor.onBeforeTier(featSets, resultLabels, tier, jCas, spanAnno, seq);\n",
          "            // invoke a classifier of the current tier\n",
          "            List<List<Feature>> featValues = Lists.transform(featSets, FeatureSets.LIST_FUNCTION);\n",
          "            List<String> labelSeq = getClassifier(tier).classify(featValues);\n",
          "            if (labelSeq.size() != resultLabels.size())\n",
          "                throw new IllegalStateException(format(\n",
          "                        \"Expected outcomes: %s, actual: %s\", resultLabels.size(), labelSeq.size()));\n",
          "            Iterator<String> labelSeqIter = labelSeq.iterator();\n"
        ],
        "line_number": 52,
        "start_line": 48,
        "end_line": 58
      },
      {
        "link": "}https://github.com/nafae/developer/blob/ea3ad63c72009c83c2cdbeebfc3868905a188166/modules/adwords_axis_utility_extension/src/main/java/com/google/api/ads/adwords/axis/utility/extension/util/ListUtil.java\n",
        "code": [
          "   *        mainly used to transform for mixed long, Long and int.\n",
          "   *        It cannot be null\n",
          "   * @return a converted List of Strings\n",
          "   */\n",
          "  public static <T> List<String> asStringList(List<T> list) {\n",
          "    return com.google.common.collect.Lists.transform(list, Functions.toStringFunction());\n",
          "  }\n"
        ],
        "line_number": 62,
        "start_line": 58,
        "end_line": 64
      }
    ],
    "com.google.common.collect.Iterables.transform": [
      {
        "link": "https://github.com/jclouds/legacy-jclouds/blob/b5b3c2c77e856c2015e7ce644e5fc916d4af90b2/providers/aws-ec2/src/main/java/org/jclouds/aws/ec2/compute/strategy/AWSEC2ListNodesStrategy.java\n",
        "code": [
          "      this.spotConverter = checkNotNull(spotConverter, \"spotConverter\");\n",
          "   }\n",
          "\n",
          "   @Override\n",
          "   protected Iterable<? extends RunningInstance> pollRunningInstances() {\n",
          "      Iterable<? extends AWSRunningInstance> spots = filter(transform(concat(transform(regions.get(),\n",
          "                                                                                       allSpotInstancesInRegion())),\n",
          "                                                                      spotConverter), notNull());\n",
          "\n",
          "      return concat(super.pollRunningInstances(), spots);\n",
          "   }\n"
        ],
        "line_number": 74,
        "start_line": 70,
        "end_line": 80
      },
      {
        "link": "https://github.com/dovikn/inegotiate-android/blob/cea5e088b01ae4487d83cd1a84e6d2df78761a6e/src/com/google/common/collect/Iterables.java\n",
        "code": [
          "            this.val$iterables = iterable;\n",
          "            this.val$comparator = comparator;\n",
          "        }\n",
          "\n",
          "        public Iterator<T> iterator() {\n",
          "            return Iterators.mergeSorted(Iterables.transform(this.val$iterables, Iterables.toIterator()), this.val$comparator);\n",
          "        }\n",
          "    }\n",
          "\n",
          "    /* renamed from: com.google.common.collect.Iterables.1 */\n",
          "    static class C04601 implements Iterable<T> {\n"
        ],
        "line_number": 138,
        "start_line": 134,
        "end_line": 144
      },
      {
        "link": "https://github.com/maaili/moco/blob/b8f8c2a5d61a1e0eec14b030d6405f34f72118f1/moco-runner/src/main/java/com/github/dreamhead/moco/parser/model/MountSetting.java\n",
        "code": [
          "        return uri;\n",
          "    }\n",
          "\n",
          "    public MountPredicate[] getMountPredicates() {\n",
          "        return toArray(concat(\n",
          "                transform(includes, toInclude()),\n",
          "                transform(excludes, toExclude())), MountPredicate.class);\n",
          "    }\n",
          "\n",
          "    private Function<String, MountPredicate> toInclude() {\n",
          "        return new Function<String, MountPredicate>() {\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 40
      },
      {
        "link": "https://github.com/apache/stratos/blob/d3034a112d609a2381069d90d4e68205badbe239/dependencies/jclouds/aws-ec2/src/main/java/org/jclouds/aws/ec2/compute/strategy/AWSEC2ListNodesStrategy.java\n",
        "code": [
          "      this.spotConverter = checkNotNull(spotConverter, \"spotConverter\");\n",
          "   }\n",
          "\n",
          "   @Override\n",
          "   protected Iterable<? extends RunningInstance> pollRunningInstances() {\n",
          "      Iterable<? extends AWSRunningInstance> spots = filter(transform(concat(transform(regions.get(),\n",
          "                                                                                       allSpotInstancesInRegion())),\n",
          "                                                                      spotConverter), notNull());\n",
          "\n",
          "      return concat(super.pollRunningInstances(), spots);\n",
          "   }\n"
        ],
        "line_number": 64,
        "start_line": 60,
        "end_line": 70
      },
      {
        "link": "https://github.com/leejaygo/moco/blob/0072309ef6cc1b899c2f52d1c6b5b5d7372e4dd4/moco-runner/src/main/java/com/github/dreamhead/moco/parser/model/MountSetting.java\n",
        "code": [
          "        return uri;\n",
          "    }\n",
          "\n",
          "    public MountPredicate[] getMountPredicates() {\n",
          "        return toArray(concat(\n",
          "                transform(includes, toInclude()),\n",
          "                transform(excludes, toExclude())), MountPredicate.class);\n",
          "    }\n",
          "\n",
          "    private Function<String, MountPredicate> toInclude() {\n",
          "        return new Function<String, MountPredicate>() {\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 40
      },
      {
        "link": "https://github.com/zengfr/conuniframework-util/blob/d2b323d20e208822dff3e88a31934adbc7692c30/conuniframework-util/src/main/java/com/github/zengfr/conuniframework/util/IterableUtil.java\n",
        "code": [
          "*/ \n",
          "public static <E> java.lang.Iterable<E> skippingIterable(java.lang.Iterable<E> p0,long p1){\n",
          "\treturn org.apache.commons.collections4.IterableUtils.skippingIterable(p0,p1);\n",
          "}\n",
          "/**\n",
          "*{@link com.google.common.collect.Iterables#transform(java.lang.Iterable<F>,com.google.common.base.Function<? super F, ? extends T>)}\n",
          "*@see com.google.common.collect.Iterables#transform(java.lang.Iterable<F>,com.google.common.base.Function<? super F, ? extends T>)\n",
          "*<code>public static <F,T> java.lang.Iterable<T> com.google.common.collect.Iterables.transform(java.lang.Iterable<F>,com.google.common.base.Function<? super F, ? extends T>)\n",
          "*transform(java.lang.Iterable<F> p0,com.google.common.base.Function<? super F, ? extends T> p1)</code>\n",
          "*@author zengfr\n",
          "*@author https://github.com/zengfr/conuniframework-util\n"
        ],
        "line_number": 469,
        "start_line": 465,
        "end_line": 475
      },
      {
        "link": "https://github.com/hooj0/guava-example/blob/3c30cf3bcbd07310f8398eaffe6aefcc42da8435/src/java/main/com/cnblogs/hoojo/collections/utility_classes/IterablesTest.java\n",
        "code": [
          "\u0083\u00e7\u00b4\u00a0\u00ef\u00bc\u008c\u00e5\u008f\u0096\u00e4\u00b8\u008b\u00e6\u00a0\u00873\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e5\u0085",
          "\u0083\u00e7\u00b4\u00a0\u00ef\u00bc\u008c\u00e5\u0092\u008climit\u00e7\u009b\u00b8\u00e5\u008f\u008d\r\n",
          "\t\tSystem.out.println(Iterables.skip(iter, 3)); // [1, 7, 4, 2]\r\n",
          "\t\t\r\n",
          "\t\t// \u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00ef\u00bc\u008c\u00e5\u00b0\u0086\u00e9\u009b\u0086\u00e5\u0090\u0088Integer \u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e4\u00b8\u00ba String\r\n",
          "\t\tSystem.out.println(Iterables.transform(iter, new Function<Integer, String>() {\r\n",
          "\t\t\t@Override\r\n",
          "\t\t\tpublic String apply(Integer input) {\r\n",
          "\t\t\t\treturn null;//\"s-\" + input;\r\n",
          "\t\t\t}\r\n",
          "\t\t})); // [s-2, s-3, s-5, s-1, s-7, s-4, s-2]\r\n"
        ],
        "line_number": 192,
        "start_line": 188,
        "end_line": 198
      },
      {
        "link": "https://github.com/avibh/jclouds/blob/c595a3abcbaaa1b4f1175b4698dd47318bd60939/providers/aws-ec2/src/main/java/org/jclouds/aws/ec2/compute/strategy/AWSEC2ListNodesStrategy.java\n",
        "code": [
          "      this.spotConverter = checkNotNull(spotConverter, \"spotConverter\");\n",
          "   }\n",
          "\n",
          "   @Override\n",
          "   protected Iterable<? extends RunningInstance> pollRunningInstances() {\n",
          "      Iterable<? extends AWSRunningInstance> spots = filter(transform(concat(transform(regions.get(),\n",
          "                                                                                       allSpotInstancesInRegion())),\n",
          "                                                                      spotConverter), notNull());\n",
          "\n",
          "      return concat(super.pollRunningInstances(), spots);\n",
          "   }\n"
        ],
        "line_number": 64,
        "start_line": 60,
        "end_line": 70
      },
      {
        "link": "https://github.com/nirmal070125/jclouds-nirmal/blob/4ae3a6fc8f98f43b9c49b426ade5a2fa4a1646de/providers/aws-ec2/src/main/java/org/jclouds/aws/ec2/compute/strategy/AWSEC2ListNodesStrategy.java\n",
        "code": [
          "      this.spotConverter = checkNotNull(spotConverter, \"spotConverter\");\n",
          "   }\n",
          "\n",
          "   @Override\n",
          "   protected Iterable<? extends RunningInstance> pollRunningInstances() {\n",
          "      Iterable<? extends AWSRunningInstance> spots = filter(transform(concat(transform(regions.get(),\n",
          "                                                                                       allSpotInstancesInRegion())),\n",
          "                                                                      spotConverter), notNull());\n",
          "\n",
          "      return concat(super.pollRunningInstances(), spots);\n",
          "   }\n"
        ],
        "line_number": 72,
        "start_line": 68,
        "end_line": 78
      },
      {
        "link": "https://github.com/leejaygo/moco/blob/0072309ef6cc1b899c2f52d1c6b5b5d7372e4dd4/moco-runner/src/main/java/com/github/dreamhead/moco/parser/model/MountSetting.java\n",
        "code": [
          "        return uri;\n",
          "    }\n",
          "\n",
          "    public MountPredicate[] getMountPredicates() {\n",
          "        return toArray(concat(\n",
          "                transform(includes, toInclude()),\n",
          "                transform(excludes, toExclude())), MountPredicate.class);\n",
          "    }\n",
          "\n",
          "    private Function<String, MountPredicate> toInclude() {\n",
          "        return new Function<String, MountPredicate>() {\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 40
      }
    ],
    "com.google.common.base.CharMatcher.precomputed": [
      {
        "link": "https://github.com/milanqiu/mimas/blob/6e20536fa19766be298be971922207a0f84d330d/mimas-tpl-ext/src/main/java/net/milanqiu/mimas/guava/CharMatcherExt.java\n",
        "code": [
          "     * The set will contain all matching characters of the {@link com.google.common.base.CharMatcher} object.\n",
          "     * @param chm the {@link com.google.common.base.CharMatcher} object to be converted\n",
          "     * @return the result set\n",
          "     */\n",
          "    public static Set<Character> toSet(CharMatcher chm) {\n",
          "        final CharMatcher pchm = chm.precomputed();\n",
          "        Set<Character> result = Sets.newHashSet();\n",
          "        TypeUtils.traverseCharValues((ch) -> {\n",
          "            if (pchm.matches(ch))\n",
          "                result.add(ch);\n",
          "        });\n"
        ],
        "line_number": 27,
        "start_line": 23,
        "end_line": 33
      },
      {
        "link": "https://github.com/steveash/syngen/blob/7be1778a5364b54201506ccfe1f0aac6e783f205/synthrec-core/src/main/java/com/github/steveash/synthrec/canonical/GeneralNormalizer.java\n",
        "code": [
          "public class GeneralNormalizer implements StringNormalizer {\n",
          "\n",
          "    static final GeneralNormalizer INSTANCE = new GeneralNormalizer();\n",
          "\n",
          "    private final StringNormalizer replaceDiacritics = DiacriticNormalizer.DIA_TO_LOWER_NORMAL;\n",
          "    private final CharMatcher lettersDigitsAndPunc = ascii().and(javaIsoControl().negate()).precomputed();\n",
          "    private final CharMatcher trimChars = CharMatcher.invisible().or(CharMatcher.anyOf(\"%\"));\n",
          "    private final CharMatcher replaceWithApostrophe = CharMatcher.anyOf(\"`~^\").precomputed();\n",
          "    private final CharMatcher replaceWithSpace = CharMatcher.anyOf(\"|\").precomputed();\n",
          "\n",
          "    /**\n"
        ],
        "line_number": 33,
        "start_line": 29,
        "end_line": 39
      },
      {
        "link": "https://github.com/steveash/jg2p/blob/9ef911031f2762b15f5b731c33dd968f523e181f/jg2p-core/src/main/java/com/github/steveash/jg2p/phoseq/Graphemes.java\n",
        "code": [
          "/**\n",
          " * @author Steve Ash\n",
          " */\n",
          "public class Graphemes {\n",
          "\n",
          "  public static final CharMatcher vowels = anyOf(\"AEIOUYaeiouy\").precomputed();\n",
          "  public static final CharMatcher\n",
          "      consonants =\n",
          "      (inRange('A', 'Z').or(inRange('a', 'z'))).and(vowels.negate()).precomputed();\n",
          "  private static final CharMatcher other = CharMatcher.ANY.and(vowels.or(consonants).negate()).precomputed();\n",
          "\n"
        ],
        "line_number": 33,
        "start_line": 29,
        "end_line": 39
      },
      {
        "link": "https://github.com/privatemousse/guava/blob/729800f33ca04808da7906dfa6356e179c91df7e/guava-tests/test/com/google/common/base/CharMatcherTest.java\n",
        "code": [
          "  }\n",
          "\n",
          "  private void doTestEmpty(CharMatcher matcher) throws Exception {\n",
          "    reallyTestEmpty(matcher);\n",
          "    reallyTestEmpty(matcher.negate());\n",
          "    reallyTestEmpty(matcher.precomputed());\n",
          "  }\n",
          "\n",
          "  private void reallyTestEmpty(CharMatcher matcher) throws Exception {\n",
          "    assertEquals(-1, matcher.indexIn(\"\"));\n",
          "    assertEquals(-1, matcher.indexIn(\"\", 0));\n"
        ],
        "line_number": 172,
        "start_line": 168,
        "end_line": 178
      },
      {
        "link": "https://github.com/MWisBest/android_external_guava/blob/475a717d716e3a3a1a0e6fd0d507bdeff8f3f25b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/CharMatcherTest.java\n",
        "code": [
          "  }\n",
          "\n",
          "  private void doTestEmpty(CharMatcher matcher) throws Exception {\n",
          "    reallyTestEmpty(matcher);\n",
          "    reallyTestEmpty(matcher.negate());\n",
          "    reallyTestEmpty(matcher.precomputed());\n",
          "  }\n",
          "\n",
          "  private void reallyTestEmpty(CharMatcher matcher) throws Exception {\n",
          "    assertEquals(-1, matcher.indexIn(\"\"));\n",
          "    assertEquals(-1, matcher.indexIn(\"\", 0));\n"
        ],
        "line_number": 109,
        "start_line": 105,
        "end_line": 115
      },
      {
        "link": "https://github.com/dovikn/inegotiate-android/blob/cea5e088b01ae4487d83cd1a84e6d2df78761a6e/src/com/google/common/base/CharMatcher.java\n",
        "code": [
          "        void setBits(LookupTable table) {\n",
          "            table.set(this.val$match1);\n",
          "            table.set(this.val$match2);\n",
          "        }\n",
          "\n",
          "        public CharMatcher precomputed() {\n",
          "            return this;\n",
          "        }\n",
          "    }\n",
          "\n",
          "    /* renamed from: com.google.common.base.CharMatcher.11 */\n"
        ],
        "line_number": 56,
        "start_line": 52,
        "end_line": 62
      },
      {
        "link": "https://github.com/steveash/syngen/blob/7be1778a5364b54201506ccfe1f0aac6e783f205/synthrec-core/src/main/java/com/github/steveash/synthrec/canonical/Graphemes.java\n",
        "code": [
          " * Utilities for letter related information\n",
          " * @author Steve Ash\n",
          " */\n",
          "public class Graphemes {\n",
          "\n",
          "    private static final CharMatcher vowels = anyOf(\"AEIOUYaeiouy\").precomputed();\n",
          "    private static final CharMatcher consonants = (inRange('A', 'Z').or(inRange('a', 'z'))).and(vowels.negate())\n",
          "            .precomputed();\n",
          "    private static final CharMatcher other = CharMatcher.any().and(vowels.or(consonants).negate()).precomputed();\n",
          "    private static final CharMatcher digits = CharMatcher.digit().precomputed();\n",
          "\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 40
      },
      {
        "link": "https://github.com/juyonychen/River/blob/8dbe765e3fd6787e10521981c8f848d1b566c1a7/common/src/main/java/com/river/common/utils/StringManipulationUtils.java\n",
        "code": [
          " * @since 1.0.0, 2018-05-25 15:17\n",
          " */\n",
          "@UtilityClass\n",
          "public class StringManipulationUtils {\n",
          "\n",
          "    private static final CharMatcher INNER_LOWER_HYPHEN = is('-').or(inRange('a', 'z')).precomputed();\n",
          "\n",
          "    private static final CharMatcher INNER_LOWER_UNDERSCORE = is('_').or(inRange('a', 'z')).precomputed();\n",
          "\n",
          "    private static final CharMatcher INNER_UPPER_UNDERSCORE = is('_').or(inRange('A', 'Z')).precomputed();\n",
          "\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "https://github.com/dubu/guava-libraries/blob/47b7717473d269db4a5af25678bccce73c736c66/guava-tests/test/com/google/common/base/CharMatcherTest.java\n",
        "code": [
          "  }\n",
          "\n",
          "  private void doTestEmpty(CharMatcher matcher) throws Exception {\n",
          "    reallyTestEmpty(matcher);\n",
          "    reallyTestEmpty(matcher.negate());\n",
          "    reallyTestEmpty(matcher.precomputed());\n",
          "  }\n",
          "\n",
          "  private void reallyTestEmpty(CharMatcher matcher) throws Exception {\n",
          "    assertEquals(-1, matcher.indexIn(\"\"));\n",
          "    assertEquals(-1, matcher.indexIn(\"\", 0));\n"
        ],
        "line_number": 172,
        "start_line": 168,
        "end_line": 178
      },
      {
        "link": "https://github.com/dubu/guava-libraries/blob/47b7717473d269db4a5af25678bccce73c736c66/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/CharMatcherTest.java\n",
        "code": [
          "  }\n",
          "\n",
          "  private void doTestEmpty(CharMatcher matcher) throws Exception {\n",
          "    reallyTestEmpty(matcher);\n",
          "    reallyTestEmpty(matcher.negate());\n",
          "    reallyTestEmpty(matcher.precomputed());\n",
          "  }\n",
          "\n",
          "  private void reallyTestEmpty(CharMatcher matcher) throws Exception {\n",
          "    assertEquals(-1, matcher.indexIn(\"\"));\n",
          "    assertEquals(-1, matcher.indexIn(\"\", 0));\n"
        ],
        "line_number": 109,
        "start_line": 105,
        "end_line": 115
      }
    ],
    "com.google.common.cache.CacheStats.loadExceptionCount": [
      {
        "link": "https://github.com/hashsdn/hashsdn-infrautils/blob/b9ca3b3eec69993bb9bd213635aa6ad8acbbb398/caches/impl/guava/src/main/java/org/opendaylight/infrautils/caches/guava/internal/GuavaCacheStatsAdapter.java\n",
        "code": [
          "        return ImmutableMap.<String, Number>builder()\n",
          "                .put(\"averageLoadPenalty\", guavaStats.averageLoadPenalty())\n",
          "                .put(\"evictionCount\", guavaStats.evictionCount())\n",
          "                .put(\"hitRate\", guavaStats.hitRate())\n",
          "                .put(\"loadCount\", guavaStats.loadCount())\n",
          "                .put(\"loadExceptionCount\", guavaStats.loadExceptionCount())\n",
          "                .put(\"loadExceptionRate\", guavaStats.loadExceptionRate())\n",
          "                .put(\"loadSuccessCount\", guavaStats.loadSuccessCount())\n",
          "                .put(\"missRate\", guavaStats.missRate())\n",
          "                .put(\"requestCount\", guavaStats.requestCount())\n",
          "                .put(\"totalLoadTime\", guavaStats.totalLoadTime())\n"
        ],
        "line_number": 50,
        "start_line": 46,
        "end_line": 56
      },
      {
        "link": "https://github.com/GMYL/kg/blob/1900a19091bb160c42a1cf6e749b603a994e44b5/src/main/java/hb/kg/common/bean/http/HBCacheStats.java\n",
        "code": [
          "            tar.setHitCount(src.hitCount());\n",
          "            tar.setMissCount(src.missCount());\n",
          "            tar.setHitRate(src.hitRate());\n",
          "            tar.setMissRate(src.missRate());\n",
          "            tar.setLoadSuccessCount(src.loadSuccessCount());\n",
          "            tar.setLoadExceptionCount(src.loadExceptionCount());\n",
          "            tar.setTotalLoadTime(src.totalLoadTime());\n",
          "            tar.setEvictionCount(src.evictionCount());\n",
          "            tar.setAverageLoadPenalty(src.averageLoadPenalty());\n",
          "        }\n",
          "        return tar;\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 40
      },
      {
        "link": "https://github.com/platformlayer/platformlayer/blob/e7a8cdff2aefa658cb41cffdd8c33d19e3b5bc3c/shared/utils/src/main/java/org/platformlayer/metrics/CacheMetricsReporter.java\n",
        "code": [
          "\n",
          "\t\tsubtree.addInt(\"size\", size);\n",
          "\t\tsubtree.addInt(\"evictionCount\", stats.evictionCount());\n",
          "\t\tsubtree.addInt(\"hitCount\", stats.hitCount());\n",
          "\t\tsubtree.addInt(\"loadCount\", stats.loadCount());\n",
          "\t\tsubtree.addInt(\"loadExceptionCount\", stats.loadExceptionCount());\n",
          "\t\tsubtree.addInt(\"loadSuccessCount\", stats.loadSuccessCount());\n",
          "\t\tsubtree.addInt(\"missCount\", stats.missCount());\n",
          "\t\tsubtree.addInt(\"requestCount\", stats.requestCount());\n",
          "\t\tsubtree.addInt(\"totalLoadTime\", stats.totalLoadTime());\n",
          "\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      },
      {
        "link": "https://github.com/votingsystem/votingsystem/blob/316c6440e462bc3394b682bb0d8644140e7b6588/votingsystem-serviceprovider/src/main/java/org/votingsystem/serviceprovider/util/CacheStats.java\n",
        "code": [
          "\n",
          "    public CacheStats(com.google.common.cache.CacheStats cacheStats) {\n",
          "        this.hitCount = cacheStats.hitCount();\n",
          "        this.missCount = cacheStats.missCount();\n",
          "        this.loadSuccessCount = cacheStats.loadSuccessCount();\n",
          "        this.loadExceptionCount = cacheStats.loadExceptionCount();\n",
          "        this.totalLoadTime = cacheStats.totalLoadTime();\n",
          "        this.evictionCount = cacheStats.evictionCount();\n",
          "    }\n",
          "\n",
          "    public long getHitCount() {\n"
        ],
        "line_number": 18,
        "start_line": 14,
        "end_line": 24
      },
      {
        "link": "https://github.com/qianmoyushang/poetry/blob/c7f3f525f97b9af81349b131154fc04ac3f0b661/ivan-4-poetry/src/main/java/cn/dendarii/ivan/common/bean/http/HBCacheStats.java\n",
        "code": [
          "            tar.setHitCount(src.hitCount());\n",
          "            tar.setMissCount(src.missCount());\n",
          "            tar.setHitRate(src.hitRate());\n",
          "            tar.setMissRate(src.missRate());\n",
          "            tar.setLoadSuccessCount(src.loadSuccessCount());\n",
          "            tar.setLoadExceptionCount(src.loadExceptionCount());\n",
          "            tar.setTotalLoadTime(src.totalLoadTime());\n",
          "            tar.setEvictionCount(src.evictionCount());\n",
          "            tar.setAverageLoadPenalty(src.averageLoadPenalty());\n",
          "        }\n",
          "        return tar;\n"
        ],
        "line_number": 34,
        "start_line": 30,
        "end_line": 40
      },
      {
        "link": "https://github.com/mnemonic-no/act-platform/blob/1ee5cd906449ef3332ddd3202f38c4fbdea688d4/utilities/src/no/mnemonic/act/platform/utilities/cache/MetricsUtils.java\n",
        "code": [
          "            .addData(\"requestCount\", stats.requestCount())\n",
          "            .addData(\"hitCount\", stats.hitCount())\n",
          "            .addData(\"missCount\", stats.missCount())\n",
          "            .addData(\"loadCount\", stats.loadCount())\n",
          "            .addData(\"loadSuccessCount\", stats.loadSuccessCount())\n",
          "            .addData(\"loadExceptionCount\", stats.loadExceptionCount())\n",
          "            .addData(\"evictionCount\", stats.evictionCount())\n",
          "            .addData(\"totalLoadTime\", stats.totalLoadTime());\n",
          "  }\n",
          "\n",
          "  private MetricsUtils() {\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/40243225/AA/blob/f4d6db9d8f6b37ca0412ba0b9a9f15e8924dda89/src/community/geofence/src/main/java/org/geoserver/geofence/cache/rest/RESTCacheStats.java\n",
        "code": [
          "                .append(\" size:\").append(crr.getCacheSize())\n",
          "                .append(\"/\").append(crr.getCacheInitParams().getSize())\n",
          "                .append(\" hitCount:\").append(stats.hitCount())\n",
          "                .append(\" missCount:\").append(stats.missCount())\n",
          "                .append(\" loadSuccessCount:\").append(stats.loadSuccessCount())\n",
          "                .append(\" loadExceptionCount:\").append(stats.loadExceptionCount())\n",
          "                .append(\" totalLoadTime:\").append(stats.totalLoadTime())\n",
          "                .append(\" evictionCount:\").append(stats.evictionCount())\n",
          "                .append(\"] \\n\");\n",
          "\n",
          "        stats = crr.getAdminAuthStats();\n"
        ],
        "line_number": 56,
        "start_line": 52,
        "end_line": 62
      },
      {
        "link": "https://github.com/alanda-io/alanda/blob/e1456e6c5c3c0f18b7d36825bfa487b45f213a45/backend/alanda-base/src/main/java/io/alanda/base/util/cache/CacheStatsDto.java\n",
        "code": [
          "  public CacheStatsDto(CacheStats cs) {\n",
          "    this.hitCount = cs.hitCount();\n",
          "    this.missCount = cs.missCount();\n",
          "\n",
          "    this.loadSuccessCount = cs.loadSuccessCount();\n",
          "    this.loadExceptionCount = cs.loadExceptionCount();\n",
          "    this.totalLoadTime = cs.totalLoadTime();\n",
          "    this.evictionCount = cs.evictionCount();\n",
          "    \n",
          "    this.hitRate = cs.hitRate();\n",
          "\n"
        ],
        "line_number": 47,
        "start_line": 43,
        "end_line": 53
      },
      {
        "link": "https://github.com/joansmith2/jackrabbit-oak/blob/e0450b7a1e710b0ce391393ab773d10efa1c9f55/oak-core/src/main/java/org/apache/jackrabbit/oak/cache/CacheStats.java\n",
        "code": [
          "        return stats().loadSuccessCount();\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public long getLoadExceptionCount() {\n",
          "        return stats().loadExceptionCount();\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public double getLoadExceptionRate() {\n",
          "        return stats().loadExceptionRate();\n"
        ],
        "line_number": 88,
        "start_line": 84,
        "end_line": 94
      },
      {
        "link": "https://github.com/tclan126/glassdoorapk/blob/858772b5f2caa20a9370c52d8dbda83da4ee1d69/sources/com/google/common/cache/AbstractCache.java\n",
        "code": [
          "        public void incrementBy(com.google.common.cache.AbstractCache.StatsCounter statsCounter) {\n",
          "            com.google.common.cache.CacheStats snapshot = statsCounter.snapshot();\n",
          "            this.hitCount.add(snapshot.hitCount());\n",
          "            this.missCount.add(snapshot.missCount());\n",
          "            this.loadSuccessCount.add(snapshot.loadSuccessCount());\n",
          "            this.loadExceptionCount.add(snapshot.loadExceptionCount());\n",
          "            this.totalLoadTime.add(snapshot.totalLoadTime());\n",
          "            this.evictionCount.add(snapshot.evictionCount());\n",
          "        }\n",
          "\n",
          "        @Override // com.google.common.cache.AbstractCache.StatsCounter\n"
        ],
        "line_number": 17,
        "start_line": 13,
        "end_line": 23
      }
    ],
    "com.google.common.collect.Ordering.sortedCopy": [
      {
        "link": "https://github.com/hooj0/guava-example/blob/3c30cf3bcbd07310f8398eaffe6aefcc42da8435/src/java/main/com/cnblogs/hoojo/ordering/OrderingTest.java\n",
        "code": [
          "\u0081\u00e8\u00ae\u00b8\u00e6\u009c\u0089\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e5\u0080\u00bc\u00e7\u009b\u00b8\u00e7\u00ad\u0089\u00e7\u009a\u0084\u00e5\u0085",
          "\u0083\u00e7\u00b4\u00a0\u00e3\u0080\u0082</td>\r\n",
          "<td><a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Ordering.html#isStrictlyOrdered(java.lang.Iterable)\" rel=\"nofollow\"><tt>isStrictlyOrdered</tt></a></td>\r\n",
          "</tr>\r\n",
          "<tr>\r\n",
          "<td><a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Ordering.html#sortedCopy(java.lang.Iterable)\" rel=\"nofollow\"><tt>sortedCopy(Iterable)</tt></a></td>\r\n",
          "<td>\u00e5\u0088\u00a4\u00e6\u0096\u00ad\u00e5\u008f\u00af\u00e8\u00bf\u00ad\u00e4\u00bb\u00a3\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00b7\u00b2\u00e4\u00b8\u00a5\u00e6\u00a0\u00bc\u00e6\u008c\u0089\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e5\u0099\u00a8\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00ef\u00bc\u009a\u00e4\u00b8\u008d\u00e5\u0085",
          "\u0081\u00e8\u00ae\u00b8\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e5\u0080\u00bc\u00e7\u009b\u00b8\u00e7\u00ad\u0089\u00e7\u009a\u0084\u00e5\u0085",
          "\u0083\u00e7\u00b4\u00a0\u00e3\u0080\u0082</td>\r\n",
          "<td><a href=\"http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Ordering.html#immutableSortedCopy(java.lang.Iterable)\" rel=\"nofollow\"><tt>immutableSortedCopy</tt></a></td>\r\n",
          "</tr>\r\n"
        ],
        "line_number": 95,
        "start_line": 91,
        "end_line": 101
      },
      {
        "link": "https://github.com/zhangdiandian2016/study/blob/69895766c844b419b6d0bd5073b95b3d4fd2bdad/src/main/java/study/guava/base/OrderingTest.java\n",
        "code": [
          "        /**\u00e8\u0087\u00aa\u00e7\u0084\u00b6\u00e6\u008e\u0092\u00e5\u00ba\u008f: \u00e6\u0095\u00b0\u00e5\u00ad\u0097\u00e5\u008d\u0087\u00e5\u00ba\u008f\u00ef\u00bc\u008c\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e5\u008d\u0087\u00e5\u00ba\u008f*/\n",
          "        // \u00e7\u00ae\u0080\u00e5\u008d\u0095\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u008e\u0092\u00e5\u00ba\u008f\n",
          "        Ordering<Integer> integerOrdering = Ordering.natural().nullsFirst();\n",
          "        List<Integer> list = Lists.newArrayList(1,3,null,5,4,2);\n",
          "        // \u00e8\u0087\u00aa\u00e7\u0084\u00b6\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00ef\u00bc\u008c\u00e7\u00a9\u00ba\u00e5\u0089\u008d\u00e7\u00bd\u00ae\n",
          "        System.out.println(\"1.\u00e8\u0087\u00aa\u00e7\u0084\u00b6\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00ef\u00bc\u009a\"+integerOrdering.sortedCopy(list));\n",
          "        System.out.println(\"2.\u00e8\u0087\u00aa\u00e7\u0084\u00b6\u00e5\u008f\u008d\u00e8\u00bd\u00ac\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00ef\u00bc\u009a\"+integerOrdering.reverse().sortedCopy(list));\n",
          "\n",
          "        // \u00e6\u00a0\u00b9\u00e6\u008d\u00aeapply\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e5\u0080\u00bc\u00e6\u008e\u0092\u00e5\u00ba\u008f\n",
          "        Ordering<Order> orderOrdering = Ordering.natural().onResultOf(new Function<Order, Integer>() {\n",
          "            public Integer apply(Order order){\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "https://github.com/Wojnarowski/pracetise/blob/b5014ed73481907d26e23de5cc63ed470c2b8784/multi-practise/practise-guava/src/main/java/org/practise/guava/ordering/TestOrdering.java\n",
        "code": [
          "        \n",
          "        Ordering<String> naturalOrdering=Ordering.natural();\n",
          "        Ordering<Object> usingToStringOrdering =Ordering.usingToString();\n",
          "        Ordering<Object> arbitraryOrdering =Ordering.arbitrary();\n",
          "        \n",
          "        System.out.println(\"naturalOrdering:\"+naturalOrdering.sortedCopy(list));\n",
          "        System.out.println(\"usingToStringOrdering:\"+usingToStringOrdering.sortedCopy(list));\n",
          "        System.out.println(\"arbitraryOrdering:\"+arbitraryOrdering.sortedCopy(list));\n",
          "        \n",
          "        Ordering<String> ordering = Ordering.natural().nullsFirst().onResultOf(new Function<String, String>() {\n",
          "        \t  public String apply(String str) {\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      },
      {
        "link": "https://github.com/fxwhu/demo/blob/2a3964b8199c57b981a957a8ca7bcd87c2aafe57/bmss/bmss-guava-test/src/test/java/com/bmss/test/guava/collection/OrderingTest.java\n",
        "code": [
          "    //greatestOf(Iterable<E> iterable, int k) \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e4\u00bb\u008e\u00e7\u00bb\u0099\u00e5\u00ae\u009a\u00e7\u009a\u0084\u00e8\u00bf\u00ad\u00e4\u00bb\u00a3\u00e5\u0099\u00a8\u00e6\u008c\u0089\u00e7\u0085",
          "\u00a7\u00e8\u00bf\u0099\u00e4\u00b8\u00aa\u00e9\u00a1\u00ba\u00e5\u00ba\u008f\u00ef\u00bc\u008c\u00e4\u00bb\u008e\u00e6\u009c\u0080\u00e5\u00a4\u00a7\u00e5\u0088\u00b0\u00e6\u009c\u0080\u00e5\u00b0\u008fk\u00e4\u00b8\u00aa\u00e6\u009c\u0080\u00e5\u00a4\u00a7\u00e7\u009a\u0084\u00e5\u0085",
          "\u0083\u00e7\u00b4\u00a0\u00e3\u0080\u0082\n",
          "    @Test\n",
          "    public void tetsOrdering() {\n",
          "        List<Integer> result1 = Ordering.arbitrary().sortedCopy(integers);\n",
          "\n",
          "        System.out.println(\"result1:\" + result1);\n",
          "\n",
          "        List<Integer> result2 = from(new Comparator<Integer>() {\n",
          "            @Override\n"
        ],
        "line_number": 32,
        "start_line": 28,
        "end_line": 38
      },
      {
        "link": "https://github.com/duangduangda/Duck/blob/a1e26fabe1e79c11d76a510023b5346b15e8fbb0/src/main/java/org/dean/duck/guava/basic/OrderingHandler.java\n",
        "code": [
          "        Ordering<Integer> naturalOrder = Ordering.natural();\n",
          "        // \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e5\u008f\u00af\u00e8\u00bf\u00ad\u00e4\u00bb\u00a3\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e4\u00b8\u00ad\u00e6\u009c\u0080\u00e5\u00a4\u00a7\u00e7\u009a\u0084K\u00e4\u00b8\u00aa\u00e5\u0085",
          "\u0083\u00e7\u00b4\u00a0\n",
          "        System.out.println(naturalOrder.greatestOf(integers, 2));\n",
          "        // \u00e6\u00ad\u00a3\u00e6\u008e\u0092\u00e5\u00ba\u008f\n",
          "        System.out.println(naturalOrder.sortedCopy(integers));\n",
          "        // \u00e9\u0080\u0086\u00e6\u008e\u0092\u00e5\u00ba\u008f\n",
          "        System.out.println(naturalOrder.reverse().sortedCopy(integers));\n",
          "        // \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00a5\u00e6\u00a0\u00bc\u00e6\u009c\u0089\u00e5\u00ba\u008f(\u00e4\u00b8\u008d\u00e5\u0085",
          "\u0081\u00e8\u00ae\u00b8\u00e5\u0087\u00ba\u00e7\u008e\u00b0\u00e9\u0087\u008d\u00e5\u00a4\u008d\u00e7\u009a\u0084\u00e5\u0080\u00bc)\n",
          "        System.out.println(naturalOrder.isStrictlyOrdered(naturalOrder.sortedCopy(integers)));\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "https://github.com/Alfred1991/javaDemo/blob/3a490e457a906d823e176f4ab6609d401096f0a7/guawaDemo/src/main/java/org/xiaofengcanyue/basicutilities/Ordering.java\n",
        "code": [
          "    }\n",
          "\n",
          "    public static void application(com.google.common.collect.Ordering order){\n",
          "        order.greatestOf(new ArrayList(),1);\n",
          "        order.isOrdered(new ArrayList());\n",
          "        order.sortedCopy(new ArrayList());\n",
          "        order.min(\"\",\"\");\n",
          "    }\n",
          "\n",
          "\n",
          "}\n"
        ],
        "line_number": 85,
        "start_line": 81,
        "end_line": 91
      },
      {
        "link": "https://github.com/Oliver1314/my-learning-guava/blob/e6be14fa3315b52e0fa5c67d8e031a41b7372751/src/main/java/base/OrderingTest.java\n",
        "code": [
          "\n",
          "\n",
          "        List<String> list= Lists.newArrayList(\"a\",\"A\",\"b\",\"c\",\"B\");\n",
          "\n",
          "\n",
          "        System.out.println(Ordering.natural().sortedCopy(list));\n",
          "        System.out.println(Ordering.natural().reverse().sortedCopy(list));\n",
          "\n",
          "        list.add(null);\n",
          "        System.out.println(Ordering.natural().nullsFirst().sortedCopy(list));\n",
          "        System.out.println(Ordering.natural().nullsLast().sortedCopy(list));\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "https://github.com/xassistant/tools/blob/79ac6e5d567c67c400a1baafd9631bd128eaf633/jdk/src/main/java/guava/OrderingTest.java\n",
        "code": [
          " * isStrictlyOrdered(Iterable);          //\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00a5\u00e6\u00a0\u00bc\u00e6\u009c\u0089\u00e5\u00ba\u008f(\u00e5\u0089\u008d\u00e9\u009d\u00a2\u00e7\u009a\u0084\u00e5\u0085",
          "\u0083\u00e7\u00b4\u00a0\u00e5\u00bf\u0085",
          "\u00e9\u00a1\u00bb\u00e5\u00a4\u00a7\u00e4\u00ba\u008e\u00e5\u0090\u008e\u00e9\u009d\u00a2\u00e7\u009a\u0084\u00e5\u0085",
          "\u0083\u00e7\u00b4\u00a0)\u00ef\u00bc\u008cIterable\u00e4\u00b8\u008d\u00e8\u0083\u00bd\u00e5\u00b0\u0091\u00e4\u00ba\u008e\u00e4\u00b8\u00a4\u00e4\u00b8\u00aa\u00e5\u0085",
          "\u0083\u00e7\u00b4\u00a0\n",
          " * sortedCopy(Iterable);                 //\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u009a\u0084\u00e5\u0085",
          "\u0083\u00e7\u00b4\u00a0\u00e4\u00bd\u009c\u00e4\u00b8\u00ba\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e5\u0088\u0097\u00e8\u00a1\u00a8\u00e7\u009a\u0084\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e5\u0089\u00af\u00e6\u009c\u00ac\n",
          " */\n",
          "public class OrderingTest {\n",
          "    /**\n",
          "     * natural()\u00ef\u00bc\u009a\u00e4\u00bd\u00bf\u00e7\u0094\u00a8Comparable\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e7\u009a\u0084\u00e8\u0087\u00aa\u00e7\u0084\u00b6\u00e9\u00a1\u00ba\u00e5\u00ba\u008f\u00ef\u00bc\u008c \u00e4\u00be\u008b\u00e5\u00a6\u0082\u00ef\u00bc\u009a\u00e6\u0095\u00b4\u00e6\u0095\u00b0\u00e4\u00bb\u008e\u00e5\u00b0\u008f\u00e5\u0088\u00b0\u00e5\u00a4\u00a7\u00ef\u00bc\u008c\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e6\u0098\u00af\u00e6\u008c\u0089\u00e5\u00ad\u0097\u00e5\u0085"
        ],
        "line_number": 56,
        "start_line": 52,
        "end_line": 62
      },
      {
        "link": "https://github.com/yxxcoder/Guava-Learning/blob/3bb3294a44c5b0d7d51fe1aceff4bf60af3b1ae4/src/main/java/ch01_basic/ordering/OrderingExplained.java\n",
        "code": [
          "\n",
          "        // \u00e5\u00af\u00b9\u00e5\u008f\u00af\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e5\u0081\u009a\u00e8\u0087\u00aa\u00e7\u0084\u00b6\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u0095\u00b0\u00e5\u00ad\u0097\u00e6\u008c\u0089\u00e5\u00a4\u00a7\u00e5\u00b0\u008f\u00ef\u00bc\u008c\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e6\u008c\u0089\u00e5\u0085",
          "\u0088\u00e5\u0090\u008e\u00e6\u008e\u0092\u00e5\u00ba\u008f\n",
          "        Ordering<String> naturalOrdering = natural();\n",
          "        // naturalOrdering:[eva, jerry, jerry, john, peter]\n",
          "        System.out.println(\"naturalOrdering:\"+ naturalOrdering.sortedCopy(list));\n",
          "\n",
          "\n",
          "        // \u00e6\u008c\u0089\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e5\u00bd\u00a2\u00e5\u00bc\u008f\u00e5\u0081\u009a\u00e5\u00ad\u0097\u00e5\u0085",
          "\u00b8\u00e6\u008e\u0092\u00e5\u00ba\u008f\n",
          "        Ordering<Object> usingToStringOrdering = usingToString();\n"
        ],
        "line_number": 60,
        "start_line": 56,
        "end_line": 66
      },
      {
        "link": "https://github.com/AsukiLiu/Java-Common/blob/b17f23e956e2e635f27d3b46dec9bc597779fd11/tool/src/test/java/org/asuki/tool/guava/OrderingTest.java\n",
        "code": [
          "        assertThat(found, equalTo(2));\n",
          "\n",
          "        toSort = asList(2, 1, 11, 100, 8);\n",
          "        Ordering<Object> ordering = natural().onResultOf(\n",
          "                Functions.toStringFunction());\n",
          "        List<Integer> sortedCopy = ordering.sortedCopy(toSort);\n",
          "        assertThat(sortedCopy, equalTo(newArrayList(1, 100, 11, 2, 8)));\n",
          "    }\n",
          "\n",
          "    @Test\n",
          "    public void testOrderByLength() {\n"
        ],
        "line_number": 56,
        "start_line": 52,
        "end_line": 62
      }
    ],
    "com.google.common.collect.Maps.newHashMap": [
      {
        "link": "https://github.com/CXYD/wkshop/blob/186c5b2e2fa0badd8915c95bb63a28301cf7e8a1/src/main/test/java/net/jeeshop/biz/finance/Maps.java\n",
        "code": [
          "public class Maps {\n",
          "    public static <K,V> Map<K, V> of(K k1, V v1,\n",
          "                                     K k2, V v2,\n",
          "                                     K k3, V v3,\n",
          "                                     K k4, V v4) {\n",
          "        Map<K,V> map = com.google.common.collect.Maps.newHashMap();\n",
          "        map.put(k1, v1);\n",
          "        map.put(k2, v2);\n",
          "        map.put(k3, v3);\n",
          "        map.put(k4, v4);\n",
          "        return map;\n"
        ],
        "line_number": 14,
        "start_line": 10,
        "end_line": 20
      },
      {
        "link": "https://github.com/AnjouKong/cloud-admin/blob/f4ae69e176f2637f9ff544a8b4f99b9ad091d033/cloud-admin/src/main/source/cn/phenix/cloud/utils/FreeMarkers.java\n",
        "code": [
          "        cfg.setDirectoryForTemplateLoading(path.getFile());\n",
          "        return cfg;\n",
          "    }\n",
          "\n",
          "    public static void main(String[] args) throws IOException {\n",
          "        /*Map<String, Integer> model = com.google.common.collect.Maps.newHashMap();\n",
          "        model.put(\"income\", 20);\n",
          "\t\tmodel.put(\"shareholderQuantity\", 2);\n",
          "\t\tmodel.put(\"proxyQuantity\", 2);\n",
          "\t\tString render = \"<#if ( income gte 50.0 ) || ( shareholderQuantity gte 10 ) || ( proxyQuantity gte 20 )>true</#if>\";\n",
          "\t\tString result = FreeMarkers.renderString(render, model);\n"
        ],
        "line_number": 91,
        "start_line": 87,
        "end_line": 97
      },
      {
        "link": "https://github.com/msuno/swagger-spring-boot-starter/blob/725c103128b954cded8c5935e13b21d5d5a53c0d/src/main/java/cn/msuno/swagger/spring/boot/autoconfigure/mappers/SecurityMapper.java\n",
        "code": [
          "      .put(\"basicAuth\", new BasicAuthFactory())\n",
          "      .build();\n",
          "\n",
          "  public Map<String, SecuritySchemeDefinition> toSecuritySchemeDefinitions(ResourceListing from) {\n",
          "    if (from == null) {\n",
          "      return newHashMap();\n",
          "    }\n",
          "    TreeMap<String, SecuritySchemeDefinition> result = newTreeMap();\n",
          "    result.putAll(transformValues(uniqueIndex(from.getSecuritySchemes(), schemeName()),\n",
          "        toSecuritySchemeDefinition()));\n",
          "    return result;\n"
        ],
        "line_number": 47,
        "start_line": 43,
        "end_line": 53
      },
      {
        "link": "https://github.com/Cascading/lingual/blob/dbd2e8624c11406be4bcf797e4b32c4764bdb458/lingual-client/src/test/java/cascading/lingual/common/ConverterTest.java\n",
        "code": [
          "    {\n",
          "    PropertiesConverter converter = new PropertiesConverter();\n",
          "\n",
          "    Map<String, String> result;\n",
          "\n",
          "    result = newHashMap();\n",
          "    result.put( \"foo\", \"bar\" );\n",
          "    result.put( \"man\", \"chu\" );\n",
          "    assertTrue( difference( result, converter.convert( \"foo=bar,man=chu\" ) ).areEqual() );\n",
          "\n",
          "    result = newHashMap();\n"
        ],
        "line_number": 40,
        "start_line": 36,
        "end_line": 46
      },
      {
        "link": "https://github.com/mon9102/test_demo/blob/8671bafedf8fecee7abd1237bd89cda9fdf42d2b/guava/src/main/java/com/testDemo/guava/MapsTest.java\n",
        "code": [
          " * @Description:\n",
          " */\n",
          "public class MapsTest {\n",
          "    public static void main(String[] args) {\n",
          "        {\n",
          "            Map<String, String> mapA = newHashMap();\n",
          "            mapA.put(\"a\", \"a1\");\n",
          "            mapA.put(\"b\", \"a1\");\n",
          "            mapA.put(\"c\", \"a1\");\n",
          "            mapA.put(\"d\", \"a1\");\n",
          "            mapA.put(\"e\", \"a1\");\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/sgo/guava-learning/blob/f321443b35cabd27f89b01449c9b28a9eb692de2/src/test/java/guava/MapsProvides.java\n",
        "code": [
          "    private Map<String, Integer> filtered;\n",
          "    private Map<String, ToPersonTransformer.Person> people;\n",
          "\n",
          "    @Before\n",
          "    public void setUp() throws Exception {\n",
          "        map = newHashMap();\n",
          "        left = newHashMap();\n",
          "        right = newHashMap();\n",
          "    }\n",
          "\n",
          "    @Test\n"
        ],
        "line_number": 30,
        "start_line": 26,
        "end_line": 36
      },
      {
        "link": "https://github.com/allwefantasy/csdn_common/blob/d64ca49fb97aa51d07a47b66ff7d2f8df9125b92/src/main/java/net/csdn/common/collect/MapBuilder.java\n",
        "code": [
          "\n",
          "    public static <K, V> MapBuilder<K, V> newMapBuilder(Map<K, V> map) {\n",
          "        return new MapBuilder<K, V>().putAll(map);\n",
          "    }\n",
          "\n",
          "    private Map<K, V> map = newHashMap();\n",
          "\n",
          "    public MapBuilder() {\n",
          "        this.map = newHashMap();\n",
          "    }\n",
          "\n"
        ],
        "line_number": 27,
        "start_line": 23,
        "end_line": 33
      },
      {
        "link": "https://github.com/mstricklin/neo-cache/blob/424f0207fd053969e39be72c95475c3f1c4a91d3/src/main/java/edu/utexas/arlut/ciads/cacheGraph/CachedElement.java\n",
        "code": [
          "    }\n",
          "\n",
          "    // =======================================\n",
          "    static class Impl {\n",
          "        Impl() {\n",
          "            properties = newHashMap();\n",
          "        }\n",
          "        Impl(Impl src) {\n",
          "            properties = newHashMap(src.properties);\n",
          "        }\n",
          "        private final Map<String, Object> properties;\n"
        ],
        "line_number": 73,
        "start_line": 69,
        "end_line": 79
      },
      {
        "link": "https://github.com/joseph1506/practice/blob/866930306e8a8ebd35dfc552a58ad3e44cf671ac/collections/TestMapObject.java\n",
        "code": [
          "\n",
          "        MapKeyObject key3= new MapKeyObject();\n",
          "        key3.setX(22);\n",
          "        key3.setY(\"Twenty two\");\n",
          "\n",
          "        Map<MapKeyObject,String> hashMap= newHashMap();\n",
          "        hashMap.put(key3,\"22\");\n",
          "        hashMap.put(key1,\"20\");\n",
          "        hashMap.put(key2,\"21\");\n",
          "\n",
          "        Map<MapKeyObject,String> hashMapTree= newTreeMap();\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      },
      {
        "link": "}https://github.com/Plutoniummatt/Blood-and-Mithril/blob/8f6131d94ec8a7d4e7e2976fbc72b617d2f983e5/source/src/bloodandmithril/graphics/Textures.java\n",
        "code": [
          "\tpublic static Texture GAME_WORLD_TEXTURE;\n",
          "\tpublic static Texture INDIVIDUAL_TEXTURE;\n",
          "\tpublic static Texture BACKGROUND_IMAGES;\n",
          "\t\n",
          "\t/** All tree textures */\n",
          "\tpublic static Map<Class<? extends Tree>, Map<Integer, TextureRegion>> treeTextures = newHashMap();\n",
          "\t\n",
          "\t/** All background image textures */\n",
          "\tpublic static Map<Integer, TextureRegion> backgroundImages = Maps.newHashMap();\n",
          "\t\n",
          "\t/** All celestial body images */\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      }
    ],
    "com.google.common.cache.Cache.stats": [
      {
        "link": "https://github.com/thaingoc90/my-jv-util/blob/4f7bf08478c81f86d94ea28fd325b10fcf7f2c4f/UtilsLibrary/src/my/library/utils/GuavaCacheUtils.java\n",
        "code": [
          "\tpublic static Cache<String, Object> cache = CacheBuilder.newBuilder()\r\n",
          "\t\t\t.expireAfterWrite(TIME_EXPIRE, TimeUnit.MINUTES).maximumSize(MAX_SIZE_CACHE)\r\n",
          "\t\t\t.recordStats().build();\r\n",
          "\r\n",
          "\tpublic static CacheStats getLoadingCacheStats() {\r\n",
          "\t\treturn loadingCache.stats();\r\n",
          "\t}\r\n",
          "}\r\n"
        ],
        "line_number": 35,
        "start_line": 31,
        "end_line": 38
      },
      {
        "link": "https://github.com/mihongkun/xx-xx/blob/3aca2c27cb34b205d5f43ff3f0ce053963c6b24e/base/forkjoin-jdbckit-cache/src/main/java/org/forkjoin/jdbckit/cache/Cache.java\n",
        "code": [
          "        info.setRedisNums(template.keys(KeyUtils.getKey(this.getClass())).size());\n",
          "\n",
          "//        Map<String, CacheInfo.LocalInfo> localMap\n",
          "////        info.setLocalMap();\n",
          "//        localCacheMap.forEach((k,v)->{\n",
          "//            v.stats().evictionCount();\n",
          "//\n",
          "//        });\n",
          "        Map<String, CacheInfo.LocalInfo> localMap = localCacheMap.entrySet().parallelStream().map(e -> {\n",
          "            CacheInfo.LocalInfo localInfo = new CacheInfo.LocalInfo();\n",
          "            localInfo.setName(e.getKey());\n"
        ],
        "line_number": 61,
        "start_line": 57,
        "end_line": 67
      },
      {
        "link": "https://github.com/xiedongmingming/maven-test/blob/1afa81ac2b515dd86ddf092a6dbea859e7fea7e8/guava/src/test/java/org/xiem/com/guava/GuavaCacheTest003.java\n",
        "code": [
          "\t\tSystem.out.println(result2);\r\n",
          "\t\tSystem.out.println(result3);\r\n",
          "\t\tSystem.out.println(cache.getIfPresent(\"key\"));\r\n",
          "\r\n",
          "\t\t//\r\n",
          "\t\tCacheStats cstats = cache.stats();\r\n",
          "\t\tSystem.out.println(\"loadCount:\" + cstats.loadCount() + \"  loadSuccessCount\u00ef\u00bc\u009a \" + cstats.loadSuccessCount());\r\n",
          "\r\n",
          "\t\tSystem.out.println(\"\u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e5\u0091\u00bd\u00e4\u00b8\u00ad\u00e7\u008e\u0087:\" + cstats.hitRate() + \" hitCount: \" + cstats.hitCount());// \u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e5\u0091\u00bd\u00e4\u00b8\u00ad\u00e7\u008e\u0087\u00ef\u00bc\u009b\r\n",
          "\t\tSystem.out.println(\"\u00e5\u008a\u00a0\u00e8\u00bd\u00bd\u00e6\u0096\u00b0\u00e5\u0080\u00bc\u00e7\u009a\u0084\u00e5\u00b9\u00b3\u00e5\u009d\u0087\u00e6\u0097\u00b6\u00e9\u0097\u00b4:\" + cstats.averageLoadPenalty() + \" \u00e7\u00ba\u00b3\u00e7\u00a7\u0092\");// \u00e5\u008a\u00a0\u00e8\u00bd\u00bd\u00e6\u0096\u00b0\u00e5\u0080\u00bc\u00e7\u009a\u0084\u00e5\u00b9\u00b3\u00e5\u009d\u0087\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00ef\u00bc\u008c\u00e5\u008d\u0095\u00e4\u00bd\u008d\u00e4\u00b8\u00ba\u00e7\u00ba\u00b3\u00e7\u00a7\u0092\u00ef\u00bc\u009b\r\n",
          "\t\tSystem.out.println(\"\u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e9\u00a1\u00b9\u00e8\u00a2\u00ab\u00e5\u009b\u009e\u00e6\u0094\u00b6\u00e7\u009a\u0084\u00e6\u0080\u00bb\u00e6\u0095\u00b0:\" + cstats.evictionCount());// \u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e9\u00a1\u00b9\u00e8\u00a2\u00ab\u00e5\u009b\u009e\u00e6\u0094\u00b6\u00e7\u009a\u0084\u00e6\u0080\u00bb\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e4\u00b8\u008d\u00e5\u008c\u0085"
        ],
        "line_number": 59,
        "start_line": 55,
        "end_line": 65
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.deviceauthserver-DeviceAuthServer/sources/com/google/common/cache/ForwardingCache.java\n",
        "code": [
          "    public long size() {\n",
          "        return delegate().size();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public CacheStats stats() {\n",
          "        return delegate().stats();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public ConcurrentMap<K, V> asMap() {\n"
        ],
        "line_number": 68,
        "start_line": 64,
        "end_line": 74
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.ocms-OCMS/sources/com/google/common/cache/ForwardingCache.java\n",
        "code": [
          "    public long size() {\n",
          "        return delegate().size();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public CacheStats stats() {\n",
          "        return delegate().stats();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public ConcurrentMap<K, V> asMap() {\n"
        ],
        "line_number": 68,
        "start_line": 64,
        "end_line": 74
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b6c99f414a40ae26a75064bbb97983e4b36125db/hollywood/com.oculus.gamingactivity-base/sources/com/google/common/cache/ForwardingCache.java\n",
        "code": [
          "    public long size() {\n",
          "        return delegate().size();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public CacheStats stats() {\n",
          "        return delegate().stats();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public ConcurrentMap<K, V> asMap() {\n"
        ],
        "line_number": 68,
        "start_line": 64,
        "end_line": 74
      },
      {
        "link": "https://github.com/SummerBuger/learning/blob/48cf954cd14f93eb95cf1db2580e0e966b56292d/guavademo/src/main/java/com/guavademo/liam/CacheDemo.java\n",
        "code": [
          "        stringCache.put(\"test1\", \"guavademo\");\n",
          "        stringCache.invalidate(\"test1\");\n",
          "        TimeUnit.SECONDS.sleep(2);\n",
          "        stringCache.cleanUp();\n",
          "        System.out.println(\"test1: \" + stringCache.get(\"test1\"));\n",
          "        CacheStats cacheStats = stringCache.stats();\n",
          "        System.out.println(cacheStats);\n",
          "//        try {\n",
          "//            TimeUnit.SECONDS.sleep(2);\n",
          "//            System.out.println(\"test1: \" + stringCache.getIfPresent(\"test1\"));\n",
          "////            TimeUnit.SECONDS.sleep(10);\n"
        ],
        "line_number": 37,
        "start_line": 33,
        "end_line": 43
      },
      {
        "link": "https://github.com/Cyber-Phantom/SystemUICOS12/blob/5626a5d1882e4e6d30fd088cd42c51a1ede8b05f/sources/com/google/common/cache/ForwardingCache.java\n",
        "code": [
          "    public long size() {\n",
          "        return delegate().size();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public CacheStats stats() {\n",
          "        return delegate().stats();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public ConcurrentMap<K, V> asMap() {\n"
        ],
        "line_number": 66,
        "start_line": 62,
        "end_line": 72
      },
      {
        "link": "https://github.com/daCyuubi/quest-tracker/blob/b10b8a7a7d31861da8b127841d1cce60c47267c8/hollywood/com.oculus.systemux-SystemUX/sources/com/google/common/cache/ForwardingCache.java\n",
        "code": [
          "    public long size() {\n",
          "        return delegate().size();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public CacheStats stats() {\n",
          "        return delegate().stats();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public ConcurrentMap<K, V> asMap() {\n"
        ],
        "line_number": 68,
        "start_line": 64,
        "end_line": 74
      },
      {
        "link": "https://github.com/tclan126/glassdoorapk/blob/858772b5f2caa20a9370c52d8dbda83da4ee1d69/sources/com/google/common/cache/ForwardingCache.java\n",
        "code": [
          "    public long size() {\n",
          "        return delegate().size();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public com.google.common.cache.CacheStats stats() {\n",
          "        return delegate().stats();\n",
          "    }\n",
          "\n",
          "    @Override // com.google.common.cache.Cache\n",
          "    public void invalidateAll() {\n"
        ],
        "line_number": 73,
        "start_line": 69,
        "end_line": 79
      }
    ],
    "com.google.common.collect.MapMaker.weakValues": [
      {
        "link": "https://github.com/luizribeiro/gython/blob/b6abb4f3990a2a07dbbc82e842ca5970e07da0cb/src/org/python/modules/_threading/_threading.java\n",
        "code": [
          "        dict.__setitem__(\"Condition\", Condition.TYPE);\n",
          "//        dict.__setitem__(\"JavaThread\", JavaThread.TYPE);\n",
          "    }\n",
          "\n",
          "    // internals to support threading.py, test_threading.py\n",
          "    public static Map<Long, PyObject> _threads = new MapMaker().weakValues().makeMap();\n",
          "    public static Map<Thread, PyObject> _jthread_to_pythread = new MapMaker().weakKeys().weakValues().makeMap();\n",
          "    public static Map<Long, PyObject> _active = _threads;\n",
          "\n",
          "    public static void _register_thread(Thread jthread, PyObject pythread) {\n",
          "        _threads.put(jthread.getId(), pythread);\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "https://github.com/kcjk/tap/blob/f238c486cb2fbd3be06c11a065c7898b1d20072a/v1_12_R1/src/main/java/com/nemosw/spigot/tap/v1_12_R1/world/NMSWorldSupport.java\n",
        "code": [
          "    public static NMSWorldSupport getInstance()\n",
          "    {\n",
          "        return instance.get();\n",
          "    }\n",
          "\n",
          "    private final Map<World, NMSWorld> worlds = new MapMaker().weakKeys().weakValues().makeMap();\n",
          "\n",
          "\tprivate final Map<Chunk, NMSChunk> chunks = new MapMaker().weakKeys().weakValues().makeMap();\n",
          "\n",
          "\t@Override\n",
          "\tpublic NMSWorld fromWorld(org.bukkit.World world)\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "https://github.com/anthonycanino1/entbench/blob/3c664cc693d4415fd8367c8307212d5aa2f3ae68/jython/src/org/python/modules/_threading/_threading.java\n",
        "code": [
          "        dict.__setitem__(\"Condition\", Condition.TYPE);\n",
          "//        dict.__setitem__(\"JavaThread\", JavaThread.TYPE);\n",
          "    }\n",
          "\n",
          "    // internals to support threading.py, test_threading.py\n",
          "    public static Map<Long, PyObject> _threads = new MapMaker().weakValues().makeMap();\n",
          "    public static Map<Thread, PyObject> _jthread_to_pythread = new MapMaker().weakKeys().weakValues().makeMap();\n",
          "    public static Map<Long, PyObject> _active = _threads;\n",
          "\n",
          "    public static void _register_thread(Thread jthread, PyObject pythread) {\n",
          "        _threads.put(jthread.getId(), pythread);\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "https://github.com/yangjiekai/android_jython-android-studio/blob/224cb8b42123419a4f54f00a611922db75cdefa2/app/src/main/java/org/python/modules/_threading/_threading.java\n",
        "code": [
          "        dict.__setitem__(\"Condition\", Condition.TYPE);\n",
          "//        dict.__setitem__(\"JavaThread\", JavaThread.TYPE);\n",
          "    }\n",
          "\n",
          "    // internals to support threading.py, test_threading.py\n",
          "    public static Map<Long, PyObject> _threads = new MapMaker().weakValues().makeMap();\n",
          "    public static Map<Thread, PyObject> _jthread_to_pythread = new MapMaker().weakKeys().weakValues().makeMap();\n",
          "    public static Map<Long, PyObject> _active = _threads;\n",
          "\n",
          "    public static void _register_thread(Thread jthread, PyObject pythread) {\n",
          "        _threads.put(jthread.getId(), pythread);\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "https://github.com/pl-ent-lang/entbench/blob/b23a9e2ac1bae2fb51a93699e9da5a5993a23b61/jython/src/org/python/modules/_threading/_threading.java\n",
        "code": [
          "        dict.__setitem__(\"Condition\", Condition.TYPE);\n",
          "//        dict.__setitem__(\"JavaThread\", JavaThread.TYPE);\n",
          "    }\n",
          "\n",
          "    // internals to support threading.py, test_threading.py\n",
          "    public static Map<Long, PyObject> _threads = new MapMaker().weakValues().makeMap();\n",
          "    public static Map<Thread, PyObject> _jthread_to_pythread = new MapMaker().weakKeys().weakValues().makeMap();\n",
          "    public static Map<Long, PyObject> _active = _threads;\n",
          "\n",
          "    public static void _register_thread(Thread jthread, PyObject pythread) {\n",
          "        _threads.put(jthread.getId(), pythread);\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "https://github.com/simondoty/345-sql/blob/402e3f8ace2312ce73c4781b574f9a915568d2fb/src/org/python/modules/_threading/_threading.java\n",
        "code": [
          "        dict.__setitem__(\"Condition\", Condition.TYPE);\n",
          "//        dict.__setitem__(\"JavaThread\", JavaThread.TYPE);\n",
          "    }\n",
          "\n",
          "    // internals to support threading.py, test_threading.py\n",
          "    public static Map<Long, PyObject> _threads = new MapMaker().weakValues().makeMap();\n",
          "    public static Map<Thread, PyObject> _jthread_to_pythread = new MapMaker().weakKeys().weakValues().makeMap();\n",
          "    public static Map<Long, PyObject> _active = _threads;\n",
          "\n",
          "    public static void _register_thread(Thread jthread, PyObject pythread) {\n",
          "        _threads.put(jthread.getId(), pythread);\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "https://github.com/xzchaoo/learn-demos/blob/48bc78e728cb1d74c223fe83babebd4e52d05836/utils/guava/src/test/java/com/xzchaoo/learn/guava/ConcurrentMapTest.java\n",
        "code": [
          " */\n",
          "public class ConcurrentMapTest {\n",
          "\t@Test\n",
          "\tpublic void test() {\n",
          "\t\tConcurrentMap<String, Object> cm = new MapMaker()\n",
          "\t\t\t.weakValues()\n",
          "\t\t\t.makeMap();\n",
          "\t\tcm.put(\"a\", new Object());\n",
          "\t\tSystem.out.println(cm.get(\"a\"));\n",
          "\t\tSystem.gc();\n",
          "\t\tSystem.out.println(cm.get(\"a\"));\n"
        ],
        "line_number": 16,
        "start_line": 12,
        "end_line": 22
      },
      {
        "link": "https://github.com/int3/jython/blob/d6db3fcf6198bb9a8f26feff0084beefb25141b2/src/org/python/modules/_threading/_threading.java\n",
        "code": [
          "        dict.__setitem__(\"Condition\", Condition.TYPE);\n",
          "//        dict.__setitem__(\"JavaThread\", JavaThread.TYPE);\n",
          "    }\n",
          "\n",
          "    // internals to support threading.py, test_threading.py\n",
          "    public static Map<Long, PyObject> _threads = new MapMaker().weakValues().makeMap();\n",
          "    public static Map<Thread, PyObject> _jthread_to_pythread = new MapMaker().weakKeys().weakValues().makeMap();\n",
          "    public static Map<Long, PyObject> _active = _threads;\n",
          "\n",
          "    public static void _register_thread(Thread jthread, PyObject pythread) {\n",
          "        _threads.put(jthread.getId(), pythread);\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "https://github.com/eutro/ZenLisp/blob/78b4b84d47ab0bed9ea2807ee34d63998e4bb55a/src/main/java/zenlisp/lang/Symbol.java\n",
        "code": [
          "import com.google.common.collect.MapMaker;\n",
          "\n",
          "import java.util.*;\n",
          "\n",
          "public class Symbol {\n",
          "    private static Map<String, Symbol> interns = new MapMaker().weakValues().makeMap();\n",
          "    private final String name;\n",
          "\n",
          "    public Symbol(String name) {\n",
          "        this.name = name;\n",
          "    }\n"
        ],
        "line_number": 7,
        "start_line": 3,
        "end_line": 13
      },
      {
        "link": "https://github.com/varialus/jython-legacy/blob/dbd2caab540d3b7c7ba3ed38656b14c5c74038c9/jython/src/org/python/modules/_threading/_threading.java\n",
        "code": [
          "        dict.__setitem__(\"Condition\", Condition.TYPE);\n",
          "//        dict.__setitem__(\"JavaThread\", JavaThread.TYPE);\n",
          "    }\n",
          "\n",
          "    // internals to support threading.py, test_threading.py\n",
          "    public static Map<Long, PyObject> _threads = new MapMaker().weakValues().makeMap();\n",
          "    public static Map<Thread, PyObject> _jthread_to_pythread = new MapMaker().weakKeys().weakValues().makeMap();\n",
          "    public static Map<Long, PyObject> _active = _threads;\n",
          "\n",
          "    public static void _register_thread(Thread jthread, PyObject pythread) {\n",
          "        _threads.put(jthread.getId(), pythread);\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      }
    ],
    "com.google.common.cache.CacheBuilder.weakValues": [
      {
        "link": "https://github.com/daniel097541/BeastFactionsHook/blob/26cab95255e2a1b091fbd3d4214fe5c8a948594a/core/src/main/java/info/beastsoftware/hookcore/cache/CachedManager.java\n",
        "code": [
          "        if (weakKeys) {\n",
          "            builder.weakKeys();\n",
          "        }\n",
          "\n",
          "        if (weakValues) {\n",
          "            builder.weakValues();\n",
          "        }\n",
          "\n",
          "        if (expireAfterAccess > 0) {\n",
          "            builder.expireAfterAccess(expireAfterAccess, TimeUnit.SECONDS);\n",
          "        }\n"
        ],
        "line_number": 29,
        "start_line": 25,
        "end_line": 35
      },
      {
        "link": "https://github.com/domclick/spring-flow-statemachine/blob/2f5975187341c750eb449d08a0f64b27bf01ba43/state-machine-core/src/main/java/ru/sberned/statemachine/lock/MapLockProvider.java\n",
        "code": [
          "/**\n",
          " * Created by Evgeniya Patuk (jpatuk@gmail.com) on 07/12/2016.\n",
          " */\n",
          "public class MapLockProvider implements LockProvider {\n",
          "    private LoadingCache<Object, Lock> cache = CacheBuilder.newBuilder()\n",
          "            .weakValues()\n",
          "            .build(new CacheLoader<Object, Lock>() {\n",
          "                @Override\n",
          "                public Lock load(Object key) throws Exception {\n",
          "                    return new ReentrantLock();\n",
          "                }\n"
        ],
        "line_number": 15,
        "start_line": 11,
        "end_line": 21
      },
      {
        "link": "https://github.com/zqhxuyuan/zava/blob/707691039b7aff8f4129e2b25d08b374610990e5/src/main/java/com/github/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> weakKeys() {\n",
          "\t\treturn builder.weakKeys();\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> weakValues() {\n",
          "\t\treturn builder.weakValues();\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> softValues() {\n",
          "\t\treturn builder.softValues();\n"
        ],
        "line_number": 59,
        "start_line": 55,
        "end_line": 65
      },
      {
        "link": "https://github.com/Gilded-Games/OrbisLib/blob/147af30f2d7ff854c7bdbb4cc47d4e55db24d728/src/main/java/com/gildedgames/orbis/lib/util/cache/FileSystemCacheBuilder.java\n",
        "code": [
          "\t\tthis.underlyingCacheBuilder.weakKeys();\n",
          "\t\treturn this;\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * {@link com.google.common.cache.CacheBuilder#weakValues()}\n",
          "\t */\n",
          "\tpublic FileSystemCacheBuilder<K, V> weakValues()\n",
          "\t{\n",
          "\t\tthis.underlyingCacheBuilder.weakValues();\n",
          "\t\treturn this;\n"
        ],
        "line_number": 161,
        "start_line": 157,
        "end_line": 167
      },
      {
        "link": "https://github.com/edu-chinavalley/jar-demo-test/blob/12dd029df5043187373330dcf1dd33324d513b8e/guava/src/main/java/com/chinavalley/demo/guava/cache/CacheTest.java\n",
        "code": [
          "                 */\n",
          "                .weakKeys()\n",
          "                /**\n",
          "                 * weakValues\n",
          "                 */\n",
          "                .weakValues()\n",
          "                /**\n",
          "                 *\n",
          "                 */\n",
          "                //.weigher()\n",
          "                .build();\n"
        ],
        "line_number": 70,
        "start_line": 66,
        "end_line": 76
      },
      {
        "link": "https://github.com/zqhxuyuan/tutorials/blob/72740ec130a15331b0b2428b9750099c47073052/zava/src/main/java/com/github/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> weakKeys() {\n",
          "\t\treturn builder.weakKeys();\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> weakValues() {\n",
          "\t\treturn builder.weakValues();\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> softValues() {\n",
          "\t\treturn builder.softValues();\n"
        ],
        "line_number": 59,
        "start_line": 55,
        "end_line": 65
      },
      {
        "link": "https://github.com/RTBHOUSE/kafka-workers/blob/6fa3869e735525ae8c17c17441e33b1008d29fda/src/main/java/com/rtbhouse/kafka/workers/impl/cache/UniqueInstancesCache.java\n",
        "code": [
          "    private final LoadingCache<T, T> cache;\n",
          "\n",
          "    public UniqueInstancesCache() {\n",
          "        //noinspection unchecked\n",
          "        this.cache = CacheBuilder.newBuilder()\n",
          "                .weakValues()\n",
          "                .build((CacheLoader<T, T>) IDENTITY_CACHE_LOADER);\n",
          "    }\n",
          "\n",
          "    public UniqueInstancesCache(int concurrencyLevel) {\n",
          "        //noinspection unchecked\n"
        ],
        "line_number": 20,
        "start_line": 16,
        "end_line": 26
      },
      {
        "link": "https://github.com/raphw/guava-cache-overflow-extension/blob/befa47bb955ffa9f344b44e8621290d65e6592d2/src/main/java/com/blogspot/mydailyjava/guava/cache/overflow/FileSystemCacheBuilder.java\n",
        "code": [
          "        underlyingCacheBuilder.weakKeys();\n",
          "        return this;\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.cache.CacheBuilder#weakValues()}\n",
          "     */\n",
          "    public FileSystemCacheBuilder<K, V> weakValues() {\n",
          "        underlyingCacheBuilder.weakValues();\n",
          "        return this;\n",
          "    }\n"
        ],
        "line_number": 131,
        "start_line": 127,
        "end_line": 137
      },
      {
        "link": "https://github.com/Braj65/Sandbox/blob/ab7d5de63d65a120b264e3dc3219fbead1930a03/ScaleConcepts/src/main/java/designCache/guavaToDIsk/FileSystemCacheBuilder.java\n",
        "code": [
          "        underlyingCacheBuilder.weakKeys();\n",
          "        return this;\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.cache.CacheBuilder#weakValues()}\n",
          "     */\n",
          "    public FileSystemCacheBuilder<K, V> weakValues() {\n",
          "        underlyingCacheBuilder.weakValues();\n",
          "        return this;\n",
          "    }\n"
        ],
        "line_number": 131,
        "start_line": 127,
        "end_line": 137
      },
      {
        "link": "https://github.com/shansun123/sparrow/blob/5eae1d009717f8eb64f90a22ac9b54a440ff0771/src/main/java/com/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> weakKeys() {\n",
          "\t\treturn builder.weakKeys();\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> weakValues() {\n",
          "\t\treturn builder.weakValues();\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> softValues() {\n",
          "\t\treturn builder.softValues();\n"
        ],
        "line_number": 59,
        "start_line": 55,
        "end_line": 65
      }
    ],
    "com.google.common.collect.TreeMultimap.keySet": [
      {
        "link": "https://github.com/InscopeMetrics/kairosdb/blob/6c1c17c4291bfdf7f3e2cb2d6ca06ea5774ebcc1/src/main/java/org/kairosdb/core/datastore/TagSetImpl.java\n",
        "code": [
          "        m_tags.put(name, value);\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public Set<String> getTagNames() {\n",
          "        return (m_tags.keySet());\n",
          "    }\n",
          "\n",
          "    @Override\n",
          "    public Set<String> getTagValues(final String tag) {\n",
          "        return (m_tags.get(tag));\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      },
      {
        "link": "https://github.com/ebi-gene-expression-group/atlas/blob/560cb236624ffeafe0c7f41ca2da927546a34d1e/base/src/main/java/uk/ac/ebi/atlas/experimentimport/analyticsindex/AnalyticsIndexerMonitor.java\n",
        "code": [
          "        processedMagetabFilesSize = 0L;\n",
          "        magetabFilesTotalSize = 0L;\n",
          "        stringBuilder = new StringBuilder();\n",
          "\n",
          "        ImmutableMap.Builder<String, Long> builder = new ImmutableMap.Builder<>();\n",
          "        for (long documents : descendingExperimentSizeToExperimentAccessions.keySet()) {\n",
          "            for (String experimentAccession : descendingExperimentSizeToExperimentAccessions.get(documents)) {\n",
          "                builder.put(experimentAccession, documents);\n",
          "                magetabFilesTotalSize += documents;\n",
          "            }\n",
          "        }\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/gridgentoo/kairosDB/blob/a0f28f8a8575a4c8b2d9a6601f63364885753cbf/src/main/java/org/kairosdb/core/datastore/TagSetImpl.java\n",
        "code": [
          "\t}\n",
          "\n",
          "\t@Override\n",
          "\tpublic Set<String> getTagNames()\n",
          "\t{\n",
          "\t\treturn (m_tags.keySet());\n",
          "\t}\n",
          "\n",
          "\t@Override\n",
          "\tpublic Set<String> getTagValues(String tag)\n",
          "\t{\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "https://github.com/UESTC-DSCLab/anaDB/blob/fe36595b688426ef0964f4f617df7e7bb4848a2c/src/main/java/org/kairosdb/core/datastore/TagSetImpl.java\n",
        "code": [
          "\t}\n",
          "\n",
          "\t@Override\n",
          "\tpublic Set<String> getTagNames()\n",
          "\t{\n",
          "\t\treturn (m_tags.keySet());\n",
          "\t}\n",
          "\n",
          "\t@Override\n",
          "\tpublic Set<String> getTagValues(String tag)\n",
          "\t{\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "https://github.com/bgoonz/stuff/blob/2f4cb7b8d3a5fde17c7c7aa5321639f0337ea07e/SPOTIFY/kairosdb/src/main/java/org/kairosdb/core/datastore/TagSetImpl.java\n",
        "code": [
          "\t}\n",
          "\n",
          "\t@Override\n",
          "\tpublic Set<String> getTagNames()\n",
          "\t{\n",
          "\t\treturn (m_tags.keySet());\n",
          "\t}\n",
          "\n",
          "\t@Override\n",
          "\tpublic Set<String> getTagValues(String tag)\n",
          "\t{\n"
        ],
        "line_number": 25,
        "start_line": 21,
        "end_line": 31
      },
      {
        "link": "https://github.com/bandicoot86/enitalk/blob/e1b19858fed0920eb9ed324d1a557af2b33a7a81/src/main/java/com/enitalk/controllers/bots/TimeZoneTestr.java\n",
        "code": [
          "            map.put(TimeUnit.MILLISECONDS.toMinutes(offset), id);\n",
          "        }\n",
          "        \n",
          "        ObjectMapper j = new ObjectMapper();\n",
          "        ArrayNode a = j.createArrayNode();\n",
          "        map.keySet().forEach((Long key) -> {\n",
          "            a.addObject().set(key.toString(), j.convertValue(map.get(key), ArrayNode.class));\n",
          "        });\n",
          "        \n",
          "        System.out.println(a);\n",
          "        \n"
        ],
        "line_number": 33,
        "start_line": 29,
        "end_line": 39
      },
      {
        "link": "https://github.com/Rails-18xx/Rails/blob/ecafdcadfe76ea61aad230bb0fe10d8da0abe8bf/src/main/java/net/sf/rails/game/state/TreeMultimapState.java\n",
        "code": [
          "    public ImmutableSortedSet<V> get(K key) {\n",
          "        return ImmutableSortedSet.copyOf(map.get(key));\n",
          "    }\n",
          "    \n",
          "    @Override\n",
          "    public ImmutableSortedSet<K> keySet() {\n",
          "        return ImmutableSortedSet.copyOf(map.keySet());\n",
          "    }\n",
          "    \n",
          "    @Override\n",
          "    public ImmutableSortedSet<V> values() {\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "https://github.com/freystef/Rails/blob/d0185de819770aad21cd9ac2cbb53580e215e644/src/main/java/net/sf/rails/game/state/TreeMultimapState.java\n",
        "code": [
          "    public ImmutableSortedSet<V> get(K key) {\n",
          "        return ImmutableSortedSet.copyOf(map.get(key));\n",
          "    }\n",
          "    \n",
          "    @Override\n",
          "    public ImmutableSortedSet<K> keySet() {\n",
          "        return ImmutableSortedSet.copyOf(map.keySet());\n",
          "    }\n",
          "    \n",
          "    @Override\n",
          "    public ImmutableSortedSet<V> values() {\n"
        ],
        "line_number": 38,
        "start_line": 34,
        "end_line": 44
      },
      {
        "link": "https://github.com/galaxyeye/scent-retired/blob/28b1003e9fea63329d695f57ba44396d8b278111/src/java/org/qiwur/scent/utils/PrintUtil.java\n",
        "code": [
          "import com.google.common.collect.TreeMultimap;\n",
          "\n",
          "public class PrintUtil {\n",
          "\n",
          "  public static void printIntegerTreeMultimap(TreeMultimap<Integer, Node> map, int limit) {\n",
          "    for (Integer number : map.keySet()) {\n",
          "      Set<Node> nodes = map.get(number);\n",
          "\n",
          "      for (Node n : nodes) {\n",
          "        if (limit-- <= 0)\n",
          "          return;\n"
        ],
        "line_number": 12,
        "start_line": 8,
        "end_line": 18
      },
      {
        "link": "https://github.com/McGill-DMaS/Kam1n0-Community/blob/6304120a5af16cffa3dc6c0431c2a73d1cab56f2/kam1n0/kam1n0-commons/src/main/java/ca/mcgill/sis/dmas/io/collection/heap/DuplicatedRanker.java\n",
        "code": [
          "\t\tthis.topk = topk;\r\n",
          "\t}\r\n",
          "\r\n",
          "\tpublic void push(Double score, T value) {\r\n",
          "\t\tdata.put(score, value);\r\n",
          "\t\tif (this.topk > 0 && data.keySet().size() > this.topk) {\r\n",
          "\t\t\tdata.keySet().pollLast();\r\n",
          "\t\t}\r\n",
          "\t}\r\n",
          "\r\n",
          "\tpublic String toString() {\r\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 32
      }
    ],
    "org.mockito.AdditionalAnswers.returnsFirstArg": [
      {
        "link": "https://github.com/peeracle/webrtc/blob/7db17c3b2bd7e42b23cc25a2fa574cd3d9e9f7ff/chromium/src/third_party/mockito/src/test/org/mockitousage/stubbing/StubbingWithAdditionalAnswers.java\n",
        "code": [
          "\n",
          "    @Mock IMethods iMethods;\n",
          "\n",
          "    @Test\n",
          "    public void can_return_arguments_of_invocation() throws Exception {\n",
          "        given(iMethods.objectArgMethod(anyObject())).will(returnsFirstArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(0), anyObject(), anyString())).will(returnsSecondArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(1), anyObject(), anyString())).will(returnsLastArg());\n",
          "\n",
          "        assertThat(iMethods.objectArgMethod(\"first\")).isEqualTo(\"first\");\n",
          "        assertThat(iMethods.threeArgumentMethod(0, \"second\", \"whatever\")).isEqualTo(\"second\");\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/logisticloon/MTP-defects4J/blob/781aad17d6b2b4a080a3c8fc65807fc63a3d5d8e/Source%20Code%20of%20Programs/Mockito/test/org/mockitousage/stubbing/StubbingWithAdditionalAnswers.java\n",
        "code": [
          "\n",
          "    @Mock IMethods iMethods;\n",
          "\n",
          "    @Test\n",
          "    public void can_return_arguments_of_invocation() throws Exception {\n",
          "        given(iMethods.objectArgMethod(anyObject())).will(returnsFirstArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(0), anyObject(), anyString())).will(returnsSecondArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(1), anyObject(), anyString())).will(returnsLastArg());\n",
          "\n",
          "        assertThat(iMethods.objectArgMethod(\"first\")).isEqualTo(\"first\");\n",
          "        assertThat(iMethods.threeArgumentMethod(0, \"second\", \"whatever\")).isEqualTo(\"second\");\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/sdogruyol/mockito/blob/220717f2923e84a6c0242e7880adaf527dd1fb45/test/org/mockitousage/stubbing/StubbingWithAdditionalAnswers.java\n",
        "code": [
          "\n",
          "    @Mock IMethods iMethods;\n",
          "\n",
          "    @Test\n",
          "    public void can_return_arguments_of_invocation() throws Exception {\n",
          "        given(iMethods.objectArgMethod(anyObject())).will(returnsFirstArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(0), anyObject(), anyString())).will(returnsSecondArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(1), anyObject(), anyString())).will(returnsLastArg());\n",
          "\n",
          "        assertThat(iMethods.objectArgMethod(\"first\")).isEqualTo(\"first\");\n",
          "        assertThat(iMethods.threeArgumentMethod(0, \"second\", \"whatever\")).isEqualTo(\"second\");\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/kusumotolab/astor/blob/ccf255db50187594f69311076d31fc1f4da7cb1e/examples/mockito_22/test/org/mockitousage/stubbing/StubbingWithAdditionalAnswers.java\n",
        "code": [
          "\n",
          "    @Mock IMethods iMethods;\n",
          "\n",
          "    @Test\n",
          "    public void can_return_arguments_of_invocation() throws Exception {\n",
          "        given(iMethods.objectArgMethod(anyObject())).will(returnsFirstArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(0), anyObject(), anyString())).will(returnsSecondArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(1), anyObject(), anyString())).will(returnsLastArg());\n",
          "\n",
          "        assertThat(iMethods.objectArgMethod(\"first\")).isEqualTo(\"first\");\n",
          "        assertThat(iMethods.threeArgumentMethod(0, \"second\", \"whatever\")).isEqualTo(\"second\");\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/LineageOS/android_external_mockito/blob/660528bba08484360551da97a52069dc5562e7b0/test/org/mockitousage/stubbing/StubbingWithAdditionalAnswers.java\n",
        "code": [
          "\n",
          "    @Mock IMethods iMethods;\n",
          "\n",
          "    @Test\n",
          "    public void can_return_arguments_of_invocation() throws Exception {\n",
          "        given(iMethods.objectArgMethod(anyObject())).will(returnsFirstArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(0), anyObject(), anyString())).will(returnsSecondArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(1), anyObject(), anyString())).will(returnsLastArg());\n",
          "\n",
          "        assertThat(iMethods.objectArgMethod(\"first\")).isEqualTo(\"first\");\n",
          "        assertThat(iMethods.threeArgumentMethod(0, \"second\", \"whatever\")).isEqualTo(\"second\");\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/fukehan/p_external/blob/1538eb26d30e87d52436962cd7129de0bbedaee6/mockito/src/test/java/org/mockitousage/stubbing/StubbingWithAdditionalAnswersTest.java\n",
        "code": [
          "\n",
          "    @Mock IMethods iMethods;\n",
          "\n",
          "    @Test\n",
          "    public void can_return_arguments_of_invocation() throws Exception {\n",
          "        given(iMethods.objectArgMethod(any())).will(returnsFirstArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(0), any(), anyString())).will(returnsSecondArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(1), any(), anyString())).will(returnsLastArg());\n",
          "\n",
          "        assertThat(iMethods.objectArgMethod(\"first\")).isEqualTo(\"first\");\n",
          "        assertThat(iMethods.threeArgumentMethod(0, \"second\", \"whatever\")).isEqualTo(\"second\");\n"
        ],
        "line_number": 48,
        "start_line": 44,
        "end_line": 54
      },
      {
        "link": "https://github.com/Tateology/java-corpus/blob/804cb203b0ffe57f22a1f5002a72fbadb38c3215/mockito/test/org/mockitousage/stubbing/StubbingWithAdditionalAnswers.java\n",
        "code": [
          "\n",
          "    @Mock IMethods iMethods;\n",
          "\n",
          "    @Test\n",
          "    public void can_return_arguments_of_invocation() throws Exception {\n",
          "        given(iMethods.objectArgMethod(anyObject())).will(returnsFirstArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(0), anyObject(), anyString())).will(returnsSecondArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(1), anyObject(), anyString())).will(returnsLastArg());\n",
          "\n",
          "        assertThat(iMethods.objectArgMethod(\"first\")).isEqualTo(\"first\");\n",
          "        assertThat(iMethods.threeArgumentMethod(0, \"second\", \"whatever\")).isEqualTo(\"second\");\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/xgdsmileboy/StateCoverLocator/blob/60ebef4726176058d0de92340eda1d172cb879d0/res/junitRes/mockito/mockito_1_buggy/test/org/mockitousage/stubbing/StubbingWithAdditionalAnswers.java\n",
        "code": [
          "\n",
          "    @Mock IMethods iMethods;\n",
          "\n",
          "    @Test\n",
          "    public void can_return_arguments_of_invocation() throws Exception {\n",
          "        given(iMethods.objectArgMethod(anyObject())).will(returnsFirstArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(0), anyObject(), anyString())).will(returnsSecondArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(1), anyObject(), anyString())).will(returnsLastArg());\n",
          "\n",
          "        assertThat(iMethods.objectArgMethod(\"first\")).isEqualTo(\"first\");\n",
          "        assertThat(iMethods.threeArgumentMethod(0, \"second\", \"whatever\")).isEqualTo(\"second\");\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/ITWOI/spoon-example/blob/450e59197ead3f9ba20527b801c48462a3f63b8d/test/Mockito-800012b/test/org/mockitousage/stubbing/StubbingWithAdditionalAnswers.java\n",
        "code": [
          "\n",
          "    @Mock IMethods iMethods;\n",
          "\n",
          "    @Test\n",
          "    public void can_return_arguments_of_invocation() throws Exception {\n",
          "        given(iMethods.objectArgMethod(anyObject())).will(returnsFirstArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(0), anyObject(), anyString())).will(returnsSecondArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(1), anyObject(), anyString())).will(returnsLastArg());\n",
          "\n",
          "        assertThat(iMethods.objectArgMethod(\"first\")).isEqualTo(\"first\");\n",
          "        assertThat(iMethods.threeArgumentMethod(0, \"second\", \"whatever\")).isEqualTo(\"second\");\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      },
      {
        "link": "https://github.com/liudabingSjtu/MyMockito/blob/06eb23d3aa28c19066529762da4a92bd2f4f34cd/test/org/mockitousage/stubbing/StubbingWithAdditionalAnswers.java\n",
        "code": [
          "\n",
          "    @Mock IMethods iMethods;\n",
          "\n",
          "    @Test\n",
          "    public void can_return_arguments_of_invocation() throws Exception {\n",
          "        given(iMethods.objectArgMethod(anyObject())).will(returnsFirstArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(0), anyObject(), anyString())).will(returnsSecondArg());\n",
          "        given(iMethods.threeArgumentMethod(eq(1), anyObject(), anyString())).will(returnsLastArg());\n",
          "\n",
          "        assertThat(iMethods.objectArgMethod(\"first\")).isEqualTo(\"first\");\n",
          "        assertThat(iMethods.threeArgumentMethod(0, \"second\", \"whatever\")).isEqualTo(\"second\");\n"
        ],
        "line_number": 31,
        "start_line": 27,
        "end_line": 37
      }
    ],
    "org.mockito.BDDMockito.willReturn": [
      {
        "link": "https://github.com/arch-zen/spring-framework-1/blob/5100a6d514977623121e5d2422914af84297bb30/spring-websocket/src/test/java/org/springframework/web/socket/sockjs/transport/session/SockJsSessionTests.java\n",
        "code": [
          "\t}\n",
          "\n",
          "\t@Test\n",
          "\tpublic void scheduleAndCancelHeartbeat() throws Exception {\n",
          "\t\tScheduledFuture<?> task = mock(ScheduledFuture.class);\n",
          "\t\twillReturn(task).given(this.taskScheduler).schedule(any(Runnable.class), any(Date.class));\n",
          "\n",
          "\t\tthis.session.setActive(true);\n",
          "\t\tthis.session.scheduleHeartbeat();\n",
          "\n",
          "\t\tverify(this.taskScheduler).schedule(any(Runnable.class), any(Date.class));\n"
        ],
        "line_number": 281,
        "start_line": 277,
        "end_line": 287
      },
      {
        "link": "https://github.com/lrlr/spring/blob/7b58c625e02d6f007fa8ccfaded3d787a440cc86/spring-websocket/src/test/java/org/springframework/web/socket/sockjs/transport/session/SockJsSessionTests.java\n",
        "code": [
          "\t}\n",
          "\n",
          "\t@Test\n",
          "\tpublic void scheduleAndCancelHeartbeat() throws Exception {\n",
          "\t\tScheduledFuture<?> task = mock(ScheduledFuture.class);\n",
          "\t\twillReturn(task).given(this.taskScheduler).schedule(any(Runnable.class), any(Date.class));\n",
          "\n",
          "\t\tthis.session.setActive(true);\n",
          "\t\tthis.session.scheduleHeartbeat();\n",
          "\n",
          "\t\tverify(this.taskScheduler).schedule(any(Runnable.class), any(Date.class));\n"
        ],
        "line_number": 275,
        "start_line": 271,
        "end_line": 281
      },
      {
        "link": "https://github.com/LoveWK/mineSpringFramework/blob/519dcd54483ef89c84122ec242cca56523219f14/spring-websocket/src/test/java/org/springframework/web/socket/sockjs/transport/session/SockJsSessionTests.java\n",
        "code": [
          "\t}\n",
          "\n",
          "\t@Test\n",
          "\tpublic void scheduleAndCancelHeartbeat() throws Exception {\n",
          "\t\tScheduledFuture<?> task = mock(ScheduledFuture.class);\n",
          "\t\twillReturn(task).given(this.taskScheduler).schedule(any(Runnable.class), any(Date.class));\n",
          "\n",
          "\t\tthis.session.setActive(true);\n",
          "\t\tthis.session.scheduleHeartbeat();\n",
          "\n",
          "\t\tverify(this.taskScheduler).schedule(any(Runnable.class), any(Date.class));\n"
        ],
        "line_number": 281,
        "start_line": 277,
        "end_line": 287
      },
      {
        "link": "https://github.com/FantasticPan/spring-framework/blob/d8f1785a48ef3ffa4eb1a2b9ed718599a54c6102/spring-websocket/src/test/java/org/springframework/web/socket/sockjs/transport/session/SockJsSessionTests.java\n",
        "code": [
          "\n",
          "\t@Test\n",
          "\tpublic void scheduleAndCancelHeartbeat() throws Exception {\n",
          "\n",
          "\t\tScheduledFuture<?> task = mock(ScheduledFuture.class);\n",
          "\t\twillReturn(task).given(this.taskScheduler).schedule(any(Runnable.class), any(Date.class));\n",
          "\n",
          "\t\tthis.session.setActive(true);\n",
          "\t\tthis.session.scheduleHeartbeat();\n",
          "\n",
          "\t\tverify(this.taskScheduler).schedule(any(Runnable.class), any(Date.class));\n"
        ],
        "line_number": 299,
        "start_line": 295,
        "end_line": 305
      },
      {
        "link": "https://github.com/wangs0627/spring-framework-5.1.x-source/blob/ff7aab67ec6cdafc6e610e6500badd8cc8f4b572/spring-websocket/src/test/java/org/springframework/web/socket/sockjs/transport/session/SockJsSessionTests.java\n",
        "code": [
          "\t}\n",
          "\n",
          "\t@Test\n",
          "\tpublic void scheduleAndCancelHeartbeat() throws Exception {\n",
          "\t\tScheduledFuture<?> task = mock(ScheduledFuture.class);\n",
          "\t\twillReturn(task).given(this.taskScheduler).schedule(any(Runnable.class), any(Date.class));\n",
          "\n",
          "\t\tthis.session.setActive(true);\n",
          "\t\tthis.session.scheduleHeartbeat();\n",
          "\n",
          "\t\tverify(this.taskScheduler).schedule(any(Runnable.class), any(Date.class));\n"
        ],
        "line_number": 275,
        "start_line": 271,
        "end_line": 281
      },
      {
        "link": "https://github.com/luxiaoxiangxiang/spring-source-5.1.3.RELEASE/blob/9a57f04350ee35f18758d7c615a5ccadd7533dc7/spring-websocket/src/test/java/org/springframework/web/socket/sockjs/transport/session/SockJsSessionTests.java\n",
        "code": [
          "\t}\n",
          "\n",
          "\t@Test\n",
          "\tpublic void scheduleAndCancelHeartbeat() throws Exception {\n",
          "\t\tScheduledFuture<?> task = mock(ScheduledFuture.class);\n",
          "\t\twillReturn(task).given(this.taskScheduler).schedule(any(Runnable.class), any(Date.class));\n",
          "\n",
          "\t\tthis.session.setActive(true);\n",
          "\t\tthis.session.scheduleHeartbeat();\n",
          "\n",
          "\t\tverify(this.taskScheduler).schedule(any(Runnable.class), any(Date.class));\n"
        ],
        "line_number": 281,
        "start_line": 277,
        "end_line": 287
      },
      {
        "link": "}https://github.com/aro-tech/extended-mockito/blob/d3e3115fa4b438388e0b4b66253c0a386c72dcd7/src/main/java/com/github/aro_tech/extended_mockito/BDDMockitoMixin.java\n",
        "code": [
          "    }\n",
          "\n",
          "\n",
          "\n",
          "    /**\n",
          "     * Delegate call to public static org.mockito.BDDMockito$BDDStubber org.mockito.BDDMockito.willReturn(java.lang.Object)\n",
          "     * {@link org.mockito.BDDMockito#willReturn(java.lang.Object)}\n",
          "     */\n",
          "    default BDDMockito.BDDStubber willReturn(Object toBeReturned) {\n",
          "        return BDDMockito.willReturn(toBeReturned);\n",
          "    }\n"
        ],
        "line_number": 79,
        "start_line": 75,
        "end_line": 85
      },
      {
        "link": "https://github.com/glj381413362/reading-spring/blob/1ea47e667f1271321b70b051ce309079f840599f/spring-websocket/src/test/java/org/springframework/web/socket/sockjs/transport/session/SockJsSessionTests.java\n",
        "code": [
          "\t}\n",
          "\n",
          "\t@Test\n",
          "\tpublic void scheduleAndCancelHeartbeat() throws Exception {\n",
          "\t\tScheduledFuture<?> task = mock(ScheduledFuture.class);\n",
          "\t\twillReturn(task).given(this.taskScheduler).schedule(any(Runnable.class), any(Date.class));\n",
          "\n",
          "\t\tthis.session.setActive(true);\n",
          "\t\tthis.session.scheduleHeartbeat();\n",
          "\n",
          "\t\tverify(this.taskScheduler).schedule(any(Runnable.class), any(Date.class));\n"
        ],
        "line_number": 281,
        "start_line": 277,
        "end_line": 287
      },
      {
        "link": "}https://github.com/ilywka/call-tracker-android/blob/b1409b50554933da8a08dd031f2edfac52b54495/app/src/test/java/com/sashnikov/android/calltracker/retrofit/SalesBoosterClientTest.java\n",
        "code": [
          "    public void shouldBuildCorrectUrlWhenBaseUrlWithLastSlash() {\n",
          "        SynchronizationSettings preferencesHandler =\n",
          "                mock(SynchronizationSettings.class);\n",
          "        SalesBoosterRetrofitApi api = mock(SalesBoosterRetrofitApi.class);\n",
          "\n",
          "        willReturn(\"path/\").given(preferencesHandler).getServiceUrl();\n",
          "\n",
          "        SalesBoosterClient client = new SalesBoosterClient(preferencesHandler, api);\n",
          "        client.health();\n",
          "\n",
          "        then(api).should(times(1)).health(\"path/api/health\");\n"
        ],
        "line_number": 21,
        "start_line": 17,
        "end_line": 27
      },
      {
        "link": "https://github.com/mike-seger/build-bench/blob/36e5a5ca4db079b9bbbd5fcdd6295338e643e966/spring-kafka-2.7.1/spring-kafka/src/test/java/org/springframework/kafka/retrytopic/RetryTopicConfigurationProviderTests.java\n",
        "code": [
          "\n",
          "\t@Test\n",
          "\tvoid shouldProvideFromAnnotation() {\n",
          "\n",
          "\t\t// setup\n",
          "\t\twillReturn(kafkaOperations).given(beanFactory).getBean(RetryTopicInternalBeanNames.DEFAULT_KAFKA_TEMPLATE_BEAN_NAME, KafkaOperations.class);\n",
          "\n",
          "\t\t// given\n",
          "\t\tRetryTopicConfigurationProvider provider = new RetryTopicConfigurationProvider(beanFactory);\n",
          "\t\tRetryTopicConfiguration configuration = provider.findRetryConfigurationFor(topics, annotatedMethod, bean);\n",
          "\n"
        ],
        "line_number": 91,
        "start_line": 87,
        "end_line": 97
      }
    ],
    "com.google.common.cache.CacheBuilder.expireAfterWrite": [
      {
        "link": "https://github.com/wx930910/autorefactor_druid/blob/f2c02baacfea9bc0f57938de2b2bacfc462b45f2/extensions-core/lookups-cached-single/src/main/java/org/apache/druid/server/lookup/cache/loading/OnHeapLoadingCache.java\n",
        "code": [
          "                                       .recordStats();\n",
          "    if (this.expireAfterAccess != null) {\n",
          "      builder.expireAfterAccess(expireAfterAccess, TimeUnit.MILLISECONDS);\n",
          "    }\n",
          "    if (this.expireAfterWrite != null) {\n",
          "      builder.expireAfterWrite(this.expireAfterWrite, TimeUnit.MILLISECONDS);\n",
          "    }\n",
          "    if (this.maximumSize != null) {\n",
          "      builder.maximumSize(this.maximumSize);\n",
          "    }\n",
          "\n"
        ],
        "line_number": 92,
        "start_line": 88,
        "end_line": 98
      },
      {
        "link": "https://github.com/adorsys/open-banking-gateway/blob/b0d7df9900369b49c6f607ab50b9a351a6b73eb9/opba-banking-protocol-facade/src/main/java/de/adorsys/opba/protocol/facade/config/FacadeTransientDataConfig.java\n",
        "code": [
          "            throw new IllegalArgumentException(\"It is not recommended to have short transient data expiration time, \"\n",
          "                    + \"it must be at least equal to request timeout\");\n",
          "        }\n",
          "\n",
          "        return newBuilder()\n",
          "                .expireAfterWrite(expireAfterWrite)\n",
          "                .maximumSize(Integer.MAX_VALUE);\n",
          "    }\n",
          "}\n"
        ],
        "line_number": 26,
        "start_line": 22,
        "end_line": 30
      },
      {
        "link": "https://github.com/openjdl/java-server-framework/blob/98059528bffc5bcfc5aee5024eb18b3f18d564ab/jsf-core/src/main/java/com/openjdl/jsf/core/cache/CachesInMemory.java\n",
        "code": [
          "    this.type = type;\n",
          "    this.loader = loader;\n",
          "\n",
          "    this.single = com.google.common.cache.CacheBuilder.newBuilder()\n",
          "      .recordStats()\n",
          "      .expireAfterWrite(EXPIRE_DURATION, EXPIRE_TIME_UNIT)\n",
          "      .build(com.google.common.cache.CacheLoader.from((key) ->\n",
          "        Optional.ofNullable(loader.loadSingle(Objects.requireNonNull(key)))\n",
          "      ));\n",
          "    this.page = com.google.common.cache.CacheBuilder.newBuilder()\n",
          "      .recordStats()\n"
        ],
        "line_number": 72,
        "start_line": 68,
        "end_line": 78
      },
      {
        "link": "https://github.com/zqhxuyuan/tutorials/blob/72740ec130a15331b0b2428b9750099c47073052/zava/src/main/java/com/github/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> softValues() {\n",
          "\t\treturn builder.softValues();\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> expireAfterWrite(long duration, TimeUnit unit) {\n",
          "\t\treturn builder.expireAfterWrite(duration, unit);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> expireAfterAccess(long duration, TimeUnit unit) {\n",
          "\t\treturn builder.expireAfterAccess(duration, unit);\n"
        ],
        "line_number": 67,
        "start_line": 63,
        "end_line": 73
      },
      {
        "link": "https://github.com/raphw/guava-cache-overflow-extension/blob/befa47bb955ffa9f344b44e8621290d65e6592d2/src/main/java/com/blogspot/mydailyjava/guava/cache/overflow/FileSystemCacheBuilder.java\n",
        "code": [
          "\n",
          "    /**\n",
          "     * {@link com.google.common.cache.CacheBuilder#expireAfterAccess(long, TimeUnit)}\n",
          "     */\n",
          "    public FileSystemCacheBuilder<K, V> expireAfterAccess(long duration, TimeUnit unit) {\n",
          "        underlyingCacheBuilder.expireAfterWrite(duration, unit);\n",
          "        return this;\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.cache.CacheBuilder#expireAfterWrite(long, java.util.concurrent.TimeUnit)}\n"
        ],
        "line_number": 62,
        "start_line": 58,
        "end_line": 68
      },
      {
        "link": "https://github.com/zqhxuyuan/zava/blob/707691039b7aff8f4129e2b25d08b374610990e5/src/main/java/com/github/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> softValues() {\n",
          "\t\treturn builder.softValues();\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> expireAfterWrite(long duration, TimeUnit unit) {\n",
          "\t\treturn builder.expireAfterWrite(duration, unit);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> expireAfterAccess(long duration, TimeUnit unit) {\n",
          "\t\treturn builder.expireAfterAccess(duration, unit);\n"
        ],
        "line_number": 67,
        "start_line": 63,
        "end_line": 73
      },
      {
        "link": "https://github.com/shansun123/sparrow/blob/5eae1d009717f8eb64f90a22ac9b54a440ff0771/src/main/java/com/shansun/sparrow/cache/builder/LocalCacheBuilder.java\n",
        "code": [
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> softValues() {\n",
          "\t\treturn builder.softValues();\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> expireAfterWrite(long duration, TimeUnit unit) {\n",
          "\t\treturn builder.expireAfterWrite(duration, unit);\n",
          "\t}\n",
          "\n",
          "\tpublic com.google.common.cache.CacheBuilder<Object, Object> expireAfterAccess(long duration, TimeUnit unit) {\n",
          "\t\treturn builder.expireAfterAccess(duration, unit);\n"
        ],
        "line_number": 67,
        "start_line": 63,
        "end_line": 73
      },
      {
        "link": "https://github.com/Gilded-Games/OrbisLib/blob/147af30f2d7ff854c7bdbb4cc47d4e55db24d728/src/main/java/com/gildedgames/orbis/lib/util/cache/FileSystemCacheBuilder.java\n",
        "code": [
          "\t/**\n",
          "\t * {@link com.google.common.cache.CacheBuilder#expireAfterAccess(long, TimeUnit)}\n",
          "\t */\n",
          "\tpublic FileSystemCacheBuilder<K, V> expireAfterAccess(long duration, TimeUnit unit)\n",
          "\t{\n",
          "\t\tthis.underlyingCacheBuilder.expireAfterWrite(duration, unit);\n",
          "\t\treturn this;\n",
          "\t}\n",
          "\n",
          "\t/**\n",
          "\t * {@link com.google.common.cache.CacheBuilder#expireAfterWrite(long, java.util.concurrent.TimeUnit)}\n"
        ],
        "line_number": 84,
        "start_line": 80,
        "end_line": 90
      },
      {
        "link": "https://github.com/liuzzzz/proxy-tools/blob/defbe97e5520f620ee1bccd76ba4efec556305bf/tools-common/src/main/java/com/secrething/tools/common/utils/CacheBuilder.java\n",
        "code": [
          "        com.google.common.cache.CacheBuilder builder = com.google.common.cache.CacheBuilder.newBuilder();\n",
          "        if (maxSize < 0)\n",
          "            maxSize = 1000;\n",
          "        builder.maximumSize(maxSize);\n",
          "        if (expireAfterWrite >= 0 && null != afterWriteUnit)\n",
          "            builder.expireAfterWrite(expireAfterWrite, afterWriteUnit);\n",
          "        if (expireAfterAccess >= 0 && null != afterAccessUnit)\n",
          "            builder.expireAfterAccess(expireAfterAccess, afterAccessUnit);\n",
          "        if (null == loader)\n",
          "            loader = new CacheLoader<K, V>() {\n",
          "                @Override\n"
        ],
        "line_number": 22,
        "start_line": 18,
        "end_line": 28
      },
      {
        "link": "https://github.com/Braj65/Sandbox/blob/ab7d5de63d65a120b264e3dc3219fbead1930a03/ScaleConcepts/src/main/java/designCache/guavaToDIsk/FileSystemCacheBuilder.java\n",
        "code": [
          "\n",
          "    /**\n",
          "     * {@link com.google.common.cache.CacheBuilder#expireAfterAccess(long, TimeUnit)}\n",
          "     */\n",
          "    public FileSystemCacheBuilder<K, V> expireAfterAccess(long duration, TimeUnit unit) {\n",
          "        underlyingCacheBuilder.expireAfterWrite(duration, unit);\n",
          "        return this;\n",
          "    }\n",
          "\n",
          "    /**\n",
          "     * {@link com.google.common.cache.CacheBuilder#expireAfterWrite(long, java.util.concurrent.TimeUnit)}\n"
        ],
        "line_number": 62,
        "start_line": 58,
        "end_line": 68
      }
    ]
  }